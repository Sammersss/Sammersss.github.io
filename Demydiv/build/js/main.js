function getDate(){var t,e=new Array("неділя","понеділок","вівторок","середа","четвер","пятниця","субота"),i=new Array("січня","лютого","березня","квітня","травня","червня","липня","серпня","вересня","жовтня","листопа","грудня"),o=new Date,n=e[o.getDay()],r=i[o.getMonth()],s=o.getDate(),a=o.getFullYear(),l=o.getHours(),c=o.getMinutes(),h=o.getSeconds();10>l&&(l="0"+l),10>c&&(c="0"+c),10>h&&(h="0"+h),l>=5&&12>l?t="Доброго ранку ! ":l>=12&&18>l?t="Доброго дня ! ":l>=18&&24>l?t="Доброго вечора ! ":l>=0&&5>l&&(t="Доброї ночі ! "),document.getElementById("daydisplay").innerHTML=t+'&nbsp; &nbsp;<span class="fa fa-calendar"></span> &nbsp;Сьогодні &nbsp;:&nbsp;'+n+"&nbsp;"+s+"&nbsp;"+r+"&nbsp;"+a+"&nbsp; року",document.getElementById("timedisplay").innerHTML='<span class="fa fa-clock-o"></span>&nbsp;&nbsp;'+l+":"+c+":"+h}function ASTimer(t,e,i){var o=50,n=null,r=0;this.pause=function(){clearInterval(n)},this.resume=function(){clearInterval(n),t>0?n=setInterval(function(){r+=o,r>t&&(clearInterval(n),e&&e()),i&&i(r/t)},o):e&&e()},this.stop=function(){clearInterval(n),i&&i(-1),r=0},this.start=function(){r=0,clearInterval(n),t>0?n=setInterval(function(){r+=o,r>t&&(clearInterval(n),e&&e()),i&&i(r/t)},o):e&&e()}}function onYouTubeIframeAPIReady(){ASYouTubeIframeAPIReady=!0}!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){function i(t){var e=!!t&&"length"in t&&t.length,i=pt.type(t);return"function"===i||pt.isWindow(t)?!1:"array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t}function o(t,e,i){if(pt.isFunction(e))return pt.grep(t,function(t,o){return!!e.call(t,o,t)!==i});if(e.nodeType)return pt.grep(t,function(t){return t===e!==i});if("string"==typeof e){if(Tt.test(e))return pt.filter(e,t,i);e=pt.filter(e,t)}return pt.grep(t,function(t){return pt.inArray(t,e)>-1!==i})}function n(t,e){do t=t[e];while(t&&1!==t.nodeType);return t}function r(t){var e={};return pt.each(t.match(zt)||[],function(t,i){e[i]=!0}),e}function s(){ot.addEventListener?(ot.removeEventListener("DOMContentLoaded",a),t.removeEventListener("load",a)):(ot.detachEvent("onreadystatechange",a),t.detachEvent("onload",a))}function a(){(ot.addEventListener||"load"===t.event.type||"complete"===ot.readyState)&&(s(),pt.ready())}function l(t,e,i){if(void 0===i&&1===t.nodeType){var o="data-"+e.replace(Dt,"-$1").toLowerCase();if(i=t.getAttribute(o),"string"==typeof i){try{i="true"===i?!0:"false"===i?!1:"null"===i?null:+i+""===i?+i:Lt.test(i)?pt.parseJSON(i):i}catch(n){}pt.data(t,e,i)}else i=void 0}return i}function c(t){var e;for(e in t)if(("data"!==e||!pt.isEmptyObject(t[e]))&&"toJSON"!==e)return!1;return!0}function h(t,e,i,o){if(jt(t)){var n,r,s=pt.expando,a=t.nodeType,l=a?pt.cache:t,c=a?t[s]:t[s]&&s;if(c&&l[c]&&(o||l[c].data)||void 0!==i||"string"!=typeof e)return c||(c=a?t[s]=it.pop()||pt.guid++:s),l[c]||(l[c]=a?{}:{toJSON:pt.noop}),"object"!=typeof e&&"function"!=typeof e||(o?l[c]=pt.extend(l[c],e):l[c].data=pt.extend(l[c].data,e)),r=l[c],o||(r.data||(r.data={}),r=r.data),void 0!==i&&(r[pt.camelCase(e)]=i),"string"==typeof e?(n=r[e],null==n&&(n=r[pt.camelCase(e)])):n=r,n}}function u(t,e,i){if(jt(t)){var o,n,r=t.nodeType,s=r?pt.cache:t,a=r?t[pt.expando]:pt.expando;if(s[a]){if(e&&(o=i?s[a]:s[a].data)){pt.isArray(e)?e=e.concat(pt.map(e,pt.camelCase)):e in o?e=[e]:(e=pt.camelCase(e),e=e in o?[e]:e.split(" ")),n=e.length;for(;n--;)delete o[e[n]];if(i?!c(o):!pt.isEmptyObject(o))return}(i||(delete s[a].data,c(s[a])))&&(r?pt.cleanData([t],!0):ut.deleteExpando||s!=s.window?delete s[a]:s[a]=void 0)}}}function d(t,e,i,o){var n,r=1,s=20,a=o?function(){return o.cur()}:function(){return pt.css(t,e,"")},l=a(),c=i&&i[3]||(pt.cssNumber[e]?"":"px"),h=(pt.cssNumber[e]||"px"!==c&&+l)&&Mt.exec(pt.css(t,e));if(h&&h[3]!==c){c=c||h[3],i=i||[],h=+l||1;do r=r||".5",h/=r,pt.style(t,e,h+c);while(r!==(r=a()/l)&&1!==r&&--s)}return i&&(h=+h||+l||0,n=i[1]?h+(i[1]+1)*i[2]:+i[2],o&&(o.unit=c,o.start=h,o.end=n)),n}function p(t){var e=Wt.split("|"),i=t.createDocumentFragment();if(i.createElement)for(;e.length;)i.createElement(e.pop());return i}function m(t,e){var i,o,n=0,r="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):void 0;if(!r)for(r=[],i=t.childNodes||t;null!=(o=i[n]);n++)!e||pt.nodeName(o,e)?r.push(o):pt.merge(r,m(o,e));return void 0===e||e&&pt.nodeName(t,e)?pt.merge([t],r):r}function f(t,e){for(var i,o=0;null!=(i=t[o]);o++)pt._data(i,"globalEval",!e||pt._data(e[o],"globalEval"))}function g(t){Ft.test(t.type)&&(t.defaultChecked=t.checked)}function v(t,e,i,o,n){for(var r,s,a,l,c,h,u,d=t.length,v=p(e),b=[],w=0;d>w;w++)if(s=t[w],s||0===s)if("object"===pt.type(s))pt.merge(b,s.nodeType?[s]:s);else if(Qt.test(s)){for(l=l||v.appendChild(e.createElement("div")),c=(Bt.exec(s)||["",""])[1].toLowerCase(),u=Vt[c]||Vt._default,l.innerHTML=u[1]+pt.htmlPrefilter(s)+u[2],r=u[0];r--;)l=l.lastChild;if(!ut.leadingWhitespace&&Rt.test(s)&&b.push(e.createTextNode(Rt.exec(s)[0])),!ut.tbody)for(s="table"!==c||Xt.test(s)?"<table>"!==u[1]||Xt.test(s)?0:l:l.firstChild,r=s&&s.childNodes.length;r--;)pt.nodeName(h=s.childNodes[r],"tbody")&&!h.childNodes.length&&s.removeChild(h);for(pt.merge(b,l.childNodes),l.textContent="";l.firstChild;)l.removeChild(l.firstChild);l=v.lastChild}else b.push(e.createTextNode(s));for(l&&v.removeChild(l),ut.appendChecked||pt.grep(m(b,"input"),g),w=0;s=b[w++];)if(o&&pt.inArray(s,o)>-1)n&&n.push(s);else if(a=pt.contains(s.ownerDocument,s),l=m(v.appendChild(s),"script"),a&&f(l),i)for(r=0;s=l[r++];)qt.test(s.type||"")&&i.push(s);return l=null,v}function b(){return!0}function w(){return!1}function y(){try{return ot.activeElement}catch(t){}}function x(t,e,i,o,n,r){var s,a;if("object"==typeof e){"string"!=typeof i&&(o=o||i,i=void 0);for(a in e)x(t,a,i,o,e[a],r);return t}if(null==o&&null==n?(n=i,o=i=void 0):null==n&&("string"==typeof i?(n=o,o=void 0):(n=o,o=i,i=void 0)),n===!1)n=w;else if(!n)return t;return 1===r&&(s=n,n=function(t){return pt().off(t),s.apply(this,arguments)},n.guid=s.guid||(s.guid=pt.guid++)),t.each(function(){pt.event.add(this,e,n,o,i)})}function k(t,e){return pt.nodeName(t,"table")&&pt.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t.appendChild(t.ownerDocument.createElement("tbody")):t}function T(t){return t.type=(null!==pt.find.attr(t,"type"))+"/"+t.type,t}function E(t){var e=ne.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function C(t,e){if(1===e.nodeType&&pt.hasData(t)){var i,o,n,r=pt._data(t),s=pt._data(e,r),a=r.events;if(a){delete s.handle,s.events={};for(i in a)for(o=0,n=a[i].length;n>o;o++)pt.event.add(e,i,a[i][o])}s.data&&(s.data=pt.extend({},s.data))}}function S(t,e){var i,o,n;if(1===e.nodeType){if(i=e.nodeName.toLowerCase(),!ut.noCloneEvent&&e[pt.expando]){n=pt._data(e);for(o in n.events)pt.removeEvent(e,o,n.handle);e.removeAttribute(pt.expando)}"script"===i&&e.text!==t.text?(T(e).text=t.text,E(e)):"object"===i?(e.parentNode&&(e.outerHTML=t.outerHTML),ut.html5Clone&&t.innerHTML&&!pt.trim(e.innerHTML)&&(e.innerHTML=t.innerHTML)):"input"===i&&Ft.test(t.type)?(e.defaultChecked=e.checked=t.checked,e.value!==t.value&&(e.value=t.value)):"option"===i?e.defaultSelected=e.selected=t.defaultSelected:"input"!==i&&"textarea"!==i||(e.defaultValue=t.defaultValue)}}function A(t,e,i,o){e=rt.apply([],e);var n,r,s,a,l,c,h=0,u=t.length,d=u-1,p=e[0],f=pt.isFunction(p);if(f||u>1&&"string"==typeof p&&!ut.checkClone&&oe.test(p))return t.each(function(n){var r=t.eq(n);f&&(e[0]=p.call(this,n,r.html())),A(r,e,i,o)});if(u&&(c=v(e,t[0].ownerDocument,!1,t,o),n=c.firstChild,1===c.childNodes.length&&(c=n),n||o)){for(a=pt.map(m(c,"script"),T),s=a.length;u>h;h++)r=c,h!==d&&(r=pt.clone(r,!0,!0),s&&pt.merge(a,m(r,"script"))),i.call(t[h],r,h);if(s)for(l=a[a.length-1].ownerDocument,pt.map(a,E),h=0;s>h;h++)r=a[h],qt.test(r.type||"")&&!pt._data(r,"globalEval")&&pt.contains(l,r)&&(r.src?pt._evalUrl&&pt._evalUrl(r.src):pt.globalEval((r.text||r.textContent||r.innerHTML||"").replace(re,"")));c=n=null}return t}function I(t,e,i){for(var o,n=e?pt.filter(e,t):t,r=0;null!=(o=n[r]);r++)i||1!==o.nodeType||pt.cleanData(m(o)),o.parentNode&&(i&&pt.contains(o.ownerDocument,o)&&f(m(o,"script")),o.parentNode.removeChild(o));return t}function z(t,e){var i=pt(e.createElement(t)).appendTo(e.body),o=pt.css(i[0],"display");return i.detach(),o}function N(t){var e=ot,i=ce[t];return i||(i=z(t,e),"none"!==i&&i||(le=(le||pt("<iframe frameborder='0' width='0' height='0'/>")).appendTo(e.documentElement),e=(le[0].contentWindow||le[0].contentDocument).document,e.write(),e.close(),i=z(t,e),le.detach()),ce[t]=i),i}function $(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function j(t){if(t in Ee)return t;for(var e=t.charAt(0).toUpperCase()+t.slice(1),i=Te.length;i--;)if(t=Te[i]+e,t in Ee)return t}function L(t,e){for(var i,o,n,r=[],s=0,a=t.length;a>s;s++)o=t[s],o.style&&(r[s]=pt._data(o,"olddisplay"),i=o.style.display,e?(r[s]||"none"!==i||(o.style.display=""),""===o.style.display&&Pt(o)&&(r[s]=pt._data(o,"olddisplay",N(o.nodeName)))):(n=Pt(o),(i&&"none"!==i||!n)&&pt._data(o,"olddisplay",n?i:pt.css(o,"display"))));for(s=0;a>s;s++)o=t[s],o.style&&(e&&"none"!==o.style.display&&""!==o.style.display||(o.style.display=e?r[s]||"":"none"));return t}function D(t,e,i){var o=ye.exec(e);return o?Math.max(0,o[1]-(i||0))+(o[2]||"px"):e}function O(t,e,i,o,n){for(var r=i===(o?"border":"content")?4:"width"===e?1:0,s=0;4>r;r+=2)"margin"===i&&(s+=pt.css(t,i+_t[r],!0,n)),o?("content"===i&&(s-=pt.css(t,"padding"+_t[r],!0,n)),"margin"!==i&&(s-=pt.css(t,"border"+_t[r]+"Width",!0,n))):(s+=pt.css(t,"padding"+_t[r],!0,n),"padding"!==i&&(s+=pt.css(t,"border"+_t[r]+"Width",!0,n)));return s}function M(t,e,i){var o=!0,n="width"===e?t.offsetWidth:t.offsetHeight,r=me(t),s=ut.boxSizing&&"border-box"===pt.css(t,"boxSizing",!1,r);if(0>=n||null==n){if(n=fe(t,e,r),(0>n||null==n)&&(n=t.style[e]),ue.test(n))return n;o=s&&(ut.boxSizingReliable()||n===t.style[e]),n=parseFloat(n)||0}return n+O(t,e,i||(s?"border":"content"),o,r)+"px"}function _(t,e,i,o,n){return new _.prototype.init(t,e,i,o,n)}function P(){return t.setTimeout(function(){Ce=void 0}),Ce=pt.now()}function H(t,e){var i,o={height:t},n=0;for(e=e?1:0;4>n;n+=2-e)i=_t[n],o["margin"+i]=o["padding"+i]=t;return e&&(o.opacity=o.width=t),o}function F(t,e,i){for(var o,n=(R.tweeners[e]||[]).concat(R.tweeners["*"]),r=0,s=n.length;s>r;r++)if(o=n[r].call(i,e,t))return o}function B(t,e,i){var o,n,r,s,a,l,c,h,u=this,d={},p=t.style,m=t.nodeType&&Pt(t),f=pt._data(t,"fxshow");i.queue||(a=pt._queueHooks(t,"fx"),null==a.unqueued&&(a.unqueued=0,l=a.empty.fire,a.empty.fire=function(){a.unqueued||l()}),a.unqueued++,u.always(function(){u.always(function(){a.unqueued--,pt.queue(t,"fx").length||a.empty.fire()})})),1===t.nodeType&&("height"in e||"width"in e)&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],c=pt.css(t,"display"),h="none"===c?pt._data(t,"olddisplay")||N(t.nodeName):c,"inline"===h&&"none"===pt.css(t,"float")&&(ut.inlineBlockNeedsLayout&&"inline"!==N(t.nodeName)?p.zoom=1:p.display="inline-block")),i.overflow&&(p.overflow="hidden",ut.shrinkWrapBlocks()||u.always(function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]}));for(o in e)if(n=e[o],Ae.exec(n)){if(delete e[o],r=r||"toggle"===n,n===(m?"hide":"show")){if("show"!==n||!f||void 0===f[o])continue;m=!0}d[o]=f&&f[o]||pt.style(t,o)}else c=void 0;if(pt.isEmptyObject(d))"inline"===("none"===c?N(t.nodeName):c)&&(p.display=c);else{f?"hidden"in f&&(m=f.hidden):f=pt._data(t,"fxshow",{}),r&&(f.hidden=!m),m?pt(t).show():u.done(function(){pt(t).hide()}),u.done(function(){var e;pt._removeData(t,"fxshow");for(e in d)pt.style(t,e,d[e])});for(o in d)s=F(m?f[o]:0,o,u),o in f||(f[o]=s.start,m&&(s.end=s.start,s.start="width"===o||"height"===o?1:0))}}function q(t,e){var i,o,n,r,s;for(i in t)if(o=pt.camelCase(i),n=e[o],r=t[i],pt.isArray(r)&&(n=r[1],r=t[i]=r[0]),i!==o&&(t[o]=r,delete t[i]),s=pt.cssHooks[o],s&&"expand"in s){r=s.expand(r),delete t[o];for(i in r)i in t||(t[i]=r[i],e[i]=n)}else e[o]=n}function R(t,e,i){var o,n,r=0,s=R.prefilters.length,a=pt.Deferred().always(function(){delete l.elem}),l=function(){if(n)return!1;for(var e=Ce||P(),i=Math.max(0,c.startTime+c.duration-e),o=i/c.duration||0,r=1-o,s=0,l=c.tweens.length;l>s;s++)c.tweens[s].run(r);return a.notifyWith(t,[c,r,i]),1>r&&l?i:(a.resolveWith(t,[c]),!1)},c=a.promise({elem:t,props:pt.extend({},e),opts:pt.extend(!0,{specialEasing:{},easing:pt.easing._default},i),originalProperties:e,originalOptions:i,startTime:Ce||P(),duration:i.duration,tweens:[],createTween:function(e,i){var o=pt.Tween(t,c.opts,e,i,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(o),o},stop:function(e){var i=0,o=e?c.tweens.length:0;if(n)return this;for(n=!0;o>i;i++)c.tweens[i].run(1);return e?(a.notifyWith(t,[c,1,0]),a.resolveWith(t,[c,e])):a.rejectWith(t,[c,e]),this}}),h=c.props;for(q(h,c.opts.specialEasing);s>r;r++)if(o=R.prefilters[r].call(c,t,h,c.opts))return pt.isFunction(o.stop)&&(pt._queueHooks(c.elem,c.opts.queue).stop=pt.proxy(o.stop,o)),o;return pt.map(h,F,c),pt.isFunction(c.opts.start)&&c.opts.start.call(t,c),pt.fx.timer(pt.extend(l,{elem:t,anim:c,queue:c.opts.queue})),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always)}function W(t){return pt.attr(t,"class")||""}function V(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var o,n=0,r=e.toLowerCase().match(zt)||[];if(pt.isFunction(i))for(;o=r[n++];)"+"===o.charAt(0)?(o=o.slice(1)||"*",(t[o]=t[o]||[]).unshift(i)):(t[o]=t[o]||[]).push(i)}}function Q(t,e,i,o){function n(a){var l;return r[a]=!0,pt.each(t[a]||[],function(t,a){var c=a(e,i,o);return"string"!=typeof c||s||r[c]?s?!(l=c):void 0:(e.dataTypes.unshift(c),n(c),!1)}),l}var r={},s=t===Ke;return n(e.dataTypes[0])||!r["*"]&&n("*")}function X(t,e){var i,o,n=pt.ajaxSettings.flatOptions||{};for(o in e)void 0!==e[o]&&((n[o]?t:i||(i={}))[o]=e[o]);return i&&pt.extend(!0,t,i),t}function Y(t,e,i){for(var o,n,r,s,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(s in a)if(a[s]&&a[s].test(n)){l.unshift(s);break}if(l[0]in i)r=l[0];else{for(s in i){if(!l[0]||t.converters[s+" "+l[0]]){r=s;break}o||(o=s)}r=r||o}return r?(r!==l[0]&&l.unshift(r),i[r]):void 0}function G(t,e,i,o){var n,r,s,a,l,c={},h=t.dataTypes.slice();if(h[1])for(s in t.converters)c[s.toLowerCase()]=t.converters[s];for(r=h.shift();r;)if(t.responseFields[r]&&(i[t.responseFields[r]]=e),!l&&o&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=r,r=h.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(s=c[l+" "+r]||c["* "+r],!s)for(n in c)if(a=n.split(" "),a[1]===r&&(s=c[l+" "+a[0]]||c["* "+a[0]])){s===!0?s=c[n]:c[n]!==!0&&(r=a[0],h.unshift(a[1]));break}if(s!==!0)if(s&&t["throws"])e=s(e);else try{e=s(e)}catch(u){return{state:"parsererror",error:s?u:"No conversion from "+l+" to "+r}}}return{state:"success",data:e}}function U(t){return t.style&&t.style.display||pt.css(t,"display")}function J(t){if(!pt.contains(t.ownerDocument||ot,t))return!0;for(;t&&1===t.nodeType;){if("none"===U(t)||"hidden"===t.type)return!0;t=t.parentNode}return!1}function K(t,e,i,o){var n;if(pt.isArray(e))pt.each(e,function(e,n){i||oi.test(t)?o(t,n):K(t+"["+("object"==typeof n&&null!=n?e:"")+"]",n,i,o)});else if(i||"object"!==pt.type(e))o(t,e);else for(n in e)K(t+"["+n+"]",e[n],i,o)}function Z(){try{return new t.XMLHttpRequest}catch(e){}}function tt(){try{return new t.ActiveXObject("Microsoft.XMLHTTP")}catch(e){}}function et(t){return pt.isWindow(t)?t:9===t.nodeType?t.defaultView||t.parentWindow:!1}var it=[],ot=t.document,nt=it.slice,rt=it.concat,st=it.push,at=it.indexOf,lt={},ct=lt.toString,ht=lt.hasOwnProperty,ut={},dt="1.12.4",pt=function(t,e){return new pt.fn.init(t,e)},mt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,ft=/^-ms-/,gt=/-([\da-z])/gi,vt=function(t,e){return e.toUpperCase()};pt.fn=pt.prototype={jquery:dt,constructor:pt,selector:"",length:0,toArray:function(){return nt.call(this)},get:function(t){return null!=t?0>t?this[t+this.length]:this[t]:nt.call(this)},pushStack:function(t){var e=pt.merge(this.constructor(),t);return e.prevObject=this,e.context=this.context,e},each:function(t){return pt.each(this,t)},map:function(t){return this.pushStack(pt.map(this,function(e,i){return t.call(e,i,e)}))},slice:function(){return this.pushStack(nt.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(0>t?e:0);return this.pushStack(i>=0&&e>i?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:st,sort:it.sort,splice:it.splice},pt.extend=pt.fn.extend=function(){var t,e,i,o,n,r,s=arguments[0]||{},a=1,l=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[a]||{},a++),"object"==typeof s||pt.isFunction(s)||(s={}),a===l&&(s=this,a--);l>a;a++)if(null!=(n=arguments[a]))for(o in n)t=s[o],i=n[o],s!==i&&(c&&i&&(pt.isPlainObject(i)||(e=pt.isArray(i)))?(e?(e=!1,r=t&&pt.isArray(t)?t:[]):r=t&&pt.isPlainObject(t)?t:{},s[o]=pt.extend(c,r,i)):void 0!==i&&(s[o]=i));return s},pt.extend({expando:"jQuery"+(dt+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===pt.type(t)},isArray:Array.isArray||function(t){return"array"===pt.type(t)},isWindow:function(t){return null!=t&&t==t.window},isNumeric:function(t){var e=t&&t.toString();return!pt.isArray(t)&&e-parseFloat(e)+1>=0},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},isPlainObject:function(t){var e;if(!t||"object"!==pt.type(t)||t.nodeType||pt.isWindow(t))return!1;try{if(t.constructor&&!ht.call(t,"constructor")&&!ht.call(t.constructor.prototype,"isPrototypeOf"))return!1}catch(i){return!1}if(!ut.ownFirst)for(e in t)return ht.call(t,e);for(e in t);return void 0===e||ht.call(t,e)},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?lt[ct.call(t)]||"object":typeof t},globalEval:function(e){e&&pt.trim(e)&&(t.execScript||function(e){t.eval.call(t,e)})(e)},camelCase:function(t){return t.replace(ft,"ms-").replace(gt,vt)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e){var o,n=0;if(i(t))for(o=t.length;o>n&&e.call(t[n],n,t[n])!==!1;n++);else for(n in t)if(e.call(t[n],n,t[n])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(mt,"")},makeArray:function(t,e){var o=e||[];return null!=t&&(i(Object(t))?pt.merge(o,"string"==typeof t?[t]:t):st.call(o,t)),o},inArray:function(t,e,i){var o;if(e){if(at)return at.call(e,t,i);for(o=e.length,i=i?0>i?Math.max(0,o+i):i:0;o>i;i++)if(i in e&&e[i]===t)return i}return-1},merge:function(t,e){for(var i=+e.length,o=0,n=t.length;i>o;)t[n++]=e[o++];if(i!==i)for(;void 0!==e[o];)t[n++]=e[o++];return t.length=n,t},grep:function(t,e,i){for(var o,n=[],r=0,s=t.length,a=!i;s>r;r++)o=!e(t[r],r),o!==a&&n.push(t[r]);return n},map:function(t,e,o){var n,r,s=0,a=[];if(i(t))for(n=t.length;n>s;s++)r=e(t[s],s,o),null!=r&&a.push(r);else for(s in t)r=e(t[s],s,o),null!=r&&a.push(r);return rt.apply([],a)},guid:1,proxy:function(t,e){var i,o,n;return"string"==typeof e&&(n=t[e],e=t,t=n),pt.isFunction(t)?(i=nt.call(arguments,2),o=function(){return t.apply(e||this,i.concat(nt.call(arguments)))},o.guid=t.guid=t.guid||pt.guid++,o):void 0},now:function(){return+new Date},support:ut}),"function"==typeof Symbol&&(pt.fn[Symbol.iterator]=it[Symbol.iterator]),pt.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){lt["[object "+e+"]"]=e.toLowerCase()});var bt=function(t){function e(t,e,i,o){var n,r,s,a,l,c,u,p,m=e&&e.ownerDocument,f=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==f&&9!==f&&11!==f)return i;if(!o&&((e?e.ownerDocument||e:F)!==j&&$(e),e=e||j,D)){if(11!==f&&(c=vt.exec(t)))if(n=c[1]){if(9===f){if(!(s=e.getElementById(n)))return i;if(s.id===n)return i.push(s),i}else if(m&&(s=m.getElementById(n))&&P(e,s)&&s.id===n)return i.push(s),i}else{if(c[2])return K.apply(i,e.getElementsByTagName(t)),i;if((n=c[3])&&x.getElementsByClassName&&e.getElementsByClassName)return K.apply(i,e.getElementsByClassName(n)),i}if(x.qsa&&!V[t+" "]&&(!O||!O.test(t))){if(1!==f)m=e,p=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(wt,"\\$&"):e.setAttribute("id",a=H),u=C(t),r=u.length,l=dt.test(a)?"#"+a:"[id='"+a+"']";r--;)u[r]=l+" "+d(u[r]);p=u.join(","),m=bt.test(t)&&h(e.parentNode)||e}if(p)try{return K.apply(i,m.querySelectorAll(p)),i}catch(g){}finally{a===H&&e.removeAttribute("id")}}}return A(t.replace(at,"$1"),e,i,o)}function i(){function t(i,o){return e.push(i+" ")>k.cacheLength&&delete t[e.shift()],t[i+" "]=o}var e=[];return t}function o(t){return t[H]=!0,t}function n(t){var e=j.createElement("div");try{return!!t(e)}catch(i){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function r(t,e){for(var i=t.split("|"),o=i.length;o--;)k.attrHandle[i[o]]=e}function s(t,e){var i=e&&t,o=i&&1===t.nodeType&&1===e.nodeType&&(~e.sourceIndex||X)-(~t.sourceIndex||X);if(o)return o;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function a(t){return function(e){var i=e.nodeName.toLowerCase();return"input"===i&&e.type===t}}function l(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function c(t){return o(function(e){return e=+e,o(function(i,o){for(var n,r=t([],i.length,e),s=r.length;s--;)i[n=r[s]]&&(i[n]=!(o[n]=i[n]))})})}function h(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function u(){}function d(t){for(var e=0,i=t.length,o="";i>e;e++)o+=t[e].value;return o}function p(t,e,i){var o=e.dir,n=i&&"parentNode"===o,r=q++;return e.first?function(e,i,r){for(;e=e[o];)if(1===e.nodeType||n)return t(e,i,r)}:function(e,i,s){var a,l,c,h=[B,r];if(s){for(;e=e[o];)if((1===e.nodeType||n)&&t(e,i,s))return!0}else for(;e=e[o];)if(1===e.nodeType||n){if(c=e[H]||(e[H]={}),l=c[e.uniqueID]||(c[e.uniqueID]={}),(a=l[o])&&a[0]===B&&a[1]===r)return h[2]=a[2];if(l[o]=h,h[2]=t(e,i,s))return!0}}}function m(t){return t.length>1?function(e,i,o){for(var n=t.length;n--;)if(!t[n](e,i,o))return!1;return!0}:t[0]}function f(t,i,o){for(var n=0,r=i.length;r>n;n++)e(t,i[n],o);return o}function g(t,e,i,o,n){for(var r,s=[],a=0,l=t.length,c=null!=e;l>a;a++)(r=t[a])&&(i&&!i(r,o,n)||(s.push(r),c&&e.push(a)));return s}function v(t,e,i,n,r,s){return n&&!n[H]&&(n=v(n)),r&&!r[H]&&(r=v(r,s)),o(function(o,s,a,l){var c,h,u,d=[],p=[],m=s.length,v=o||f(e||"*",a.nodeType?[a]:a,[]),b=!t||!o&&e?v:g(v,d,t,a,l),w=i?r||(o?t:m||n)?[]:s:b;if(i&&i(b,w,a,l),n)for(c=g(w,p),n(c,[],a,l),h=c.length;h--;)(u=c[h])&&(w[p[h]]=!(b[p[h]]=u));if(o){if(r||t){if(r){for(c=[],h=w.length;h--;)(u=w[h])&&c.push(b[h]=u);r(null,w=[],c,l)}for(h=w.length;h--;)(u=w[h])&&(c=r?tt(o,u):d[h])>-1&&(o[c]=!(s[c]=u))}}else w=g(w===s?w.splice(m,w.length):w),r?r(null,s,w,l):K.apply(s,w)})}function b(t){for(var e,i,o,n=t.length,r=k.relative[t[0].type],s=r||k.relative[" "],a=r?1:0,l=p(function(t){return t===e},s,!0),c=p(function(t){return tt(e,t)>-1},s,!0),h=[function(t,i,o){var n=!r&&(o||i!==I)||((e=i).nodeType?l(t,i,o):c(t,i,o));return e=null,n}];n>a;a++)if(i=k.relative[t[a].type])h=[p(m(h),i)];else{if(i=k.filter[t[a].type].apply(null,t[a].matches),i[H]){for(o=++a;n>o&&!k.relative[t[o].type];o++);return v(a>1&&m(h),a>1&&d(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(at,"$1"),i,o>a&&b(t.slice(a,o)),n>o&&b(t=t.slice(o)),n>o&&d(t))}h.push(i)}return m(h)}function w(t,i){var n=i.length>0,r=t.length>0,s=function(o,s,a,l,c){var h,u,d,p=0,m="0",f=o&&[],v=[],b=I,w=o||r&&k.find.TAG("*",c),y=B+=null==b?1:Math.random()||.1,x=w.length;for(c&&(I=s===j||s||c);m!==x&&null!=(h=w[m]);m++){if(r&&h){for(u=0,s||h.ownerDocument===j||($(h),a=!D);d=t[u++];)if(d(h,s||j,a)){l.push(h);break}c&&(B=y)}n&&((h=!d&&h)&&p--,o&&f.push(h))}if(p+=m,n&&m!==p){for(u=0;d=i[u++];)d(f,v,s,a);if(o){if(p>0)for(;m--;)f[m]||v[m]||(v[m]=U.call(l));v=g(v)}K.apply(l,v),c&&!o&&v.length>0&&p+i.length>1&&e.uniqueSort(l)}return c&&(B=y,I=b),f};return n?o(s):s}var y,x,k,T,E,C,S,A,I,z,N,$,j,L,D,O,M,_,P,H="sizzle"+1*new Date,F=t.document,B=0,q=0,R=i(),W=i(),V=i(),Q=function(t,e){return t===e&&(N=!0),0},X=1<<31,Y={}.hasOwnProperty,G=[],U=G.pop,J=G.push,K=G.push,Z=G.slice,tt=function(t,e){for(var i=0,o=t.length;o>i;i++)if(t[i]===e)return i;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",it="[\\x20\\t\\r\\n\\f]",ot="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",nt="\\["+it+"*("+ot+")(?:"+it+"*([*^$|!~]?=)"+it+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ot+"))|)"+it+"*\\]",rt=":("+ot+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+nt+")*)|.*)\\)|)",st=new RegExp(it+"+","g"),at=new RegExp("^"+it+"+|((?:^|[^\\\\])(?:\\\\.)*)"+it+"+$","g"),lt=new RegExp("^"+it+"*,"+it+"*"),ct=new RegExp("^"+it+"*([>+~]|"+it+")"+it+"*"),ht=new RegExp("="+it+"*([^\\]'\"]*?)"+it+"*\\]","g"),ut=new RegExp(rt),dt=new RegExp("^"+ot+"$"),pt={ID:new RegExp("^#("+ot+")"),CLASS:new RegExp("^\\.("+ot+")"),TAG:new RegExp("^("+ot+"|[*])"),ATTR:new RegExp("^"+nt),PSEUDO:new RegExp("^"+rt),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+it+"*(even|odd|(([+-]|)(\\d*)n|)"+it+"*(?:([+-]|)"+it+"*(\\d+)|))"+it+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+it+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+it+"*((?:-\\d)?\\d*)"+it+"*\\)|)(?=[^-]|$)","i")},mt=/^(?:input|select|textarea|button)$/i,ft=/^h\d$/i,gt=/^[^{]+\{\s*\[native \w/,vt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,bt=/[+~]/,wt=/'|\\/g,yt=new RegExp("\\\\([\\da-f]{1,6}"+it+"?|("+it+")|.)","ig"),xt=function(t,e,i){var o="0x"+e-65536;return o!==o||i?e:0>o?String.fromCharCode(o+65536):String.fromCharCode(o>>10|55296,1023&o|56320)},kt=function(){$()};try{K.apply(G=Z.call(F.childNodes),F.childNodes),G[F.childNodes.length].nodeType}catch(Tt){K={apply:G.length?function(t,e){J.apply(t,Z.call(e))}:function(t,e){for(var i=t.length,o=0;t[i++]=e[o++];);t.length=i-1}}}x=e.support={},E=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return e?"HTML"!==e.nodeName:!1},$=e.setDocument=function(t){var e,i,o=t?t.ownerDocument||t:F;return o!==j&&9===o.nodeType&&o.documentElement?(j=o,L=j.documentElement,D=!E(j),(i=j.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",kt,!1):i.attachEvent&&i.attachEvent("onunload",kt)),x.attributes=n(function(t){return t.className="i",!t.getAttribute("className")}),x.getElementsByTagName=n(function(t){return t.appendChild(j.createComment("")),!t.getElementsByTagName("*").length}),x.getElementsByClassName=gt.test(j.getElementsByClassName),x.getById=n(function(t){return L.appendChild(t).id=H,!j.getElementsByName||!j.getElementsByName(H).length}),x.getById?(k.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&D){var i=e.getElementById(t);return i?[i]:[]}},k.filter.ID=function(t){var e=t.replace(yt,xt);return function(t){return t.getAttribute("id")===e}}):(delete k.find.ID,k.filter.ID=function(t){var e=t.replace(yt,xt);return function(t){var i="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}}),k.find.TAG=x.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):x.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,o=[],n=0,r=e.getElementsByTagName(t);if("*"===t){for(;i=r[n++];)1===i.nodeType&&o.push(i);return o}return r},k.find.CLASS=x.getElementsByClassName&&function(t,e){return"undefined"!=typeof e.getElementsByClassName&&D?e.getElementsByClassName(t):void 0},M=[],O=[],(x.qsa=gt.test(j.querySelectorAll))&&(n(function(t){L.appendChild(t).innerHTML="<a id='"+H+"'></a><select id='"+H+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&O.push("[*^$]="+it+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||O.push("\\["+it+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+H+"-]").length||O.push("~="),t.querySelectorAll(":checked").length||O.push(":checked"),t.querySelectorAll("a#"+H+"+*").length||O.push(".#.+[+~]")}),n(function(t){var e=j.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&O.push("name"+it+"*[*^$|!~]?="),t.querySelectorAll(":enabled").length||O.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),O.push(",.*:")})),(x.matchesSelector=gt.test(_=L.matches||L.webkitMatchesSelector||L.mozMatchesSelector||L.oMatchesSelector||L.msMatchesSelector))&&n(function(t){x.disconnectedMatch=_.call(t,"div"),_.call(t,"[s!='']:x"),M.push("!=",rt)}),O=O.length&&new RegExp(O.join("|")),M=M.length&&new RegExp(M.join("|")),e=gt.test(L.compareDocumentPosition),P=e||gt.test(L.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,o=e&&e.parentNode;return t===o||!(!o||1!==o.nodeType||!(i.contains?i.contains(o):t.compareDocumentPosition&&16&t.compareDocumentPosition(o)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},Q=e?function(t,e){if(t===e)return N=!0,0;var i=!t.compareDocumentPosition-!e.compareDocumentPosition;return i?i:(i=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&i||!x.sortDetached&&e.compareDocumentPosition(t)===i?t===j||t.ownerDocument===F&&P(F,t)?-1:e===j||e.ownerDocument===F&&P(F,e)?1:z?tt(z,t)-tt(z,e):0:4&i?-1:1)}:function(t,e){if(t===e)return N=!0,0;var i,o=0,n=t.parentNode,r=e.parentNode,a=[t],l=[e];if(!n||!r)return t===j?-1:e===j?1:n?-1:r?1:z?tt(z,t)-tt(z,e):0;if(n===r)return s(t,e);for(i=t;i=i.parentNode;)a.unshift(i);for(i=e;i=i.parentNode;)l.unshift(i);for(;a[o]===l[o];)o++;return o?s(a[o],l[o]):a[o]===F?-1:l[o]===F?1:0},j):j},e.matches=function(t,i){return e(t,null,null,i)},e.matchesSelector=function(t,i){if((t.ownerDocument||t)!==j&&$(t),i=i.replace(ht,"='$1']"),x.matchesSelector&&D&&!V[i+" "]&&(!M||!M.test(i))&&(!O||!O.test(i)))try{var o=_.call(t,i);if(o||x.disconnectedMatch||t.document&&11!==t.document.nodeType)return o}catch(n){}return e(i,j,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==j&&$(t),P(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==j&&$(t);var i=k.attrHandle[e.toLowerCase()],o=i&&Y.call(k.attrHandle,e.toLowerCase())?i(t,e,!D):void 0;return void 0!==o?o:x.attributes||!D?t.getAttribute(e):(o=t.getAttributeNode(e))&&o.specified?o.value:null},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,i=[],o=0,n=0;if(N=!x.detectDuplicates,z=!x.sortStable&&t.slice(0),t.sort(Q),N){for(;e=t[n++];)e===t[n]&&(o=i.push(n));for(;o--;)t.splice(i[o],1)}return z=null,t},T=e.getText=function(t){var e,i="",o=0,n=t.nodeType;if(n){if(1===n||9===n||11===n){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=T(t)}else if(3===n||4===n)return t.nodeValue}else for(;e=t[o++];)i+=T(e);return i},k=e.selectors={cacheLength:50,createPseudo:o,match:pt,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(yt,xt),t[3]=(t[3]||t[4]||t[5]||"").replace(yt,xt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return pt.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&ut.test(i)&&(e=C(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),
t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(yt,xt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=R[t+" "];return e||(e=new RegExp("(^|"+it+")"+t+"("+it+"|$)"))&&R(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,i,o){return function(n){var r=e.attr(n,t);return null==r?"!="===i:i?(r+="","="===i?r===o:"!="===i?r!==o:"^="===i?o&&0===r.indexOf(o):"*="===i?o&&r.indexOf(o)>-1:"$="===i?o&&r.slice(-o.length)===o:"~="===i?(" "+r.replace(st," ")+" ").indexOf(o)>-1:"|="===i?r===o||r.slice(0,o.length+1)===o+"-":!1):!0}},CHILD:function(t,e,i,o,n){var r="nth"!==t.slice(0,3),s="last"!==t.slice(-4),a="of-type"===e;return 1===o&&0===n?function(t){return!!t.parentNode}:function(e,i,l){var c,h,u,d,p,m,f=r!==s?"nextSibling":"previousSibling",g=e.parentNode,v=a&&e.nodeName.toLowerCase(),b=!l&&!a,w=!1;if(g){if(r){for(;f;){for(d=e;d=d[f];)if(a?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;m=f="only"===t&&!m&&"nextSibling"}return!0}if(m=[s?g.firstChild:g.lastChild],s&&b){for(d=g,u=d[H]||(d[H]={}),h=u[d.uniqueID]||(u[d.uniqueID]={}),c=h[t]||[],p=c[0]===B&&c[1],w=p&&c[2],d=p&&g.childNodes[p];d=++p&&d&&d[f]||(w=p=0)||m.pop();)if(1===d.nodeType&&++w&&d===e){h[t]=[B,p,w];break}}else if(b&&(d=e,u=d[H]||(d[H]={}),h=u[d.uniqueID]||(u[d.uniqueID]={}),c=h[t]||[],p=c[0]===B&&c[1],w=p),w===!1)for(;(d=++p&&d&&d[f]||(w=p=0)||m.pop())&&((a?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++w||(b&&(u=d[H]||(d[H]={}),h=u[d.uniqueID]||(u[d.uniqueID]={}),h[t]=[B,w]),d!==e)););return w-=n,w===o||w%o===0&&w/o>=0}}},PSEUDO:function(t,i){var n,r=k.pseudos[t]||k.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return r[H]?r(i):r.length>1?(n=[t,t,"",i],k.setFilters.hasOwnProperty(t.toLowerCase())?o(function(t,e){for(var o,n=r(t,i),s=n.length;s--;)o=tt(t,n[s]),t[o]=!(e[o]=n[s])}):function(t){return r(t,0,n)}):r}},pseudos:{not:o(function(t){var e=[],i=[],n=S(t.replace(at,"$1"));return n[H]?o(function(t,e,i,o){for(var r,s=n(t,null,o,[]),a=t.length;a--;)(r=s[a])&&(t[a]=!(e[a]=r))}):function(t,o,r){return e[0]=t,n(e,null,r,i),e[0]=null,!i.pop()}}),has:o(function(t){return function(i){return e(t,i).length>0}}),contains:o(function(t){return t=t.replace(yt,xt),function(e){return(e.textContent||e.innerText||T(e)).indexOf(t)>-1}}),lang:o(function(t){return dt.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(yt,xt).toLowerCase(),function(e){var i;do if(i=D?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return i=i.toLowerCase(),i===t||0===i.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===L},focus:function(t){return t===j.activeElement&&(!j.hasFocus||j.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:function(t){return t.disabled===!1},disabled:function(t){return t.disabled===!0},checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!k.pseudos.empty(t)},header:function(t){return ft.test(t.nodeName)},input:function(t){return mt.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:c(function(){return[0]}),last:c(function(t,e){return[e-1]}),eq:c(function(t,e,i){return[0>i?i+e:i]}),even:c(function(t,e){for(var i=0;e>i;i+=2)t.push(i);return t}),odd:c(function(t,e){for(var i=1;e>i;i+=2)t.push(i);return t}),lt:c(function(t,e,i){for(var o=0>i?i+e:i;--o>=0;)t.push(o);return t}),gt:c(function(t,e,i){for(var o=0>i?i+e:i;++o<e;)t.push(o);return t})}},k.pseudos.nth=k.pseudos.eq;for(y in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})k.pseudos[y]=a(y);for(y in{submit:!0,reset:!0})k.pseudos[y]=l(y);return u.prototype=k.filters=k.pseudos,k.setFilters=new u,C=e.tokenize=function(t,i){var o,n,r,s,a,l,c,h=W[t+" "];if(h)return i?0:h.slice(0);for(a=t,l=[],c=k.preFilter;a;){o&&!(n=lt.exec(a))||(n&&(a=a.slice(n[0].length)||a),l.push(r=[])),o=!1,(n=ct.exec(a))&&(o=n.shift(),r.push({value:o,type:n[0].replace(at," ")}),a=a.slice(o.length));for(s in k.filter)!(n=pt[s].exec(a))||c[s]&&!(n=c[s](n))||(o=n.shift(),r.push({value:o,type:s,matches:n}),a=a.slice(o.length));if(!o)break}return i?a.length:a?e.error(t):W(t,l).slice(0)},S=e.compile=function(t,e){var i,o=[],n=[],r=V[t+" "];if(!r){for(e||(e=C(t)),i=e.length;i--;)r=b(e[i]),r[H]?o.push(r):n.push(r);r=V(t,w(n,o)),r.selector=t}return r},A=e.select=function(t,e,i,o){var n,r,s,a,l,c="function"==typeof t&&t,u=!o&&C(t=c.selector||t);if(i=i||[],1===u.length){if(r=u[0]=u[0].slice(0),r.length>2&&"ID"===(s=r[0]).type&&x.getById&&9===e.nodeType&&D&&k.relative[r[1].type]){if(e=(k.find.ID(s.matches[0].replace(yt,xt),e)||[])[0],!e)return i;c&&(e=e.parentNode),t=t.slice(r.shift().value.length)}for(n=pt.needsContext.test(t)?0:r.length;n--&&(s=r[n],!k.relative[a=s.type]);)if((l=k.find[a])&&(o=l(s.matches[0].replace(yt,xt),bt.test(r[0].type)&&h(e.parentNode)||e))){if(r.splice(n,1),t=o.length&&d(r),!t)return K.apply(i,o),i;break}}return(c||S(t,u))(o,e,!D,i,!e||bt.test(t)&&h(e.parentNode)||e),i},x.sortStable=H.split("").sort(Q).join("")===H,x.detectDuplicates=!!N,$(),x.sortDetached=n(function(t){return 1&t.compareDocumentPosition(j.createElement("div"))}),n(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||r("type|href|height|width",function(t,e,i){return i?void 0:t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),x.attributes&&n(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||r("value",function(t,e,i){return i||"input"!==t.nodeName.toLowerCase()?void 0:t.defaultValue}),n(function(t){return null==t.getAttribute("disabled")})||r(et,function(t,e,i){var o;return i?void 0:t[e]===!0?e.toLowerCase():(o=t.getAttributeNode(e))&&o.specified?o.value:null}),e}(t);pt.find=bt,pt.expr=bt.selectors,pt.expr[":"]=pt.expr.pseudos,pt.uniqueSort=pt.unique=bt.uniqueSort,pt.text=bt.getText,pt.isXMLDoc=bt.isXML,pt.contains=bt.contains;var wt=function(t,e,i){for(var o=[],n=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(n&&pt(t).is(i))break;o.push(t)}return o},yt=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},xt=pt.expr.match.needsContext,kt=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Tt=/^.[^:#\[\.,]*$/;pt.filter=function(t,e,i){var o=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===o.nodeType?pt.find.matchesSelector(o,t)?[o]:[]:pt.find.matches(t,pt.grep(e,function(t){return 1===t.nodeType}))},pt.fn.extend({find:function(t){var e,i=[],o=this,n=o.length;if("string"!=typeof t)return this.pushStack(pt(t).filter(function(){for(e=0;n>e;e++)if(pt.contains(o[e],this))return!0}));for(e=0;n>e;e++)pt.find(t,o[e],i);return i=this.pushStack(n>1?pt.unique(i):i),i.selector=this.selector?this.selector+" "+t:t,i},filter:function(t){return this.pushStack(o(this,t||[],!1))},not:function(t){return this.pushStack(o(this,t||[],!0))},is:function(t){return!!o(this,"string"==typeof t&&xt.test(t)?pt(t):t||[],!1).length}});var Et,Ct=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,St=pt.fn.init=function(t,e,i){var o,n;if(!t)return this;if(i=i||Et,"string"==typeof t){if(o="<"===t.charAt(0)&&">"===t.charAt(t.length-1)&&t.length>=3?[null,t,null]:Ct.exec(t),!o||!o[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(o[1]){if(e=e instanceof pt?e[0]:e,pt.merge(this,pt.parseHTML(o[1],e&&e.nodeType?e.ownerDocument||e:ot,!0)),kt.test(o[1])&&pt.isPlainObject(e))for(o in e)pt.isFunction(this[o])?this[o](e[o]):this.attr(o,e[o]);return this}if(n=ot.getElementById(o[2]),n&&n.parentNode){if(n.id!==o[2])return Et.find(t);this.length=1,this[0]=n}return this.context=ot,this.selector=t,this}return t.nodeType?(this.context=this[0]=t,this.length=1,this):pt.isFunction(t)?"undefined"!=typeof i.ready?i.ready(t):t(pt):(void 0!==t.selector&&(this.selector=t.selector,this.context=t.context),pt.makeArray(t,this))};St.prototype=pt.fn,Et=pt(ot);var At=/^(?:parents|prev(?:Until|All))/,It={children:!0,contents:!0,next:!0,prev:!0};pt.fn.extend({has:function(t){var e,i=pt(t,this),o=i.length;return this.filter(function(){for(e=0;o>e;e++)if(pt.contains(this,i[e]))return!0})},closest:function(t,e){for(var i,o=0,n=this.length,r=[],s=xt.test(t)||"string"!=typeof t?pt(t,e||this.context):0;n>o;o++)for(i=this[o];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(s?s.index(i)>-1:1===i.nodeType&&pt.find.matchesSelector(i,t))){r.push(i);break}return this.pushStack(r.length>1?pt.uniqueSort(r):r)},index:function(t){return t?"string"==typeof t?pt.inArray(this[0],pt(t)):pt.inArray(t.jquery?t[0]:t,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(pt.uniqueSort(pt.merge(this.get(),pt(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),pt.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return wt(t,"parentNode")},parentsUntil:function(t,e,i){return wt(t,"parentNode",i)},next:function(t){return n(t,"nextSibling")},prev:function(t){return n(t,"previousSibling")},nextAll:function(t){return wt(t,"nextSibling")},prevAll:function(t){return wt(t,"previousSibling")},nextUntil:function(t,e,i){return wt(t,"nextSibling",i)},prevUntil:function(t,e,i){return wt(t,"previousSibling",i)},siblings:function(t){return yt((t.parentNode||{}).firstChild,t)},children:function(t){return yt(t.firstChild)},contents:function(t){return pt.nodeName(t,"iframe")?t.contentDocument||t.contentWindow.document:pt.merge([],t.childNodes)}},function(t,e){pt.fn[t]=function(i,o){var n=pt.map(this,e,i);return"Until"!==t.slice(-5)&&(o=i),o&&"string"==typeof o&&(n=pt.filter(o,n)),this.length>1&&(It[t]||(n=pt.uniqueSort(n)),At.test(t)&&(n=n.reverse())),this.pushStack(n)}});var zt=/\S+/g;pt.Callbacks=function(t){t="string"==typeof t?r(t):pt.extend({},t);var e,i,o,n,s=[],a=[],l=-1,c=function(){for(n=t.once,o=e=!0;a.length;l=-1)for(i=a.shift();++l<s.length;)s[l].apply(i[0],i[1])===!1&&t.stopOnFalse&&(l=s.length,i=!1);t.memory||(i=!1),e=!1,n&&(s=i?[]:"")},h={add:function(){return s&&(i&&!e&&(l=s.length-1,a.push(i)),function o(e){pt.each(e,function(e,i){pt.isFunction(i)?t.unique&&h.has(i)||s.push(i):i&&i.length&&"string"!==pt.type(i)&&o(i)})}(arguments),i&&!e&&c()),this},remove:function(){return pt.each(arguments,function(t,e){for(var i;(i=pt.inArray(e,s,i))>-1;)s.splice(i,1),l>=i&&l--}),this},has:function(t){return t?pt.inArray(t,s)>-1:s.length>0},empty:function(){return s&&(s=[]),this},disable:function(){return n=a=[],s=i="",this},disabled:function(){return!s},lock:function(){return n=!0,i||h.disable(),this},locked:function(){return!!n},fireWith:function(t,i){return n||(i=i||[],i=[t,i.slice?i.slice():i],a.push(i),e||c()),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!o}};return h},pt.extend({Deferred:function(t){var e=[["resolve","done",pt.Callbacks("once memory"),"resolved"],["reject","fail",pt.Callbacks("once memory"),"rejected"],["notify","progress",pt.Callbacks("memory")]],i="pending",o={state:function(){return i},always:function(){return n.done(arguments).fail(arguments),this},then:function(){var t=arguments;return pt.Deferred(function(i){pt.each(e,function(e,r){var s=pt.isFunction(t[e])&&t[e];n[r[1]](function(){var t=s&&s.apply(this,arguments);t&&pt.isFunction(t.promise)?t.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[r[0]+"With"](this===o?i.promise():this,s?[t]:arguments)})}),t=null}).promise()},promise:function(t){return null!=t?pt.extend(t,o):o}},n={};return o.pipe=o.then,pt.each(e,function(t,r){var s=r[2],a=r[3];o[r[1]]=s.add,a&&s.add(function(){i=a},e[1^t][2].disable,e[2][2].lock),n[r[0]]=function(){return n[r[0]+"With"](this===n?o:this,arguments),this},n[r[0]+"With"]=s.fireWith}),o.promise(n),t&&t.call(n,n),n},when:function(t){var e,i,o,n=0,r=nt.call(arguments),s=r.length,a=1!==s||t&&pt.isFunction(t.promise)?s:0,l=1===a?t:pt.Deferred(),c=function(t,i,o){return function(n){i[t]=this,o[t]=arguments.length>1?nt.call(arguments):n,o===e?l.notifyWith(i,o):--a||l.resolveWith(i,o)}};if(s>1)for(e=new Array(s),i=new Array(s),o=new Array(s);s>n;n++)r[n]&&pt.isFunction(r[n].promise)?r[n].promise().progress(c(n,i,e)).done(c(n,o,r)).fail(l.reject):--a;return a||l.resolveWith(o,r),l.promise()}});var Nt;pt.fn.ready=function(t){return pt.ready.promise().done(t),this},pt.extend({isReady:!1,readyWait:1,holdReady:function(t){t?pt.readyWait++:pt.ready(!0)},ready:function(t){(t===!0?--pt.readyWait:pt.isReady)||(pt.isReady=!0,t!==!0&&--pt.readyWait>0||(Nt.resolveWith(ot,[pt]),pt.fn.triggerHandler&&(pt(ot).triggerHandler("ready"),pt(ot).off("ready"))))}}),pt.ready.promise=function(e){if(!Nt)if(Nt=pt.Deferred(),"complete"===ot.readyState||"loading"!==ot.readyState&&!ot.documentElement.doScroll)t.setTimeout(pt.ready);else if(ot.addEventListener)ot.addEventListener("DOMContentLoaded",a),t.addEventListener("load",a);else{ot.attachEvent("onreadystatechange",a),t.attachEvent("onload",a);var i=!1;try{i=null==t.frameElement&&ot.documentElement}catch(o){}i&&i.doScroll&&!function n(){if(!pt.isReady){try{i.doScroll("left")}catch(e){return t.setTimeout(n,50)}s(),pt.ready()}}()}return Nt.promise(e)},pt.ready.promise();var $t;for($t in pt(ut))break;ut.ownFirst="0"===$t,ut.inlineBlockNeedsLayout=!1,pt(function(){var t,e,i,o;i=ot.getElementsByTagName("body")[0],i&&i.style&&(e=ot.createElement("div"),o=ot.createElement("div"),o.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(o).appendChild(e),"undefined"!=typeof e.style.zoom&&(e.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",ut.inlineBlockNeedsLayout=t=3===e.offsetWidth,t&&(i.style.zoom=1)),i.removeChild(o))}),function(){var t=ot.createElement("div");ut.deleteExpando=!0;try{delete t.test}catch(e){ut.deleteExpando=!1}t=null}();var jt=function(t){var e=pt.noData[(t.nodeName+" ").toLowerCase()],i=+t.nodeType||1;return 1!==i&&9!==i?!1:!e||e!==!0&&t.getAttribute("classid")===e},Lt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Dt=/([A-Z])/g;pt.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(t){return t=t.nodeType?pt.cache[t[pt.expando]]:t[pt.expando],!!t&&!c(t)},data:function(t,e,i){return h(t,e,i)},removeData:function(t,e){return u(t,e)},_data:function(t,e,i){return h(t,e,i,!0)},_removeData:function(t,e){return u(t,e,!0)}}),pt.fn.extend({data:function(t,e){var i,o,n,r=this[0],s=r&&r.attributes;if(void 0===t){if(this.length&&(n=pt.data(r),1===r.nodeType&&!pt._data(r,"parsedAttrs"))){for(i=s.length;i--;)s[i]&&(o=s[i].name,0===o.indexOf("data-")&&(o=pt.camelCase(o.slice(5)),l(r,o,n[o])));pt._data(r,"parsedAttrs",!0)}return n}return"object"==typeof t?this.each(function(){pt.data(this,t)}):arguments.length>1?this.each(function(){pt.data(this,t,e)}):r?l(r,t,pt.data(r,t)):void 0},removeData:function(t){return this.each(function(){pt.removeData(this,t)})}}),pt.extend({queue:function(t,e,i){var o;return t?(e=(e||"fx")+"queue",o=pt._data(t,e),i&&(!o||pt.isArray(i)?o=pt._data(t,e,pt.makeArray(i)):o.push(i)),o||[]):void 0},dequeue:function(t,e){e=e||"fx";var i=pt.queue(t,e),o=i.length,n=i.shift(),r=pt._queueHooks(t,e),s=function(){pt.dequeue(t,e)};"inprogress"===n&&(n=i.shift(),o--),n&&("fx"===e&&i.unshift("inprogress"),delete r.stop,n.call(t,s,r)),!o&&r&&r.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return pt._data(t,i)||pt._data(t,i,{empty:pt.Callbacks("once memory").add(function(){pt._removeData(t,e+"queue"),pt._removeData(t,i)})})}}),pt.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?pt.queue(this[0],t):void 0===e?this:this.each(function(){var i=pt.queue(this,t,e);pt._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&pt.dequeue(this,t)})},dequeue:function(t){return this.each(function(){pt.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,o=1,n=pt.Deferred(),r=this,s=this.length,a=function(){--o||n.resolveWith(r,[r])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";s--;)i=pt._data(r[s],t+"queueHooks"),i&&i.empty&&(o++,i.empty.add(a));return a(),n.promise(e)}}),function(){var t;ut.shrinkWrapBlocks=function(){if(null!=t)return t;t=!1;var e,i,o;return i=ot.getElementsByTagName("body")[0],i&&i.style?(e=ot.createElement("div"),o=ot.createElement("div"),o.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(o).appendChild(e),"undefined"!=typeof e.style.zoom&&(e.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",e.appendChild(ot.createElement("div")).style.width="5px",t=3!==e.offsetWidth),i.removeChild(o),t):void 0}}();var Ot=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Mt=new RegExp("^(?:([+-])=|)("+Ot+")([a-z%]*)$","i"),_t=["Top","Right","Bottom","Left"],Pt=function(t,e){return t=e||t,"none"===pt.css(t,"display")||!pt.contains(t.ownerDocument,t)},Ht=function(t,e,i,o,n,r,s){var a=0,l=t.length,c=null==i;if("object"===pt.type(i)){n=!0;for(a in i)Ht(t,e,a,i[a],!0,r,s)}else if(void 0!==o&&(n=!0,pt.isFunction(o)||(s=!0),c&&(s?(e.call(t,o),e=null):(c=e,e=function(t,e,i){return c.call(pt(t),i)})),e))for(;l>a;a++)e(t[a],i,s?o:o.call(t[a],a,e(t[a],i)));return n?t:c?e.call(t):l?e(t[0],i):r},Ft=/^(?:checkbox|radio)$/i,Bt=/<([\w:-]+)/,qt=/^$|\/(?:java|ecma)script/i,Rt=/^\s+/,Wt="abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video";!function(){var t=ot.createElement("div"),e=ot.createDocumentFragment(),i=ot.createElement("input");t.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",ut.leadingWhitespace=3===t.firstChild.nodeType,ut.tbody=!t.getElementsByTagName("tbody").length,ut.htmlSerialize=!!t.getElementsByTagName("link").length,ut.html5Clone="<:nav></:nav>"!==ot.createElement("nav").cloneNode(!0).outerHTML,i.type="checkbox",i.checked=!0,e.appendChild(i),ut.appendChecked=i.checked,t.innerHTML="<textarea>x</textarea>",ut.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue,e.appendChild(t),i=ot.createElement("input"),i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),t.appendChild(i),ut.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,ut.noCloneEvent=!!t.addEventListener,t[pt.expando]=1,ut.attributes=!t.getAttribute(pt.expando)}();var Vt={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:ut.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]};Vt.optgroup=Vt.option,Vt.tbody=Vt.tfoot=Vt.colgroup=Vt.caption=Vt.thead,Vt.th=Vt.td;var Qt=/<|&#?\w+;/,Xt=/<tbody/i;!function(){var e,i,o=ot.createElement("div");for(e in{submit:!0,change:!0,focusin:!0})i="on"+e,(ut[e]=i in t)||(o.setAttribute(i,"t"),ut[e]=o.attributes[i].expando===!1);o=null}();var Yt=/^(?:input|select|textarea)$/i,Gt=/^key/,Ut=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Jt=/^(?:focusinfocus|focusoutblur)$/,Kt=/^([^.]*)(?:\.(.+)|)/;pt.event={global:{},add:function(t,e,i,o,n){var r,s,a,l,c,h,u,d,p,m,f,g=pt._data(t);if(g){for(i.handler&&(l=i,i=l.handler,n=l.selector),i.guid||(i.guid=pt.guid++),(s=g.events)||(s=g.events={}),(h=g.handle)||(h=g.handle=function(t){return"undefined"==typeof pt||t&&pt.event.triggered===t.type?void 0:pt.event.dispatch.apply(h.elem,arguments)},h.elem=t),e=(e||"").match(zt)||[""],a=e.length;a--;)r=Kt.exec(e[a])||[],p=f=r[1],m=(r[2]||"").split(".").sort(),p&&(c=pt.event.special[p]||{},p=(n?c.delegateType:c.bindType)||p,c=pt.event.special[p]||{},u=pt.extend({type:p,origType:f,data:o,handler:i,guid:i.guid,selector:n,needsContext:n&&pt.expr.match.needsContext.test(n),namespace:m.join(".")},l),(d=s[p])||(d=s[p]=[],d.delegateCount=0,c.setup&&c.setup.call(t,o,m,h)!==!1||(t.addEventListener?t.addEventListener(p,h,!1):t.attachEvent&&t.attachEvent("on"+p,h))),c.add&&(c.add.call(t,u),u.handler.guid||(u.handler.guid=i.guid)),n?d.splice(d.delegateCount++,0,u):d.push(u),pt.event.global[p]=!0);t=null}},remove:function(t,e,i,o,n){var r,s,a,l,c,h,u,d,p,m,f,g=pt.hasData(t)&&pt._data(t);if(g&&(h=g.events)){for(e=(e||"").match(zt)||[""],c=e.length;c--;)if(a=Kt.exec(e[c])||[],p=f=a[1],m=(a[2]||"").split(".").sort(),p){for(u=pt.event.special[p]||{},p=(o?u.delegateType:u.bindType)||p,d=h[p]||[],a=a[2]&&new RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"),l=r=d.length;r--;)s=d[r],!n&&f!==s.origType||i&&i.guid!==s.guid||a&&!a.test(s.namespace)||o&&o!==s.selector&&("**"!==o||!s.selector)||(d.splice(r,1),s.selector&&d.delegateCount--,u.remove&&u.remove.call(t,s));l&&!d.length&&(u.teardown&&u.teardown.call(t,m,g.handle)!==!1||pt.removeEvent(t,p,g.handle),delete h[p])}else for(p in h)pt.event.remove(t,p+e[c],i,o,!0);pt.isEmptyObject(h)&&(delete g.handle,pt._removeData(t,"events"))}},trigger:function(e,i,o,n){var r,s,a,l,c,h,u,d=[o||ot],p=ht.call(e,"type")?e.type:e,m=ht.call(e,"namespace")?e.namespace.split("."):[];if(a=h=o=o||ot,3!==o.nodeType&&8!==o.nodeType&&!Jt.test(p+pt.event.triggered)&&(p.indexOf(".")>-1&&(m=p.split("."),p=m.shift(),m.sort()),s=p.indexOf(":")<0&&"on"+p,e=e[pt.expando]?e:new pt.Event(p,"object"==typeof e&&e),e.isTrigger=n?2:3,e.namespace=m.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+m.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=o),i=null==i?[e]:pt.makeArray(i,[e]),c=pt.event.special[p]||{},n||!c.trigger||c.trigger.apply(o,i)!==!1)){if(!n&&!c.noBubble&&!pt.isWindow(o)){for(l=c.delegateType||p,Jt.test(l+p)||(a=a.parentNode);a;a=a.parentNode)d.push(a),h=a;h===(o.ownerDocument||ot)&&d.push(h.defaultView||h.parentWindow||t)}for(u=0;(a=d[u++])&&!e.isPropagationStopped();)e.type=u>1?l:c.bindType||p,r=(pt._data(a,"events")||{})[e.type]&&pt._data(a,"handle"),r&&r.apply(a,i),r=s&&a[s],r&&r.apply&&jt(a)&&(e.result=r.apply(a,i),e.result===!1&&e.preventDefault());if(e.type=p,!n&&!e.isDefaultPrevented()&&(!c._default||c._default.apply(d.pop(),i)===!1)&&jt(o)&&s&&o[p]&&!pt.isWindow(o)){h=o[s],h&&(o[s]=null),pt.event.triggered=p;try{o[p]()}catch(f){}pt.event.triggered=void 0,h&&(o[s]=h)}return e.result}},dispatch:function(t){t=pt.event.fix(t);var e,i,o,n,r,s=[],a=nt.call(arguments),l=(pt._data(this,"events")||{})[t.type]||[],c=pt.event.special[t.type]||{};if(a[0]=t,t.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,t)!==!1){for(s=pt.event.handlers.call(this,t,l),e=0;(n=s[e++])&&!t.isPropagationStopped();)for(t.currentTarget=n.elem,i=0;(r=n.handlers[i++])&&!t.isImmediatePropagationStopped();)t.rnamespace&&!t.rnamespace.test(r.namespace)||(t.handleObj=r,t.data=r.data,o=((pt.event.special[r.origType]||{}).handle||r.handler).apply(n.elem,a),void 0!==o&&(t.result=o)===!1&&(t.preventDefault(),t.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,t),t.result}},handlers:function(t,e){var i,o,n,r,s=[],a=e.delegateCount,l=t.target;if(a&&l.nodeType&&("click"!==t.type||isNaN(t.button)||t.button<1))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==t.type)){for(o=[],i=0;a>i;i++)r=e[i],n=r.selector+" ",void 0===o[n]&&(o[n]=r.needsContext?pt(n,this).index(l)>-1:pt.find(n,this,null,[l]).length),o[n]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return a<e.length&&s.push({elem:this,handlers:e.slice(a)}),s},fix:function(t){if(t[pt.expando])return t;var e,i,o,n=t.type,r=t,s=this.fixHooks[n];for(s||(this.fixHooks[n]=s=Ut.test(n)?this.mouseHooks:Gt.test(n)?this.keyHooks:{}),o=s.props?this.props.concat(s.props):this.props,t=new pt.Event(r),e=o.length;e--;)i=o[e],t[i]=r[i];return t.target||(t.target=r.srcElement||ot),3===t.target.nodeType&&(t.target=t.target.parentNode),t.metaKey=!!t.metaKey,s.filter?s.filter(t,r):t},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(t,e){return null==t.which&&(t.which=null!=e.charCode?e.charCode:e.keyCode),t}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(t,e){var i,o,n,r=e.button,s=e.fromElement;return null==t.pageX&&null!=e.clientX&&(o=t.target.ownerDocument||ot,n=o.documentElement,i=o.body,t.pageX=e.clientX+(n&&n.scrollLeft||i&&i.scrollLeft||0)-(n&&n.clientLeft||i&&i.clientLeft||0),t.pageY=e.clientY+(n&&n.scrollTop||i&&i.scrollTop||0)-(n&&n.clientTop||i&&i.clientTop||0)),!t.relatedTarget&&s&&(t.relatedTarget=s===t.target?e.toElement:s),t.which||void 0===r||(t.which=1&r?1:2&r?3:4&r?2:0),t}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==y()&&this.focus)try{return this.focus(),!1}catch(t){}},delegateType:"focusin"},blur:{trigger:function(){return this===y()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return pt.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(t){return pt.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}},simulate:function(t,e,i){var o=pt.extend(new pt.Event,i,{type:t,isSimulated:!0});pt.event.trigger(o,null,e),o.isDefaultPrevented()&&i.preventDefault()}},pt.removeEvent=ot.removeEventListener?function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)}:function(t,e,i){var o="on"+e;t.detachEvent&&("undefined"==typeof t[o]&&(t[o]=null),t.detachEvent(o,i))},pt.Event=function(t,e){return this instanceof pt.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?b:w):this.type=t,e&&pt.extend(this,e),this.timeStamp=t&&t.timeStamp||pt.now(),void(this[pt.expando]=!0)):new pt.Event(t,e)},pt.Event.prototype={constructor:pt.Event,isDefaultPrevented:w,isPropagationStopped:w,isImmediatePropagationStopped:w,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=b,t&&(t.preventDefault?t.preventDefault():t.returnValue=!1)},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=b,t&&!this.isSimulated&&(t.stopPropagation&&t.stopPropagation(),t.cancelBubble=!0)},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=b,t&&t.stopImmediatePropagation&&t.stopImmediatePropagation(),this.stopPropagation()}},pt.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){pt.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,o=this,n=t.relatedTarget,r=t.handleObj;return n&&(n===o||pt.contains(o,n))||(t.type=r.origType,i=r.handler.apply(this,arguments),t.type=e),i}}}),ut.submit||(pt.event.special.submit={setup:function(){return pt.nodeName(this,"form")?!1:void pt.event.add(this,"click._submit keypress._submit",function(t){var e=t.target,i=pt.nodeName(e,"input")||pt.nodeName(e,"button")?pt.prop(e,"form"):void 0;i&&!pt._data(i,"submit")&&(pt.event.add(i,"submit._submit",function(t){t._submitBubble=!0}),pt._data(i,"submit",!0))})},postDispatch:function(t){t._submitBubble&&(delete t._submitBubble,this.parentNode&&!t.isTrigger&&pt.event.simulate("submit",this.parentNode,t))},teardown:function(){return pt.nodeName(this,"form")?!1:void pt.event.remove(this,"._submit")}}),ut.change||(pt.event.special.change={setup:function(){return Yt.test(this.nodeName)?("checkbox"!==this.type&&"radio"!==this.type||(pt.event.add(this,"propertychange._change",function(t){"checked"===t.originalEvent.propertyName&&(this._justChanged=!0)}),pt.event.add(this,"click._change",function(t){this._justChanged&&!t.isTrigger&&(this._justChanged=!1),pt.event.simulate("change",this,t)})),!1):void pt.event.add(this,"beforeactivate._change",function(t){var e=t.target;Yt.test(e.nodeName)&&!pt._data(e,"change")&&(pt.event.add(e,"change._change",function(t){!this.parentNode||t.isSimulated||t.isTrigger||pt.event.simulate("change",this.parentNode,t)}),pt._data(e,"change",!0))})},handle:function(t){var e=t.target;return this!==e||t.isSimulated||t.isTrigger||"radio"!==e.type&&"checkbox"!==e.type?t.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return pt.event.remove(this,"._change"),!Yt.test(this.nodeName)}}),ut.focusin||pt.each({focus:"focusin",blur:"focusout"},function(t,e){var i=function(t){pt.event.simulate(e,t.target,pt.event.fix(t))};pt.event.special[e]={setup:function(){var o=this.ownerDocument||this,n=pt._data(o,e);n||o.addEventListener(t,i,!0),pt._data(o,e,(n||0)+1)},teardown:function(){var o=this.ownerDocument||this,n=pt._data(o,e)-1;n?pt._data(o,e,n):(o.removeEventListener(t,i,!0),pt._removeData(o,e))}}}),pt.fn.extend({on:function(t,e,i,o){return x(this,t,e,i,o)},one:function(t,e,i,o){return x(this,t,e,i,o,1)},off:function(t,e,i){var o,n;if(t&&t.preventDefault&&t.handleObj)return o=t.handleObj,pt(t.delegateTarget).off(o.namespace?o.origType+"."+o.namespace:o.origType,o.selector,o.handler),this;if("object"==typeof t){for(n in t)this.off(n,e,t[n]);return this}return e!==!1&&"function"!=typeof e||(i=e,e=void 0),i===!1&&(i=w),this.each(function(){pt.event.remove(this,t,i,e)})},trigger:function(t,e){return this.each(function(){pt.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];return i?pt.event.trigger(t,e,i,!0):void 0}});var Zt=/ jQuery\d+="(?:null|\d+)"/g,te=new RegExp("<(?:"+Wt+")[\\s/>]","i"),ee=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,ie=/<script|<style|<link/i,oe=/checked\s*(?:[^=]|=\s*.checked.)/i,ne=/^true\/(.*)/,re=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,se=p(ot),ae=se.appendChild(ot.createElement("div"));pt.extend({htmlPrefilter:function(t){return t.replace(ee,"<$1></$2>")},clone:function(t,e,i){var o,n,r,s,a,l=pt.contains(t.ownerDocument,t);if(ut.html5Clone||pt.isXMLDoc(t)||!te.test("<"+t.nodeName+">")?r=t.cloneNode(!0):(ae.innerHTML=t.outerHTML,ae.removeChild(r=ae.firstChild)),!(ut.noCloneEvent&&ut.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||pt.isXMLDoc(t)))for(o=m(r),a=m(t),s=0;null!=(n=a[s]);++s)o[s]&&S(n,o[s]);if(e)if(i)for(a=a||m(t),o=o||m(r),s=0;null!=(n=a[s]);s++)C(n,o[s]);else C(t,r);return o=m(r,"script"),o.length>0&&f(o,!l&&m(t,"script")),o=a=n=null,r},cleanData:function(t,e){for(var i,o,n,r,s=0,a=pt.expando,l=pt.cache,c=ut.attributes,h=pt.event.special;null!=(i=t[s]);s++)if((e||jt(i))&&(n=i[a],r=n&&l[n])){if(r.events)for(o in r.events)h[o]?pt.event.remove(i,o):pt.removeEvent(i,o,r.handle);l[n]&&(delete l[n],c||"undefined"==typeof i.removeAttribute?i[a]=void 0:i.removeAttribute(a),it.push(n))}}}),pt.fn.extend({domManip:A,detach:function(t){return I(this,t,!0)},remove:function(t){return I(this,t)},text:function(t){return Ht(this,function(t){return void 0===t?pt.text(this):this.empty().append((this[0]&&this[0].ownerDocument||ot).createTextNode(t))},null,t,arguments.length)},append:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=k(this,t);e.appendChild(t)}})},
prepend:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=k(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++){for(1===t.nodeType&&pt.cleanData(m(t,!1));t.firstChild;)t.removeChild(t.firstChild);t.options&&pt.nodeName(t,"select")&&(t.options.length=0)}return this},clone:function(t,e){return t=null==t?!1:t,e=null==e?t:e,this.map(function(){return pt.clone(this,t,e)})},html:function(t){return Ht(this,function(t){var e=this[0]||{},i=0,o=this.length;if(void 0===t)return 1===e.nodeType?e.innerHTML.replace(Zt,""):void 0;if("string"==typeof t&&!ie.test(t)&&(ut.htmlSerialize||!te.test(t))&&(ut.leadingWhitespace||!Rt.test(t))&&!Vt[(Bt.exec(t)||["",""])[1].toLowerCase()]){t=pt.htmlPrefilter(t);try{for(;o>i;i++)e=this[i]||{},1===e.nodeType&&(pt.cleanData(m(e,!1)),e.innerHTML=t);e=0}catch(n){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return A(this,arguments,function(e){var i=this.parentNode;pt.inArray(this,t)<0&&(pt.cleanData(m(this)),i&&i.replaceChild(e,this))},t)}}),pt.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){pt.fn[t]=function(t){for(var i,o=0,n=[],r=pt(t),s=r.length-1;s>=o;o++)i=o===s?this:this.clone(!0),pt(r[o])[e](i),st.apply(n,i.get());return this.pushStack(n)}});var le,ce={HTML:"block",BODY:"block"},he=/^margin/,ue=new RegExp("^("+Ot+")(?!px)[a-z%]+$","i"),de=function(t,e,i,o){var n,r,s={};for(r in e)s[r]=t.style[r],t.style[r]=e[r];n=i.apply(t,o||[]);for(r in e)t.style[r]=s[r];return n},pe=ot.documentElement;!function(){function e(){var e,h,u=ot.documentElement;u.appendChild(l),c.style.cssText="-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",i=n=a=!1,o=s=!0,t.getComputedStyle&&(h=t.getComputedStyle(c),i="1%"!==(h||{}).top,a="2px"===(h||{}).marginLeft,n="4px"===(h||{width:"4px"}).width,c.style.marginRight="50%",o="4px"===(h||{marginRight:"4px"}).marginRight,e=c.appendChild(ot.createElement("div")),e.style.cssText=c.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",e.style.marginRight=e.style.width="0",c.style.width="1px",s=!parseFloat((t.getComputedStyle(e)||{}).marginRight),c.removeChild(e)),c.style.display="none",r=0===c.getClientRects().length,r&&(c.style.display="",c.innerHTML="<table><tr><td></td><td>t</td></tr></table>",c.childNodes[0].style.borderCollapse="separate",e=c.getElementsByTagName("td"),e[0].style.cssText="margin:0;border:0;padding:0;display:none",r=0===e[0].offsetHeight,r&&(e[0].style.display="",e[1].style.display="none",r=0===e[0].offsetHeight)),u.removeChild(l)}var i,o,n,r,s,a,l=ot.createElement("div"),c=ot.createElement("div");c.style&&(c.style.cssText="float:left;opacity:.5",ut.opacity="0.5"===c.style.opacity,ut.cssFloat=!!c.style.cssFloat,c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",ut.clearCloneStyle="content-box"===c.style.backgroundClip,l=ot.createElement("div"),l.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",c.innerHTML="",l.appendChild(c),ut.boxSizing=""===c.style.boxSizing||""===c.style.MozBoxSizing||""===c.style.WebkitBoxSizing,pt.extend(ut,{reliableHiddenOffsets:function(){return null==i&&e(),r},boxSizingReliable:function(){return null==i&&e(),n},pixelMarginRight:function(){return null==i&&e(),o},pixelPosition:function(){return null==i&&e(),i},reliableMarginRight:function(){return null==i&&e(),s},reliableMarginLeft:function(){return null==i&&e(),a}}))}();var me,fe,ge=/^(top|right|bottom|left)$/;t.getComputedStyle?(me=function(e){var i=e.ownerDocument.defaultView;return i&&i.opener||(i=t),i.getComputedStyle(e)},fe=function(t,e,i){var o,n,r,s,a=t.style;return i=i||me(t),s=i?i.getPropertyValue(e)||i[e]:void 0,""!==s&&void 0!==s||pt.contains(t.ownerDocument,t)||(s=pt.style(t,e)),i&&!ut.pixelMarginRight()&&ue.test(s)&&he.test(e)&&(o=a.width,n=a.minWidth,r=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=i.width,a.width=o,a.minWidth=n,a.maxWidth=r),void 0===s?s:s+""}):pe.currentStyle&&(me=function(t){return t.currentStyle},fe=function(t,e,i){var o,n,r,s,a=t.style;return i=i||me(t),s=i?i[e]:void 0,null==s&&a&&a[e]&&(s=a[e]),ue.test(s)&&!ge.test(e)&&(o=a.left,n=t.runtimeStyle,r=n&&n.left,r&&(n.left=t.currentStyle.left),a.left="fontSize"===e?"1em":s,s=a.pixelLeft+"px",a.left=o,r&&(n.left=r)),void 0===s?s:s+""||"auto"});var ve=/alpha\([^)]*\)/i,be=/opacity\s*=\s*([^)]*)/i,we=/^(none|table(?!-c[ea]).+)/,ye=new RegExp("^("+Ot+")(.*)$","i"),xe={position:"absolute",visibility:"hidden",display:"block"},ke={letterSpacing:"0",fontWeight:"400"},Te=["Webkit","O","Moz","ms"],Ee=ot.createElement("div").style;pt.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=fe(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":ut.cssFloat?"cssFloat":"styleFloat"},style:function(t,e,i,o){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var n,r,s,a=pt.camelCase(e),l=t.style;if(e=pt.cssProps[a]||(pt.cssProps[a]=j(a)||a),s=pt.cssHooks[e]||pt.cssHooks[a],void 0===i)return s&&"get"in s&&void 0!==(n=s.get(t,!1,o))?n:l[e];if(r=typeof i,"string"===r&&(n=Mt.exec(i))&&n[1]&&(i=d(t,e,n),r="number"),null!=i&&i===i&&("number"===r&&(i+=n&&n[3]||(pt.cssNumber[a]?"":"px")),ut.clearCloneStyle||""!==i||0!==e.indexOf("background")||(l[e]="inherit"),!(s&&"set"in s&&void 0===(i=s.set(t,i,o)))))try{l[e]=i}catch(c){}}},css:function(t,e,i,o){var n,r,s,a=pt.camelCase(e);return e=pt.cssProps[a]||(pt.cssProps[a]=j(a)||a),s=pt.cssHooks[e]||pt.cssHooks[a],s&&"get"in s&&(r=s.get(t,!0,i)),void 0===r&&(r=fe(t,e,o)),"normal"===r&&e in ke&&(r=ke[e]),""===i||i?(n=parseFloat(r),i===!0||isFinite(n)?n||0:r):r}}),pt.each(["height","width"],function(t,e){pt.cssHooks[e]={get:function(t,i,o){return i?we.test(pt.css(t,"display"))&&0===t.offsetWidth?de(t,xe,function(){return M(t,e,o)}):M(t,e,o):void 0},set:function(t,i,o){var n=o&&me(t);return D(t,i,o?O(t,e,o,ut.boxSizing&&"border-box"===pt.css(t,"boxSizing",!1,n),n):0)}}}),ut.opacity||(pt.cssHooks.opacity={get:function(t,e){return be.test((e&&t.currentStyle?t.currentStyle.filter:t.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":e?"1":""},set:function(t,e){var i=t.style,o=t.currentStyle,n=pt.isNumeric(e)?"alpha(opacity="+100*e+")":"",r=o&&o.filter||i.filter||"";i.zoom=1,(e>=1||""===e)&&""===pt.trim(r.replace(ve,""))&&i.removeAttribute&&(i.removeAttribute("filter"),""===e||o&&!o.filter)||(i.filter=ve.test(r)?r.replace(ve,n):r+" "+n)}}),pt.cssHooks.marginRight=$(ut.reliableMarginRight,function(t,e){return e?de(t,{display:"inline-block"},fe,[t,"marginRight"]):void 0}),pt.cssHooks.marginLeft=$(ut.reliableMarginLeft,function(t,e){return e?(parseFloat(fe(t,"marginLeft"))||(pt.contains(t.ownerDocument,t)?t.getBoundingClientRect().left-de(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}):0))+"px":void 0}),pt.each({margin:"",padding:"",border:"Width"},function(t,e){pt.cssHooks[t+e]={expand:function(i){for(var o=0,n={},r="string"==typeof i?i.split(" "):[i];4>o;o++)n[t+_t[o]+e]=r[o]||r[o-2]||r[0];return n}},he.test(t)||(pt.cssHooks[t+e].set=D)}),pt.fn.extend({css:function(t,e){return Ht(this,function(t,e,i){var o,n,r={},s=0;if(pt.isArray(e)){for(o=me(t),n=e.length;n>s;s++)r[e[s]]=pt.css(t,e[s],!1,o);return r}return void 0!==i?pt.style(t,e,i):pt.css(t,e)},t,e,arguments.length>1)},show:function(){return L(this,!0)},hide:function(){return L(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){Pt(this)?pt(this).show():pt(this).hide()})}}),pt.Tween=_,_.prototype={constructor:_,init:function(t,e,i,o,n,r){this.elem=t,this.prop=i,this.easing=n||pt.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=o,this.unit=r||(pt.cssNumber[i]?"":"px")},cur:function(){var t=_.propHooks[this.prop];return t&&t.get?t.get(this):_.propHooks._default.get(this)},run:function(t){var e,i=_.propHooks[this.prop];return this.options.duration?this.pos=e=pt.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):_.propHooks._default.set(this),this}},_.prototype.init.prototype=_.prototype,_.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=pt.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){pt.fx.step[t.prop]?pt.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[pt.cssProps[t.prop]]&&!pt.cssHooks[t.prop]?t.elem[t.prop]=t.now:pt.style(t.elem,t.prop,t.now+t.unit)}}},_.propHooks.scrollTop=_.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},pt.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},pt.fx=_.prototype.init,pt.fx.step={};var Ce,Se,Ae=/^(?:toggle|show|hide)$/,Ie=/queueHooks$/;pt.Animation=pt.extend(R,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return d(i.elem,t,Mt.exec(e),i),i}]},tweener:function(t,e){pt.isFunction(t)?(e=t,t=["*"]):t=t.match(zt);for(var i,o=0,n=t.length;n>o;o++)i=t[o],R.tweeners[i]=R.tweeners[i]||[],R.tweeners[i].unshift(e)},prefilters:[B],prefilter:function(t,e){e?R.prefilters.unshift(t):R.prefilters.push(t)}}),pt.speed=function(t,e,i){var o=t&&"object"==typeof t?pt.extend({},t):{complete:i||!i&&e||pt.isFunction(t)&&t,duration:t,easing:i&&e||e&&!pt.isFunction(e)&&e};return o.duration=pt.fx.off?0:"number"==typeof o.duration?o.duration:o.duration in pt.fx.speeds?pt.fx.speeds[o.duration]:pt.fx.speeds._default,null!=o.queue&&o.queue!==!0||(o.queue="fx"),o.old=o.complete,o.complete=function(){pt.isFunction(o.old)&&o.old.call(this),o.queue&&pt.dequeue(this,o.queue)},o},pt.fn.extend({fadeTo:function(t,e,i,o){return this.filter(Pt).css("opacity",0).show().end().animate({opacity:e},t,i,o)},animate:function(t,e,i,o){var n=pt.isEmptyObject(t),r=pt.speed(e,i,o),s=function(){var e=R(this,pt.extend({},t),r);(n||pt._data(this,"finish"))&&e.stop(!0)};return s.finish=s,n||r.queue===!1?this.each(s):this.queue(r.queue,s)},stop:function(t,e,i){var o=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,n=null!=t&&t+"queueHooks",r=pt.timers,s=pt._data(this);if(n)s[n]&&s[n].stop&&o(s[n]);else for(n in s)s[n]&&s[n].stop&&Ie.test(n)&&o(s[n]);for(n=r.length;n--;)r[n].elem!==this||null!=t&&r[n].queue!==t||(r[n].anim.stop(i),e=!1,r.splice(n,1));!e&&i||pt.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,i=pt._data(this),o=i[t+"queue"],n=i[t+"queueHooks"],r=pt.timers,s=o?o.length:0;for(i.finish=!0,pt.queue(this,t,[]),n&&n.stop&&n.stop.call(this,!0),e=r.length;e--;)r[e].elem===this&&r[e].queue===t&&(r[e].anim.stop(!0),r.splice(e,1));for(e=0;s>e;e++)o[e]&&o[e].finish&&o[e].finish.call(this);delete i.finish})}}),pt.each(["toggle","show","hide"],function(t,e){var i=pt.fn[e];pt.fn[e]=function(t,o,n){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(H(e,!0),t,o,n)}}),pt.each({slideDown:H("show"),slideUp:H("hide"),slideToggle:H("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){pt.fn[t]=function(t,i,o){return this.animate(e,t,i,o)}}),pt.timers=[],pt.fx.tick=function(){var t,e=pt.timers,i=0;for(Ce=pt.now();i<e.length;i++)t=e[i],t()||e[i]!==t||e.splice(i--,1);e.length||pt.fx.stop(),Ce=void 0},pt.fx.timer=function(t){pt.timers.push(t),t()?pt.fx.start():pt.timers.pop()},pt.fx.interval=13,pt.fx.start=function(){Se||(Se=t.setInterval(pt.fx.tick,pt.fx.interval))},pt.fx.stop=function(){t.clearInterval(Se),Se=null},pt.fx.speeds={slow:600,fast:200,_default:400},pt.fn.delay=function(e,i){return e=pt.fx?pt.fx.speeds[e]||e:e,i=i||"fx",this.queue(i,function(i,o){var n=t.setTimeout(i,e);o.stop=function(){t.clearTimeout(n)}})},function(){var t,e=ot.createElement("input"),i=ot.createElement("div"),o=ot.createElement("select"),n=o.appendChild(ot.createElement("option"));i=ot.createElement("div"),i.setAttribute("className","t"),i.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",t=i.getElementsByTagName("a")[0],e.setAttribute("type","checkbox"),i.appendChild(e),t=i.getElementsByTagName("a")[0],t.style.cssText="top:1px",ut.getSetAttribute="t"!==i.className,ut.style=/top/.test(t.getAttribute("style")),ut.hrefNormalized="/a"===t.getAttribute("href"),ut.checkOn=!!e.value,ut.optSelected=n.selected,ut.enctype=!!ot.createElement("form").enctype,o.disabled=!0,ut.optDisabled=!n.disabled,e=ot.createElement("input"),e.setAttribute("value",""),ut.input=""===e.getAttribute("value"),e.value="t",e.setAttribute("type","radio"),ut.radioValue="t"===e.value}();var ze=/\r/g,Ne=/[\x20\t\r\n\f]+/g;pt.fn.extend({val:function(t){var e,i,o,n=this[0];{if(arguments.length)return o=pt.isFunction(t),this.each(function(i){var n;1===this.nodeType&&(n=o?t.call(this,i,pt(this).val()):t,null==n?n="":"number"==typeof n?n+="":pt.isArray(n)&&(n=pt.map(n,function(t){return null==t?"":t+""})),e=pt.valHooks[this.type]||pt.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,n,"value")||(this.value=n))});if(n)return e=pt.valHooks[n.type]||pt.valHooks[n.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(i=e.get(n,"value"))?i:(i=n.value,"string"==typeof i?i.replace(ze,""):null==i?"":i)}}}),pt.extend({valHooks:{option:{get:function(t){var e=pt.find.attr(t,"value");return null!=e?e:pt.trim(pt.text(t)).replace(Ne," ")}},select:{get:function(t){for(var e,i,o=t.options,n=t.selectedIndex,r="select-one"===t.type||0>n,s=r?null:[],a=r?n+1:o.length,l=0>n?a:r?n:0;a>l;l++)if(i=o[l],(i.selected||l===n)&&(ut.optDisabled?!i.disabled:null===i.getAttribute("disabled"))&&(!i.parentNode.disabled||!pt.nodeName(i.parentNode,"optgroup"))){if(e=pt(i).val(),r)return e;s.push(e)}return s},set:function(t,e){for(var i,o,n=t.options,r=pt.makeArray(e),s=n.length;s--;)if(o=n[s],pt.inArray(pt.valHooks.option.get(o),r)>-1)try{o.selected=i=!0}catch(a){o.scrollHeight}else o.selected=!1;return i||(t.selectedIndex=-1),n}}}}),pt.each(["radio","checkbox"],function(){pt.valHooks[this]={set:function(t,e){return pt.isArray(e)?t.checked=pt.inArray(pt(t).val(),e)>-1:void 0}},ut.checkOn||(pt.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var $e,je,Le=pt.expr.attrHandle,De=/^(?:checked|selected)$/i,Oe=ut.getSetAttribute,Me=ut.input;pt.fn.extend({attr:function(t,e){return Ht(this,pt.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){pt.removeAttr(this,t)})}}),pt.extend({attr:function(t,e,i){var o,n,r=t.nodeType;if(3!==r&&8!==r&&2!==r)return"undefined"==typeof t.getAttribute?pt.prop(t,e,i):(1===r&&pt.isXMLDoc(t)||(e=e.toLowerCase(),n=pt.attrHooks[e]||(pt.expr.match.bool.test(e)?je:$e)),void 0!==i?null===i?void pt.removeAttr(t,e):n&&"set"in n&&void 0!==(o=n.set(t,i,e))?o:(t.setAttribute(e,i+""),i):n&&"get"in n&&null!==(o=n.get(t,e))?o:(o=pt.find.attr(t,e),null==o?void 0:o))},attrHooks:{type:{set:function(t,e){if(!ut.radioValue&&"radio"===e&&pt.nodeName(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,o,n=0,r=e&&e.match(zt);if(r&&1===t.nodeType)for(;i=r[n++];)o=pt.propFix[i]||i,pt.expr.match.bool.test(i)?Me&&Oe||!De.test(i)?t[o]=!1:t[pt.camelCase("default-"+i)]=t[o]=!1:pt.attr(t,i,""),t.removeAttribute(Oe?i:o)}}),je={set:function(t,e,i){return e===!1?pt.removeAttr(t,i):Me&&Oe||!De.test(i)?t.setAttribute(!Oe&&pt.propFix[i]||i,i):t[pt.camelCase("default-"+i)]=t[i]=!0,i}},pt.each(pt.expr.match.bool.source.match(/\w+/g),function(t,e){var i=Le[e]||pt.find.attr;Me&&Oe||!De.test(e)?Le[e]=function(t,e,o){var n,r;return o||(r=Le[e],Le[e]=n,n=null!=i(t,e,o)?e.toLowerCase():null,Le[e]=r),n}:Le[e]=function(t,e,i){return i?void 0:t[pt.camelCase("default-"+e)]?e.toLowerCase():null}}),Me&&Oe||(pt.attrHooks.value={set:function(t,e,i){return pt.nodeName(t,"input")?void(t.defaultValue=e):$e&&$e.set(t,e,i)}}),Oe||($e={set:function(t,e,i){var o=t.getAttributeNode(i);return o||t.setAttributeNode(o=t.ownerDocument.createAttribute(i)),o.value=e+="","value"===i||e===t.getAttribute(i)?e:void 0}},Le.id=Le.name=Le.coords=function(t,e,i){var o;return i?void 0:(o=t.getAttributeNode(e))&&""!==o.value?o.value:null},pt.valHooks.button={get:function(t,e){var i=t.getAttributeNode(e);return i&&i.specified?i.value:void 0},set:$e.set},pt.attrHooks.contenteditable={set:function(t,e,i){$e.set(t,""===e?!1:e,i)}},pt.each(["width","height"],function(t,e){pt.attrHooks[e]={set:function(t,i){return""===i?(t.setAttribute(e,"auto"),i):void 0}}})),ut.style||(pt.attrHooks.style={get:function(t){return t.style.cssText||void 0},set:function(t,e){return t.style.cssText=e+""}});var _e=/^(?:input|select|textarea|button|object)$/i,Pe=/^(?:a|area)$/i;pt.fn.extend({prop:function(t,e){return Ht(this,pt.prop,t,e,arguments.length>1)},removeProp:function(t){return t=pt.propFix[t]||t,this.each(function(){try{this[t]=void 0,delete this[t]}catch(e){}})}}),pt.extend({prop:function(t,e,i){var o,n,r=t.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&pt.isXMLDoc(t)||(e=pt.propFix[e]||e,n=pt.propHooks[e]),void 0!==i?n&&"set"in n&&void 0!==(o=n.set(t,i,e))?o:t[e]=i:n&&"get"in n&&null!==(o=n.get(t,e))?o:t[e]},propHooks:{tabIndex:{get:function(t){var e=pt.find.attr(t,"tabindex");return e?parseInt(e,10):_e.test(t.nodeName)||Pe.test(t.nodeName)&&t.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),ut.hrefNormalized||pt.each(["href","src"],function(t,e){pt.propHooks[e]={get:function(t){return t.getAttribute(e,4)}}}),ut.optSelected||(pt.propHooks.selected={get:function(t){var e=t.parentNode;return e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex),null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),pt.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){pt.propFix[this.toLowerCase()]=this}),ut.enctype||(pt.propFix.enctype="encoding");var He=/[\t\r\n\f]/g;pt.fn.extend({addClass:function(t){var e,i,o,n,r,s,a,l=0;if(pt.isFunction(t))return this.each(function(e){pt(this).addClass(t.call(this,e,W(this)))});if("string"==typeof t&&t)for(e=t.match(zt)||[];i=this[l++];)if(n=W(i),o=1===i.nodeType&&(" "+n+" ").replace(He," ")){for(s=0;r=e[s++];)o.indexOf(" "+r+" ")<0&&(o+=r+" ");a=pt.trim(o),n!==a&&pt.attr(i,"class",a)}return this},removeClass:function(t){var e,i,o,n,r,s,a,l=0;if(pt.isFunction(t))return this.each(function(e){pt(this).removeClass(t.call(this,e,W(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(zt)||[];i=this[l++];)if(n=W(i),o=1===i.nodeType&&(" "+n+" ").replace(He," ")){for(s=0;r=e[s++];)for(;o.indexOf(" "+r+" ")>-1;)o=o.replace(" "+r+" "," ");a=pt.trim(o),n!==a&&pt.attr(i,"class",a)}return this},toggleClass:function(t,e){var i=typeof t;return"boolean"==typeof e&&"string"===i?e?this.addClass(t):this.removeClass(t):pt.isFunction(t)?this.each(function(i){pt(this).toggleClass(t.call(this,i,W(this),e),e)}):this.each(function(){var e,o,n,r;if("string"===i)for(o=0,n=pt(this),r=t.match(zt)||[];e=r[o++];)n.hasClass(e)?n.removeClass(e):n.addClass(e);else void 0!==t&&"boolean"!==i||(e=W(this),e&&pt._data(this,"__className__",e),pt.attr(this,"class",e||t===!1?"":pt._data(this,"__className__")||""))})},hasClass:function(t){var e,i,o=0;for(e=" "+t+" ";i=this[o++];)if(1===i.nodeType&&(" "+W(i)+" ").replace(He," ").indexOf(e)>-1)return!0;return!1}}),pt.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(t,e){pt.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}),pt.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}});var Fe=t.location,Be=pt.now(),qe=/\?/,Re=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;pt.parseJSON=function(e){if(t.JSON&&t.JSON.parse)return t.JSON.parse(e+"");var i,o=null,n=pt.trim(e+"");return n&&!pt.trim(n.replace(Re,function(t,e,n,r){return i&&e&&(o=0),0===o?t:(i=n||e,o+=!r-!n,"")}))?Function("return "+n)():pt.error("Invalid JSON: "+e)},pt.parseXML=function(e){var i,o;if(!e||"string"!=typeof e)return null;try{t.DOMParser?(o=new t.DOMParser,i=o.parseFromString(e,"text/xml")):(i=new t.ActiveXObject("Microsoft.XMLDOM"),i.async="false",i.loadXML(e))}catch(n){i=void 0}return i&&i.documentElement&&!i.getElementsByTagName("parsererror").length||pt.error("Invalid XML: "+e),i};var We=/#.*$/,Ve=/([?&])_=[^&]*/,Qe=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Xe=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ye=/^(?:GET|HEAD)$/,Ge=/^\/\//,Ue=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Je={},Ke={},Ze="*/".concat("*"),ti=Fe.href,ei=Ue.exec(ti.toLowerCase())||[];pt.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ti,type:"GET",isLocal:Xe.test(ei[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ze,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":pt.parseJSON,"text xml":pt.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?X(X(t,pt.ajaxSettings),e):X(pt.ajaxSettings,t)},ajaxPrefilter:V(Je),ajaxTransport:V(Ke),ajax:function(e,i){function o(e,i,o,n){var r,u,b,w,x,T=i;2!==y&&(y=2,l&&t.clearTimeout(l),h=void 0,a=n||"",k.readyState=e>0?4:0,r=e>=200&&300>e||304===e,o&&(w=Y(d,k,o)),w=G(d,w,k,r),r?(d.ifModified&&(x=k.getResponseHeader("Last-Modified"),x&&(pt.lastModified[s]=x),x=k.getResponseHeader("etag"),x&&(pt.etag[s]=x)),204===e||"HEAD"===d.type?T="nocontent":304===e?T="notmodified":(T=w.state,u=w.data,b=w.error,r=!b)):(b=T,!e&&T||(T="error",0>e&&(e=0))),k.status=e,k.statusText=(i||T)+"",r?f.resolveWith(p,[u,T,k]):f.rejectWith(p,[k,T,b]),k.statusCode(v),v=void 0,c&&m.trigger(r?"ajaxSuccess":"ajaxError",[k,d,r?u:b]),g.fireWith(p,[k,T]),c&&(m.trigger("ajaxComplete",[k,d]),--pt.active||pt.event.trigger("ajaxStop")))}"object"==typeof e&&(i=e,e=void 0),i=i||{};var n,r,s,a,l,c,h,u,d=pt.ajaxSetup({},i),p=d.context||d,m=d.context&&(p.nodeType||p.jquery)?pt(p):pt.event,f=pt.Deferred(),g=pt.Callbacks("once memory"),v=d.statusCode||{},b={},w={},y=0,x="canceled",k={readyState:0,getResponseHeader:function(t){var e;if(2===y){if(!u)for(u={};e=Qe.exec(a);)u[e[1].toLowerCase()]=e[2];e=u[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return 2===y?a:null},setRequestHeader:function(t,e){var i=t.toLowerCase();return y||(t=w[i]=w[i]||t,b[t]=e),this},overrideMimeType:function(t){return y||(d.mimeType=t),this},statusCode:function(t){var e;if(t)if(2>y)for(e in t)v[e]=[v[e],t[e]];else k.always(t[k.status]);return this},abort:function(t){var e=t||x;return h&&h.abort(e),o(0,e),this}};if(f.promise(k).complete=g.add,k.success=k.done,k.error=k.fail,d.url=((e||d.url||ti)+"").replace(We,"").replace(Ge,ei[1]+"//"),d.type=i.method||i.type||d.method||d.type,d.dataTypes=pt.trim(d.dataType||"*").toLowerCase().match(zt)||[""],null==d.crossDomain&&(n=Ue.exec(d.url.toLowerCase()),d.crossDomain=!(!n||n[1]===ei[1]&&n[2]===ei[2]&&(n[3]||("http:"===n[1]?"80":"443"))===(ei[3]||("http:"===ei[1]?"80":"443")))),d.data&&d.processData&&"string"!=typeof d.data&&(d.data=pt.param(d.data,d.traditional)),Q(Je,d,i,k),2===y)return k;c=pt.event&&d.global,c&&0===pt.active++&&pt.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!Ye.test(d.type),s=d.url,d.hasContent||(d.data&&(s=d.url+=(qe.test(s)?"&":"?")+d.data,delete d.data),d.cache===!1&&(d.url=Ve.test(s)?s.replace(Ve,"$1_="+Be++):s+(qe.test(s)?"&":"?")+"_="+Be++)),d.ifModified&&(pt.lastModified[s]&&k.setRequestHeader("If-Modified-Since",pt.lastModified[s]),pt.etag[s]&&k.setRequestHeader("If-None-Match",pt.etag[s])),(d.data&&d.hasContent&&d.contentType!==!1||i.contentType)&&k.setRequestHeader("Content-Type",d.contentType),k.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+Ze+"; q=0.01":""):d.accepts["*"]);for(r in d.headers)k.setRequestHeader(r,d.headers[r]);if(d.beforeSend&&(d.beforeSend.call(p,k,d)===!1||2===y))return k.abort();x="abort";for(r in{success:1,error:1,complete:1})k[r](d[r]);if(h=Q(Ke,d,i,k)){if(k.readyState=1,c&&m.trigger("ajaxSend",[k,d]),2===y)return k;d.async&&d.timeout>0&&(l=t.setTimeout(function(){k.abort("timeout")},d.timeout));try{y=1,h.send(b,o)}catch(T){if(!(2>y))throw T;o(-1,T)}}else o(-1,"No Transport");return k},getJSON:function(t,e,i){return pt.get(t,e,i,"json")},getScript:function(t,e){return pt.get(t,void 0,e,"script")}}),pt.each(["get","post"],function(t,e){pt[e]=function(t,i,o,n){return pt.isFunction(i)&&(n=n||o,o=i,i=void 0),pt.ajax(pt.extend({url:t,type:e,dataType:n,data:i,success:o},pt.isPlainObject(t)&&t))}}),pt._evalUrl=function(t){return pt.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},pt.fn.extend({wrapAll:function(t){if(pt.isFunction(t))return this.each(function(e){pt(this).wrapAll(t.call(this,e))});if(this[0]){var e=pt(t,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstChild&&1===t.firstChild.nodeType;)t=t.firstChild;return t}).append(this)}return this},wrapInner:function(t){return pt.isFunction(t)?this.each(function(e){pt(this).wrapInner(t.call(this,e))}):this.each(function(){var e=pt(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)})},wrap:function(t){var e=pt.isFunction(t);return this.each(function(i){pt(this).wrapAll(e?t.call(this,i):t)})},unwrap:function(){return this.parent().each(function(){pt.nodeName(this,"body")||pt(this).replaceWith(this.childNodes)}).end()}}),pt.expr.filters.hidden=function(t){return ut.reliableHiddenOffsets()?t.offsetWidth<=0&&t.offsetHeight<=0&&!t.getClientRects().length:J(t)},pt.expr.filters.visible=function(t){return!pt.expr.filters.hidden(t)};var ii=/%20/g,oi=/\[\]$/,ni=/\r?\n/g,ri=/^(?:submit|button|image|reset|file)$/i,si=/^(?:input|select|textarea|keygen)/i;pt.param=function(t,e){var i,o=[],n=function(t,e){e=pt.isFunction(e)?e():null==e?"":e,o[o.length]=encodeURIComponent(t)+"="+encodeURIComponent(e)};if(void 0===e&&(e=pt.ajaxSettings&&pt.ajaxSettings.traditional),pt.isArray(t)||t.jquery&&!pt.isPlainObject(t))pt.each(t,function(){n(this.name,this.value)});else for(i in t)K(i,t[i],e,n);return o.join("&").replace(ii,"+")},pt.fn.extend({serialize:function(){return pt.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=pt.prop(this,"elements");return t?pt.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!pt(this).is(":disabled")&&si.test(this.nodeName)&&!ri.test(t)&&(this.checked||!Ft.test(t))}).map(function(t,e){var i=pt(this).val();return null==i?null:pt.isArray(i)?pt.map(i,function(t){return{name:e.name,value:t.replace(ni,"\r\n")}}):{name:e.name,value:i.replace(ni,"\r\n")}}).get()}}),pt.ajaxSettings.xhr=void 0!==t.ActiveXObject?function(){return this.isLocal?tt():ot.documentMode>8?Z():/^(get|post|head|put|delete|options)$/i.test(this.type)&&Z()||tt()}:Z;var ai=0,li={},ci=pt.ajaxSettings.xhr();t.attachEvent&&t.attachEvent("onunload",function(){for(var t in li)li[t](void 0,!0)}),ut.cors=!!ci&&"withCredentials"in ci,ci=ut.ajax=!!ci,ci&&pt.ajaxTransport(function(e){if(!e.crossDomain||ut.cors){var i;return{send:function(o,n){var r,s=e.xhr(),a=++ai;if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(r in e.xhrFields)s[r]=e.xhrFields[r];e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||o["X-Requested-With"]||(o["X-Requested-With"]="XMLHttpRequest");for(r in o)void 0!==o[r]&&s.setRequestHeader(r,o[r]+"");s.send(e.hasContent&&e.data||null),i=function(t,o){var r,l,c;if(i&&(o||4===s.readyState))if(delete li[a],i=void 0,s.onreadystatechange=pt.noop,o)4!==s.readyState&&s.abort();else{c={},r=s.status,"string"==typeof s.responseText&&(c.text=s.responseText);try{l=s.statusText}catch(h){l=""}r||!e.isLocal||e.crossDomain?1223===r&&(r=204):r=c.text?200:404}c&&n(r,l,c,s.getAllResponseHeaders())},e.async?4===s.readyState?t.setTimeout(i):s.onreadystatechange=li[a]=i:i()},abort:function(){i&&i(void 0,!0)}}}}),pt.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return pt.globalEval(t),t}}}),pt.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET",t.global=!1)}),pt.ajaxTransport("script",function(t){if(t.crossDomain){var e,i=ot.head||pt("head")[0]||ot.documentElement;return{send:function(o,n){e=ot.createElement("script"),e.async=!0,t.scriptCharset&&(e.charset=t.scriptCharset),e.src=t.url,e.onload=e.onreadystatechange=function(t,i){(i||!e.readyState||/loaded|complete/.test(e.readyState))&&(e.onload=e.onreadystatechange=null,e.parentNode&&e.parentNode.removeChild(e),e=null,i||n(200,"success"))},i.insertBefore(e,i.firstChild)},abort:function(){e&&e.onload(void 0,!0)}}}});var hi=[],ui=/(=)\?(?=&|$)|\?\?/;pt.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=hi.pop()||pt.expando+"_"+Be++;return this[t]=!0,t}}),pt.ajaxPrefilter("json jsonp",function(e,i,o){var n,r,s,a=e.jsonp!==!1&&(ui.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&ui.test(e.data)&&"data");return a||"jsonp"===e.dataTypes[0]?(n=e.jsonpCallback=pt.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(ui,"$1"+n):e.jsonp!==!1&&(e.url+=(qe.test(e.url)?"&":"?")+e.jsonp+"="+n),e.converters["script json"]=function(){return s||pt.error(n+" was not called"),s[0]},e.dataTypes[0]="json",r=t[n],t[n]=function(){s=arguments},o.always(function(){void 0===r?pt(t).removeProp(n):t[n]=r,e[n]&&(e.jsonpCallback=i.jsonpCallback,hi.push(n)),s&&pt.isFunction(r)&&r(s[0]),s=r=void 0}),"script"):void 0}),pt.parseHTML=function(t,e,i){if(!t||"string"!=typeof t)return null;"boolean"==typeof e&&(i=e,e=!1),e=e||ot;var o=kt.exec(t),n=!i&&[];return o?[e.createElement(o[1])]:(o=v([t],e,n),n&&n.length&&pt(n).remove(),pt.merge([],o.childNodes))};var di=pt.fn.load;pt.fn.load=function(t,e,i){if("string"!=typeof t&&di)return di.apply(this,arguments);var o,n,r,s=this,a=t.indexOf(" ");return a>-1&&(o=pt.trim(t.slice(a,t.length)),t=t.slice(0,a)),pt.isFunction(e)?(i=e,e=void 0):e&&"object"==typeof e&&(n="POST"),s.length>0&&pt.ajax({url:t,type:n||"GET",dataType:"html",data:e}).done(function(t){r=arguments,s.html(o?pt("<div>").append(pt.parseHTML(t)).find(o):t)}).always(i&&function(t,e){s.each(function(){i.apply(this,r||[t.responseText,e,t])})}),this},pt.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){pt.fn[e]=function(t){return this.on(e,t)}}),pt.expr.filters.animated=function(t){return pt.grep(pt.timers,function(e){
return t===e.elem}).length},pt.offset={setOffset:function(t,e,i){var o,n,r,s,a,l,c,h=pt.css(t,"position"),u=pt(t),d={};"static"===h&&(t.style.position="relative"),a=u.offset(),r=pt.css(t,"top"),l=pt.css(t,"left"),c=("absolute"===h||"fixed"===h)&&pt.inArray("auto",[r,l])>-1,c?(o=u.position(),s=o.top,n=o.left):(s=parseFloat(r)||0,n=parseFloat(l)||0),pt.isFunction(e)&&(e=e.call(t,i,pt.extend({},a))),null!=e.top&&(d.top=e.top-a.top+s),null!=e.left&&(d.left=e.left-a.left+n),"using"in e?e.using.call(t,d):u.css(d)}},pt.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){pt.offset.setOffset(this,t,e)});var e,i,o={top:0,left:0},n=this[0],r=n&&n.ownerDocument;if(r)return e=r.documentElement,pt.contains(e,n)?("undefined"!=typeof n.getBoundingClientRect&&(o=n.getBoundingClientRect()),i=et(r),{top:o.top+(i.pageYOffset||e.scrollTop)-(e.clientTop||0),left:o.left+(i.pageXOffset||e.scrollLeft)-(e.clientLeft||0)}):o},position:function(){if(this[0]){var t,e,i={top:0,left:0},o=this[0];return"fixed"===pt.css(o,"position")?e=o.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),pt.nodeName(t[0],"html")||(i=t.offset()),i.top+=pt.css(t[0],"borderTopWidth",!0),i.left+=pt.css(t[0],"borderLeftWidth",!0)),{top:e.top-i.top-pt.css(o,"marginTop",!0),left:e.left-i.left-pt.css(o,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&!pt.nodeName(t,"html")&&"static"===pt.css(t,"position");)t=t.offsetParent;return t||pe})}}),pt.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var i=/Y/.test(e);pt.fn[t]=function(o){return Ht(this,function(t,o,n){var r=et(t);return void 0===n?r?e in r?r[e]:r.document.documentElement[o]:t[o]:void(r?r.scrollTo(i?pt(r).scrollLeft():n,i?n:pt(r).scrollTop()):t[o]=n)},t,o,arguments.length,null)}}),pt.each(["top","left"],function(t,e){pt.cssHooks[e]=$(ut.pixelPosition,function(t,i){return i?(i=fe(t,e),ue.test(i)?pt(t).position()[e]+"px":i):void 0})}),pt.each({Height:"height",Width:"width"},function(t,e){pt.each({padding:"inner"+t,content:e,"":"outer"+t},function(i,o){pt.fn[o]=function(o,n){var r=arguments.length&&(i||"boolean"!=typeof o),s=i||(o===!0||n===!0?"margin":"border");return Ht(this,function(e,i,o){var n;return pt.isWindow(e)?e.document.documentElement["client"+t]:9===e.nodeType?(n=e.documentElement,Math.max(e.body["scroll"+t],n["scroll"+t],e.body["offset"+t],n["offset"+t],n["client"+t])):void 0===o?pt.css(e,i,s):pt.style(e,i,o,s)},e,r?o:void 0,r,null)}})}),pt.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,o){return this.on(e,t,i,o)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)}}),pt.fn.size=function(){return this.length},pt.fn.andSelf=pt.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return pt});var pi=t.jQuery,mi=t.$;return pt.noConflict=function(e){return t.$===pt&&(t.$=mi),e&&t.jQuery===pt&&(t.jQuery=pi),pt},e||(t.jQuery=t.$=pt),pt}),setInterval(getDate,0),function(t){t.fn.html5lightbox=function(e){var i=this;i.options=t.extend({freelink:"http://html5box.com/",defaultvideovolume:1,autoplay:!0,html5player:!0,responsive:!0,nativehtml5controls:!1,videohidecontrols:!1,useflashonie9:!0,useflashonie10:!1,useflashonie11:!1,googleanalyticsaccount:"",arrowloop:!0,shownavigation:!0,thumbwidth:96,thumbheight:72,thumbgap:4,thumbtopmargin:12,thumbbottommargin:12,thumbborder:1,thumbbordercolor:"transparent",thumbhighlightbordercolor:"#fff",thumbopacity:1,navbuttonwidth:32,overlaybgcolor:"#000",overlayopacity:.9,bgcolor:"#fff",bordersize:8,borderradius:0,bordermargin:16,bordertopmargin:16,bordertopmarginsmall:48,barautoheight:!0,barheight:64,loadingwidth:64,loadingheight:64,resizespeed:400,fadespeed:400,jsfolder:"",skinsfoldername:"skins",loadingimage:"img/lightbox-loading.gif",nextimage:"img/lightbox-next.png",previmage:"img/lightbox-prev.png",closeimage:"img/lightbox-close.png",playvideoimage:"img/lightbox-playvideo.png",titlebgimage:"img/lightbox-titlebg.png",navarrowsprevimage:"img/lightbox-navprev.png",navarrowsnextimage:"img/lightbox-navnext.png",navarrowsalwaysshowontouch:!0,navarrowsbottomscreenwidth:479,closeonoverlay:!0,alwaysshownavarrows:!1,showplaybutton:!0,playimage:"img/lightbox-play.png",pauseimage:"img/lightbox-pause.png",fullscreenmode:!1,fullscreencloseimage:"img/lightbox-close-fullscreen.png",fullscreennextimage:"img/lightbox-next-fullscreen.png",fullscreenprevimage:"img/lightbox-prev-fullscreen.png",videobgcolor:"#fff",showtitle:!0,titlestyle:"bottom",titleinsidecss:"color:#fff; font-size:16px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left;",titlebottomcss:"color:#333; font-size:16px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left;",showdescription:!0,descriptioninsidecss:"color:#fff; font-size:12px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left; margin:4px 0px 0px; padding: 0px;",descriptionbottomcss:"color:#333; font-size:12px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left; margin:4px 0px 0px; padding: 0px;",showtitleprefix:!0,titleprefix:"%NUM / %TOTAL",autoslide:!1,slideinterval:5e3,showtimer:!0,timerposition:"bottom",timerheight:2,timercolor:"#dc572e",timeropacity:1,initvimeo:!0,inityoutube:!0,imagepercentage:75,sidetobottomscreenwidth:479,errorwidth:280,errorheight:48,errorcss:"text-align:center; color:#ff0000; font-size:14px; font-family:Arial, sans-serif;",enabletouchswipe:!0,supportesckey:!0,supportarrowkeys:!0,version:"3.3",stamp:!1,freemark:"72,84,77,76,53,32,76,105,103,104,116,98,111,120,32,70,114,101,101,32,86,101,114,115,105,111,110",watermark:"",watermarklink:""},e),"undefined"!=typeof html5lightbox_options&&html5lightbox_options&&t.extend(i.options,html5lightbox_options),t("div#html5lightbox_options").length&&t.each(t("div#html5lightbox_options").data(),function(t,e){i.options[t.toLowerCase()]=e});var o=960,n=540,r=0,s=1,a=2,l=3,c=4,h=5,u=6,d=7,p=8,m=9;i.options.types=["IMAGE","FLASH","VIDEO","YOUTUBE","VIMEO","PDF","MP3","WEB","FLV","DAILYMOTION","DIV"],i.options.htmlfolder=window.location.href.substr(0,window.location.href.lastIndexOf("/")+1),i.options.skinsfolder=i.options.skinsfoldername,i.options.skinsfolder.length>0&&"/"!=i.options.skinsfolder[i.options.skinsfolder.length-1]&&(i.options.skinsfolder+="/"),"/"!=i.options.skinsfolder.charAt(0)&&"http:"!=i.options.skinsfolder.substring(0,5)&&"https:"!=i.options.skinsfolder.substring(0,6)&&(i.options.skinsfolder=i.options.jsfolder+i.options.skinsfolder);var f,g,v="",b=i.options.freemark.split(",");for(f=0;f<b.length;f++)v+=String.fromCharCode(b[f]);i.options.freemark=v;var w="hmtamgli5cboxh.iclolms";for(f=1;5>=f;f++)w=w.slice(0,f)+w.slice(f+1);for(g=w.length,f=0;5>f;f++)w=w.slice(0,g-9+f)+w.slice(g-8+f);-1!=i.options.htmlfolder.indexOf(w)&&(i.options.stamp=!1),i.options.flashInstalled=!1;try{new ActiveXObject("ShockwaveFlash.ShockwaveFlash")&&(i.options.flashInstalled=!0)}catch(y){navigator.mimeTypes["application/x-shockwave-flash"]&&(i.options.flashInstalled=!0)}if(i.options.html5VideoSupported=!!document.createElement("video").canPlayType,i.options.isChrome=null!=navigator.userAgent.match(/Chrome/i),i.options.isFirefox=null!=navigator.userAgent.match(/Firefox/i),i.options.isOpera=null!=navigator.userAgent.match(/Opera/i)||null!=navigator.userAgent.match(/OPR\//i),i.options.isSafari=null!=navigator.userAgent.match(/Safari/i),i.options.isIE11=null!=navigator.userAgent.match(/Trident\/7/)&&null!=navigator.userAgent.match(/rv:11/),i.options.isIE=null!=navigator.userAgent.match(/MSIE/i)&&!i.options.isOpera,i.options.isIE10=null!=navigator.userAgent.match(/MSIE 10/i)&&!this.options.isOpera,i.options.isIE9=null!=navigator.userAgent.match(/MSIE 9/i)&&!i.options.isOpera,i.options.isIE8=null!=navigator.userAgent.match(/MSIE 8/i)&&!i.options.isOpera,i.options.isIE7=null!=navigator.userAgent.match(/MSIE 7/i)&&!i.options.isOpera,i.options.isIE6=null!=navigator.userAgent.match(/MSIE 6/i)&&!i.options.isOpera,i.options.isIE678=i.options.isIE6||i.options.isIE7||i.options.isIE8,i.options.isIE6789=i.options.isIE6||i.options.isIE7||i.options.isIE8||i.options.isIE9,i.options.isAndroid=null!=navigator.userAgent.match(/Android/i),i.options.isIPad=null!=navigator.userAgent.match(/iPad/i),i.options.isIPhone=null!=navigator.userAgent.match(/iPod/i)||null!=navigator.userAgent.match(/iPhone/i),i.options.isIOS=i.options.isIPad||i.options.isIPhone,i.options.isMobile=i.options.isAndroid||i.options.isIPad||i.options.isIPhone,i.options.isIOSLess5=i.options.isIPad&&i.options.isIPhone&&(null!=navigator.userAgent.match(/OS 4/i)||null!=navigator.userAgent.match(/OS 3/i)),i.options.supportCSSPositionFixed=!i.options.isIE6&&!i.options.isIOSLess5,i.options.iequirksmode=i.options.isIE6789&&"CSS1Compat"!=document.compatMode,i.options.isTouch="ontouchstart"in window,i.options.isMobile&&(i.options.autoplay=!1),i.options.navheight=0,i.options.thumbgap+=2*i.options.thumbborder,i.options.resizeTimeout=-1,i.slideTimeout=null,i.autosliding=!1,i.elemArray=new Array,i.options.curElem=-1,i.defaultoptions=t.extend({},i.options),i.options.googleanalyticsaccount&&!window._gaq&&(window._gaq=window._gaq||[],window._gaq.push(["_setAccount",i.options.googleanalyticsaccount]),window._gaq.push(["_trackPageview"]),t.getScript(("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js")),i.options.initvimeo){var x=document.createElement("script"),k=document.getElementsByTagName("script")[0];k.parentNode.insertBefore(x,k)}if(i.options.inityoutube){var x=document.createElement("script");x.src=("https:"==document.location.protocol?"https":"http")+"://www.youtube.com/iframe_api";var k=document.getElementsByTagName("script")[0];k.parentNode.insertBefore(x,k)}return i.init=function(){i.showing=!1,i.readData(),i.createMarkup(),i.supportKeyboard(),i.initSlide()},i.readData=function(){i.each(function(){if("a"==this.nodeName.toLowerCase()||"area"==this.nodeName.toLowerCase()){var e=t(this),o="mediatype"in e.data()?e.data("mediatype"):i.checkType(e.attr("href"));if(!(0>o)){for(var n=0;n<i.elemArray.length;n++)if(e.attr("href")==i.elemArray[n][s])return;i.elemArray.push(new Array(o,e.attr("href"),e.attr("title"),e.data("group"),e.data("width"),e.data("height"),e.data("webm"),e.data("ogg"),e.data("thumbnail"),e.data("description")))}}})},i.createMarkup=function(){i.options.titlecss||(i.options.titlecss="inside"==i.options.titlestyle?i.options.titleinsidecss:i.options.titlebottomcss),i.options.descriptioncss||(i.options.descriptioncss="inside"==i.options.titlestyle?i.options.descriptioninsidecss:i.options.descriptionbottomcss),i.options.titlecss=t.trim(i.options.titlecss),i.options.titlecss.length>1&&("{"==i.options.titlecss.charAt(0)&&(i.options.titlecss=i.options.titlecss.substring(1)),"}"==i.options.titlecss.charAt(i.options.titlecss.length-1)&&(i.options.titlecss=i.options.titlecss.substring(0,i.options.titlecss.length-1))),i.options.descriptioncss=t.trim(i.options.descriptioncss),i.options.descriptioncss.length>1&&("{"==i.options.descriptioncss.charAt(0)&&(i.options.descriptioncss=i.options.descriptioncss.substring(1)),"}"==i.options.descriptioncss.charAt(i.options.descriptioncss.length-1)&&(i.options.descriptioncss=i.options.descriptioncss.substring(0,i.options.descriptioncss.length-1))),i.options.errorcss=t.trim(i.options.errorcss),i.options.errorcss.length>1&&("{"==i.options.errorcss.charAt(0)&&(i.options.errorcss=i.options.errorcss.substring(1)),"}"==i.options.errorcss.charAt(i.options.errorcss.length-1)&&(i.options.errorcss=i.options.errorcss.substring(0,i.options.errorcss.length-1)));var e=".html5-hide {display:none !important;} #carousel-html5-lightbox #html5-text {"+i.options.titlecss+"}";e+="#carousel-html5-lightbox .html5-description {"+i.options.descriptioncss+"}",e+="#carousel-html5-lightbox .html5-error {"+i.options.errorcss+"}",(i.options.navarrowsalwaysshowontouch||i.options.alwaysshownavarrows)&&(e+="#carousel-html5-lightbox .html5-prev-touch {left:0px;top:50%;margin-top:-16px;margin-left:-32px;} #carousel-html5-lightbox .html5-next-touch {right:0px;top:50%;margin-top:-16px;margin-right:-32px;}",e+="@media (max-width: "+i.options.navarrowsbottomscreenwidth+"px) { #carousel-html5-lightbox .html5-prev-touch {top:100%;left:0;margin:0;} #carousel-html5-lightbox .html5-next-touch {top:100%;right:0;margin:0;} }"),e+="#carousel-html5-lightbox .html5-prev-fullscreen {display:block;} #carousel-html5-lightbox .html5-next-fullscreen {display:block;} #carousel-html5-lightbox .html5-prev-bottom-fullscreen {display:none;} #carousel-html5-lightbox .html5-next-bottom-fullscreen {display:none;}",e+="@media (max-width: "+i.options.navarrowsbottomscreenwidth+"px) {#carousel-html5-lightbox .html5-prev-fullscreen {display:none;} #carousel-html5-lightbox .html5-next-fullscreen {display:none;} #carousel-html5-lightbox .html5-prev-bottom-fullscreen {display:block;} #carousel-html5-lightbox .html5-next-bottom-fullscreen {display:block;} }","right"==i.options.titlestyle?(e+="#carousel-html5-lightbox #html5-elem-wrap {width:"+i.options.imagepercentage+"%;height:100%;} #carousel-html5-lightbox #html5-elem-data-box {min-height:100%;}",e+="@media (max-width: "+i.options.sidetobottomscreenwidth+"px) {#carousel-html5-lightbox #html5-elem-wrap {width:100%;height:auto;} #carousel-html5-lightbox #html5-elem-data-box {width:100%;height:auto;min-height:0;}}"):"left"==i.options.titlestyle&&(e+="#carousel-html5-lightbox #html5-elem-wrap {height:100%;} #carousel-html5-lightbox #html5-elem-data-box {width:"+String(100-i.options.imagepercentage)+"%;min-height:100%;}",e+="@media (max-width: "+i.options.sidetobottomscreenwidth+"px) {#carousel-html5-lightbox #html5-elem-wrap {width:100%;height:auto;} #carousel-html5-lightbox #html5-elem-data-box {width:100%;height:auto;min-height:0;}}"),t("head").append("<style type='text/css' data-creator='carousel-html5-lightbox'>"+e+"</style>"),i.$lightbox=t("<div id='carousel-html5-lightbox' style='display:none;top:0px;left:0px;width:100%;height:100%;z-index:9999998;text-align:center;'><div id='html5-lightbox-overlay' style='display:block;position:absolute;top:0px;left:0px;width:100%;min-height:100%;background-color:"+i.options.overlaybgcolor+";opacity:"+i.options.overlayopacity+";filter:alpha(opacity="+Math.round(100*i.options.overlayopacity)+");'></div><div id='html5-lightbox-box' style='display:block;position:relative;margin:0px auto;'><div id='html5-elem-box' style='display:block;position:relative;width:100%;overflow-x:hidden;overflow-y:auto;height:100%;margin:0px auto;text-align:center;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;'><div id='html5-elem-wrap' style='display:block;position:relative;margin:0px auto;text-align:center;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;background-color:"+i.options.bgcolor+";'><div id='html5-loading' style='display:none;position:absolute;top:0px;left:0px;text-align:center;width:100%;height:100%;background:url(\""+i.options.skinsfolder+i.options.loadingimage+"\") no-repeat center center;'></div><div id='html5-error' class='html5-error' style='display:none;position:absolute;padding:"+i.options.bordersize+"px;text-align:center;width:"+i.options.errorwidth+"px;height:"+i.options.errorheight+"px;'>The requested content cannot be loaded.<br />Please try again later.</div><div id='html5-image' style='display:none;position:relative;top:0px;left:0px;width:100%;height:100%;"+(i.options.iequirksmode?"margin":"padding")+":"+i.options.bordersize+"px;text-align:center;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;'></div></div></div><div id='html5-watermark' style='display:none;position:absolute;left:"+String(i.options.bordersize+2)+"px;top:"+String(i.options.bordersize+2)+"px;'></div></div></div>"),i.$lightbox.css({position:i.options.supportCSSPositionFixed&&i.options.responsive&&!i.options.iequirksmode?"fixed":"absolute"}),i.$lightbox.appendTo("body"),i.$lightboxBox=t("#html5-lightbox-box",i.$lightbox),i.$elem=t("#html5-elem-box",i.$lightbox),i.$elemWrap=t("#html5-elem-wrap",i.$lightbox),i.$loading=t("#html5-loading",i.$lightbox),i.$error=t("#html5-error",i.$lightbox),i.$image=t("#html5-image",i.$lightbox);var o="<div id='html5-elem-data-box' style='display:none;box-sizing:border-box;'><div id='html5-text' style='display:block;overflow:hidden;'></div></div>";if("left"==i.options.titlestyle?i.$elem.prepend(o):i.$elem.append(o),i.$elemData=t("#html5-elem-data-box",i.$lightbox),i.$text=t("#html5-text",i.$lightbox),i.options.borderradius>0&&(i.$elem.css({"border-radius":i.options.borderradius+"px","-moz-border-radius":i.options.borderradius+"px","-webkit-border-radius":i.options.borderradius+"px"}),"inside"==i.options.titlestyle?i.$elemWrap.css({"border-radius":i.options.borderradius+"px","-moz-border-radius":i.options.borderradius+"px","-webkit-border-radius":i.options.borderradius+"px"}):"bottom"==i.options.titlestyle&&(i.$elemWrap.css({"border-top-left-radius":i.options.borderradius+"px","-moz-top-left-border-radius":i.options.borderradius+"px","-webkit-top-left-border-radius":i.options.borderradius+"px","border-top-right-radius":i.options.borderradius+"px","-moz-top-right-border-radius":i.options.borderradius+"px","-webkit-top-right-border-radius":i.options.borderradius+"px"}),i.$elemData.css({"border-bottom-left-radius":i.options.borderradius+"px","-moz-top-bottom-border-radius":i.options.borderradius+"px","-webkit-bottom-left-border-radius":i.options.borderradius+"px","border-bottom-right-radius":i.options.borderradius+"px","-moz-bottom-right-border-radius":i.options.borderradius+"px","-webkit-bottom-right-border-radius":i.options.borderradius+"px"}))),"right"==i.options.titlestyle||"left"==i.options.titlestyle?(i.$lightboxBox.css({"background-color":i.options.bgcolor}),"right"==i.options.titlestyle?(i.$elemWrap.css({position:"relative","float":"left"}),i.$elemData.css({position:"relative",overflow:"hidden",padding:i.options.bordersize+"px"})):(i.$elemWrap.css({position:"relative",overflow:"hidden"}),i.$elemData.css({position:"relative","float":"left",padding:i.options.bordersize+"px"}))):"inside"==i.options.titlestyle?(i.$elemData.css({position:"absolute",margin:i.options.bordersize+"px",bottom:0,left:0,"background-color":"#333","background-color":"rgba(51, 51, 51, 0.6)"}),i.$text.css({padding:i.options.bordersize+"px "+2*i.options.bordersize+"px"})):(i.$elemData.css({position:"relative",width:"100%",height:i.options.barautoheight?"auto":i.options.barheight+"px",padding:"0 0 "+i.options.bordersize+"px 0","background-color":i.options.bgcolor,"text-align":"left"}),i.$text.css({margin:"0 "+i.options.bordersize+"px"})),i.options.fullscreenmode?(i.$lightbox.append("<div class='html5-next-fullscreen' style='cursor:pointer;position:absolute;right:"+i.options.bordersize+"px;top:50%;margin-top:-16px;'><img src='"+i.options.skinsfolder+i.options.fullscreennextimage+"'></div><div class='html5-prev-fullscreen' style='cursor:pointer;position:absolute;left:"+i.options.bordersize+"px;top:50%;margin-top:-16px;'><img src='"+i.options.skinsfolder+i.options.fullscreenprevimage+"'></div>"),i.$next=t(".html5-next-fullscreen",i.$lightbox),i.$prev=t(".html5-prev-fullscreen",i.$lightbox),i.$lightboxBox.append("<div class='html5-next-bottom-fullscreen' style='cursor:pointer;position:absolute;top:100%;right:0;margin-top:8px;'><img src='"+i.options.skinsfolder+i.options.fullscreennextimage+"'></div><div class='html5-prev-bottom-fullscreen' style='cursor:pointer;position:absolute;top:100%;left:0;margin-top:8px;'><img src='"+i.options.skinsfolder+i.options.fullscreenprevimage+"'></div>"),i.$nextbottom=t(".html5-next-bottom-fullscreen",i.$lightbox),i.$prevbottom=t(".html5-prev-bottom-fullscreen",i.$lightbox),i.$nextbottom.click(function(){i.nextArrowClicked()}),i.$prevbottom.click(function(){i.prevArrowClicked()}),i.$lightbox.append("<div id='html5-close-fullscreen' style='display:block;cursor:pointer;position:absolute;top:0;right:0;margin-top:0;margin-right:0;'><img src='"+i.options.skinsfolder+i.options.fullscreencloseimage+"'></div>"),i.$close=t("#html5-close-fullscreen",i.$lightbox)):(i.$elemWrap.append("<div id='html5-next' style='display:none;cursor:pointer;position:absolute;right:"+i.options.bordersize+"px;top:50%;margin-top:-16px;'><img src='"+i.options.skinsfolder+i.options.nextimage+"'></div><div id='html5-prev' style='display:none;cursor:pointer;position:absolute;left:"+i.options.bordersize+"px;top:50%;margin-top:-16px;'><img src='"+i.options.skinsfolder+i.options.previmage+"'></div>"),i.$next=t("#html5-next",i.$lightbox),i.$prev=t("#html5-prev",i.$lightbox),(i.options.isTouch&&i.options.navarrowsalwaysshowontouch||i.options.alwaysshownavarrows)&&(i.$lightboxBox.append("<div class='html5-next-touch' style='display:block;cursor:pointer;position:absolute;'><img src='"+i.options.skinsfolder+i.options.nextimage+"'></div><div class='html5-prev-touch' style='display:block;cursor:pointer;position:absolute;'><img src='"+i.options.skinsfolder+i.options.previmage+"'></div>"),i.$nexttouch=t(".html5-next-touch",i.$lightbox),i.$prevtouch=t(".html5-prev-touch",i.$lightbox),i.$nexttouch.click(function(){i.nextArrowClicked()}),i.$prevtouch.click(function(){i.prevArrowClicked()})),i.$lightboxBox.append("<div id='html5-close' style='display:none;cursor:pointer;position:absolute;top:0;right:0;margin-top:-16px;margin-right:-16px;'><img src='"+i.options.skinsfolder+i.options.closeimage+"'></div>"),i.$close=t("#html5-close",i.$lightbox)),i.$watermark=t("#html5-watermark",i.$lightbox),i.options.stamp)i.$watermark.html("<a href='"+i.options.freelink+"' style='text-decoration:none;' title='jQuery Lightbox'><div style='display:block;width:170px;height:20px;text-align:center;border-radius:3px;-moz-border-radius:3px;-webkit-border-radius:3px;background-color:#fff;color:#333;font:12px Arial,sans-serif;'><div style='line-height:20px;'>"+i.options.freemark+"</div></div></a>");else if(i.options.watermark){var n="<img src='"+i.options.watermark+"' style='border:none;' />";i.options.watermarklink&&(n="<a href='"+i.options.watermarklink+"' target='_blank'>"+n+"</a>"),i.$watermark.html(n)}i.options.closeonoverlay&&t("#html5-lightbox-overlay",i.$lightbox).click(i.finish),i.$close.click(i.finish),i.$next.click(function(){i.nextArrowClicked()}),i.$prev.click(function(){i.prevArrowClicked()}),t(window).resize(function(){clearTimeout(i.options.resizeTimeout),i.options.resizeTimeout=setTimeout(function(){i.resizeWindow()},500)}),t(window).scroll(function(){i.scrollBox()}),t(window).bind("orientationchange",function(t){i.options.isMobile&&i.resizeWindow()}),i.options.isIPhone&&(i.options.windowInnerHeight=window.innerHeight,setInterval(function(){i.options.windowInnerHeight!=window.innerHeight&&(i.options.windowInnerHeight=window.innerHeight,i.resizeWindow())},500)),i.options.enabletouchswipe&&i.enableSwipe()},i.slideTimer=function(t,e,i){var o=this;o.timeout=t;var n=50,r=null,s=0,a=!1,l=!1,c=!1;return this.pause=function(){l&&(a=!0,clearInterval(r))},this.resume=function(t){c&&!t||(c=!1,l&&a&&(a=!1,r=setInterval(function(){s+=n,s>o.timeout&&(clearInterval(r),e&&e()),i&&i(s/o.timeout)},n)))},this.stop=function(){clearInterval(r),i&&i(-1),s=0,a=!1,l=!1},this.start=function(){s=0,a=!1,l=!0,r=setInterval(function(){s+=n,s>o.timeout&&(clearInterval(r),e&&e()),i&&i(s/o.timeout)},n)},this.startandpause=function(){s=0,a=!0,l=!0,c=!0},this},i.updateTimer=function(e){var o=Math.round(100*e);o>100&&(o=100),0>o&&(o=0),t("#html5-timer",i.$lightbox).css({display:"block",width:o+"%"})},i.initSlide=function(){i.autosliding=!1,i.slideTimeout=i.slideTimer(i.options.slideinterval,function(){i.gotoSlide(-1)},i.options.showtimer?function(t){i.updateTimer(t)}:null),i.options.autoslide&&(i.slideTimeout.stop(),i.autosliding=!0)},i.nextArrowClicked=function(){i.options.nextElem<=i.options.curElem&&i.options.onlastarrowclicked&&window[i.options.onlastarrowclicked]&&"function"==typeof window[i.options.onlastarrowclicked]&&window[i.options.onlastarrowclicked](),i.gotoSlide(-1)},i.prevArrowClicked=function(){i.options.prevElem>=i.options.curElem&&i.options.onfirstarrowclicked&&window[i.options.onfirstarrowclicked]&&"function"==typeof window[i.options.onfirstarrowclicked]&&window[i.options.onfirstarrowclicked](),i.gotoSlide(-2)},i.calcNextPrevElem=function(){i.options.nextElem=-1,i.options.prevElem=-1,i.options.inGroup=!1,i.options.groupIndex=0,i.options.groupCount=0;for(var t=i.elemArray[i.options.curElem][l],e=0;e<i.elemArray.length;e++)i.matchGroup(t,i.elemArray[e][l])&&(e==i.options.curElem&&(i.options.groupIndex=i.options.groupCount),i.options.groupCount++);var o,n=i.elemArray[i.options.curElem][l];if(void 0!=n&&null!=n){for(o=i.options.curElem+1;o<i.elemArray.length;o++)if(i.matchGroup(n,i.elemArray[o][l])){i.options.nextElem=o;break}if(i.options.nextElem<0)for(o=0;o<i.options.curElem;o++)if(i.matchGroup(n,i.elemArray[o][l])){i.options.nextElem=o;break}if(i.options.nextElem>=0){for(o=i.options.curElem-1;o>=0;o--)if(i.matchGroup(n,i.elemArray[o][l])){i.options.prevElem=o;break}if(i.options.prevElem<0)for(o=i.elemArray.length-1;o>i.options.curElem;o--)if(i.matchGroup(n,i.elemArray[o][l])){i.options.prevElem=o;break}}}(i.options.nextElem>=0||i.options.prevElem>=0)&&(i.options.inGroup=!0)},i.calcBoxPosition=function(e,o){var n=e+2*i.options.bordersize,r=o+2*i.options.bordersize,s=window.innerHeight?window.innerHeight:t(window).height(),a=Math.round((s-i.options.navheight)/2-r/2);"bottom"==i.options.titlestyle&&(a-=Math.round(i.options.barheight/2));var l=t(window).width()<i.options.navarrowsbottomscreenwidth?i.options.bordertopmarginsmall:i.options.bordertopmargin;if(l>a&&(a=l),window.self!=window.top&&parent.window.jQuery&&parent.window.jQuery("#"+i.options.iframeid).length){var c=parent.window.jQuery("#"+i.options.iframeid).offset().top,h=parent.window.document.body.scrollTop;a=l,a+=h>c?h-c:0}return[n,r,a]},i.hideNavArrows=function(){var t=!1,e=!1;i.options.inGroup&&((i.options.arrowloop||!i.options.arrowloop&&i.options.prevElem<i.options.curElem)&&(t=!0),(i.options.arrowloop||!i.options.arrowloop&&i.options.prevElem<i.options.curElem)&&(e=!0)),t?(i.$prev.removeClass("html5-hide"),i.$prevbottom&&i.$prevbottom.removeClass("html5-hide"),i.$prevtouch&&i.$prevtouch.removeClass("html5-hide")):(i.$prev.addClass("html5-hide"),i.$prevbottom&&i.$prevbottom.addClass("html5-hide"),i.$prevtouch&&i.$prevtouch.addClass("html5-hide")),e?(i.$next.removeClass("html5-hide"),i.$nextbottom&&i.$nextbottom.removeClass("html5-hide"),i.$nexttouch&&i.$nexttouch.removeClass("html5-hide")):(i.$next.addClass("html5-hide"),i.$nextbottom&&i.$nextbottom.addClass("html5-hide"),i.$nexttouch&&i.$nexttouch.addClass("html5-hide"))},i.clickHandler=function(){var e=t(this),o={};if(t.each(e.data(),function(t,e){o[t.toLowerCase()]=e}),i.options=t.extend(i.options,i.defaultoptions,o),i.init(),i.elemArray.length<=0)return!0;i.hideObjects();for(var n=0;n<i.elemArray.length&&i.elemArray[n][s]!=e.attr("href");n++);if(n==i.elemArray.length)return!0;i.options.curElem=n,i.calcNextPrevElem(),i.reset(),i.$lightbox.show(),i.options.supportCSSPositionFixed||i.$lightbox.css("top",t(window).scrollTop());var r=i.calcBoxPosition(i.options.loadingwidth,i.options.loadingheight),a=r[0],l=r[1],c=r[2];return i.options.iequirksmode?i.$lightboxBox.css({top:c}):i.$lightboxBox.css({"margin-top":c}),"left"==i.options.titlestyle||"right"==i.options.titlestyle?i.$lightboxBox.css({width:a,height:l}):(i.$lightboxBox.css({width:a,height:"auto"}),i.$elemWrap.css({width:a,height:l})),i.loadCurElem(),!1},i.loadThumbnail=function(e,o){var n=new Image;t(n).load(function(){var n;n=this.width/this.height<=i.options.thumbwidth/i.options.thumbheight?"width:100%;":"height:100%;",t(".html5-nav-thumb").eq(o).html("<img style='"+n+"' src='"+e+"' />")}),n.src=e},i.matchGroup=function(e,i){if(!e||!i)return!1;var o=e.split(":"),n=i.split(":"),r=!1;for(var s in o)if(t.inArray(o[s],n)>-1){r=!0;break}return r},i.showNavigation=function(){if(i.options.shownavigation&&i.currentElem&&i.currentElem[l]){var e,o=!1,n=i.currentElem[l];for(e=0;e<i.elemArray.length;e++)if(i.matchGroup(n,i.elemArray[e][l])&&i.elemArray[e][p]&&i.elemArray[e][p].length>0){o=!0;break}if(o&&(i.options.navheight=i.options.thumbheight+i.options.thumbtopmargin+i.options.thumbbottommargin,!(t(".html5-nav").length>0))){t("body").append("<div class='html5-nav' style='display:block;position:fixed;bottom:0;left:0;width:100%;height:"+i.options.navheight+"px;z-index:9999999;'><div class='html5-nav-container' style='position:relative;margin:"+i.options.thumbtopmargin+"px auto "+i.options.thumbbottommargin+"px;'><div class='html5-nav-prev' style='display:block;position:absolute;cursor:pointer;width:"+i.options.navbuttonwidth+'px;height:100%;left:0;top:0;background:url("'+i.options.skinsfolder+i.options.navarrowsprevimage+"\") no-repeat left center;'></div><div class='html5-nav-mask' style='display:block;position:relative;margin:0 auto;overflow:hidden;'><div class='html5-nav-list'></div></div><div class='html5-nav-next' style='display:block;position:absolute;cursor:pointer;width:"+i.options.navbuttonwidth+'px;height:100%;right:0;top:0;background:url("'+i.options.skinsfolder+i.options.navarrowsnextimage+"\") no-repeat right center;'></div></div></div>");var r=0;for(e=0;e<i.elemArray.length;e++)i.matchGroup(n,i.elemArray[e][l])&&i.elemArray[e][p]&&i.elemArray[e][p].length>0&&(t(".html5-nav-list").append("<div class='html5-nav-thumb' data-arrayindex='"+e+"' style='float:left;overflow:hidden;cursor:pointer;opacity:"+i.options.thumbopacity+";margin: 0 "+i.options.thumbgap/2+"px;width:"+i.options.thumbwidth+"px;height:"+i.options.thumbheight+"px;border:"+i.options.thumbborder+"px solid "+i.options.thumbbordercolor+";'></div>"),this.loadThumbnail(i.elemArray[e][p],r),r++);t(".html5-nav-thumb").hover(function(){t(this).css({opacity:1}),t(this).css({border:i.options.thumbborder+"px solid "+i.options.thumbhighlightbordercolor})},function(){t(this).css({opacity:i.options.thumbopacity}),t(this).css({border:i.options.thumbborder+"px solid "+i.options.thumbbordercolor})}),t(".html5-nav-thumb").click(function(){var e=t(this).data("arrayindex");e>=0&&i.gotoSlide(e)}),i.options.totalwidth=r*(i.options.thumbgap+i.options.thumbwidth+2*i.options.thumbborder),t(".html5-nav-list").css({display:"block",position:"relative","margin-left":0,width:i.options.totalwidth+"px"}).append("<div style='clear:both;'></div>");var s=t(".html5-nav-mask"),a=t(".html5-nav-prev"),c=t(".html5-nav-next");a.click(function(){var e=t(".html5-nav-list"),o=t(".html5-nav-next"),n=t(window).width(),r=n-2*i.options.navbuttonwidth,s=parseInt(e.css("margin-left"))+r;s>=0?(s=0,t(this).css({"background-position":"center left"})):t(this).css({"background-position":"center right"}),s<=r-i.options.totalwidth?o.css({"background-position":"center left"}):o.css({"background-position":"center right"}),e.animate({"margin-left":s})}),c.click(function(){var e=t(".html5-nav-list"),o=t(".html5-nav-prev"),n=t(window).width(),r=n-2*i.options.navbuttonwidth,s=parseInt(e.css("margin-left"))-r;s<=r-i.options.totalwidth?(s=r-i.options.totalwidth,t(this).css({"background-position":"center left"})):t(this).css({"background-position":"center right"}),s>=0?o.css({"background-position":"center left"}):o.css({"background-position":"center right"}),e.animate({"margin-left":s})});var h=t(window).width();i.options.totalwidth<=h?(s.css({width:i.options.totalwidth+"px"}),a.hide(),c.hide()):(s.css({width:h-2*i.options.navbuttonwidth+"px"}),a.show(),c.show())}}},i.loadElem=function(e){switch(i.currentElem=e,i.showing=!0,i.showNavigation(),i.$elem.unbind("mouseenter").unbind("mouseleave").unbind("mousemove"),i.$loading.show(),i.options.onshowitem&&window[i.options.onshowitem]&&"function"==typeof window[i.options.onshowitem]&&window[i.options.onshowitem](e),
e[r]){case 0:var o=new Image;t(o).load(function(){i.showImage(e,o.width,o.height)}),t(o).error(function(){i.showError()}),o.src=e[s];break;case 1:i.showSWF(e);break;case 2:case 8:i.showVideo(e);break;case 3:case 4:case 9:i.showYoutubeVimeo(e);break;case 5:i.showPDF(e);break;case 6:i.showMP3(e);break;case 7:i.showWeb(e);break;case 10:i.showDiv(e)}i.options.googleanalyticsaccount&&window._gaq&&window._gaq.push(["_trackEvent","Lightbox","Open",e[s]])},i.loadCurElem=function(){i.loadElem(i.elemArray[i.options.curElem])},i.showError=function(){i.$loading.hide(),i.resizeLightbox(i.options.errorwidth,i.options.errorheight,!0,function(){i.$error.show(),i.$elem.fadeIn(i.options.fadespeed,function(){i.showData()})})},i.calcTextWidth=function(t){return t-36},i.showTitle=function(e,o,n){"inside"==i.options.titlestyle&&i.$elemData.css({width:e+"px"});var r="";i.options.showtitle&&o&&o.length>0&&(r+=o),i.options.inGroup&&(i.options.showtitleprefix&&(r=i.options.titleprefix.replace("%NUM",i.options.groupIndex+1).replace("%TOTAL",i.options.groupCount)+" "+r),i.options.showplaybutton&&(r="<div id='html5-playpause' style='display:inline-block;cursor:pointer;vertical-align:middle;'><div id='html5-play' style='display:block;'><img src='"+i.options.skinsfolder+i.options.playimage+"'></div><div id='html5-pause' style='display:none;'><img src='"+i.options.skinsfolder+i.options.pauseimage+"'></div></div> "+r)),i.options.showdescription&&n&&n.length>0&&(r+='<p class="html5-description">'+n+"</p>"),i.$text.html(r),i.options.inGroup&&i.options.showplaybutton&&(i.autosliding?(t("#html5-play",i.$lightbox).hide(),t("#html5-pause",i.$lightbox).show()):(t("#html5-play",i.$lightbox).show(),t("#html5-pause",i.$lightbox).hide()),t("#html5-play",i.$lightbox).click(function(){t("#html5-play",i.$lightbox).hide(),t("#html5-pause",i.$lightbox).show(),i.slideTimeout&&(i.slideTimeout.stop(),i.slideTimeout.start(),i.autosliding=!0)}),t("#html5-pause",i.$lightbox).click(function(){t("#html5-play",i.$lightbox).show(),t("#html5-pause",i.$lightbox).hide(),i.slideTimeout&&(i.slideTimeout.stop(),i.autosliding=!1)}))},i.showImage=function(t,e,o){var n,r;t[c]?n=t[c]:(n=e,t[c]=e),t[h]?r=t[h]:(r=o,t[h]=o);var l=i.calcElemSize({w:n,h:r},!0);i.resizeLightbox(l.w,l.h,!0,function(){i.showTitle(l.w,t[a],t[m]);var e=i.options.showtimer&&i.options.inGroup?"<div id='html5-timer' style='display:none;position:absolute;"+i.options.timerposition+":0;left:0;width:0;height:"+i.options.timerheight+"px;background-color:"+i.options.timercolor+";opacity:"+i.options.timeropacity+";'></div>":"";i.$image.show(),i.$image.html("<div id='html5-image-container' style='display:block;position:relative;width:100%;height:100%;'><img src='"+t[s]+"' width='100%' height='100%' />"+e+"</div>"),i.$elem.fadeIn(i.options.fadespeed,function(){i.showData()}),i.autosliding&&(i.slideTimeout.stop(),i.slideTimeout.start())})},i.showSWF=function(e){var r=e[c]?e[c]:o,l=e[h]?e[h]:n,u=i.calcElemSize({w:r,h:l},!0);r=u.w,l=u.h,i.resizeLightbox(r,l,!0,function(){i.showTitle(u.w,e[a],e[m]),i.$image.html("<div id='html5lightbox-swf' style='display:block;width:100%;height:100%;'></div>").show(),i.embedFlash(t("#html5lightbox-swf"),e[s],"window",{width:r,height:l}),i.$elem.show(),i.showData(),i.autosliding&&(i.slideTimeout.stop(),i.slideTimeout.start())})},i.showVideo=function(e){i.slideTimeout.stop();var l=e[c]?e[c]:o,p=e[h]?e[h]:n,f=i.calcElemSize({w:l,h:p},!0);l=f.w,p=f.h,i.resizeLightbox(l,p,!0,function(){i.showTitle(f.w,e[a],e[m]),i.$image.html("<div id='html5lightbox-video' style='display:block;width:100%;height:100%;background-color:"+i.options.videobgcolor+";'></div>").show();var o=!1;if(i.options.isIE678||8==e[r]||i.options.isIE9&&i.options.useflashonie9||i.options.isIE10&&i.options.useflashonie10||i.options.isIE11&&i.options.useflashonie11?o=!1:i.options.isMobile?o=!0:!i.options.html5player&&i.options.flashInstalled||!i.options.html5VideoSupported||(!i.options.isFirefox&&!i.options.isOpera||(i.options.isFirefox||i.options.isOpera)&&(e[d]||e[u]))&&(o=!0),o){var n=e[s];(i.options.isFirefox||i.options.isOpera||!n)&&(n=e[u]?e[u]:e[d]),i.embedHTML5Video(t("#html5lightbox-video"),n,i.options.autoplay)}else{var c=e[s];"/"!=c.charAt(0)&&"http:"!=c.substring(0,5)&&"https:"!=c.substring(0,6)&&(c=i.options.htmlfolder+c),i.embedFlash(t("#html5lightbox-video"),i.options.jsfolder+"html5boxplayer.swf","transparent",{width:l,height:p,jsobjectname:"html5Lightbox",hidecontrols:i.options.videohidecontrols?"1":"0",hideplaybutton:"0",videofile:c,hdfile:"",ishd:"0",defaultvolume:i.options.defaultvideovolume,autoplay:i.options.autoplay?"1":"0",errorcss:".html5box-error"+i.options.errorcss,id:0})}i.$elem.show(),i.showData()})},i.loadNext=function(){t(window).trigger("html5lightbox.videofinished"),i.autosliding&&i.gotoSlide(-1)},i.getYoutubeParams=function(t){var e={};if(t.indexOf("?")<0)return e;for(var i=t.substring(t.indexOf("?")+1).split("&"),o=0;o<i.length;o++){var n=i[o].split("=");n&&2==n.length&&"v"!=n[0].toLowerCase()&&(e[n[0].toLowerCase()]=n[1])}return e},i.prepareYoutubeHref=function(t){var e="",i=/^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\??v?=?))([^#\&\?]*).*/,o=t.match(i);o&&o[7]&&11==o[7].length&&(e=o[7]);var n="https:"==window.location.protocol?"https:":"http:",r=n+"//www.youtube.com/embed/"+e,s=this.getYoutubeParams(t),a=!0;for(var l in s)a?(r+="?",a=!1):r+="&",r+=l+"="+s[l];return r},i.prepareDailymotionHref=function(t){if(t.match(/\:\/\/.*(dai\.ly)/i)){var e="https:"==window.location.protocol?"https:":"http:",i=t.match(/(dai\.ly\/)([a-zA-Z0-9\-\_]+)/)[2];t=e+"//www.dailymotion.com/embed/video/"+i}return t},i.showYoutubeVimeo=function(e){i.slideTimeout.stop();var l=e[c]?e[c]:o,u=e[h]?e[h]:n,d=i.calcElemSize({w:l,h:u},!0);l=d.w,u=d.h,i.resizeLightbox(l,u,!0,function(){i.showTitle(d.w,e[a],e[m]),i.$image.html("<div id='html5lightbox-video' style='display:block;width:100%;height:100%;'></div>").show();var o=e[s];if(3==e[r]&&(o=i.prepareYoutubeHref(o)),9==e[r]&&(o=i.prepareDailymotionHref(o)),i.options.autoplay&&(o+=o.indexOf("?")<0?"?autoplay=1":"&autoplay=1"),3==e[r]?(o+=o.indexOf("?")<0?"?wmode=transparent&rel=0":"&wmode=transparent&rel=0",i.options.videohidecontrols&&(o+="&controls=0&showinfo=0"),o+="&enablejsapi=1&origin="+document.location.protocol+"//"+document.location.hostname):4==e[r]&&(o+=o.indexOf("?")<0?"?":"&",o+="api=1&player_id=html5boxiframevideo"),t("#html5lightbox-video").html("<iframe id='html5boxiframevideo' width='100%' height='100%' src='"+o+"' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>"),i.$elem.show(),i.showData(),3==e[r]&&"object"==typeof YT&&"function"==typeof YT.Player)new YT.Player("html5boxiframevideo",{events:{onStateChange:function(e){e.data==YT.PlayerState.ENDED&&(t(window).trigger("html5lightbox.videofinished"),i.autosliding&&i.gotoSlide(-1))}}});else if(4==e[r]&&"function"==typeof $f){var n=t("#html5boxiframevideo")[0],l=$f(n);l.addEvent("ready",function(){l.addEvent("finish",function(e){t(window).trigger("html5lightbox.videofinished"),i.autosliding&&i.gotoSlide(-1)})})}})},i.showPDF=function(t){},i.showMP3=function(t){},i.showDiv=function(e){var o=t(window).width(),n=window.innerHeight?window.innerHeight:t(window).height(),r=e[c]?e[c]:o,l=e[h]?e[h]:n-i.options.navheight,u=i.calcElemSize({w:r,h:l},!1);r=u.w,l=u.h,i.resizeLightbox(r,l,!0,function(){i.$loading.hide(),i.showTitle(u.w,e[a],e[m]),i.$image.html("<div id='html5lightbox-div' style='display:block;width:100%;height:100%;"+(i.options.isIOS?"-webkit-overflow-scrolling:touch;overflow-y:scroll;":"overflow:auto;")+"'></div>").show();var o=e[s];t(o).length>0?t("#html5lightbox-div").html(t(o).html()):t("#html5lightbox-div").html("<div class='html5-error'>The specified div ID does not exist.</div>"),i.$elem.show(),i.showData(),i.autosliding&&(i.slideTimeout.stop(),i.slideTimeout.start())})},i.showWeb=function(e){var o=t(window).width(),n=window.innerHeight?window.innerHeight:t(window).height(),r=e[c]?e[c]:o,l=e[h]?e[h]:n-i.options.navheight,u=i.calcElemSize({w:r,h:l},!1);r=u.w,l=u.h,i.resizeLightbox(r,l,!0,function(){i.$loading.hide(),i.showTitle(u.w,e[a],e[m]),i.$image.html("<div id='html5lightbox-web' style='display:block;width:100%;height:100%;"+(i.options.isIOS?"-webkit-overflow-scrolling:touch;overflow-y:scroll;":"")+"'></div>").show(),t("#html5lightbox-web").html("<iframe id='html5lightbox-web-iframe' width='100%' height='100%' src='"+e[s]+"' frameborder='0'></iframe>"),i.$elem.show(),i.showData(),i.autosliding&&(i.slideTimeout.stop(),i.slideTimeout.start())})},i.scrollBox=function(){i.options.supportCSSPositionFixed||i.$lightbox.css("top",t(window).scrollTop())},i.resizeWindow=function(){if(i.currentElem&&i.options.responsive){var e,s,a,l=t(window).width(),u=window.innerHeight?window.innerHeight:t(window).height();7==i.currentElem[r]||10==i.currentElem[r]?(e=i.currentElem[c]?i.currentElem[c]:l,s=i.currentElem[h]?i.currentElem[h]:u-i.options.navheight,a=!1):(e=i.currentElem[c]?i.currentElem[c]:o,s=i.currentElem[h]?i.currentElem[h]:n,a=!0);var d=i.calcElemSize({w:e,h:s},a),p=i.calcBoxPosition(d.w,d.h),m=p[0],f=p[1],g=p[2];if(i.$lightboxBox.css({"margin-top":g}),"left"==i.options.titlestyle||"right"==i.options.titlestyle?i.$lightboxBox.css({width:m,height:f}):(i.$lightboxBox.css({width:m,height:"auto"}),i.$elemWrap.css({width:m,height:f})),"inside"==i.options.titlestyle&&i.$elemData.css({width:d.w+"px"}),!(t(".html5-nav").length<=0)){t(".html5-nav-list").css({"margin-left":0});var v=t(".html5-nav-mask"),b=t(".html5-nav-prev"),w=t(".html5-nav-next"),l=t(window).width();i.options.totalwidth<=l?(v.css({width:i.options.totalwidth+"px"}),b.hide(),w.hide()):(v.css({width:l-2*i.options.navbuttonwidth+"px"}),b.show(),w.show())}}},i.calcElemSize=function(e,o){if(!i.options.responsive)return e;var n=t(window).width();n=n?n:t(document).width();var r=window.innerHeight?window.innerHeight:t(window).height();r=r?r:t(document).height(),("left"==i.options.titlestyle||"right"==i.options.titlestyle)&&n>i.options.sidetobottomscreenwidth&&(e.w=100*e.w/i.options.imagepercentage);var s=t(window).width()<i.options.navarrowsbottomscreenwidth?i.options.bordertopmarginsmall:i.options.bordertopmargin,a=r-i.options.navheight-2*i.options.bordersize-2*s;"bottom"==i.options.titlestyle&&(a-=i.options.barheight),("left"==i.options.titlestyle||"right"==i.options.titlestyle)&&n<=i.options.sidetobottomscreenwidth&&(o=!1),e.h>a&&(o&&(e.w=Math.round(e.w*a/e.h)),e.h=a);var l=n-2*i.options.bordersize-2*i.options.bordermargin;return(i.options.fullscreenmode&&n>i.options.navarrowsbottomscreenwidth||(i.options.isTouch&&i.options.navarrowsalwaysshowontouch||i.options.alwaysshownavarrows)&&n>i.options.navarrowsbottomscreenwidth)&&(l-=64),e.w>l&&(o&&(e.h=Math.round(e.h*l/e.w)),e.w=l),e},i.showData=function(){i.$text.text().length>0&&i.$elemData.show(),"bottom"!=i.options.titlestyle&&"inside"!=i.options.titlestyle||i.$lightboxBox.css({height:"auto"}),i.$text.text().length>0&&"bottom"==i.options.titlestyle&&i.$elemData.css({"max-height":i.options.barheight+"px"}),t("#html5-lightbox-overlay",i.$lightbox).css({height:Math.max(t(window).height(),t(document).height())}),t(window).trigger("html5lightbox.lightboxopened")},i.resizeLightbox=function(t,e,o,n){i.hideNavArrows();var r=i.calcBoxPosition(t,e),s=r[0],a=r[1],l=r[2];if(i.$loading.hide(),i.$watermark.hide(),i.options.nextElem<=i.options.curElem&&i.options.onlastitem&&window[i.options.onlastitem]&&"function"==typeof window[i.options.onlastitem]&&window[i.options.onlastitem](i.currentElem),i.options.prevElem>=i.options.curElem&&i.options.onfirstitem&&window[i.options.onfirstitem]&&"function"==typeof window[i.options.onfirstitem]&&window[i.options.onfirstitem](i.currentElem),i.options.fullscreenmode||i.options.isTouch&&i.options.navarrowsalwaysshowontouch||i.options.alwaysshownavarrows||(i.$elem.bind("mouseenter mousemove",function(){(i.options.arrowloop&&i.options.prevElem>=0||!i.options.arrowloop&&i.options.prevElem>=0&&i.options.prevElem<i.options.curElem)&&i.$prev.fadeIn(),(i.options.arrowloop&&i.options.nextElem>=0||!i.options.arrowloop&&i.options.nextElem>=0&&i.options.nextElem>i.options.curElem)&&i.$next.fadeIn()}),i.$elem.bind("mouseleave",function(){i.$next.fadeOut(),i.$prev.fadeOut()})),i.$lightboxBox.css({"margin-top":l}),"left"==i.options.titlestyle||"right"==i.options.titlestyle){var c=o?i.options.resizespeed:0;s==i.$lightboxBox.width()&&a==i.$lightboxBox.height()&&(c=0),i.$lightboxBox.animate({width:s},c).animate({height:a},c,function(){i.onAnimateFinish(n)})}else{var c=o?i.options.resizespeed:0;s==i.$elemWrap.width()&&a==i.$elemWrap.height()&&(c=0),i.$lightboxBox.css({width:s,height:"auto"}),i.$elemWrap.animate({width:s},c).animate({height:a},c,function(){i.onAnimateFinish(n)})}},i.onAnimateFinish=function(t){i.$loading.show(),i.$watermark.show(),i.$close.show(),i.$elem.css({"background-color":i.options.bgcolor}),t()},i.reset=function(){i.options.stamp&&i.$watermark.hide(),i.showing=!1,i.$image.empty(),i.$text.empty(),i.$error.hide(),i.$loading.hide(),i.$image.hide(),"bottom"!=i.options.titlestyle&&"inside"!=i.options.titlestyle||i.$elemData.hide(),i.options.fullscreenmode||i.$close.hide(),i.$elem.css({"background-color":""})},i.resetNavigation=function(){i.options.navheight=0,t(".html5-nav").remove()},i.finish=function(){t("#html5-lightbox-video",i.$lightbox).length&&t("#html5-lightbox-video",i.$lightbox).attr("src",""),t("head").find("style").each(function(){"carousel-html5-lightbox"==t(this).data("creator")&&t(this).remove()}),i.slideTimeout.stop(),i.reset(),i.resetNavigation(),i.$lightbox.remove(),i.showObjects(),i.options.oncloselightbox&&window[i.options.oncloselightbox]&&"function"==typeof window[i.options.oncloselightbox]&&window[i.options.oncloselightbox](i.currentElem),i.onLightboxClosed&&"function"==typeof i.onLightboxClosed&&i.onLightboxClosed(i.currentElem)},i.pauseSlide=function(){},i.playSlide=function(){},i.gotoSlide=function(t){if(-1==t){if(i.options.nextElem<0)return;i.options.curElem=i.options.nextElem}else if(-2==t){if(i.options.prevElem<0)return;i.options.curElem=i.options.prevElem}else t>=0&&(i.options.curElem=t);i.autosliding&&i.slideTimeout.stop(),i.calcNextPrevElem(),i.reset(),i.loadCurElem()},i.supportKeyboard=function(){t(document).keyup(function(t){i.showing&&(i.options.supportesckey&&27==t.keyCode?i.finish():i.options.supportarrowkeys&&(39==t.keyCode?i.gotoSlide(-1):37==t.keyCode&&i.gotoSlide(-2)))})},i.enableSwipe=function(){i.$elem.carouselTouchSwipe({preventWebBrowser:!1,swipeLeft:function(){i.gotoSlide(-1)},swipeRight:function(){i.gotoSlide(-2)}})},i.hideObjects=function(){t("select, embed, object").css({visibility:"hidden"})},i.showObjects=function(){t("select, embed, object").css({visibility:"visible"})},i.embedHTML5Video=function(e,o,n){e.html("<div style='display:block;width:100%;height:100%;position:relative;'><video id='html5-lightbox-video' width='100%' height='100%'"+(n?" autoplay":"")+(i.options.nativehtml5controls&&!i.options.videohidecontrols?" controls='controls'":"")+" src='"+o+"'></div>"),i.options.nativehtml5controls||(t("video",e).data("src",o),t("video",e).acHTML5VideoControls(i.options.skinsfolder,i,i.options.videohidecontrols,!1,i.options.defaultvideovolume)),t("video",e).unbind("ended").bind("ended",function(){t(window).trigger("html5lightbox.videofinished"),i.autosliding&&i.gotoSlide(-1)})},i.embedFlash=function(e,o,n,r){if(i.options.flashInstalled){var s={pluginspage:"http://www.adobe.com/go/getflashplayer",quality:"high",allowFullScreen:"true",allowScriptAccess:"always",type:"application/x-shockwave-flash"};s.width="100%",s.height="100%",s.src=o,s.flashVars=t.param(r),s.wmode=n;var a="";for(var l in s)a+=l+"="+s[l]+" ";e.html("<embed "+a+"/>")}else e.html("<div class='html5lightbox-flash-error' style='display:block; position:relative;text-align:center; width:100%; left:0px; top:40%;'><div class='html5-error'><div>The required Adobe Flash Player plugin is not installed</div><br /><div style='display:block;position:relative;text-align:center;width:112px;height:33px;margin:0px auto;'><a href='http://www.adobe.com/go/getflashplayer'><img src='http://www.adobe.com/images/shared/download_buttons/get_flash_player.gif' alt='Get Adobe Flash player' width='112' height='33'></img></a></div></div>")},i.checkType=function(t){return t?t.match(/\.(jpg|gif|png|bmp|jpeg)(.*)?$/i)?0:t.match(/[^\.]\.(swf)\s*$/i)?1:t.match(/\.(mp4|m4v|ogv|ogg|webm)(.*)?$/i)?2:t.match(/\:\/\/.*(youtube\.com)/i)||t.match(/\:\/\/.*(youtu\.be)/i)?3:t.match(/\:\/\/.*(vimeo\.com)/i)?4:t.match(/\:\/\/.*(dailymotion\.com)/i)||t.match(/\:\/\/.*(dai\.ly)/i)?9:t.match(/[^\.]\.(pdf)\s*$/i)?5:t.match(/[^\.]\.(mp3)\s*$/i)?6:t.match(/[^\.]\.(flv)\s*$/i)?8:t.match(/\#\w+/i)?10:7:-1},i.showLightbox=function(e,o,n,r,s,a,l,c,h){i.options=t.extend(i.options,i.defaultoptions),i.init(),i.reset(),i.$lightbox.show(),i.options.supportCSSPositionFixed||i.$lightbox.css("top",t(window).scrollTop());var u=i.calcBoxPosition(i.options.loadingwidth,i.options.loadingheight),d=u[0],p=u[1],m=u[2];i.$lightboxBox.css({"margin-top":m}),"left"==i.options.titlestyle||"right"==i.options.titlestyle?i.$lightboxBox.css({width:d,height:p}):(i.$lightboxBox.css({width:d,height:"auto"}),i.$elemWrap.css({width:d,height:p})),i.loadElem(new Array(e,o,n,null,r,s,a,l,c,h))},i.addItem=function(t,e,o,n,r,s,a,l,c){type=i.checkType(t),i.elemArray.push(new Array(type,t,e,o,n,r,s,a,l,c))},i.showItem=function(e){if(i.options=t.extend(i.options,i.defaultoptions),i.init(),i.elemArray.length<=0)return!0;i.hideObjects();for(var o=0;o<i.elemArray.length&&i.elemArray[o][s]!=e;o++);if(o==i.elemArray.length)return!0;i.options.curElem=o,i.calcNextPrevElem(),i.reset(),i.$lightbox.show(),i.options.supportCSSPositionFixed||i.$lightbox.css("top",t(window).scrollTop());var n=i.calcBoxPosition(i.options.loadingwidth,i.options.loadingheight),r=n[0],a=n[1],l=n[2];return i.$lightboxBox.css({"margin-top":l}),"left"==i.options.titlestyle||"right"==i.options.titlestyle?i.$lightboxBox.css({width:r,height:a}):(i.$lightboxBox.css({width:r,height:"auto"}),i.$elemWrap.css({width:r,height:a})),i.loadCurElem(),!1},i.unbind("click").click(i.clickHandler)}}(jQuery),function(t){t.fn.acHTML5VideoControls=function(e,i,o,n,r){var s="ontouchstart"in window,a=s?"touchstart":"mousedown",l=s?"touchmove":"mousemove",c=s?"touchcancel":"mouseup",h="click",u=32,d=s?48:36,p=null,m=null,f=!1,g=!1,v=!0,b=null!=navigator.userAgent.match(/iPod/i)||null!=navigator.userAgent.match(/iPhone/i),w=t(this).data("ishd"),y=t(this).data("hd"),x=t(this).data("src"),k=t(this);if(k.get(0).removeAttribute("controls"),b){var T=k.height()-d;k.css({height:T})}var E=t("<div class='html5boxVideoPlay'></div>");b||(k.after(E),E.css({position:"absolute",top:"50%",left:"50%",display:"block",cursor:"pointer",width:64,height:64,"margin-left":-32,"margin-top":-32,"background-image":"url('"+e+"img/html5boxplayer_playvideo.png')","background-position":"center center","background-repeat":"no-repeat"}).bind(h,function(){k.get(0).play()}));var C=t("<div class='html5boxVideoFullscreenBg'></div>"),S=t("<div class='html5boxVideoControls'><div class='html5boxVideoControlsBg'></div><div class='html5boxPlayPause'><div class='html5boxPlay'></div><div class='html5boxPause'></div></div><div class='html5boxTimeCurrent'>--:--</div><div class='html5boxFullscreen'></div><div class='html5boxHD'></div><div class='html5boxVolume'><div class='html5boxVolumeButton'></div><div class='html5boxVolumeBar'><div class='html5boxVolumeBarBg'><div class='html5boxVolumeBarActive'></div></div></div></div><div class='html5boxTimeTotal'>--:--</div><div class='html5boxSeeker'><div class='html5boxSeekerBuffer'></div><div class='html5boxSeekerPlay'></div><div class='html5boxSeekerHandler'></div></div><div style='clear:both;'></div></div>");k.after(S),k.after(C),C.css({display:"none",position:"fixed",left:0,top:0,bottom:0,right:0,"z-index":2147483647}),S.css({display:"block",position:"absolute",width:"100%",height:d,left:0,bottom:0,right:0,"max-width":"640px",margin:"0 auto"});var A=function(){v=!0};k.bind(h,function(){v=!0}).hover(function(){v=!0},function(){v=!1}),o||setInterval(function(){v&&(S.show(),v=!1,clearTimeout(p),p=setTimeout(function(){k.get(0).paused||S.fadeOut()},5e3))},250),t(".html5boxVideoControlsBg",S).css({display:"block",position:"absolute",width:"100%",height:"100%",left:0,top:0,"background-color":"#000000",opacity:.7,filter:"alpha(opacity=70)"}),t(".html5boxPlayPause",S).css({display:"block",position:"relative",width:u+"px",height:u+"px",margin:Math.floor((d-u)/2),"float":"left"});var I=t(".html5boxPlay",S),z=t(".html5boxPause",S);I.css({display:"block",position:"absolute",top:0,left:0,width:u+"px",height:u+"px",cursor:"pointer","background-image":"url('"+e+"img/html5boxplayer_playpause.png')","background-position":"top left"}).hover(function(){t(this).css({"background-position":"bottom left"})},function(){t(this).css({"background-position":"top left"})}).bind(h,function(){k.get(0).play()}),z.css({display:"none",position:"absolute",top:0,left:0,width:u+"px",height:u+"px",cursor:"pointer","background-image":"url('"+e+"img/html5boxplayer_playpause.png')","background-position":"top right"}).hover(function(){t(this).css({"background-position":"bottom right"})},function(){t(this).css({"background-position":"top right"})}).bind(h,function(){k.get(0).pause()});var N=t(".html5boxTimeCurrent",S),$=t(".html5boxTimeTotal",S),j=t(".html5boxSeeker",S),L=t(".html5boxSeekerPlay",S),D=t(".html5boxSeekerBuffer",S),O=t(".html5boxSeekerHandler",S);if(N.css({display:"block",position:"relative","float":"left","line-height":d+"px","font-weight":"normal","font-size":"12px",margin:"0 8px","font-family":"Arial, Helvetica, sans-serif",color:"#fff"}),$.css({display:"block",position:"relative","float":"right","line-height":d+"px","font-weight":"normal","font-size":"12px",margin:"0 8px","font-family":"Arial, Helvetica, sans-serif",color:"#fff"}),j.css({display:"block",cursor:"pointer",overflow:"hidden",position:"relative",height:"10px","background-color":"#222",margin:Math.floor((d-10)/2)+"px 4px"}).bind(a,function(t){var e=s?t.originalEvent.touches[0]:t,i=e.pageX-j.offset().left;L.css({width:i}),k.get(0).currentTime=i*k.get(0).duration/j.width(),j.bind(l,function(t){var e=s?t.originalEvent.touches[0]:t,i=e.pageX-j.offset().left;L.css({width:i}),k.get(0).currentTime=i*k.get(0).duration/j.width()})}).bind(c,function(){j.unbind(l)}),D.css({display:"block",position:"absolute",left:0,top:0,height:"100%","background-color":"#444"}),L.css({display:"block",position:"absolute",left:0,top:0,height:"100%","background-color":"#fcc500"}),!b&&(k.get(0).requestFullscreen||k.get(0).webkitRequestFullScreen||k.get(0).mozRequestFullScreen||k.get(0).webkitEnterFullScreen||k.get(0).msRequestFullscreen)){var M=function(t){t?(k.get(0).requestFullscreen?k.get(0).requestFullscreen():k.get(0).webkitRequestFullScreen?k.get(0).webkitRequestFullScreen():k.get(0).mozRequestFullScreen?k.get(0).mozRequestFullScreen():k.get(0).webkitEnterFullScreen&&k.get(0).webkitEnterFullScreen(),k.get(0).msRequestFullscreen&&k.get(0).msRequestFullscreen()):document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen?document.webkitCancelFullScreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.msExitFullscreen&&document.msExitFullscreen()},_=function(e){S.css({position:e?"fixed":"absolute"});var i=P.css("background-position")?P.css("background-position").split(" ")[1]:P.css("background-position-y");P.css({"background-position":(e?"right":"left")+" "+i}),C.css({display:e?"block":"none"}),e?(t(document).bind("mousemove",A),S.css({"z-index":2147483647})):(t(document).unbind("mousemove",A),S.css({"z-index":""}))};document.addEventListener("fullscreenchange",function(){g=document.fullscreen,_(document.fullscreen)},!1),document.addEventListener("mozfullscreenchange",function(){g=document.mozFullScreen,_(document.mozFullScreen)},!1),document.addEventListener("webkitfullscreenchange",function(){g=document.webkitIsFullScreen,_(document.webkitIsFullScreen)},!1),k.get(0).addEventListener("webkitbeginfullscreen",function(){g=!0},!1),k.get(0).addEventListener("webkitendfullscreen",function(){g=!1},!1),t("head").append("<style type='text/css'>video::-webkit-media-controls { display:none !important; }</style>");var P=t(".html5boxFullscreen",S);P.css({display:"block",position:"relative","float":"right",width:u+"px",height:u+"px",margin:Math.floor((d-u)/2),cursor:"pointer","background-image":"url('"+e+"img/html5boxplayer_fullscreen.png')","background-position":"left top"}).hover(function(){var e=t(this).css("background-position")?t(this).css("background-position").split(" ")[0]:t(this).css("background-position-x");t(this).css({"background-position":e+" bottom"})},function(){var e=t(this).css("background-position")?t(this).css("background-position").split(" ")[0]:t(this).css("background-position-x");t(this).css({"background-position":e+" top"})}).bind(h,function(){g=!g,M(g)})}if(y){var H=t(".html5boxHD",S);H.css({display:"block",position:"relative","float":"right",width:u+"px",height:u+"px",margin:Math.floor((d-u)/2),cursor:"pointer","background-image":"url('"+e+"img/html5boxplayer_hd.png')","background-position":(w?"right":"left")+" center"}).bind(h,function(){w=!w,t(this).css({"background-position":(w?"right":"left")+" center"}),i.isHd=w;var e=k.get(0).isPaused;k.get(0).setAttribute("src",(w?y:x)+"#t="+k.get(0).currentTime),e?b||k.get(0).pause():k.get(0).play()})}k.get(0).volume=r;var F=0==r?1:r,B=k.get(0).volume;if(k.get(0).volume=B/2+.1,k.get(0).volume===B/2+.1){k.get(0).volume=B;var q=t(".html5boxVolume",S),R=t(".html5boxVolumeButton",S),W=t(".html5boxVolumeBar",S),V=t(".html5boxVolumeBarBg",S),Q=t(".html5boxVolumeBarActive",S);q.css({display:"block",position:"relative","float":"right",width:u+"px",height:u+"px",margin:Math.floor((d-u)/2)}).hover(function(){clearTimeout(m);var t=k.get(0).volume;Q.css({height:Math.round(100*t)+"%"}),W.show()},function(){clearTimeout(m),m=setTimeout(function(){W.hide()},1e3)}),R.css({display:"block",position:"absolute",top:0,left:0,width:u+"px",height:u+"px",cursor:"pointer","background-image":"url('"+e+"html5boxplayer_volume.png')","background-position":"top "+(B>0?"left":"right")}).hover(function(){var e=t(this).css("background-position")?t(this).css("background-position").split(" ")[0]:t(this).css("background-position-x");t(this).css({"background-position":e+" bottom"})},function(){var e=t(this).css("background-position")?t(this).css("background-position").split(" ")[0]:t(this).css("background-position-x");t(this).css({"background-position":e+" top"})}).bind(h,function(){var e=k.get(0).volume;e>0?(F=e,e=0):e=F;var i=t(this).css("background-position")?t(this).css("background-position").split(" ")[1]:t(this).css("background-position-y");R.css({"background-position":(e>0?"left":"right")+" "+i}),k.get(0).volume=e,Q.css({height:Math.round(100*e)+"%"})}),W.css({display:"none",position:"absolute",left:4,bottom:"100%",width:24,height:80,"margin-bottom":Math.floor((d-u)/2),"background-color":"#000000",opacity:.7,filter:"alpha(opacity=70)"}),V.css({display:"block",position:"relative",width:10,height:68,margin:7,cursor:"pointer","background-color":"#222"}),Q.css({display:"block",position:"absolute",bottom:0,left:0,width:"100%",height:"100%","background-color":"#fcc500"}),V.bind(a,function(t){var e=s?t.originalEvent.touches[0]:t,i=1-(e.pageY-V.offset().top)/V.height();i=i>1?1:0>i?0:i,Q.css({height:Math.round(100*i)+"%"}),R.css({"background-position":"left "+(i>0?"top":"bottom")}),k.get(0).volume=i,V.bind(l,function(t){var e=s?t.originalEvent.touches[0]:t,i=1-(e.pageY-V.offset().top)/V.height();i=i>1?1:0>i?0:i,Q.css({height:Math.round(100*i)+"%"}),R.css({"background-position":"left "+(i>0?"top":"bottom")}),k.get(0).volume=i})}).bind(c,function(){V.unbind(l)})}var X=function(t){var e=Math.floor(t/3600),i=10>e?"0"+e:e,o=Math.floor((t-3600*e)/60),n=10>o?"0"+o:o,r=Math.floor(t-(3600*e+60*o)),s=10>r?"0"+r:r,a=n+":"+s;return e>0&&(a=i+":"+a),a};n&&E.hide(),o&&S.hide();var Y=function(){n||E.hide(),o||(I.hide(),z.show())},G=function(){n||E.show(),o||(S.show(),clearTimeout(p),I.show(),z.hide())},U=function(){t(window).trigger("html5lightbox.videoended"),n||E.show(),o||(S.show(),clearTimeout(p),I.show(),z.hide())},J=function(){var t=k.get(0).currentTime;if(t){N.text(X(t));var e=k.get(0).duration;if(e&&($.text(X(e)),!f)){var i=j.width(),o=Math.round(i*t/e);L.css({width:o}),O.css({left:o})}}},K=function(){if(k.get(0).buffered&&k.get(0).buffered.length>0&&!isNaN(k.get(0).buffered.end(0))&&!isNaN(k.get(0).duration)){var t=j.width();D.css({width:Math.round(t*k.get(0).buffered.end(0)/k.get(0).duration)})}};try{k.bind("play",Y),k.bind("pause",G),k.bind("ended",U),k.bind("timeupdate",J),k.bind("progress",K)}catch(Z){}}}(jQuery);var ACPlatforms={flashInstalled:function(){var t=!1;try{new ActiveXObject("ShockwaveFlash.ShockwaveFlash")&&(t=!0)}catch(e){navigator.mimeTypes["application/x-shockwave-flash"]&&(t=!0)}return t},html5VideoSupported:function(){return!!document.createElement("video").canPlayType},isChrome:function(){return null!=navigator.userAgent.match(/Chrome/i)},isFirefox:function(){return null!=navigator.userAgent.match(/Firefox/i)},isOpera:function(){return null!=navigator.userAgent.match(/Opera/i)||null!=navigator.userAgent.match(/OPR\//i)},isSafari:function(){return null!=navigator.userAgent.match(/Safari/i)},isAndroid:function(){return null!=navigator.userAgent.match(/Android/i)},isIPad:function(){return null!=navigator.userAgent.match(/iPad/i)},isIPhone:function(){return null!=navigator.userAgent.match(/iPod/i)||null!=navigator.userAgent.match(/iPhone/i)},isIOS:function(){return this.isIPad()||this.isIPhone()},isIE9:function(){return null!=navigator.userAgent.match(/MSIE/i)&&this.html5VideoSupported()&&!this.isOpera()},isIE8:function(){return null!=navigator.userAgent.match(/MSIE 8/i)&&!this.isOpera()},isIE7:function(){return null!=navigator.userAgent.match(/MSIE 7/i)&&!this.isOpera()},isIE6:function(){return null!=navigator.userAgent.match(/MSIE 6/i)&&!this.isOpera()},isIE678:function(){return this.isIE6()||this.isIE7()||this.isIE8()},isIE6789:function(){return this.isIE6()||this.isIE7()||this.isIE8()||this.isIE9()},css33dTransformSupported:function(){return!(this.isIE6()||this.isIE7()||this.isIE8()||this.isIE9()||this.isOpera())},applyBrowserStyles:function(t,e){var i={};for(var o in t)i[o]=t[o],i["-webkit-"+o]=e?"-webkit-"+t[o]:t[o],i["-moz-"+o]=e?"-moz-"+t[o]:t[o],i["-ms-"+o]=e?"-ms-"+t[o]:t[o],i["-o-"+o]=e?"-o-"+t[o]:t[o];return i}};if(function(t){t.fn.amazingcarousel=function(e){var i=5,o=6,n=7,r=8,s=9,a=10,l=function(e,i,o){this.container=e,this.options=i,this.id=o,this.transitionTimeout=null,this.arrowTimeout=null,t(".amazingcarousel-engine").css({display:"none"}),this.lightboxArray=[],this.visibleItems=this.options.visibleitems,this.itemSize=this.options.width,this.itemHeight=this.options.height,this.currentItem=0,this.elemLength=0,this.elemTotalCount=0,this.animProp={},this.transitionTimerId=null,this.transitionTiming=0,this.initData(this.init)};l.prototype={initData:function(t){this.readTags(),t(this)},readTags:function(){var e=t("li.amazingcarousel-item",this.container);this.elemLength=e.length,this.elemTotalCount=this.elemLength;var i;if(this.options.random){for(i=this.elemLength-1;i>0;i--){var o=Math.floor(Math.random()*i);e.eq(o).insertBefore(e.eq(i)),e.eq(i).insertBefore(e.eq(o))}e=t("li.amazingcarousel-item",this.container)}if(e.each(function(e){t(this).data("itemIndex",e)}),this.elemLength>1&&this.options.circular){var n=Math.min(2*this.options.visibleitems,this.elemLength);for(i=0;n>i;i++)t("ul.amazingcarousel-list",this.container).append(e.eq(i).clone(!0));this.elemTotalCount+=n}t("ul.amazingcarousel-list",this.container).append("<div style='clear:both;'></div>")},init:function(e){if(!(e.elemLength<=0)){
e.container.css({direction:"ltr"}),e.options.showcontaineroninit&&e.container.css({display:"block"}),e.isAnimating=!1,e.isPaused=!e.options.autoplay,e.tempPaused=!1,e.mousePaused=!1,e.loopCount=0,e.firstResize=!1,e.createPlayVideo(),e.createHoverOverlay(),e.createStyle(),e.createNav(),e.createArrows(),e.createBackgroundImage(),e.createItemBackgroundImage(),e.createBottomShadow(),e.createItemBottomShadow(),e.createSliderTimeout(),e.createGoogleFonts(),e.enableSwipe(),e.options.sameheight&&"horizontal"==e.options.direction&&(e.itemHeight=e.calcSameHeight());var i=t(".amazingcarousel-image",e.container).find("img");i.length?(i.one("load",function(){if(e.options.sameheight&&"horizontal"==e.options.direction)t(this).css({width:"auto",height:e.itemHeight+"px","max-width":"none","max-height":"100%","margin-top":"0px","margin-left":"0px"});else if(e.options.fixaspectratio){t(this).wrap('<div class="amazingcarousel-image-fix-wrapper" style="width:100%;height:100%;overflow:hidden;"></div>');var i=t(this).width(),o=t(this).height();if(i>0&&o&&i/o>e.options.width/e.options.height){if(t(this).css({width:"auto",height:"100%","max-width":"none","max-height":"100%","margin-top":"0px","margin-left":"0px"}),e.options.centerimage&&t(this).width()>0){var n=(t(this).closest(".amazingcarousel-image").width()-t(this).width())/2;t(this).css({"margin-left":n+"px"})}}else if(t(this).css({width:"100%",height:"auto","max-width":"100%","max-height":"none","margin-top":"0px","margin-left":"0px"}),e.options.centerimage&&t(this).height()>0){var r=(t(this).closest(".amazingcarousel-image").height()-t(this).height())/2;t(this).css({"margin-top":r+"px"})}}e.firstResize||(e.firstResize=!0,e.resizeCarousel())}),i.each(function(){this.complete&&t(this).load()})):e.resizeCarousel(),e.options.responsive&&t(window).resize(function(){e.resizeCarousel(),e.resizeNav()}),t(window).load(function(){e.resizeCarousel(),e.resizeNav()}),e.resizeNav();var o=e.getParams(),n=0;"firstcarouselid"in o&&o.firstcarouselid>=0&&o.firstcarouselid<e.elemLength&&(n=o.firstcarouselid),e.container.trigger("amazingcarousel.switch",[-1,n]),n>0&&(e.slideRun(n),"clickcarousel"in o&&t(".amazingcarousel-item",e.container).each(function(){return t(this).data("itemIndex")==n?(t(".amazingcarousel-image img",this).click(),!1):void 0})),e.container.trigger("amazingcarousel.initsuccess"),e.isPaused||e.tempPaused||e.sliderTimeout.start()}},getParams:function(){for(var t={},e=window.location.search.substring(1).split("&"),i=0;i<e.length;i++){var o=e[i].split("=");o&&2==o.length&&(t[o[0].toLowerCase()]=unescape(o[1]))}return t},enableSwipe:function(){if(this.options.enabletouchswipe){var e=this;t(".amazingcarousel-list-container",this.container).carouselTouchSwipe({preventWebBrowser:!1,swipeLeft:function(){e.slideRun(-1)},swipeRight:function(){e.slideRun(-2)}})}},createPlayVideo:function(){if(this.options.showplayvideo){var e=this;t(".amazingcarousel-image",this.container).each(function(){var i=t(this),n=!1,l=!1,c="",h="";if(t("img",i).each(function(){if(t(this).data("video"))return c=t(this).data("video"),t(this).data("videowebm")&&(h=t(this).data("videowebm")),n=!0,!1;if("a"==t(this).parent()[0].nodeName.toLowerCase()&&t(this).parent().hasClass("html5lightbox")){var i=e.checkVideoType(t(this).parent().attr("href"));i!=s&&i!=a&&i!=o&&i!=r||(l=!0)}}),n||l){var u="center center";switch(e.options.playvideoimagepos){case"topleft":u="left top";break;case"topright":u="right top";break;case"bottomleft":u="left bottom";break;case"bottomright":u="right bottom"}var d=t('<div class="amazingcarousel-play-video" style="position:absolute;left:0;top:0;width:100%;height:100%;cursor:pointer;background-image:url(\''+e.options.playvideoimage+"');background-repeat:no-repeat;background-position:"+u+';"></div>');if(d.appendTo(i),n)d.click(function(){i.find("img").css({visibility:"hidden"}),e.playVideo(t(this),c,h),t(this).unbind("click")});else{var p=t("img",i);d.click(function(){p.click()})}}})}},playVideo:function(t,e,i){if(!(e.length<=0)){this.sliderTimeout.stop(),this.tempPaused=!0;var n=this.checkVideoType(e);n==s?this.playYoutubeVideo(e,t):n==a?this.playVimeoVideo(e,t):n==o&&this.playMp4Video(e,i,!0,t)}},playMp4Video:function(t,e,i,o){var n=!0;if(ACPlatforms.isIE6789()?n=!1:!ACPlatforms.isFirefox()&&!ACPlatforms.isOpera()||e||(n=!1),n){var r=ACPlatforms.isFirefox()||ACPlatforms.isOpera()?e:t;this.embedHTML5Video(o,r,i)}else{var s=t;"/"!=s.charAt(0)&&"http:"!=s.substring(0,5)&&"https:"!=s.substring(0,6)&&(s=this.options.htmlfolder+s),this.embedFlash(o,"100%","100%",this.options.jsfolder+"html5boxplayer.swf","transparent",{width:"100%",height:"100%",videofile:s,hdfile:"",ishd:"0",autoplay:i?"1":"0",errorcss:".amazingcarousel-error"+this.options.errorcss,id:this.id,hidecontrols:"0",hideplaybutton:"0",defaultvolume:1})}},embedHTML5Video:function(e,i,o){e.html("<div class='amazingcarousel-video-container-"+this.id+"' style='position:relative;display:block;width:100%;height:100%;'><video style='width:100%;height:100%;' controls ></div>"),t("video",e).get(0).setAttribute("src",i),o&&t("video",e).get(0).play(),this.options.nativehtml5controls||t("video",e).acHTML5VideoControls(this.options.skinsfolder,this,this.options.videohidecontrols,this.options.videohideplaybutton,this.options.defaultvideovolume)},embedFlash:function(e,i,o,n,r,s){if(ACPlatforms.flashInstalled()){var a={pluginspage:"http://www.adobe.com/go/getflashplayer",quality:"high",allowFullScreen:"true",allowScriptAccess:"always",type:"application/x-shockwave-flash"};a.width=i,a.height=o,a.src=n,a.wmode=r,a.flashVars=t.param(s);var l="";for(var c in a)l+=c+"="+a[c]+" ";e.html("<embed "+l+"/>")}else e.html("<div class='amazingcarousel-video-error' style='display:block;position:absolute;text-align:center;width:100%;height:100%;left:0px;top:0px;'><div>The required Adobe Flash Player plugin is not installed</div><br /><div style='display:block;position:relative;text-align:center;width:112px;height:33px;margin:0px auto;'><a href='http://www.adobe.com/go/getflashplayer'><img src='https://www.adobe.com/images/shared/download_buttons/get_flash_player.gif' alt='Get Adobe Flash player' width='112' height='33'></img></a></div>")},playYoutubeVideo:function(t,e){if(this.options.previewmode)return void e.html("<div class='amazingcarousel-video-error' style='display:block;position:absolute;left:0;top:0;width:100%;height:100%;color:#fff;background-color:#333;'>To view YouTube video, publish the carousel then open it in your web browser</div>");var i=t+(t.indexOf("?")<0?"?":"&")+"autoplay=1&wmode=transparent&rel=0&autohide=1";e.html("<iframe width='100%' height='100%' src='"+i+"' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>")},playVimeoVideo:function(t,e){if(this.options.previewmode)return void e.html("<div class='amazingcarousel-video-error' style='display:block;position:absolute;left:0;top:0;width:100%;height:100%;color:#fff;background-color:#333;'>To view Vimeo video, publish the carousel then open it in your web browser</div>");var i=t+(t.indexOf("?")<0?"?":"&")+"autoplay=1&api=1";e.html("<iframe width='100%' height='100%' src='"+i+"' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>")},checkVideoType:function(t){return t?t.match(/\.(flv)(.*)?$/i)?i:t.match(/\.(mp4|m4v)(.*)?$/i)?o:t.match(/\.(ogv|ogg)(.*)?$/i)?n:t.match(/\.(webm)(.*)?$/i)?r:t.match(/\:\/\/.*(youtube\.com)/i)||t.match(/\:\/\/.*(youtu\.be)/i)?s:t.match(/\:\/\/.*(vimeo\.com)/i)?a:0:-1},createHoverOverlay:function(){var e=this;t(".amazingcarousel-image",this.container).each(function(){var i=t(this),o=!1,n=!1;if(t("img",i).each(function(){return"a"==t(this).parent()[0].nodeName.toLowerCase()&&(n=!0,t(this).parent().hasClass("html5lightbox"))?(o=!0,!1):void 0}),t(this).siblings(".amazingcarousel-hover").length>0){t(this).parent().hover(function(){t(this).find(".amazingcarousel-hover").fadeIn()},function(){t(this).find(".amazingcarousel-hover").fadeOut()});var r=t("img",i);t(this).siblings(".amazingcarousel-hover").click(function(){r.click()})}else if(e.options.showhoveroverlay&&!(e.options.hidehoveroverlayontouch&&"ontouchstart"in window)&&(o||n&&e.options.showhoveroverlayalways)){var s=t('<div class="amazingcarousel-hover-effect" style="display:none;position:absolute;left:0;top:0;width:100%;height:100%;cursor:pointer;background-image:url(\''+e.options.hoveroverlayimage+"');background-repeat:no-repeat;background-position:center center;\"></div>");s.appendTo(i);var r=t("img",i);s.click(function(){r.click()}),t(this).hover(function(){ACPlatforms.isIE678()?s.show():s.fadeIn()},function(){ACPlatforms.isIE678()?s.hide():s.fadeOut()})}if(t(this).siblings(".amazingcarousel-flip").length>0){ACPlatforms.isIE6789()&&t(this).parent().hover(function(){t(this).find(".amazingcarousel-flip").hide().insertAfter(t(this).find(".amazingcarousel-image")).fadeIn()},function(){t(this).find(".amazingcarousel-flip").fadeOut()});var r=t("img",i);t(this).siblings(".amazingcarousel-flip").click(function(){r.click()})}})},createStyle:function(){t("ul.amazingcarousel-list",this.container).wrap('<div class="amazingcarousel-list-wrapper"></div>'),t("ul.amazingcarousel-list",this.container).css({display:"block",position:"relative","list-style-type":"none","list-style-image":"none","background-image":"none","background-color":"transparent",padding:0,margin:0}),t("li.amazingcarousel-item",this.container).css({display:"block",position:"relative","background-image":"none","background-color":"transparent",margin:0,padding:0,"float":"horizontal"==this.options.direction?"left":"top"}),this.options.sameheight&&"horizontal"==this.options.direction&&(t("ul.amazingcarousel-list",this.container).css({"white-space":"nowrap"}),t("li.amazingcarousel-item",this.container).css({display:"inline-block","float":"none"}));var e=0;if(this.options.spacing>0)if("horizontal"==this.options.direction){var i=Math.min(this.options.spacing/2);e="0 "+i+"px"}else e="0 0 "+this.options.spacing+"px 0";var o={};o.position="relative",o.margin=e,t("div.amazingcarousel-item-container",this.container).css(o);var n={};n.position="relative",n.margin="0 auto",n.overflow="visible",t("div.amazingcarousel-list-container",this.container).css(n);var r={};r.overflow="hidden","vertical"==this.options.direction&&(r.height="100%"),t("div.amazingcarousel-list-wrapper",this.container).css(r)},hideVideo:function(e){var i=this,o=0;t("li.amazingcarousel-item",this.container).each(function(){(e>o||o>=e+i.visibleItems)&&t(".amazingcarousel-play-video",t(this)).empty(),o++})},calcSameHeight:function(){var e=this.options.height;if(this.options.responsive&&this.options.sameheightresponsive){var i=t(window).width();e=i<this.options.sameheightsmallscreen?this.options.sameheightsmallheight:i<this.options.sameheightmediumscreen?this.options.sameheightmediumheight:this.options.height}return e},resizeCarousel:function(){var e=this;if(this.visibleItems=this.options.visibleitems,this.itemSize=this.options.width,this.options.responsive)if("horizontal"==this.options.direction){var i;if(this.options.usescreenquery){if(i=t(".amazingcarousel-list-container",this.container).width(),i>0){var o=t(window).width();for(var n in this.options.screenquery)o<this.options.screenquery[n].screenwidth&&(this.visibleItems=this.options.screenquery[n].visibleitems);this.itemSize=Math.round(i/this.visibleItems),t(".amazingcarousel-list-wrapper",this.container).width(i)}}else i=this.container.width(),i>0&&(this.visibleItems=Math.floor(i/this.options.width),this.visibleItems<1?(this.visibleItems=1,this.itemSize=i):this.itemSize=this.options.width,t(".amazingcarousel-list-container",this.container).width(this.visibleItems*this.itemSize),t(".amazingcarousel-list-wrapper",this.container).width(this.visibleItems*this.itemSize))}else{var r=t(".amazingcarousel-list-container",this.container).width();r>0&&(this.itemSize=r,t(".amazingcarousel-list-wrapper",this.container).width(r))}if(this.options.sameheight&&"horizontal"==this.options.direction)e.itemHeight=e.calcSameHeight(),t(".amazingcarousel-image",this.container).find("img").each(function(){t(this).css({width:"auto",height:e.itemHeight+"px"})});else if(t("li.amazingcarousel-item",this.container).css({width:this.itemSize+"px"}),"vertical"==this.options.direction&&(this.itemSize=t("li.amazingcarousel-item",this.container).height()),this.options.fixaspectratio){var s=t(".amazingcarousel-image",this.container).width(),a=s*this.options.height/this.options.width;t(".amazingcarousel-image",this.container).css({height:a+"px",overflow:"hidden"}),t(".amazingcarousel-image",this.container).find("img").each(function(){var i=t(this).width(),o=t(this).height();if(i>0&&o&&i/o>e.options.width/e.options.height){if(t(this).css({width:"auto",height:"100%","max-width":"none","max-height":"100%","margin-top":"0px","margin-left":"0px"}),e.options.centerimage&&t(this).width()>0){var n=(t(this).closest(".amazingcarousel-image").width()-t(this).width())/2;t(this).css({"margin-left":n+"px"})}}else if(t(this).css({width:"100%",height:"auto","max-width":"100%","max-height":"none","margin-top":"0px","margin-left":"0px"}),e.options.centerimage&&t(this).height()>0){var r=(t(this).closest(".amazingcarousel-image").height()-t(this).height())/2;t(this).css({"margin-top":r+"px"})}})}"horizontal"==this.options.direction?this.options.sameheight?t("ul.amazingcarousel-list",this.container).css({width:"auto"}):t("ul.amazingcarousel-list",this.container).css("width",this.itemSize*(this.options.circular?this.elemTotalCount:this.elemLength)+"px"):t("ul.amazingcarousel-list",this.container).css("height",this.options.height*(this.options.circular?this.elemTotalCount:this.elemLength)+"px");var l="horizontal"==this.options.direction?"margin-left":"margin-top",c="horizontal"==this.options.direction?this.itemSize:this.options.height,h=-c*this.currentItem;if(t("ul.amazingcarousel-list",this.container).css(l,h+"px"),"vertical"==this.options.direction){var u=this.options.height;if(this.options.fixaspectratio)t(".amazingcarousel-item",this.container).height()>0&&(u=t(".amazingcarousel-item",this.container).height());else{var d=t(".amazingcarousel-item",this.container).height();if(d>0){var p=!0;t(".amazingcarousel-item",this.container).each(function(){return t(this).height()!=d?(p=!1,!1):void 0}),p&&(u=d)}}t("div.amazingcarousel-list-container",this.container).css({height:String(u*this.visibleItems+this.options.spacing*(this.visibleItems-1))+"px"})}this.hideVideo(this.currentItem),this.hideArrows(),this.container.css({display:"block"})},createGoogleFonts:function(){if(!this.options.previewmode&&this.options.addgooglefonts&&this.options.googlefonts&&this.options.googlefonts.length>0){var t="https:"==window.location.protocol?"https:":"http:",e=t+"//fonts.googleapis.com/css?family="+this.options.googlefonts,i=document.createElement("link");i.setAttribute("rel","stylesheet"),i.setAttribute("type","text/css"),i.setAttribute("href",e),document.getElementsByTagName("head")[0].appendChild(i)}},createWatermark:function(){if(this.options.showwatermark&&!("text"==this.options.watermarkstyle&&this.options.watermarktext.length<=0||"image"==this.options.watermarkstyle&&this.options.watermarkimage.length<=0)){var e="<div style='"+this.options.watermarkpositioncss;"text"==this.options.watermarkstyle&&(e+=this.options.watermarktextcss),this.options.watermarklink&&(e+="cursor:pointer;"),e+="'>",this.options.watermarklink&&(e+="<a href='"+this.options.watermarklink+"' style='"+this.options.watermarklinkcss+"'",this.options.watermarktarget&&(e+=" target='"+this.options.watermarktarget+"'"),e+=">"),"text"==this.options.watermarkstyle?e+=this.options.watermarktext:"image"==this.options.watermarkstyle&&(e+="<img src='"+this.options.skinsfolder+this.options.watermarkimage+"' style='border:none;' />"),this.options.watermarklink&&(e+="</a>"),e+="</div>";for(var i=0;i<t(".amazingcarousel-image",this.container).length;i++)"AMCom"!=this.options.versionmark&&i%2!=0||t(".amazingcarousel-image",this.container).eq(i).append(t(e))}},createSliderTimeout:function(){var e=this;this.sliderTimeout=new ASTimer(this.options.interval,function(){e.slideRun(-1)},null),e.options.pauseonmouseover&&this.container.hover(function(){e.mousePaused=!0,e.isPaused||e.sliderTimeout.pause(),e.options.continuous&&(t("ul.amazingcarousel-list",e.container).stop(),clearInterval(e.transitionTimerId),e.transitionTimerId=null)},function(){e.mousePaused=!1,e.isPaused||e.sliderTimeout.resume(),e.options.continuous&&(t("ul.amazingcarousel-list",e.container).animate(e.animProp,e.transitionTiming,e.options.transitioneasing,function(){e.animationDone()}),e.transitionTimerId=setInterval(function(){e.transitionTiming-=100},100))})},createItemBottomShadow:function(){if(this.options.showitembottomshadow){var e=(100-this.options.itembottomshadowimagewidth)/2,i="<div class='amazingcarousel-item-bottom-shadow' style='display:block;position:absolute;left:"+e+"%;top:"+this.options.itembottomshadowimagetop+"%;width:"+this.options.itembottomshadowimagewidth+"%;height:auto;'><img src='"+this.options.skinsfolder+this.options.itembottomshadowimage+"' style='display:block;position:relative;width:100%;height:auto;border:0;box-shadow:none;-moz-box-shadow:none;-webkit-box-shadow:none;border-radius:0;-moz-border-radius:0;-webkit-border-radius:0;' /></div>";t("li.amazingcarousel-item",this.container).prepend(i)}},createBottomShadow:function(){if(this.options.showbottomshadow){var e=(100-this.options.bottomshadowimagewidth)/2,i="<div class='amazingcarousel-bottom-shadow' style='display:block;position:absolute;left:"+e+"%;top:"+this.options.bottomshadowimagetop+"%;width:"+this.options.bottomshadowimagewidth+"%;height:auto;'><img src='"+this.options.skinsfolder+this.options.bottomshadowimage+"' style='display:block;position:relative;width:100%;height:auto;border:0;box-shadow:none;-moz-box-shadow:none;-webkit-box-shadow:none;border-radius:0;-moz-border-radius:0;-webkit-border-radius:0;' /></div>";t(".amazingcarousel-list-container",this.container).prepend(i)}},createItemBackgroundImage:function(){if(this.options.showitembackgroundimage&&this.options.itembackgroundimage){var e=(100-this.options.itembackgroundimagewidth)/2,i="<div class='amazingcarousel-background-image' style='display:block;position:absolute;left:"+e+"%;top:"+this.options.itembackgroundimagetop+"%;width:"+this.options.itembackgroundimagewidth+"%;height:auto;'><img src='"+this.options.skinsfolder+this.options.itembackgroundimage+"' style='display:block;position:relative;width:100%;height:auto;border:0;box-shadow:none;-moz-box-shadow:none;-webkit-box-shadow:none;border-radius:0;-moz-border-radius:0;-webkit-border-radius:0;' /></div>";t("li.amazingcarousel-item",this.container).prepend(i)}},createBackgroundImage:function(){if(this.options.showbackgroundimage&&this.options.backgroundimage){var t=(100-this.options.backgroundimagewidth)/2,e="<div class='amazingcarousel-background-image' style='display:block;position:absolute;left:"+t+"%;top:"+this.options.backgroundimagetop+"%;width:"+this.options.backgroundimagewidth+"%;height:auto;'><img src='"+this.options.skinsfolder+this.options.backgroundimage+"' style='display:block;position:relative;width:100%;height:auto;border:0;box-shadow:none;-moz-box-shadow:none;-webkit-box-shadow:none;border-radius:0;-moz-border-radius:0;-webkit-border-radius:0;' /></div>";this.container.prepend(e)}},createArrows:function(){if("none"!=this.options.arrowstyle){var e=this,i=t(".amazingcarousel-prev",this.container),o=t(".amazingcarousel-next",this.container);i.css({overflow:"hidden",position:"absolute",cursor:"pointer",width:this.options.arrowwidth+"px",height:this.options.arrowheight+"px",background:"url('"+this.options.arrowimage+"') no-repeat left top"}),ACPlatforms.isIE678()&&i.css({opacity:"inherit",filter:"inherit"}),o.css({overflow:"hidden",position:"absolute",cursor:"pointer",width:this.options.arrowwidth+"px",height:this.options.arrowheight+"px",background:"url('"+this.options.arrowimage+"') no-repeat right top"}),ACPlatforms.isIE678()&&o.css({opacity:"inherit",filter:"inherit"}),i.hover(function(){t(this).css({"background-position":"left bottom"})},function(){t(this).css({"background-position":"left top"})}),o.hover(function(){t(this).css({"background-position":"right bottom"})},function(){t(this).css({"background-position":"right top"})}),"always"==this.options.arrowstyle?(i.css({display:"block"}),o.css({display:"block"})):(i.css({display:"none"}),o.css({display:"none"}),this.container.hover(function(){clearTimeout(e.arrowTimeout),(e.options.circular||e.currentItem>0)&&(ACPlatforms.isIE678()?i.show():i.fadeIn()),(e.options.circular||e.currentItem<e.elemLength-e.visibleItems)&&(ACPlatforms.isIE678()?o.show():o.fadeIn())},function(){e.arrowTimeout=setTimeout(function(){ACPlatforms.isIE678()?(i.hide(),o.hide()):(i.fadeOut(),o.fadeOut())},e.options.arrowhideonmouseleave)})),i.click(function(){e.slideRun(-2)}),o.click(function(){e.slideRun(-1)})}},hideArrows:function(){var e=t(".amazingcarousel-prev",this.container),i=t(".amazingcarousel-next",this.container);!this.options.circular&&this.currentItem<=0?e.hide():"always"==this.options.arrowstyle&&e.show(),!this.options.circular&&this.currentItem>=this.elemLength-this.visibleItems?i.hide():"always"==this.options.arrowstyle&&i.show()},createNav:function(){if("none"!=this.options.navstyle){var e=t(".amazingcarousel-nav",this.container),i=t("<div class='amazingcarousel-bullet-wrapper'></div>");i.appendTo(e);var o=t("<div class='amazingcarousel-bullet-list'></div>");o.appendTo(i);var n="vertical"==this.options.navdirection?this.options.navwidth:this.options.navheight,r=this.elemLength*n+(this.elemLength-1)*this.options.navspacing;"vertical"==this.options.navdirection?(i.css({height:r+"px",width:"auto"}),o.css({height:r+"px",width:"auto"})):(i.css({width:r+"px",height:"auto"}),o.css({width:r+"px",height:"auto"}));for(var s,a=0;a<this.elemLength;a++)s=this.createNavBullet(a),o.append(s);var l=this;this.container.bind("amazingcarousel.switch",function(e,i,o){for(var n=0;n<l.elemLength;n++)t(".amazingcarousel-bullet-"+n,l.container)["bulletNormal"+l.id]();o>=0&&("page"==l.options.navmode&&(o=Math.floor(o/l.visibleItems)),t(".amazingcarousel-bullet-"+o,l.container)["bulletSelected"+l.id]())})}},createNavBullet:function(e){var i="vertical"==this.options.navdirection?"top":"left",o="vertical"==this.options.navdirection?"bottom":"right",n=e==this.elemLength-1?0:this.options.navspacing,r=this.options.navwidth,s=this.options.navheight,a=t("<div class='amazingcarousel-bullet-"+e+"' style='position:relative;float:"+i+";margin-"+o+":"+n+"px;width:"+r+"px;height:"+s+"px;cursor:pointer;'></div>");a.data("index",e);var l=this;return a.hover(function(){var e=t(this).data("index");e!=l.currentItem&&t(this)["bulletHighlight"+l.id](),l.options.navswitchonmouseover&&("page"==l.options.navmode&&(e=l.visibleItems*e),l.slideRun(e))},function(){var e=l.currentItem;"page"==l.options.navmode&&(e=Math.floor(e/l.visibleItems)),t(this).data("index")!=e&&t(this)["bulletNormal"+l.id]()}),a.click(function(){var e=t(this).data("index");"page"==l.options.navmode&&(e=l.visibleItems*e),l.slideRun(e)}),a.css({background:"url('"+this.options.navimage+"') no-repeat left top"}),t.fn["bulletNormal"+this.id]=function(){t(this).css({"background-position":"left top"})},t.fn["bulletHighlight"+this.id]=t.fn["bulletSelected"+this.id]=function(){t(this).css({"background-position":"left bottom"})},a},resizeNav:function(){if("none"!=this.options.navstyle&&"item"!=this.options.navmode){var e,i=Math.ceil(this.elemLength/this.visibleItems);for(e=0;i>e;e++)t(".amazingcarousel-bullet-"+e,this.container).css({display:"block"});for(e=i;e<this.elemLength;e++)t(".amazingcarousel-bullet-"+e,this.container).css({display:"none"});var o=Math.floor(this.currentItem/this.visibleItems);for(e=0;e<this.elemLength;e++)t(".amazingcarousel-bullet-"+e,this.container)["bulletNormal"+this.id];t(".amazingcarousel-bullet-"+o,this.container)["bulletHighlight"+this.id];var n="vertical"==this.options.navdirection?this.options.navwidth:this.options.navheight,r=i*n+(i-1)*this.options.navspacing;"vertical"==this.options.navdirection?t(".amazingcarousel-bullet-wrapper",this.container).css({height:r+"px",width:"auto"}):t(".amazingcarousel-bullet-wrapper",this.container).css({width:r+"px",height:"auto"})}},animationDone:function(){clearInterval(this.transitionTimerId),this.transitionTimerId=null,this.transitionTiming=0,this.isAnimating=!1,this.options.loop>0&&this.currentItem+this.visibleItems>=this.elemLength&&(this.loopCount++,this.options.loop<=this.loopCount&&(this.isPaused=!0)),this.isPaused||this.tempPaused||this.mousePaused?this.sliderTimeout.stop():this.sliderTimeout.start()},slideRun:function(e){if(!this.isAnimating&&!(e==this.currentItem||-2>e||e>=this.elemLength)){var i;e>=0?i=1:(i=this.visibleItems,"item"==this.options.scrollmode&&i>this.options.scrollitems&&(i=this.options.scrollitems));var o,n;if(-2==e?(n=-1,o=this.currentItem-i):-1==e?(n=1,o=this.currentItem+i):(n=e>this.currentItem?1:-1,o=e),0>n?0>o&&(o=this.options.circular?this.elemLength+o:0):this.options.circular?o>=this.elemLength&&(o-=this.elemLength):o>this.elemLength-this.visibleItems&&(o=this.elemLength-this.visibleItems),o!=this.currentItem){this.isAnimating=!0,this.sliderTimeout.stop(),this.tempPaused=!1;var r="horizontal"==this.options.direction?"margin-left":"margin-top",s=this.itemSize;if("vertical"==this.options.direction&&(s+=this.options.spacing),this.options.sameheight&&this.options.continuous&&"horizontal"==this.options.direction){var a=0;t("li.amazingcarousel-item",this.container).each(function(){a+=t(this).outerWidth(!0)}),a>0&&t("li.amazingcarousel-item",this.container).length>0&&(s=a/t("li.amazingcarousel-item",this.container).length)}else if("vertical"==this.options.direction){s=this.options.height+this.options.spacing;var l=0,c=this;t("li.amazingcarousel-item",this.container).each(function(){l+=t(this).height()+c.options.spacing}),l>0&&t("li.amazingcarousel-item",this.container).length>0&&(s=l/t("li.amazingcarousel-item",this.container).length)}var h=s*this.currentItem,u=s*o,d=o;this.options.circular&&(0>n?o>this.currentItem&&(h=s*(this.elemLength+this.currentItem)):o>this.elemLength-i&&this.elemLength<2*i?h=s*(o-i):o<this.currentItem&&(u=s*(this.elemLength+o),d=this.elemLength+o)),h=-h,u=-u,t("ul.amazingcarousel-list",this.container).css(r,h+"px"),this.animProp={},this.animProp[r]=u+"px";var p=this.currentItem;this.currentItem=o,this.container.trigger("amazingcarousel.switch",[p,o]),this.hideVideo(d),this.hideArrows();var c=this;t("ul.amazingcarousel-list",this.container).animate(this.animProp,this.options.transitionduration,this.options.transitioneasing,function(){c.animationDone()}),this.options.continuous&&(this.transitionTimerId&&(clearInterval(this.transitionTimerId),this.transitionTimerId=null),this.transitionTiming=this.options.transitionduration,this.transitionTimerId=setInterval(function(){c.transitionTiming-=100},100))}}}},e=e||{};for(var c in e)c.toLowerCase()!==c&&(e[c.toLowerCase()]=e[c],delete e[c]);this.each(function(){this.options=t.extend({},e),t(this).data("skin")&&"undefined"!=typeof AMAZINGCAROUSEL_SKIN_OPTIONS&&t(this).data("skin")in AMAZINGCAROUSEL_SKIN_OPTIONS&&(this.options=t.extend({},AMAZINGCAROUSEL_SKIN_OPTIONS[t(this).data("skin")],this.options));var i=this;t.each(t(this).data(),function(t,e){i.options[t.toLowerCase()]=e});for(var o={},n=window.location.search.substring(1).split("&"),r=0;r<n.length;r++){var s=n[r].split("=");if(s&&2==s.length){var a=s[0].toLowerCase(),c=unescape(s[1]).toLowerCase();"true"==c?o[a]=!0:"false"==c?o[a]=!1:o[a]=c}}this.options=t.extend(this.options,o);var h={showcontaineroninit:!0,watermarklinkdefault:"http://amazingcarousel.com",watermarktargetdefault:"_blank",previewmode:!1,direction:"horizontal",autoplay:!1,pauseonmouseover:!0,interval:3e3,loop:0,random:!0,fixaspectratio:!1,centerimage:!1,sameheight:!1,sameheightresponsive:!1,sameheightmediumscreen:769,sameheightmediumheight:200,sameheightsmallscreen:415,sameheightsmallheight:200,nativehtml5controls:!1,videohidecontrols:!1,videohideplaybutton:!1,defaultvideovolume:1,circular:!0,scrollmode:"page",scrollitems:1,skinsfoldername:"skins",showplayvideo:!1,playvideoimage:"img/playvideo-64-64-0.png",playvideoimagepos:"center",showhoveroverlay:!0,hoveroverlayimage:"img/hoveroverlay-64-64-0.png",showhoveroverlayalways:!1,hidehoveroverlayontouch:!1,enabletouchswipe:!0,responsive:!1,usescreenquery:!0,spacing:24,showbackgroundimage:!1,backgroundimage:"background.png",backgroundimagewidth:110,backgroundimagetop:-40,showitembackgroundimage:!1,itembackgroundimage:"background.png",itembackgroundimagewidth:150,itembackgroundimagetop:0,showbottomshadow:!1,bottomshadowimage:"bottomshadow.png",bottomshadowimagewidth:110,bottomshadowimagetop:95,showitembottomshadow:!1,itembottomshadowimage:"bottomshadow.png",itembottomshadowimagewidth:110,itembottomshadowimagetop:100,arrowstyle:"always",arrowimage:"img/arrows.png",arrowwidth:48,arrowheight:48,arrowhideonmouseleave:1e3,navdirection:"horizontal",navstyle:"bullets",navmode:"page",navswitchonmouseover:!1,navwidth:16,navheight:16,navspacing:8,navimage:"img/bullet.png",transitionduration:1e3,transitioneasing:"easeOutQuad",continuous:!1,continuousduration:2500,versionmark:"AMFree",showwdefault:!0,wstyledefault:"text",wtextdefault:"65,109,97,122,105,110,103,32,67,97,114,111,117,115,101,108,32,70,114,101,101,32,86,101,114,115,105,111,110",wimagedefault:"",wposcss:"display:block;position:absolute;bottom:6px;right:6px;",wtextcssdefault:"font:12px Arial,Tahoma,Helvetica,sans-serif;color:#666;padding:2px 4px;-webkit-border-radius:2px;-moz-border-radius:2px;border-radius:2px;background-color:#fff;opacity:0.9;filter:alpha(opacity=90);",wlinkcssdefault:"text-decoration:none;font:12px Arial,Tahoma,Helvetica,sans-serif;color:#333;"};this.options=t.extend(h,this.options);var r,u,d="",p=this.options.wtextdefault.split(",");for(r=0;r<p.length;r++)d+=String.fromCharCode(p[r]);this.options.fvm=d;var m="ammaagziicngcarouselh.iclolms";for(r=1;5>=r;r++)m=m.slice(0,r)+m.slice(r+1);for(u=m.length,r=0;5>r;r++)m=m.slice(0,u-9+r)+m.slice(u-8+r);"AMCom"!=this.options.versionmark&&(this.options.showwatermark=window.location.href.indexOf(m)>=0?!1:this.options.showwdefault,this.options.watermarkstyle=this.options.wstyledefault,this.options.watermarktext=this.options.fvm,this.options.watermarkimage=this.options.wimagedefault,this.options.watermarklink=this.options.watermarklinkdefault,this.options.watermarktarget=this.options.watermarktargetdefault,this.options.watermarkpositioncss=this.options.wposcss,this.options.watermarktextcss=this.options.wtextcssdefault,this.options.watermarklinkcss=this.options.wlinkcssdefault),this.options.continuous&&(this.options.autoplay=!0,this.options.interval=0,this.options.transitionduration=this.options.continuousduration,this.options.transitioneasing="linear",this.options.scrollmode="item",this.options.scrollitems=1),"undefined"!=typeof amazingcarousel_previewmode&&(this.options.previewmode=amazingcarousel_previewmode),this.options.htmlfolder=window.location.href.substr(0,window.location.href.lastIndexOf("/")+1),this.options.skinsfoldername.length>0?this.options.skinsfolder=this.options.jsfolder+this.options.skinsfoldername+"/":this.options.skinsfolder=this.options.jsfolder,"http://"!=this.options.arrowimage.substring(0,7).toLowerCase()&&"https://"!=this.options.arrowimage.substring(0,8).toLowerCase()&&(this.options.arrowimage=this.options.skinsfolder+this.options.arrowimage),"http://"!=this.options.navimage.substring(0,7).toLowerCase()&&"https://"!=this.options.navimage.substring(0,8).toLowerCase()&&(this.options.navimage=this.options.skinsfolder+this.options.navimage),"http://"!=this.options.hoveroverlayimage.substring(0,7).toLowerCase()&&"https://"!=this.options.hoveroverlayimage.substring(0,8).toLowerCase()&&(this.options.hoveroverlayimage=this.options.skinsfolder+this.options.hoveroverlayimage),
"http://"!=this.options.playvideoimage.substring(0,7).toLowerCase()&&"https://"!=this.options.playvideoimage.substring(0,8).toLowerCase()&&(this.options.playvideoimage=this.options.skinsfolder+this.options.playvideoimage);var f;"carouselid"in this.options?f=this.options.carouselid:(f=amazingcarouselId,amazingcarouselId++);var g=new l(t(this),this.options,f);t(this).data("object",g),t(this).data("id",f),amazingcarouselObjects.addObject(g)})}}(jQuery),function(t){t.fn.carouselTouchSwipe=function(e){var i={preventWebBrowser:!1,swipeLeft:null,swipeRight:null,swipeTop:null,swipeBottom:null};return e&&t.extend(i,e),this.each(function(){function e(t){var e=t.originalEvent;e.targetTouches.length>=1?(a=e.targetTouches[0].pageX,l=e.targetTouches[0].pageY):r(t)}function o(t){i.preventWebBrowser&&t.preventDefault();var e=t.originalEvent;e.targetTouches.length>=1?(c=e.targetTouches[0].pageX,h=e.targetTouches[0].pageY):r(t)}function n(t){c>0||h>0?(s(),r(t)):r(t)}function r(t){a=-1,l=-1,c=-1,h=-1}function s(){Math.abs(c-a)>Math.abs(h-l)?c>a?i.swipeRight&&i.swipeRight.call():i.swipeLeft&&i.swipeLeft.call():h>l?i.swipeBottom&&i.swipeBottom.call():i.swipeTop&&i.swipeTop.call()}var a=-1,l=-1,c=-1,h=-1;try{t(this).bind("touchstart",e),t(this).bind("touchmove",o),t(this).bind("touchend",n),t(this).bind("touchcancel",r)}catch(u){}})}}(jQuery),jQuery.easing.jswing=jQuery.easing.swing,jQuery.extend(jQuery.easing,{def:"easeOutQuad",swing:function(t,e,i,o,n){return jQuery.easing[jQuery.easing.def](t,e,i,o,n)},easeInQuad:function(t,e,i,o,n){return o*(e/=n)*e+i},easeOutQuad:function(t,e,i,o,n){return-o*(e/=n)*(e-2)+i},easeInOutQuad:function(t,e,i,o,n){return(e/=n/2)<1?o/2*e*e+i:-o/2*(--e*(e-2)-1)+i},easeInCubic:function(t,e,i,o,n){return o*(e/=n)*e*e+i},easeOutCubic:function(t,e,i,o,n){return o*((e=e/n-1)*e*e+1)+i},easeInOutCubic:function(t,e,i,o,n){return(e/=n/2)<1?o/2*e*e*e+i:o/2*((e-=2)*e*e+2)+i},easeInQuart:function(t,e,i,o,n){return o*(e/=n)*e*e*e+i},easeOutQuart:function(t,e,i,o,n){return-o*((e=e/n-1)*e*e*e-1)+i},easeInOutQuart:function(t,e,i,o,n){return(e/=n/2)<1?o/2*e*e*e*e+i:-o/2*((e-=2)*e*e*e-2)+i},easeInQuint:function(t,e,i,o,n){return o*(e/=n)*e*e*e*e+i},easeOutQuint:function(t,e,i,o,n){return o*((e=e/n-1)*e*e*e*e+1)+i},easeInOutQuint:function(t,e,i,o,n){return(e/=n/2)<1?o/2*e*e*e*e*e+i:o/2*((e-=2)*e*e*e*e+2)+i},easeInSine:function(t,e,i,o,n){return-o*Math.cos(e/n*(Math.PI/2))+o+i},easeOutSine:function(t,e,i,o,n){return o*Math.sin(e/n*(Math.PI/2))+i},easeInOutSine:function(t,e,i,o,n){return-o/2*(Math.cos(Math.PI*e/n)-1)+i},easeInExpo:function(t,e,i,o,n){return 0==e?i:o*Math.pow(2,10*(e/n-1))+i},easeOutExpo:function(t,e,i,o,n){return e==n?i+o:o*(-Math.pow(2,-10*e/n)+1)+i},easeInOutExpo:function(t,e,i,o,n){return 0==e?i:e==n?i+o:(e/=n/2)<1?o/2*Math.pow(2,10*(e-1))+i:o/2*(-Math.pow(2,-10*--e)+2)+i},easeInCirc:function(t,e,i,o,n){return-o*(Math.sqrt(1-(e/=n)*e)-1)+i},easeOutCirc:function(t,e,i,o,n){return o*Math.sqrt(1-(e=e/n-1)*e)+i},easeInOutCirc:function(t,e,i,o,n){return(e/=n/2)<1?-o/2*(Math.sqrt(1-e*e)-1)+i:o/2*(Math.sqrt(1-(e-=2)*e)+1)+i},easeInElastic:function(t,e,i,o,n){var r=1.70158,s=0,a=o;if(0==e)return i;if(1==(e/=n))return i+o;if(s||(s=.3*n),a<Math.abs(o)){a=o;var r=s/4}else var r=s/(2*Math.PI)*Math.asin(o/a);return-(a*Math.pow(2,10*(e-=1))*Math.sin(2*(e*n-r)*Math.PI/s))+i},easeOutElastic:function(t,e,i,o,n){var r=1.70158,s=0,a=o;if(0==e)return i;if(1==(e/=n))return i+o;if(s||(s=.3*n),a<Math.abs(o)){a=o;var r=s/4}else var r=s/(2*Math.PI)*Math.asin(o/a);return a*Math.pow(2,-10*e)*Math.sin(2*(e*n-r)*Math.PI/s)+o+i},easeInOutElastic:function(t,e,i,o,n){var r=1.70158,s=0,a=o;if(0==e)return i;if(2==(e/=n/2))return i+o;if(s||(s=.3*n*1.5),a<Math.abs(o)){a=o;var r=s/4}else var r=s/(2*Math.PI)*Math.asin(o/a);return 1>e?-.5*a*Math.pow(2,10*(e-=1))*Math.sin(2*(e*n-r)*Math.PI/s)+i:a*Math.pow(2,-10*(e-=1))*Math.sin(2*(e*n-r)*Math.PI/s)*.5+o+i},easeInBack:function(t,e,i,o,n,r){return void 0==r&&(r=1.70158),o*(e/=n)*e*((r+1)*e-r)+i},easeOutBack:function(t,e,i,o,n,r){return void 0==r&&(r=1.70158),o*((e=e/n-1)*e*((r+1)*e+r)+1)+i},easeInOutBack:function(t,e,i,o,n,r){return void 0==r&&(r=1.70158),(e/=n/2)<1?o/2*e*e*(((r*=1.525)+1)*e-r)+i:o/2*((e-=2)*e*(((r*=1.525)+1)*e+r)+2)+i},easeInBounce:function(t,e,i,o,n){return o-jQuery.easing.easeOutBounce(t,n-e,0,o,n)+i},easeOutBounce:function(t,e,i,o,n){return(e/=n)<1/2.75?7.5625*o*e*e+i:2/2.75>e?o*(7.5625*(e-=1.5/2.75)*e+.75)+i:2.5/2.75>e?o*(7.5625*(e-=2.25/2.75)*e+.9375)+i:o*(7.5625*(e-=2.625/2.75)*e+.984375)+i},easeInOutBounce:function(t,e,i,o,n){return n/2>e?.5*jQuery.easing.easeInBounce(t,2*e,0,o,n)+i:.5*jQuery.easing.easeOutBounce(t,2*e-n,0,o,n)+.5*o+i}}),"undefined"==typeof amazingcarouselObjects)var amazingcarouselObjects=new function(){this.objects=[],this.addObject=function(t){this.objects.push(t)}};if("undefined"==typeof ASYouTubeIframeAPIReady)var ASYouTubeIframeAPIReady=!1,ASYouTubeTimeout=0;if("undefined"==typeof amazingcarouselId)var amazingcarouselId=0;jQuery(document).ready(function(){for(var t=document.getElementsByTagName("script"),e="",i=0;i<t.length;i++)t[i].src&&t[i].src.match(/initcarousel-1\.js/i)&&(e=t[i].src.substr(0,t[i].src.lastIndexOf("/")+1));"undefined"==typeof html5Lightbox&&(html5Lightbox=jQuery(".html5lightbox").html5lightbox({skinsfoldername:"",jsfolder:e,barheight:100,showtitle:!0,showdescription:!0,shownavigation:!0,thumbwidth:50,thumbheight:40,thumbtopmargin:5,thumbbottommargin:8,titlebottomcss:"{color:#333; font-size:14px; font-family:Armata,sans-serif,Arial; overflow:hidden; text-align:left;}",descriptionbottomcss:"{color:#333; font-size:12px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left; margin:4px 0px 0px; padding: 0px;display: block;}"})),jQuery("#amazingcarousel-1").amazingcarousel({jsfolder:e,width:280,height:120,skinsfoldername:"",interval:3e3,itembottomshadowimagetop:100,donotcrop:!1,random:!0,showhoveroverlay:!0,rownumber:1,arrowheight:32,showbottomshadow:!1,itembackgroundimagewidth:100,imageheight:120,skin:"TestimonialCarousel",responsive:!0,lightboxtitlebottomcss:"{color:#333; font-size:14px; font-family:Armata,sans-serif,Arial; overflow:hidden; text-align:left;}",enabletouchswipe:!0,navstyle:"bullets",backgroundimagetop:-40,arrowstyle:"mouseover",bottomshadowimagetop:95,hidehoveroverlayontouch:!1,continuous:!1,itembackgroundimagetop:0,hoveroverlayimage:"img/hoveroverlay-64-64-6.png",itembottomshadowimage:"img/itembottomshadow-100-98-3.png",lightboxshowdescription:!0,navswitchonmouseover:!1,showhoveroverlayalways:!0,transitioneasing:"easeInOutCubic",lightboxshownavigation:!0,showitembackgroundimage:!1,itembackgroundimage:"",playvideoimagepos:"center",circular:!0,arrowimage:"img/arrows-32-32-1.png",scrollitems:1,direction:"horizontal",lightboxdescriptionbottomcss:"{color:#333; font-size:12px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left; margin:4px 0px 0px; padding: 0px;display: block;}",supportiframe:!1,navimage:"img/bullet-24-24-0.png",backgroundimagewidth:110,showbackgroundimage:!1,lightboxbarheight:100,showplayvideo:!0,spacing:4,lightboxthumbwidth:50,navdirection:"horizontal",itembottomshadowimagewidth:100,backgroundimage:"",lightboxthumbtopmargin:5,autoplay:!0,lightboxnogroup:!1,arrowwidth:32,transparent:!0,continuousduration:2500,bottomshadowimage:"img/bottomshadow-110-95-0.png",scrollmode:"page",navmode:"page",lightboxshowtitle:!0,lightboxthumbbottommargin:8,arrowhideonmouseleave:600,showitembottomshadow:!1,lightboxthumbheight:40,navspacing:4,pauseonmouseover:!0,imagefillcolor:"FFFFFF",playvideoimage:"img/playvideo-64-64-2.png",transitionduration:4e3,visibleitems:4,imagewidth:120,usescreenquery:!1,bottomshadowimagewidth:110,screenquery:{mobile:{screenwidth:600,visibleitems:1}},navwidth:24,loop:0,navheight:24})}),$(function(t){function e(e){var i=0;e.each(function(){thisHight=t(this).height(),thisHight>i&&(i=thisHight)}),e.height(i)}e(t(".columns > div")),t("#history_hidden").animatedModal({animatedIn:"fadeIn",animatedOut:"fadeOut",animationDuration:"1.5s"}),t("#history_hidden").click(function(){t(".modal-content article").toggle()}),t("#closebt-container").click(function(){t(".modal-content article").toggle()}),t("#gallery_hiden").click(function(){t(".gallery_modal-content").toggle()}),t("#closebt-container2").click(function(){t(".gallery_modal-content").toggle("slow",function(){})}),t("#gallery_hiden").animatedModal({modalTarget:"gallery_modal",animatedIn:"fadeIn",animatedOut:"fadeOut",color:"hsla(0, 0%, 0%, 0.7)",animationDuration:"1.5s"}),t(".gallery_modal-guts > div").each(function(){allId=t(this).attr("id")}).lightGallery({thumbnail:!0,showThumbByDefault:!1})}),$(document).ready(function(){$(".resize").width($(".wrapper").width()+1),$(".header").height($(".header").width()/3.413333333333333),$(window).resize(function(){$(".resize").width($(".wrapper").width()),$(".header").height($(".header").width()/3.413333333333333)})}),function(t){"use strict";function e(t){return new RegExp("(^|\\s+)"+t+"(\\s+|$)")}function i(t,e){var i=o(t,e)?r:n;i(t,e)}var o,n,r;"classList"in document.documentElement?(o=function(t,e){return t.classList.contains(e)},n=function(t,e){t.classList.add(e)},r=function(t,e){t.classList.remove(e)}):(o=function(t,i){return e(i).test(t.className)},n=function(t,e){o(t,e)||(t.className=t.className+" "+e)},r=function(t,i){t.className=t.className.replace(e(i)," ")}),t.classie={hasClass:o,addClass:n,removeClass:r,toggleClass:i,has:o,add:n,remove:r,toggle:i}}(window),$(function(t){var e=t(".menu__link");e.on("click",function(e){e.preventDefault(),t(this).addClass("active").parent().siblings().find(".active").removeClass("active")});var i=t(".mcd-menu a");i.on("click",function(t){t.preventDefault()})}),function(t){t.fn.animatedModal=function(e){function i(){l.css({"z-index":r.zIndexOut}),r.afterClose()}function o(){r.afterOpen()}var n=t(this),r=t.extend({modalTarget:"animatedModal",position:"fixed",width:"100%",height:"100%",top:"0px",left:"0px",zIndexIn:"5",zIndexOut:"-9999",color:"hsla(0, 0%, 0%, 0.7)",opacityIn:"1",opacityOut:"0",animatedIn:"zoomIn",animatedOut:"zoomOut",animationDuration:".6s",overflow:"auto",beforeOpen:function(){},afterOpen:function(){},beforeClose:function(){},afterClose:function(){}},e),s=t(".close-"+r.modalTarget),a=t(n).attr("href"),l=t("body").find("#"+r.modalTarget),c="#"+l.attr("id");l.addClass("animated"),l.addClass(r.modalTarget+"-off");var h={position:r.position,width:r.width,height:r.height,top:r.top,left:r.left,"background-color":r.color,"overflow-y":r.overflow,"z-index":r.zIndexOut,opacity:r.opacityOut,"-webkit-animation-duration":r.animationDuration,"-moz-animation-duration":r.animationDuration,"-ms-animation-duration":r.animationDuration,"animation-duration":r.animationDuration};l.css(h),n.click(function(e){e.preventDefault(),t("body, html").css({overflow:"hidden"}),a==c&&(l.hasClass(r.modalTarget+"-off")&&(l.removeClass(r.animatedOut),l.removeClass(r.modalTarget+"-off"),l.addClass(r.modalTarget+"-on")),l.hasClass(r.modalTarget+"-on")&&(r.beforeOpen(),l.css({opacity:r.opacityIn,"z-index":r.zIndexIn}),l.addClass(r.animatedIn),l.one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",o)))}),s.click(function(e){e.preventDefault(),t("body, html").css({overflow:"auto"}),r.beforeClose(),l.hasClass(r.modalTarget+"-on")&&(l.removeClass(r.modalTarget+"-on"),l.addClass(r.modalTarget+"-off")),l.hasClass(r.modalTarget+"-off")&&(l.removeClass(r.animatedIn),l.addClass(r.animatedOut),l.one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend",i))})}}(jQuery);var json={blocks:[{id:"animated-thumbnials_1",dataCount:"16",links:[{href:"img/clean_environment/1-lightbox.jpg",src:"img/clean_environment/1.jpg",alt:""},{href:"img/clean_environment/2-lightbox.jpg",src:"img/clean_environment/2.jpg",alt:""},{href:"img/clean_environment/3-lightbox.jpg",src:"img/clean_environment/3.jpg",alt:""},{href:"img/clean_environment/4-lightbox.jpg",src:"img/clean_environment/4.jpg",alt:""},{href:"img/clean_environment/5-lightbox.jpg",src:"img/clean_environment/5.jpg",alt:""},{href:"img/clean_environment/6-lightbox.jpg",src:"img/clean_environment/6.jpg",alt:""},{href:"img/clean_environment/7-lightbox.jpg",src:"img/clean_environment/7.jpg",alt:""},{href:"img/clean_environment/8-lightbox.jpg",src:"img/clean_environment/8.jpg",alt:""},{href:"img/clean_environment/9-lightbox.jpg",src:"img/clean_environment/9.jpg",alt:""},{href:"img/clean_environment/10-lightbox.jpg",src:"img/clean_environment/10.jpg",alt:""},{href:"img/clean_environment/11-lightbox.jpg",src:"img/clean_environment/11.jpg",alt:""},{href:"img/clean_environment/12-lightbox.jpg",src:"img/clean_environment/12.jpg",alt:""},{href:"img/clean_environment/13-lightbox.jpg",src:"img/clean_environment/13.jpg",alt:""},{href:"img/clean_environment/14-lightbox.jpg",src:"img/clean_environment/14.jpg",alt:""},{href:"img/clean_environment/15-lightbox.jpg",src:"img/clean_environment/15.jpg",alt:""},{href:"img/clean_environment/16-lightbox.jpg",src:"img/clean_environment/16.jpg",alt:""}]},{id:"animated-thumbnials_2",dataCount:"7",links:[{href:"img/sport/1.jpg",src:"img/sport/1_tb.jpg",alt:"На старт, увага , Руш!"},{href:"img/sport/2.jpg",src:"img/sport/2_tb.jpg",alt:"Так, я на коні"},{href:"img/sport/3.jpg",src:"img/sport/3_tb.jpg",alt:"Хоп хей ла-ла-лей, три девченки , семь пеарней"},{href:"img/sport/4.jpg",src:"img/sport/4_tb.jpg",alt:"Пара навей..."},{href:"img/sport/5.jpg",src:"img/sport/5_tb.jpg",alt:"Конем ходи..."},{href:"img/sport/6.jpg",src:"img/sport/6_tb.jpg",alt:"Тихше їдеш - далі будеш"},{href:"img/sport/7.jpg",src:"img/sport/7_tb.jpg",alt:"Св'яткові нагороди"}]},{id:"animated-thumbnials_3",dataCount:"5",links:[{href:"img/Nicholas_day/1.jpg",src:"img/Nicholas_day/1_tb.jpg",alt:"Nikolas"},{href:"img/Nicholas_day/2.jpg",src:"img/Nicholas_day/2_tb.jpg",alt:"croud"},{href:"img/Nicholas_day/3.jpg",src:"img/Nicholas_day/3_tb.jpg",alt:"Nikolas and girl"},{href:"img/Nicholas_day/4.jpg",src:"img/Nicholas_day/4_tb.jpg",alt:"Nikolas in park"},{href:"img/Nicholas_day/5.jpg",src:"img/Nicholas_day/5_tb.jpg",alt:"Nikolas horse"}]}]},templateInfo=document.getElementById("gallery-template").innerHTML,template=Handlebars.compile(templateInfo),templateData=template(json);document.getElementById("gallery_content").innerHTML+=templateData;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsiZ2V0RGF0ZSIsImdyZWV0aW5nIiwiZGF5QXJyYXkiLCJBcnJheSIsIm1vbnRoQXJyYXkiLCJuZGF0YSIsIkRhdGUiLCJkYXkiLCJnZXREYXkiLCJtb250aCIsImdldE1vbnRoIiwiZGF0ZSIsInllYXIiLCJnZXRGdWxsWWVhciIsImhvdXJzIiwiZ2V0SG91cnMiLCJtaW5zIiwiZ2V0TWludXRlcyIsInNlY3MiLCJnZXRTZWNvbmRzIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsImlubmVySFRNTCIsIkFTVGltZXIiLCJhc1RpbWVvdXQiLCJhc0NhbGxiYWNrIiwiYXNVcGRhdGVDYWxsYmFjayIsImFzVXBkYXRlSW50ZXJ2YWwiLCJhc1VwZGF0ZVRpbWVySWQiLCJhc1J1bm5pbmdUaW1lIiwidGhpcyIsInBhdXNlIiwiY2xlYXJJbnRlcnZhbCIsInJlc3VtZSIsInNldEludGVydmFsIiwic3RvcCIsInN0YXJ0Iiwib25Zb3VUdWJlSWZyYW1lQVBJUmVhZHkiLCJBU1lvdVR1YmVJZnJhbWVBUElSZWFkeSIsImdsb2JhbCIsImZhY3RvcnkiLCJtb2R1bGUiLCJleHBvcnRzIiwidyIsIkVycm9yIiwid2luZG93Iiwibm9HbG9iYWwiLCJpc0FycmF5TGlrZSIsIm9iaiIsImxlbmd0aCIsInR5cGUiLCJqUXVlcnkiLCJpc1dpbmRvdyIsIndpbm5vdyIsImVsZW1lbnRzIiwicXVhbGlmaWVyIiwibm90IiwiaXNGdW5jdGlvbiIsImdyZXAiLCJlbGVtIiwiaSIsImNhbGwiLCJub2RlVHlwZSIsInJpc1NpbXBsZSIsInRlc3QiLCJmaWx0ZXIiLCJpbkFycmF5Iiwic2libGluZyIsImN1ciIsImRpciIsImNyZWF0ZU9wdGlvbnMiLCJvcHRpb25zIiwib2JqZWN0IiwiZWFjaCIsIm1hdGNoIiwicm5vdHdoaXRlIiwiXyIsImZsYWciLCJkZXRhY2giLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImNvbXBsZXRlZCIsImRldGFjaEV2ZW50IiwiZXZlbnQiLCJyZWFkeVN0YXRlIiwicmVhZHkiLCJkYXRhQXR0ciIsImtleSIsImRhdGEiLCJ1bmRlZmluZWQiLCJuYW1lIiwicmVwbGFjZSIsInJtdWx0aURhc2giLCJ0b0xvd2VyQ2FzZSIsImdldEF0dHJpYnV0ZSIsInJicmFjZSIsInBhcnNlSlNPTiIsImUiLCJpc0VtcHR5RGF0YU9iamVjdCIsImlzRW1wdHlPYmplY3QiLCJpbnRlcm5hbERhdGEiLCJwdnQiLCJhY2NlcHREYXRhIiwicmV0IiwidGhpc0NhY2hlIiwiaW50ZXJuYWxLZXkiLCJleHBhbmRvIiwiaXNOb2RlIiwiY2FjaGUiLCJpZCIsImRlbGV0ZWRJZHMiLCJwb3AiLCJndWlkIiwidG9KU09OIiwibm9vcCIsImV4dGVuZCIsImNhbWVsQ2FzZSIsImludGVybmFsUmVtb3ZlRGF0YSIsImlzQXJyYXkiLCJjb25jYXQiLCJtYXAiLCJzcGxpdCIsImNsZWFuRGF0YSIsInN1cHBvcnQiLCJkZWxldGVFeHBhbmRvIiwiYWRqdXN0Q1NTIiwicHJvcCIsInZhbHVlUGFydHMiLCJ0d2VlbiIsImFkanVzdGVkIiwic2NhbGUiLCJtYXhJdGVyYXRpb25zIiwiY3VycmVudFZhbHVlIiwiY3NzIiwiaW5pdGlhbCIsInVuaXQiLCJjc3NOdW1iZXIiLCJpbml0aWFsSW5Vbml0IiwicmNzc051bSIsImV4ZWMiLCJzdHlsZSIsImVuZCIsImNyZWF0ZVNhZmVGcmFnbWVudCIsImxpc3QiLCJub2RlTmFtZXMiLCJzYWZlRnJhZyIsImNyZWF0ZURvY3VtZW50RnJhZ21lbnQiLCJjcmVhdGVFbGVtZW50IiwiZ2V0QWxsIiwiY29udGV4dCIsInRhZyIsImVsZW1zIiwiZm91bmQiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjaGlsZE5vZGVzIiwibm9kZU5hbWUiLCJwdXNoIiwibWVyZ2UiLCJzZXRHbG9iYWxFdmFsIiwicmVmRWxlbWVudHMiLCJfZGF0YSIsImZpeERlZmF1bHRDaGVja2VkIiwicmNoZWNrYWJsZVR5cGUiLCJkZWZhdWx0Q2hlY2tlZCIsImNoZWNrZWQiLCJidWlsZEZyYWdtZW50Iiwic2NyaXB0cyIsInNlbGVjdGlvbiIsImlnbm9yZWQiLCJqIiwiY29udGFpbnMiLCJ0bXAiLCJ0Ym9keSIsIndyYXAiLCJsIiwic2FmZSIsIm5vZGVzIiwicmh0bWwiLCJhcHBlbmRDaGlsZCIsInJ0YWdOYW1lIiwid3JhcE1hcCIsIl9kZWZhdWx0IiwiaHRtbFByZWZpbHRlciIsImxhc3RDaGlsZCIsImxlYWRpbmdXaGl0ZXNwYWNlIiwicmxlYWRpbmdXaGl0ZXNwYWNlIiwiY3JlYXRlVGV4dE5vZGUiLCJydGJvZHkiLCJmaXJzdENoaWxkIiwicmVtb3ZlQ2hpbGQiLCJ0ZXh0Q29udGVudCIsImFwcGVuZENoZWNrZWQiLCJvd25lckRvY3VtZW50IiwicnNjcmlwdFR5cGUiLCJyZXR1cm5UcnVlIiwicmV0dXJuRmFsc2UiLCJzYWZlQWN0aXZlRWxlbWVudCIsImFjdGl2ZUVsZW1lbnQiLCJlcnIiLCJvbiIsInR5cGVzIiwic2VsZWN0b3IiLCJmbiIsIm9uZSIsIm9yaWdGbiIsIm9mZiIsImFwcGx5IiwiYXJndW1lbnRzIiwiYWRkIiwibWFuaXB1bGF0aW9uVGFyZ2V0IiwiY29udGVudCIsImRpc2FibGVTY3JpcHQiLCJmaW5kIiwiYXR0ciIsInJlc3RvcmVTY3JpcHQiLCJyc2NyaXB0VHlwZU1hc2tlZCIsInJlbW92ZUF0dHJpYnV0ZSIsImNsb25lQ29weUV2ZW50Iiwic3JjIiwiZGVzdCIsImhhc0RhdGEiLCJvbGREYXRhIiwiY3VyRGF0YSIsImV2ZW50cyIsImhhbmRsZSIsImZpeENsb25lTm9kZUlzc3VlcyIsIm5vQ2xvbmVFdmVudCIsInJlbW92ZUV2ZW50IiwidGV4dCIsInBhcmVudE5vZGUiLCJvdXRlckhUTUwiLCJodG1sNUNsb25lIiwidHJpbSIsInZhbHVlIiwiZGVmYXVsdFNlbGVjdGVkIiwic2VsZWN0ZWQiLCJkZWZhdWx0VmFsdWUiLCJkb21NYW5pcCIsImNvbGxlY3Rpb24iLCJhcmdzIiwiY2FsbGJhY2siLCJmaXJzdCIsIm5vZGUiLCJoYXNTY3JpcHRzIiwiZG9jIiwiZnJhZ21lbnQiLCJpTm9DbG9uZSIsImNoZWNrQ2xvbmUiLCJyY2hlY2tlZCIsImluZGV4Iiwic2VsZiIsImVxIiwiaHRtbCIsImNsb25lIiwiX2V2YWxVcmwiLCJnbG9iYWxFdmFsIiwicmNsZWFuU2NyaXB0IiwicmVtb3ZlIiwia2VlcERhdGEiLCJhY3R1YWxEaXNwbGF5IiwiYXBwZW5kVG8iLCJib2R5IiwiZGlzcGxheSIsImRlZmF1bHREaXNwbGF5IiwiZWxlbWRpc3BsYXkiLCJpZnJhbWUiLCJkb2N1bWVudEVsZW1lbnQiLCJjb250ZW50V2luZG93IiwiY29udGVudERvY3VtZW50Iiwid3JpdGUiLCJjbG9zZSIsImFkZEdldEhvb2tJZiIsImNvbmRpdGlvbkZuIiwiaG9va0ZuIiwiZ2V0IiwidmVuZG9yUHJvcE5hbWUiLCJlbXB0eVN0eWxlIiwiY2FwTmFtZSIsImNoYXJBdCIsInRvVXBwZXJDYXNlIiwic2xpY2UiLCJjc3NQcmVmaXhlcyIsInNob3dIaWRlIiwic2hvdyIsImhpZGRlbiIsInZhbHVlcyIsImlzSGlkZGVuIiwic2V0UG9zaXRpdmVOdW1iZXIiLCJzdWJ0cmFjdCIsIm1hdGNoZXMiLCJybnVtc3BsaXQiLCJNYXRoIiwibWF4IiwiYXVnbWVudFdpZHRoT3JIZWlnaHQiLCJleHRyYSIsImlzQm9yZGVyQm94Iiwic3R5bGVzIiwidmFsIiwiY3NzRXhwYW5kIiwiZ2V0V2lkdGhPckhlaWdodCIsInZhbHVlSXNCb3JkZXJCb3giLCJvZmZzZXRXaWR0aCIsIm9mZnNldEhlaWdodCIsImdldFN0eWxlcyIsImJveFNpemluZyIsImN1ckNTUyIsInJudW1ub25weCIsImJveFNpemluZ1JlbGlhYmxlIiwicGFyc2VGbG9hdCIsIlR3ZWVuIiwiZWFzaW5nIiwicHJvdG90eXBlIiwiaW5pdCIsImNyZWF0ZUZ4Tm93Iiwic2V0VGltZW91dCIsImZ4Tm93Iiwibm93IiwiZ2VuRngiLCJpbmNsdWRlV2lkdGgiLCJ3aGljaCIsImF0dHJzIiwiaGVpZ2h0Iiwib3BhY2l0eSIsIndpZHRoIiwiY3JlYXRlVHdlZW4iLCJhbmltYXRpb24iLCJBbmltYXRpb24iLCJ0d2VlbmVycyIsImRlZmF1bHRQcmVmaWx0ZXIiLCJwcm9wcyIsIm9wdHMiLCJ0b2dnbGUiLCJob29rcyIsIm9sZGZpcmUiLCJjaGVja0Rpc3BsYXkiLCJhbmltIiwib3JpZyIsImRhdGFTaG93IiwicXVldWUiLCJfcXVldWVIb29rcyIsInVucXVldWVkIiwiZW1wdHkiLCJmaXJlIiwiYWx3YXlzIiwib3ZlcmZsb3ciLCJvdmVyZmxvd1giLCJvdmVyZmxvd1kiLCJpbmxpbmVCbG9ja05lZWRzTGF5b3V0Iiwiem9vbSIsInNocmlua1dyYXBCbG9ja3MiLCJyZnh0eXBlcyIsImRvbmUiLCJoaWRlIiwiX3JlbW92ZURhdGEiLCJwcm9wRmlsdGVyIiwic3BlY2lhbEVhc2luZyIsImNzc0hvb2tzIiwiZXhwYW5kIiwicHJvcGVydGllcyIsInJlc3VsdCIsInN0b3BwZWQiLCJwcmVmaWx0ZXJzIiwiZGVmZXJyZWQiLCJEZWZlcnJlZCIsInRpY2siLCJjdXJyZW50VGltZSIsInJlbWFpbmluZyIsInN0YXJ0VGltZSIsImR1cmF0aW9uIiwidGVtcCIsInBlcmNlbnQiLCJ0d2VlbnMiLCJydW4iLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJwcm9taXNlIiwib3JpZ2luYWxQcm9wZXJ0aWVzIiwib3JpZ2luYWxPcHRpb25zIiwiZ290b0VuZCIsInJlamVjdFdpdGgiLCJwcm94eSIsImZ4IiwidGltZXIiLCJwcm9ncmVzcyIsImNvbXBsZXRlIiwiZmFpbCIsImdldENsYXNzIiwiYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzIiwic3RydWN0dXJlIiwiZGF0YVR5cGVFeHByZXNzaW9uIiwiZnVuYyIsImRhdGFUeXBlIiwiZGF0YVR5cGVzIiwidW5zaGlmdCIsImluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzIiwianFYSFIiLCJpbnNwZWN0IiwiaW5zcGVjdGVkIiwicHJlZmlsdGVyT3JGYWN0b3J5IiwiZGF0YVR5cGVPclRyYW5zcG9ydCIsInNlZWtpbmdUcmFuc3BvcnQiLCJ0cmFuc3BvcnRzIiwiYWpheEV4dGVuZCIsInRhcmdldCIsImRlZXAiLCJmbGF0T3B0aW9ucyIsImFqYXhTZXR0aW5ncyIsImFqYXhIYW5kbGVSZXNwb25zZXMiLCJzIiwicmVzcG9uc2VzIiwiZmlyc3REYXRhVHlwZSIsImN0IiwiZmluYWxEYXRhVHlwZSIsImNvbnRlbnRzIiwic2hpZnQiLCJtaW1lVHlwZSIsImdldFJlc3BvbnNlSGVhZGVyIiwiY29udmVydGVycyIsImFqYXhDb252ZXJ0IiwicmVzcG9uc2UiLCJpc1N1Y2Nlc3MiLCJjb252MiIsImN1cnJlbnQiLCJjb252IiwicHJldiIsInJlc3BvbnNlRmllbGRzIiwiZGF0YUZpbHRlciIsInN0YXRlIiwiZXJyb3IiLCJnZXREaXNwbGF5IiwiZmlsdGVySGlkZGVuIiwiYnVpbGRQYXJhbXMiLCJwcmVmaXgiLCJ0cmFkaXRpb25hbCIsInYiLCJyYnJhY2tldCIsImNyZWF0ZVN0YW5kYXJkWEhSIiwiWE1MSHR0cFJlcXVlc3QiLCJjcmVhdGVBY3RpdmVYSFIiLCJBY3RpdmVYT2JqZWN0IiwiZ2V0V2luZG93IiwiZGVmYXVsdFZpZXciLCJwYXJlbnRXaW5kb3ciLCJpbmRleE9mIiwiY2xhc3MydHlwZSIsInRvU3RyaW5nIiwiaGFzT3duIiwiaGFzT3duUHJvcGVydHkiLCJ2ZXJzaW9uIiwicnRyaW0iLCJybXNQcmVmaXgiLCJyZGFzaEFscGhhIiwiZmNhbWVsQ2FzZSIsImFsbCIsImxldHRlciIsImpxdWVyeSIsImNvbnN0cnVjdG9yIiwidG9BcnJheSIsIm51bSIsInB1c2hTdGFjayIsInByZXZPYmplY3QiLCJsYXN0IiwibGVuIiwic29ydCIsInNwbGljZSIsImNvcHlJc0FycmF5IiwiY29weSIsImlzUGxhaW5PYmplY3QiLCJyYW5kb20iLCJpc1JlYWR5IiwibXNnIiwiaXNOdW1lcmljIiwicmVhbFN0cmluZ09iaiIsIm93bkZpcnN0IiwiZXhlY1NjcmlwdCIsInN0cmluZyIsIm1ha2VBcnJheSIsImFyciIsInJlc3VsdHMiLCJPYmplY3QiLCJzZWNvbmQiLCJpbnZlcnQiLCJjYWxsYmFja0ludmVyc2UiLCJjYWxsYmFja0V4cGVjdCIsImFyZyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiU2l6emxlIiwic2VlZCIsIm0iLCJuaWQiLCJuaWRzZWxlY3QiLCJncm91cHMiLCJuZXdTZWxlY3RvciIsIm5ld0NvbnRleHQiLCJwcmVmZXJyZWREb2MiLCJzZXREb2N1bWVudCIsImRvY3VtZW50SXNIVE1MIiwicnF1aWNrRXhwciIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJxc2EiLCJjb21waWxlckNhY2hlIiwicmJ1Z2d5UVNBIiwicmVzY2FwZSIsInNldEF0dHJpYnV0ZSIsInRva2VuaXplIiwicmlkZW50aWZpZXIiLCJ0b1NlbGVjdG9yIiwiam9pbiIsInJzaWJsaW5nIiwidGVzdENvbnRleHQiLCJxc2FFcnJvciIsInNlbGVjdCIsImNyZWF0ZUNhY2hlIiwia2V5cyIsIkV4cHIiLCJjYWNoZUxlbmd0aCIsIm1hcmtGdW5jdGlvbiIsImFzc2VydCIsImRpdiIsImFkZEhhbmRsZSIsImhhbmRsZXIiLCJhdHRySGFuZGxlIiwic2libGluZ0NoZWNrIiwiYSIsImIiLCJkaWZmIiwic291cmNlSW5kZXgiLCJNQVhfTkVHQVRJVkUiLCJuZXh0U2libGluZyIsImNyZWF0ZUlucHV0UHNldWRvIiwiY3JlYXRlQnV0dG9uUHNldWRvIiwiY3JlYXRlUG9zaXRpb25hbFBzZXVkbyIsImFyZ3VtZW50IiwibWF0Y2hJbmRleGVzIiwic2V0RmlsdGVycyIsInRva2VucyIsImFkZENvbWJpbmF0b3IiLCJtYXRjaGVyIiwiY29tYmluYXRvciIsImJhc2UiLCJjaGVja05vbkVsZW1lbnRzIiwiZG9uZU5hbWUiLCJ4bWwiLCJvbGRDYWNoZSIsInVuaXF1ZUNhY2hlIiwib3V0ZXJDYWNoZSIsIm5ld0NhY2hlIiwiZGlycnVucyIsInVuaXF1ZUlEIiwiZWxlbWVudE1hdGNoZXIiLCJtYXRjaGVycyIsIm11bHRpcGxlQ29udGV4dHMiLCJjb250ZXh0cyIsImNvbmRlbnNlIiwidW5tYXRjaGVkIiwibmV3VW5tYXRjaGVkIiwibWFwcGVkIiwic2V0TWF0Y2hlciIsInByZUZpbHRlciIsInBvc3RGaWx0ZXIiLCJwb3N0RmluZGVyIiwicG9zdFNlbGVjdG9yIiwicHJlTWFwIiwicG9zdE1hcCIsInByZWV4aXN0aW5nIiwibWF0Y2hlckluIiwibWF0Y2hlck91dCIsIm1hdGNoZXJGcm9tVG9rZW5zIiwiY2hlY2tDb250ZXh0IiwibGVhZGluZ1JlbGF0aXZlIiwicmVsYXRpdmUiLCJpbXBsaWNpdFJlbGF0aXZlIiwibWF0Y2hDb250ZXh0IiwibWF0Y2hBbnlDb250ZXh0Iiwib3V0ZXJtb3N0Q29udGV4dCIsIm1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyIsImVsZW1lbnRNYXRjaGVycyIsInNldE1hdGNoZXJzIiwiYnlTZXQiLCJieUVsZW1lbnQiLCJzdXBlck1hdGNoZXIiLCJvdXRlcm1vc3QiLCJtYXRjaGVkQ291bnQiLCJzZXRNYXRjaGVkIiwiY29udGV4dEJhY2t1cCIsImRpcnJ1bnNVbmlxdWUiLCJ1bmlxdWVTb3J0IiwiZ2V0VGV4dCIsImlzWE1MIiwiY29tcGlsZSIsInNvcnRJbnB1dCIsImhhc0R1cGxpY2F0ZSIsImRvY0VsZW0iLCJyYnVnZ3lNYXRjaGVzIiwiY2xhc3NDYWNoZSIsInRva2VuQ2FjaGUiLCJzb3J0T3JkZXIiLCJwdXNoX25hdGl2ZSIsImJvb2xlYW5zIiwid2hpdGVzcGFjZSIsImlkZW50aWZpZXIiLCJhdHRyaWJ1dGVzIiwicHNldWRvcyIsInJ3aGl0ZXNwYWNlIiwiUmVnRXhwIiwicmNvbW1hIiwicmNvbWJpbmF0b3JzIiwicmF0dHJpYnV0ZVF1b3RlcyIsInJwc2V1ZG8iLCJtYXRjaEV4cHIiLCJJRCIsIkNMQVNTIiwiVEFHIiwiQVRUUiIsIlBTRVVETyIsIkNISUxEIiwiYm9vbCIsIm5lZWRzQ29udGV4dCIsInJpbnB1dHMiLCJyaGVhZGVyIiwicm5hdGl2ZSIsInJ1bmVzY2FwZSIsImZ1bmVzY2FwZSIsImVzY2FwZWQiLCJlc2NhcGVkV2hpdGVzcGFjZSIsImhpZ2giLCJTdHJpbmciLCJmcm9tQ2hhckNvZGUiLCJ1bmxvYWRIYW5kbGVyIiwiZWxzIiwiaGFzQ29tcGFyZSIsInBhcmVudCIsInRvcCIsImF0dGFjaEV2ZW50IiwiY2xhc3NOYW1lIiwiY3JlYXRlQ29tbWVudCIsImdldEJ5SWQiLCJnZXRFbGVtZW50c0J5TmFtZSIsImF0dHJJZCIsImdldEF0dHJpYnV0ZU5vZGUiLCJpbnB1dCIsIm1hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImRpc2Nvbm5lY3RlZE1hdGNoIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJhZG93biIsImJ1cCIsImNvbXBhcmUiLCJzb3J0RGV0YWNoZWQiLCJhdXAiLCJhcCIsImJwIiwiZXhwciIsInNwZWNpZmllZCIsImR1cGxpY2F0ZXMiLCJkZXRlY3REdXBsaWNhdGVzIiwic29ydFN0YWJsZSIsIm5vZGVWYWx1ZSIsInNlbGVjdG9ycyIsImNyZWF0ZVBzZXVkbyIsIj4iLCIgIiwiKyIsIn4iLCJleGNlc3MiLCJ1bnF1b3RlZCIsIm5vZGVOYW1lU2VsZWN0b3IiLCJwYXR0ZXJuIiwib3BlcmF0b3IiLCJjaGVjayIsIndoYXQiLCJzaW1wbGUiLCJmb3J3YXJkIiwib2ZUeXBlIiwibm9kZUluZGV4IiwidXNlQ2FjaGUiLCJwc2V1ZG8iLCJpZHgiLCJtYXRjaGVkIiwiaGFzIiwiaW5uZXJUZXh0IiwibGFuZyIsImVsZW1MYW5nIiwiaGFzaCIsImxvY2F0aW9uIiwicm9vdCIsImZvY3VzIiwiaGFzRm9jdXMiLCJocmVmIiwidGFiSW5kZXgiLCJlbmFibGVkIiwiZGlzYWJsZWQiLCJzZWxlY3RlZEluZGV4IiwiaGVhZGVyIiwiYnV0dG9uIiwiZXZlbiIsIm9kZCIsImx0IiwiZ3QiLCJyYWRpbyIsImNoZWNrYm94IiwiZmlsZSIsInBhc3N3b3JkIiwiaW1hZ2UiLCJzdWJtaXQiLCJyZXNldCIsImZpbHRlcnMiLCJwYXJzZU9ubHkiLCJzb0ZhciIsInByZUZpbHRlcnMiLCJjYWNoZWQiLCJ0b2tlbiIsImNvbXBpbGVkIiwiZGl2MSIsInVuaXF1ZSIsImlzWE1MRG9jIiwidW50aWwiLCJ0cnVuY2F0ZSIsImlzIiwic2libGluZ3MiLCJuIiwicm5lZWRzQ29udGV4dCIsInJzaW5nbGVUYWciLCJyb290alF1ZXJ5IiwicGFyc2VIVE1MIiwicnBhcmVudHNwcmV2IiwiZ3VhcmFudGVlZFVuaXF1ZSIsImNoaWxkcmVuIiwibmV4dCIsInRhcmdldHMiLCJjbG9zZXN0IiwicG9zIiwicHJldkFsbCIsImFkZEJhY2siLCJwYXJlbnRzIiwicGFyZW50c1VudGlsIiwibmV4dEFsbCIsIm5leHRVbnRpbCIsInByZXZVbnRpbCIsInJldmVyc2UiLCJDYWxsYmFja3MiLCJmaXJpbmciLCJtZW1vcnkiLCJmaXJlZCIsImxvY2tlZCIsImZpcmluZ0luZGV4Iiwib25jZSIsInN0b3BPbkZhbHNlIiwiZGlzYWJsZSIsImxvY2siLCJmaXJlV2l0aCIsInR1cGxlcyIsInRoZW4iLCJmbnMiLCJuZXdEZWZlciIsInR1cGxlIiwicmV0dXJuZWQiLCJub3RpZnkiLCJyZXNvbHZlIiwicmVqZWN0IiwicGlwZSIsInN0YXRlU3RyaW5nIiwid2hlbiIsInN1Ym9yZGluYXRlIiwicHJvZ3Jlc3NWYWx1ZXMiLCJwcm9ncmVzc0NvbnRleHRzIiwicmVzb2x2ZUNvbnRleHRzIiwicmVzb2x2ZVZhbHVlcyIsInVwZGF0ZUZ1bmMiLCJyZWFkeUxpc3QiLCJyZWFkeVdhaXQiLCJob2xkUmVhZHkiLCJob2xkIiwid2FpdCIsInRyaWdnZXJIYW5kbGVyIiwiZG9TY3JvbGwiLCJmcmFtZUVsZW1lbnQiLCJkb1Njcm9sbENoZWNrIiwiY29udGFpbmVyIiwiY3NzVGV4dCIsIm5vRGF0YSIsImFwcGxldCAiLCJlbWJlZCAiLCJvYmplY3QgIiwicmVtb3ZlRGF0YSIsImRlcXVldWUiLCJzdGFydExlbmd0aCIsInNldHRlciIsImNsZWFyUXVldWUiLCJjb3VudCIsImRlZmVyIiwic2hyaW5rV3JhcEJsb2Nrc1ZhbCIsInBudW0iLCJzb3VyY2UiLCJlbCIsImFjY2VzcyIsImNoYWluYWJsZSIsImVtcHR5R2V0IiwicmF3IiwiYnVsayIsImh0bWxTZXJpYWxpemUiLCJjbG9uZU5vZGUiLCJub0Nsb25lQ2hlY2tlZCIsIm9wdGlvbiIsImxlZ2VuZCIsImFyZWEiLCJwYXJhbSIsInRoZWFkIiwidHIiLCJjb2wiLCJ0ZCIsIm9wdGdyb3VwIiwidGZvb3QiLCJjb2xncm91cCIsImNhcHRpb24iLCJ0aCIsImV2ZW50TmFtZSIsImNoYW5nZSIsImZvY3VzaW4iLCJyZm9ybUVsZW1zIiwicmtleUV2ZW50Iiwicm1vdXNlRXZlbnQiLCJyZm9jdXNNb3JwaCIsInJ0eXBlbmFtZXNwYWNlIiwidCIsImhhbmRsZU9iakluIiwic3BlY2lhbCIsImV2ZW50SGFuZGxlIiwiaGFuZGxlT2JqIiwiaGFuZGxlcnMiLCJuYW1lc3BhY2VzIiwib3JpZ1R5cGUiLCJlbGVtRGF0YSIsInRyaWdnZXJlZCIsImRpc3BhdGNoIiwiZGVsZWdhdGVUeXBlIiwiYmluZFR5cGUiLCJuYW1lc3BhY2UiLCJkZWxlZ2F0ZUNvdW50Iiwic2V0dXAiLCJtYXBwZWRUeXBlcyIsIm9yaWdDb3VudCIsInRlYXJkb3duIiwidHJpZ2dlciIsIm9ubHlIYW5kbGVycyIsIm9udHlwZSIsImJ1YmJsZVR5cGUiLCJldmVudFBhdGgiLCJFdmVudCIsImlzVHJpZ2dlciIsInJuYW1lc3BhY2UiLCJub0J1YmJsZSIsImlzUHJvcGFnYXRpb25TdG9wcGVkIiwicHJldmVudERlZmF1bHQiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJmaXgiLCJoYW5kbGVyUXVldWUiLCJkZWxlZ2F0ZVRhcmdldCIsInByZURpc3BhdGNoIiwiY3VycmVudFRhcmdldCIsImlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkIiwic3RvcFByb3BhZ2F0aW9uIiwicG9zdERpc3BhdGNoIiwic2VsIiwiaXNOYU4iLCJvcmlnaW5hbEV2ZW50IiwiZml4SG9vayIsImZpeEhvb2tzIiwibW91c2VIb29rcyIsImtleUhvb2tzIiwic3JjRWxlbWVudCIsIm1ldGFLZXkiLCJvcmlnaW5hbCIsImNoYXJDb2RlIiwia2V5Q29kZSIsImV2ZW50RG9jIiwiZnJvbUVsZW1lbnQiLCJwYWdlWCIsImNsaWVudFgiLCJzY3JvbGxMZWZ0IiwiY2xpZW50TGVmdCIsInBhZ2VZIiwiY2xpZW50WSIsInNjcm9sbFRvcCIsImNsaWVudFRvcCIsInJlbGF0ZWRUYXJnZXQiLCJ0b0VsZW1lbnQiLCJsb2FkIiwiYmx1ciIsImNsaWNrIiwiYmVmb3JldW5sb2FkIiwicmV0dXJuVmFsdWUiLCJzaW11bGF0ZSIsImlzU2ltdWxhdGVkIiwiZGVmYXVsdFByZXZlbnRlZCIsInRpbWVTdGFtcCIsImNhbmNlbEJ1YmJsZSIsInN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiIsIm1vdXNlZW50ZXIiLCJtb3VzZWxlYXZlIiwicG9pbnRlcmVudGVyIiwicG9pbnRlcmxlYXZlIiwicmVsYXRlZCIsImZvcm0iLCJfc3VibWl0QnViYmxlIiwicHJvcGVydHlOYW1lIiwiX2p1c3RDaGFuZ2VkIiwiYXR0YWNoZXMiLCJyaW5saW5lalF1ZXJ5Iiwicm5vc2hpbWNhY2hlIiwicnhodG1sVGFnIiwicm5vSW5uZXJodG1sIiwic2FmZUZyYWdtZW50IiwiZnJhZ21lbnREaXYiLCJkYXRhQW5kRXZlbnRzIiwiZGVlcERhdGFBbmRFdmVudHMiLCJkZXN0RWxlbWVudHMiLCJzcmNFbGVtZW50cyIsImluUGFnZSIsImZvcmNlQWNjZXB0RGF0YSIsImFwcGVuZCIsInByZXBlbmQiLCJpbnNlcnRCZWZvcmUiLCJiZWZvcmUiLCJhZnRlciIsInJlcGxhY2VXaXRoIiwicmVwbGFjZUNoaWxkIiwicHJlcGVuZFRvIiwiaW5zZXJ0QWZ0ZXIiLCJyZXBsYWNlQWxsIiwiaW5zZXJ0IiwiSFRNTCIsIkJPRFkiLCJybWFyZ2luIiwic3dhcCIsIm9sZCIsImNvbXB1dGVTdHlsZVRlc3RzIiwiZGl2U3R5bGUiLCJwaXhlbFBvc2l0aW9uVmFsIiwiYm94U2l6aW5nUmVsaWFibGVWYWwiLCJyZWxpYWJsZU1hcmdpbkxlZnRWYWwiLCJwaXhlbE1hcmdpblJpZ2h0VmFsIiwicmVsaWFibGVNYXJnaW5SaWdodFZhbCIsImdldENvbXB1dGVkU3R5bGUiLCJtYXJnaW5MZWZ0IiwibWFyZ2luUmlnaHQiLCJyZWxpYWJsZUhpZGRlbk9mZnNldHNWYWwiLCJnZXRDbGllbnRSZWN0cyIsImJvcmRlckNvbGxhcHNlIiwiY3NzRmxvYXQiLCJiYWNrZ3JvdW5kQ2xpcCIsImNsZWFyQ2xvbmVTdHlsZSIsIk1vekJveFNpemluZyIsIldlYmtpdEJveFNpemluZyIsInJlbGlhYmxlSGlkZGVuT2Zmc2V0cyIsInBpeGVsTWFyZ2luUmlnaHQiLCJwaXhlbFBvc2l0aW9uIiwicmVsaWFibGVNYXJnaW5SaWdodCIsInJlbGlhYmxlTWFyZ2luTGVmdCIsInJwb3NpdGlvbiIsInZpZXciLCJvcGVuZXIiLCJjb21wdXRlZCIsIm1pbldpZHRoIiwibWF4V2lkdGgiLCJnZXRQcm9wZXJ0eVZhbHVlIiwiY3VycmVudFN0eWxlIiwibGVmdCIsInJzIiwicnNMZWZ0IiwicnVudGltZVN0eWxlIiwicGl4ZWxMZWZ0IiwicmFscGhhIiwicm9wYWNpdHkiLCJyZGlzcGxheXN3YXAiLCJjc3NTaG93IiwicG9zaXRpb24iLCJ2aXNpYmlsaXR5IiwiY3NzTm9ybWFsVHJhbnNmb3JtIiwibGV0dGVyU3BhY2luZyIsImZvbnRXZWlnaHQiLCJhbmltYXRpb25JdGVyYXRpb25Db3VudCIsImNvbHVtbkNvdW50IiwiZmlsbE9wYWNpdHkiLCJmbGV4R3JvdyIsImZsZXhTaHJpbmsiLCJsaW5lSGVpZ2h0Iiwib3JkZXIiLCJvcnBoYW5zIiwid2lkb3dzIiwiekluZGV4IiwiY3NzUHJvcHMiLCJmbG9hdCIsIm9yaWdOYW1lIiwic2V0IiwiaXNGaW5pdGUiLCIkMSIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsIm1hcmdpbiIsInBhZGRpbmciLCJib3JkZXIiLCJzdWZmaXgiLCJleHBhbmRlZCIsInBhcnRzIiwicHJvcEhvb2tzIiwiZWFzZWQiLCJzdGVwIiwibGluZWFyIiwicCIsInN3aW5nIiwiY29zIiwiUEkiLCJ0aW1lcklkIiwicnJ1biIsIioiLCJ0d2VlbmVyIiwicHJlZmlsdGVyIiwic3BlZWQiLCJvcHQiLCJzcGVlZHMiLCJmYWRlVG8iLCJ0byIsImFuaW1hdGUiLCJvcHRhbGwiLCJkb0FuaW1hdGlvbiIsImZpbmlzaCIsInN0b3BRdWV1ZSIsInRpbWVycyIsImNzc0ZuIiwic2xpZGVEb3duIiwic2xpZGVVcCIsInNsaWRlVG9nZ2xlIiwiZmFkZUluIiwiZmFkZU91dCIsImZhZGVUb2dnbGUiLCJpbnRlcnZhbCIsInNsb3ciLCJmYXN0IiwiZGVsYXkiLCJ0aW1lIiwidGltZW91dCIsImNsZWFyVGltZW91dCIsImdldFNldEF0dHJpYnV0ZSIsImhyZWZOb3JtYWxpemVkIiwiY2hlY2tPbiIsIm9wdFNlbGVjdGVkIiwiZW5jdHlwZSIsIm9wdERpc2FibGVkIiwicmFkaW9WYWx1ZSIsInJyZXR1cm4iLCJyc3BhY2VzIiwidmFsSG9va3MiLCJvcHRpb25TZXQiLCJzY3JvbGxIZWlnaHQiLCJub2RlSG9vayIsImJvb2xIb29rIiwicnVzZURlZmF1bHQiLCJnZXRTZXRJbnB1dCIsInJlbW92ZUF0dHIiLCJuVHlwZSIsImF0dHJIb29rcyIsInByb3BOYW1lIiwiYXR0ck5hbWVzIiwicHJvcEZpeCIsImdldHRlciIsInNldEF0dHJpYnV0ZU5vZGUiLCJjcmVhdGVBdHRyaWJ1dGUiLCJjb29yZHMiLCJjb250ZW50ZWRpdGFibGUiLCJyZm9jdXNhYmxlIiwicmNsaWNrYWJsZSIsInJlbW92ZVByb3AiLCJ0YWJpbmRleCIsInBhcnNlSW50IiwiZm9yIiwiY2xhc3MiLCJyY2xhc3MiLCJhZGRDbGFzcyIsImNsYXNzZXMiLCJjdXJWYWx1ZSIsImNsYXp6IiwiZmluYWxWYWx1ZSIsInJlbW92ZUNsYXNzIiwidG9nZ2xlQ2xhc3MiLCJzdGF0ZVZhbCIsImNsYXNzTmFtZXMiLCJoYXNDbGFzcyIsImhvdmVyIiwiZm5PdmVyIiwiZm5PdXQiLCJub25jZSIsInJxdWVyeSIsInJ2YWxpZHRva2VucyIsIkpTT04iLCJwYXJzZSIsInJlcXVpcmVOb25Db21tYSIsImRlcHRoIiwic3RyIiwiY29tbWEiLCJvcGVuIiwiRnVuY3Rpb24iLCJwYXJzZVhNTCIsIkRPTVBhcnNlciIsInBhcnNlRnJvbVN0cmluZyIsImFzeW5jIiwibG9hZFhNTCIsInJoYXNoIiwicnRzIiwicmhlYWRlcnMiLCJybG9jYWxQcm90b2NvbCIsInJub0NvbnRlbnQiLCJycHJvdG9jb2wiLCJydXJsIiwiYWxsVHlwZXMiLCJhamF4TG9jYXRpb24iLCJhamF4TG9jUGFydHMiLCJhY3RpdmUiLCJsYXN0TW9kaWZpZWQiLCJldGFnIiwidXJsIiwiaXNMb2NhbCIsInByb2Nlc3NEYXRhIiwiY29udGVudFR5cGUiLCJhY2NlcHRzIiwianNvbiIsIiogdGV4dCIsInRleHQgaHRtbCIsInRleHQganNvbiIsInRleHQgeG1sIiwiYWpheFNldHVwIiwic2V0dGluZ3MiLCJhamF4UHJlZmlsdGVyIiwiYWpheFRyYW5zcG9ydCIsImFqYXgiLCJzdGF0dXMiLCJuYXRpdmVTdGF0dXNUZXh0IiwiaGVhZGVycyIsInN1Y2Nlc3MiLCJtb2RpZmllZCIsInN0YXR1c1RleHQiLCJ0aW1lb3V0VGltZXIiLCJ0cmFuc3BvcnQiLCJyZXNwb25zZUhlYWRlcnNTdHJpbmciLCJpZk1vZGlmaWVkIiwiY2FjaGVVUkwiLCJjYWxsYmFja0NvbnRleHQiLCJzdGF0dXNDb2RlIiwiZmlyZUdsb2JhbHMiLCJnbG9iYWxFdmVudENvbnRleHQiLCJjb21wbGV0ZURlZmVycmVkIiwicmVzcG9uc2VIZWFkZXJzIiwicmVxdWVzdEhlYWRlcnMiLCJyZXF1ZXN0SGVhZGVyc05hbWVzIiwic3RyQWJvcnQiLCJnZXRBbGxSZXNwb25zZUhlYWRlcnMiLCJzZXRSZXF1ZXN0SGVhZGVyIiwibG5hbWUiLCJvdmVycmlkZU1pbWVUeXBlIiwiY29kZSIsImFib3J0IiwiZmluYWxUZXh0IiwibWV0aG9kIiwiY3Jvc3NEb21haW4iLCJoYXNDb250ZW50IiwiYmVmb3JlU2VuZCIsInNlbmQiLCJnZXRKU09OIiwiZ2V0U2NyaXB0IiwidGhyb3dzIiwid3JhcEFsbCIsIndyYXBJbm5lciIsInVud3JhcCIsInZpc2libGUiLCJyMjAiLCJyQ1JMRiIsInJzdWJtaXR0ZXJUeXBlcyIsInJzdWJtaXR0YWJsZSIsImVuY29kZVVSSUNvbXBvbmVudCIsInNlcmlhbGl6ZSIsInNlcmlhbGl6ZUFycmF5IiwieGhyIiwiZG9jdW1lbnRNb2RlIiwieGhySWQiLCJ4aHJDYWxsYmFja3MiLCJ4aHJTdXBwb3J0ZWQiLCJjb3JzIiwidXNlcm5hbWUiLCJ4aHJGaWVsZHMiLCJpc0Fib3J0Iiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVzcG9uc2VUZXh0Iiwic2NyaXB0IiwidGV4dCBzY3JpcHQiLCJoZWFkIiwic2NyaXB0Q2hhcnNldCIsImNoYXJzZXQiLCJvbmxvYWQiLCJvbGRDYWxsYmFja3MiLCJyanNvbnAiLCJqc29ucCIsImpzb25wQ2FsbGJhY2siLCJvcmlnaW5hbFNldHRpbmdzIiwiY2FsbGJhY2tOYW1lIiwib3ZlcndyaXR0ZW4iLCJyZXNwb25zZUNvbnRhaW5lciIsImpzb25Qcm9wIiwia2VlcFNjcmlwdHMiLCJwYXJzZWQiLCJfbG9hZCIsInBhcmFtcyIsImFuaW1hdGVkIiwib2Zmc2V0Iiwic2V0T2Zmc2V0IiwiY3VyUG9zaXRpb24iLCJjdXJMZWZ0IiwiY3VyQ1NTVG9wIiwiY3VyVG9wIiwiY3VyT2Zmc2V0IiwiY3VyQ1NTTGVmdCIsImNhbGN1bGF0ZVBvc2l0aW9uIiwiY3VyRWxlbSIsInVzaW5nIiwid2luIiwiYm94IiwicGFnZVlPZmZzZXQiLCJwYWdlWE9mZnNldCIsIm9mZnNldFBhcmVudCIsInBhcmVudE9mZnNldCIsInNjcm9sbFRvIiwiSGVpZ2h0IiwiV2lkdGgiLCIiLCJkZWZhdWx0RXh0cmEiLCJmdW5jTmFtZSIsImJpbmQiLCJ1bmJpbmQiLCJkZWxlZ2F0ZSIsInVuZGVsZWdhdGUiLCJzaXplIiwiYW5kU2VsZiIsImRlZmluZSIsImFtZCIsIl9qUXVlcnkiLCJfJCIsIiQiLCJub0NvbmZsaWN0IiwiaHRtbDVsaWdodGJveCIsImluc3QiLCJmcmVlbGluayIsImRlZmF1bHR2aWRlb3ZvbHVtZSIsImF1dG9wbGF5IiwiaHRtbDVwbGF5ZXIiLCJyZXNwb25zaXZlIiwibmF0aXZlaHRtbDVjb250cm9scyIsInZpZGVvaGlkZWNvbnRyb2xzIiwidXNlZmxhc2hvbmllOSIsInVzZWZsYXNob25pZTEwIiwidXNlZmxhc2hvbmllMTEiLCJnb29nbGVhbmFseXRpY3NhY2NvdW50IiwiYXJyb3dsb29wIiwic2hvd25hdmlnYXRpb24iLCJ0aHVtYndpZHRoIiwidGh1bWJoZWlnaHQiLCJ0aHVtYmdhcCIsInRodW1idG9wbWFyZ2luIiwidGh1bWJib3R0b21tYXJnaW4iLCJ0aHVtYmJvcmRlciIsInRodW1iYm9yZGVyY29sb3IiLCJ0aHVtYmhpZ2hsaWdodGJvcmRlcmNvbG9yIiwidGh1bWJvcGFjaXR5IiwibmF2YnV0dG9ud2lkdGgiLCJvdmVybGF5Ymdjb2xvciIsIm92ZXJsYXlvcGFjaXR5IiwiYmdjb2xvciIsImJvcmRlcnNpemUiLCJib3JkZXJyYWRpdXMiLCJib3JkZXJtYXJnaW4iLCJib3JkZXJ0b3BtYXJnaW4iLCJib3JkZXJ0b3BtYXJnaW5zbWFsbCIsImJhcmF1dG9oZWlnaHQiLCJiYXJoZWlnaHQiLCJsb2FkaW5nd2lkdGgiLCJsb2FkaW5naGVpZ2h0IiwicmVzaXplc3BlZWQiLCJmYWRlc3BlZWQiLCJqc2ZvbGRlciIsInNraW5zZm9sZGVybmFtZSIsImxvYWRpbmdpbWFnZSIsIm5leHRpbWFnZSIsInByZXZpbWFnZSIsImNsb3NlaW1hZ2UiLCJwbGF5dmlkZW9pbWFnZSIsInRpdGxlYmdpbWFnZSIsIm5hdmFycm93c3ByZXZpbWFnZSIsIm5hdmFycm93c25leHRpbWFnZSIsIm5hdmFycm93c2Fsd2F5c3Nob3dvbnRvdWNoIiwibmF2YXJyb3dzYm90dG9tc2NyZWVud2lkdGgiLCJjbG9zZW9ub3ZlcmxheSIsImFsd2F5c3Nob3duYXZhcnJvd3MiLCJzaG93cGxheWJ1dHRvbiIsInBsYXlpbWFnZSIsInBhdXNlaW1hZ2UiLCJmdWxsc2NyZWVubW9kZSIsImZ1bGxzY3JlZW5jbG9zZWltYWdlIiwiZnVsbHNjcmVlbm5leHRpbWFnZSIsImZ1bGxzY3JlZW5wcmV2aW1hZ2UiLCJ2aWRlb2JnY29sb3IiLCJzaG93dGl0bGUiLCJ0aXRsZXN0eWxlIiwidGl0bGVpbnNpZGVjc3MiLCJ0aXRsZWJvdHRvbWNzcyIsInNob3dkZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uaW5zaWRlY3NzIiwiZGVzY3JpcHRpb25ib3R0b21jc3MiLCJzaG93dGl0bGVwcmVmaXgiLCJ0aXRsZXByZWZpeCIsImF1dG9zbGlkZSIsInNsaWRlaW50ZXJ2YWwiLCJzaG93dGltZXIiLCJ0aW1lcnBvc2l0aW9uIiwidGltZXJoZWlnaHQiLCJ0aW1lcmNvbG9yIiwidGltZXJvcGFjaXR5IiwiaW5pdHZpbWVvIiwiaW5pdHlvdXR1YmUiLCJpbWFnZXBlcmNlbnRhZ2UiLCJzaWRldG9ib3R0b21zY3JlZW53aWR0aCIsImVycm9yd2lkdGgiLCJlcnJvcmhlaWdodCIsImVycm9yY3NzIiwiZW5hYmxldG91Y2hzd2lwZSIsInN1cHBvcnRlc2NrZXkiLCJzdXBwb3J0YXJyb3drZXlzIiwic3RhbXAiLCJmcmVlbWFyayIsIndhdGVybWFyayIsIndhdGVybWFya2xpbmsiLCJodG1sNWxpZ2h0Ym94X29wdGlvbnMiLCJERUZBVUxUX1dJRFRIIiwiREVGQVVMVF9IRUlHSFQiLCJFTEVNX1RZUEUiLCJFTEVNX0hSRUYiLCJFTEVNX1RJVExFIiwiRUxFTV9HUk9VUCIsIkVMRU1fV0lEVEgiLCJFTEVNX0hFSUdIVCIsIkVMRU1fSFJFRl9XRUJNIiwiRUxFTV9IUkVGX09HRyIsIkVMRU1fVEhVTUJOQUlMIiwiRUxFTV9ERVNDUklQVElPTiIsImh0bWxmb2xkZXIiLCJzdWJzdHIiLCJsYXN0SW5kZXhPZiIsInNraW5zZm9sZGVyIiwic3Vic3RyaW5nIiwibWFyayIsImJ5dGVzIiwiZDAiLCJmbGFzaEluc3RhbGxlZCIsIm5hdmlnYXRvciIsIm1pbWVUeXBlcyIsImh0bWw1VmlkZW9TdXBwb3J0ZWQiLCJjYW5QbGF5VHlwZSIsImlzQ2hyb21lIiwidXNlckFnZW50IiwiaXNGaXJlZm94IiwiaXNPcGVyYSIsImlzU2FmYXJpIiwiaXNJRTExIiwiaXNJRSIsImlzSUUxMCIsImlzSUU5IiwiaXNJRTgiLCJpc0lFNyIsImlzSUU2IiwiaXNJRTY3OCIsImlzSUU2Nzg5IiwiaXNBbmRyb2lkIiwiaXNJUGFkIiwiaXNJUGhvbmUiLCJpc0lPUyIsImlzTW9iaWxlIiwiaXNJT1NMZXNzNSIsInN1cHBvcnRDU1NQb3NpdGlvbkZpeGVkIiwiaWVxdWlya3Ntb2RlIiwiY29tcGF0TW9kZSIsImlzVG91Y2giLCJuYXZoZWlnaHQiLCJyZXNpemVUaW1lb3V0Iiwic2xpZGVUaW1lb3V0IiwiYXV0b3NsaWRpbmciLCJlbGVtQXJyYXkiLCJkZWZhdWx0b3B0aW9ucyIsIl9nYXEiLCJwcm90b2NvbCIsImZpcnN0U2NyaXB0VGFnIiwic2hvd2luZyIsInJlYWREYXRhIiwiY3JlYXRlTWFya3VwIiwic3VwcG9ydEtleWJvYXJkIiwiaW5pdFNsaWRlIiwiJHRoaXMiLCJmaWxlVHlwZSIsImNoZWNrVHlwZSIsInRpdGxlY3NzIiwiZGVzY3JpcHRpb25jc3MiLCJzdHlsZUNzcyIsIiRsaWdodGJveCIsInJvdW5kIiwiJGxpZ2h0Ym94Qm94IiwiJGVsZW0iLCIkZWxlbVdyYXAiLCIkbG9hZGluZyIsIiRlcnJvciIsIiRpbWFnZSIsImVsZW1UZXh0IiwiJGVsZW1EYXRhIiwiJHRleHQiLCJib3JkZXItcmFkaXVzIiwiLW1vei1ib3JkZXItcmFkaXVzIiwiLXdlYmtpdC1ib3JkZXItcmFkaXVzIiwiYm9yZGVyLXRvcC1sZWZ0LXJhZGl1cyIsIi1tb3otdG9wLWxlZnQtYm9yZGVyLXJhZGl1cyIsIi13ZWJraXQtdG9wLWxlZnQtYm9yZGVyLXJhZGl1cyIsImJvcmRlci10b3AtcmlnaHQtcmFkaXVzIiwiLW1vei10b3AtcmlnaHQtYm9yZGVyLXJhZGl1cyIsIi13ZWJraXQtdG9wLXJpZ2h0LWJvcmRlci1yYWRpdXMiLCJib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzIiwiLW1vei10b3AtYm90dG9tLWJvcmRlci1yYWRpdXMiLCItd2Via2l0LWJvdHRvbS1sZWZ0LWJvcmRlci1yYWRpdXMiLCJib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1cyIsIi1tb3otYm90dG9tLXJpZ2h0LWJvcmRlci1yYWRpdXMiLCItd2Via2l0LWJvdHRvbS1yaWdodC1ib3JkZXItcmFkaXVzIiwiYmFja2dyb3VuZC1jb2xvciIsImJvdHRvbSIsInRleHQtYWxpZ24iLCIkbmV4dCIsIiRwcmV2IiwiJG5leHRib3R0b20iLCIkcHJldmJvdHRvbSIsIm5leHRBcnJvd0NsaWNrZWQiLCJwcmV2QXJyb3dDbGlja2VkIiwiJGNsb3NlIiwiJG5leHR0b3VjaCIsIiRwcmV2dG91Y2giLCIkd2F0ZXJtYXJrIiwicmVzaXplIiwicmVzaXplV2luZG93Iiwic2Nyb2xsIiwic2Nyb2xsQm94Iiwid2luZG93SW5uZXJIZWlnaHQiLCJpbm5lckhlaWdodCIsImVuYWJsZVN3aXBlIiwic2xpZGVUaW1lciIsInVwZGF0ZWNhbGxiYWNrIiwidGltZXJJbnN0YW5jZSIsInVwZGF0ZWludGVydmFsIiwidXBkYXRlVGltZXJJZCIsInJ1bm5pbmdUaW1lIiwicGF1c2VkIiwic3RhcnRlZCIsInN0YXJ0ZWRhbmRwYXVzZWQiLCJmb3JjZXJlc3VtZSIsInN0YXJ0YW5kcGF1c2UiLCJ1cGRhdGVUaW1lciIsImdvdG9TbGlkZSIsIm5leHRFbGVtIiwib25sYXN0YXJyb3djbGlja2VkIiwicHJldkVsZW0iLCJvbmZpcnN0YXJyb3djbGlja2VkIiwiY2FsY05leHRQcmV2RWxlbSIsImluR3JvdXAiLCJncm91cEluZGV4IiwiZ3JvdXBDb3VudCIsImdyb3VwIiwibWF0Y2hHcm91cCIsImN1ckdyb3VwIiwiY2FsY0JveFBvc2l0aW9uIiwiaW5pdFciLCJpbml0SCIsImJveFciLCJib3hIIiwid2luSCIsImJveFQiLCJ0b3BtYXJnaW4iLCJpZnJhbWVpZCIsImlmcmFtZXRvcCIsInBhcmVudHNjcm9sbCIsImhpZGVOYXZBcnJvd3MiLCJzaG93UHJldiIsInNob3dOZXh0IiwiY2xpY2tIYW5kbGVyIiwiZGF0YW9wdGlvbnMiLCJoaWRlT2JqZWN0cyIsImJveFBvcyIsIm1hcmdpbi10b3AiLCJsb2FkQ3VyRWxlbSIsImxvYWRUaHVtYm5haWwiLCJpbWdMb2FkZXIiLCJJbWFnZSIsImVsZW1Hcm91cCIsImN1cnMiLCJzaG93TmF2aWdhdGlvbiIsImN1cnJlbnRFbGVtIiwic2hvd05hdiIsInRvdGFsd2lkdGgiLCJtYXJnaW4tbGVmdCIsIiRuYXZNYXNrIiwiJG5hdlByZXYiLCIkbmF2TmV4dCIsIiRuYXZMaXN0Iiwid2luV2lkdGgiLCJtYXNrV2lkdGgiLCJiYWNrZ3JvdW5kLXBvc2l0aW9uIiwibG9hZEVsZW0iLCJvbnNob3dpdGVtIiwic2hvd0ltYWdlIiwic2hvd0Vycm9yIiwic2hvd1NXRiIsInNob3dWaWRlbyIsInNob3dZb3V0dWJlVmltZW8iLCJzaG93UERGIiwic2hvd01QMyIsInNob3dXZWIiLCJzaG93RGl2IiwicmVzaXplTGlnaHRib3giLCJzaG93RGF0YSIsImNhbGNUZXh0V2lkdGgiLCJvYmpXIiwic2hvd1RpdGxlIiwiZGVzY3JpcHRpb24iLCJpbWdXIiwiaW1nSCIsImVsZW1XIiwiZWxlbUgiLCJzaXplT2JqIiwiY2FsY0VsZW1TaXplIiwiaCIsInRpbWVyY29kZSIsImRhdGFXIiwiZGF0YUgiLCJlbWJlZEZsYXNoIiwiaXNIVE1MNSIsInZpZGVvU3JjIiwiZW1iZWRIVE1MNVZpZGVvIiwidmlkZW9GaWxlIiwianNvYmplY3RuYW1lIiwiaGlkZWNvbnRyb2xzIiwiaGlkZXBsYXlidXR0b24iLCJ2aWRlb2ZpbGUiLCJoZGZpbGUiLCJpc2hkIiwiZGVmYXVsdHZvbHVtZSIsImxvYWROZXh0IiwiZ2V0WW91dHViZVBhcmFtcyIsInByZXBhcmVZb3V0dWJlSHJlZiIsInlvdXR1YmVJZCIsInJlZ0V4cCIsInByZXBhcmVEYWlseW1vdGlvbkhyZWYiLCJob3N0bmFtZSIsIllUIiwiUGxheWVyIiwib25TdGF0ZUNoYW5nZSIsIlBsYXllclN0YXRlIiwiRU5ERUQiLCIkZiIsInZpbWVvSWZyYW1lIiwidmltZW9QbGF5ZXIiLCJhZGRFdmVudCIsImRpdklEIiwia2VlcHJhdGlvIiwiaDAiLCJ3MCIsIm1heC1oZWlnaHQiLCJiQW5pbWF0ZSIsIm9uRmluaXNoIiwib25sYXN0aXRlbSIsIm9uZmlyc3RpdGVtIiwib25BbmltYXRlRmluaXNoIiwicmVzZXROYXZpZ2F0aW9uIiwic2hvd09iamVjdHMiLCJvbmNsb3NlbGlnaHRib3giLCJvbkxpZ2h0Ym94Q2xvc2VkIiwicGF1c2VTbGlkZSIsInBsYXlTbGlkZSIsInNsaWRlIiwia2V5dXAiLCJjYXJvdXNlbFRvdWNoU3dpcGUiLCJwcmV2ZW50V2ViQnJvd3NlciIsInN3aXBlTGVmdCIsInN3aXBlUmlnaHQiLCIkY29udGFpbmVyIiwiYWNIVE1MNVZpZGVvQ29udHJvbHMiLCJ3bW9kZSIsImZsYXNoVmFycyIsImh0bWxPcHRpb25zIiwicGx1Z2luc3BhZ2UiLCJxdWFsaXR5IiwiYWxsb3dGdWxsU2NyZWVuIiwiYWxsb3dTY3JpcHRBY2Nlc3MiLCJodG1sU3RyaW5nIiwic2hvd0xpZ2h0Ym94IiwidGl0bGUiLCJ3ZWJtIiwib2dnIiwidGh1bWJuYWlsIiwiYWRkSXRlbSIsInNob3dJdGVtIiwic2tpbkZvbGRlciIsInBhcmVudEluc3QiLCJlU3RhcnQiLCJlTW92ZSIsImVDYW5jZWwiLCJlQ2xpY2siLCJCVVRUT05fU0laRSIsIkJBUl9IRUlHSFQiLCJoaWRlQ29udHJvbHNUaW1lcklkIiwiaGlkZVZvbHVtZUJhclRpbWVvdXRJZCIsInNsaWRlckRyYWdnaW5nIiwiaXNGdWxsc2NyZWVuIiwidXNlckFjdGl2ZSIsImlzSGQiLCJoZCIsIiR2aWRlb09iaiIsIiR2aWRlb1BsYXkiLCJjdXJzb3IiLCJiYWNrZ3JvdW5kLWltYWdlIiwiYmFja2dyb3VuZC1yZXBlYXQiLCJwbGF5IiwiJHZpZGVvRnVsbHNjcmVlbkJnIiwiJHZpZGVvQ29udHJvbHMiLCJyaWdodCIsInotaW5kZXgiLCJtYXgtd2lkdGgiLCJ1c2VyQWN0aXZhdGUiLCJmbG9vciIsIiR2aWRlb0J0blBsYXkiLCIkdmlkZW9CdG5QYXVzZSIsIiR2aWRlb1RpbWVDdXJyZW50IiwiJHZpZGVvVGltZVRvdGFsIiwiJHZpZGVvU2Vla2VyIiwiJHZpZGVvU2Vla2VyUGxheSIsIiR2aWRlb1NlZWtlckJ1ZmZlciIsIiR2aWRlb1NlZWtlckhhbmRsZXIiLCJsaW5lLWhlaWdodCIsImZvbnQtd2VpZ2h0IiwiZm9udC1zaXplIiwiZm9udC1mYW1pbHkiLCJjb2xvciIsImUwIiwidG91Y2hlcyIsInJlcXVlc3RGdWxsc2NyZWVuIiwid2Via2l0UmVxdWVzdEZ1bGxTY3JlZW4iLCJtb3pSZXF1ZXN0RnVsbFNjcmVlbiIsIndlYmtpdEVudGVyRnVsbFNjcmVlbiIsIm1zUmVxdWVzdEZ1bGxzY3JlZW4iLCJzd2l0Y2hTY3JlZW4iLCJmdWxsc2NyZWVuIiwiY2FuY2VsRnVsbFNjcmVlbiIsIm1vekNhbmNlbEZ1bGxTY3JlZW4iLCJ3ZWJraXRDYW5jZWxGdWxsU2NyZWVuIiwid2Via2l0RXhpdEZ1bGxzY3JlZW4iLCJtc0V4aXRGdWxsc2NyZWVuIiwic3dpdGNoU2NyZWVuQ1NTIiwiYmFja2dyb3VuZFBvc1kiLCIkdmlkZW9GdWxsc2NyZWVuIiwibW96RnVsbFNjcmVlbiIsIndlYmtpdElzRnVsbFNjcmVlbiIsImJhY2tncm91bmRQb3NYIiwiJHZpZGVvSEQiLCJpc1BhdXNlZCIsInZvbHVtZSIsInZvbHVtZVNhdmVkIiwiJHZpZGVvVm9sdW1lIiwiJHZpZGVvVm9sdW1lQnV0dG9uIiwiJHZpZGVvVm9sdW1lQmFyIiwiJHZpZGVvVm9sdW1lQmFyQmciLCIkdmlkZW9Wb2x1bWVCYXJBY3RpdmUiLCJtYXJnaW4tYm90dG9tIiwidm9sIiwiY2FsY1RpbWVGb3JtYXQiLCJzZWNvbmRzIiwibTAiLCJzMCIsInIiLCJvblZpZGVvUGxheSIsIm9uVmlkZW9QYXVzZSIsIm9uVmlkZW9FbmRlZCIsIm9uVmlkZW9VcGRhdGUiLCJjdXJUaW1lIiwic2xpZGVyVyIsIm9uVmlkZW9Qcm9ncmVzcyIsImJ1ZmZlcmVkIiwiQUNQbGF0Zm9ybXMiLCJjc3MzM2RUcmFuc2Zvcm1TdXBwb3J0ZWQiLCJhcHBseUJyb3dzZXJTdHlsZXMiLCJhcHBseVRvVmFsdWUiLCJhbWF6aW5nY2Fyb3VzZWwiLCJUWVBFX1ZJREVPX0ZMQVNIIiwiVFlQRV9WSURFT19NUDQiLCJUWVBFX1ZJREVPX09HRyIsIlRZUEVfVklERU9fV0VCTSIsIlRZUEVfVklERU9fWU9VVFVCRSIsIlRZUEVfVklERU9fVklNRU8iLCJBbWF6aW5nQ2Fyb3VzZWwiLCJ0cmFuc2l0aW9uVGltZW91dCIsImFycm93VGltZW91dCIsImxpZ2h0Ym94QXJyYXkiLCJ2aXNpYmxlSXRlbXMiLCJ2aXNpYmxlaXRlbXMiLCJpdGVtU2l6ZSIsIml0ZW1IZWlnaHQiLCJjdXJyZW50SXRlbSIsImVsZW1MZW5ndGgiLCJlbGVtVG90YWxDb3VudCIsImFuaW1Qcm9wIiwidHJhbnNpdGlvblRpbWVySWQiLCJ0cmFuc2l0aW9uVGltaW5nIiwiaW5pdERhdGEiLCJvblN1Y2Nlc3MiLCJyZWFkVGFncyIsIml0ZW1zIiwiY2lyY3VsYXIiLCJjbG9uZUNvdW50IiwibWluIiwiaW5zdGFuY2UiLCJkaXJlY3Rpb24iLCJzaG93Y29udGFpbmVyb25pbml0IiwiaXNBbmltYXRpbmciLCJ0ZW1wUGF1c2VkIiwibW91c2VQYXVzZWQiLCJsb29wQ291bnQiLCJmaXJzdFJlc2l6ZSIsImNyZWF0ZVBsYXlWaWRlbyIsImNyZWF0ZUhvdmVyT3ZlcmxheSIsImNyZWF0ZVN0eWxlIiwiY3JlYXRlTmF2IiwiY3JlYXRlQXJyb3dzIiwiY3JlYXRlQmFja2dyb3VuZEltYWdlIiwiY3JlYXRlSXRlbUJhY2tncm91bmRJbWFnZSIsImNyZWF0ZUJvdHRvbVNoYWRvdyIsImNyZWF0ZUl0ZW1Cb3R0b21TaGFkb3ciLCJjcmVhdGVTbGlkZXJUaW1lb3V0IiwiY3JlYXRlR29vZ2xlRm9udHMiLCJzYW1laGVpZ2h0IiwiY2FsY1NhbWVIZWlnaHQiLCIkaW1nIiwiZml4YXNwZWN0cmF0aW8iLCJjZW50ZXJpbWFnZSIsIm1sIiwibXQiLCJyZXNpemVDYXJvdXNlbCIsInJlc2l6ZU5hdiIsImdldFBhcmFtcyIsImZpcnN0SWQiLCJzbGlkZVJ1biIsInNsaWRlclRpbWVvdXQiLCJzZWFyY2giLCJ1bmVzY2FwZSIsInNob3dwbGF5dmlkZW8iLCJpc1ZpZGVvIiwiaXNMaWdodGJveFZpZGVvIiwidmlkZW9VcmwiLCJ2aWRlb1dlYm1VcmwiLCJjaGVja1ZpZGVvVHlwZSIsInBsYXl2aWRlb2ltYWdlcG9zIiwiJHBsYXlWaWRlbyIsInBsYXlWaWRlbyIsIiR2aWRlb0RpdiIsInBsYXlZb3V0dWJlVmlkZW8iLCJwbGF5VmltZW9WaWRlbyIsInBsYXlNcDRWaWRlbyIsIndlYm1ocmVmIiwiJHZpZGVvV3JhcHBlciIsImF1dG9QbGF5IiwidmlkZW9oaWRlcGxheWJ1dHRvbiIsInByZXZpZXdtb2RlIiwiaXNMaWdodGJveCIsImlzTGluayIsInNob3dob3Zlcm92ZXJsYXkiLCJoaWRlaG92ZXJvdmVybGF5b250b3VjaCIsInNob3dob3Zlcm92ZXJsYXlhbHdheXMiLCIkaG92ZXJJbWFnZSIsImhvdmVyb3ZlcmxheWltYWdlIiwibGlzdC1zdHlsZS10eXBlIiwibGlzdC1zdHlsZS1pbWFnZSIsIndoaXRlLXNwYWNlIiwic3BhY2luZyIsIml0ZW1Dc3MiLCJsaXN0Q3NzIiwid3JhcHBlckNzcyIsImhpZGVWaWRlbyIsInNhbWVoZWlnaHRyZXNwb25zaXZlIiwic2NyZWVuV2lkdGgiLCJzYW1laGVpZ2h0c21hbGxzY3JlZW4iLCJzYW1laGVpZ2h0c21hbGxoZWlnaHQiLCJzYW1laGVpZ2h0bWVkaXVtc2NyZWVuIiwic2FtZWhlaWdodG1lZGl1bWhlaWdodCIsImNvbldpZHRoIiwidXNlc2NyZWVucXVlcnkiLCJzY3JlZW5xdWVyeSIsInNjcmVlbndpZHRoIiwiaXRlbVdpZHRoIiwiaW1hZ2VXaWR0aCIsImltYWdlSGVpZ2h0IiwiY3NzUHJvcCIsImVxdWFsSGVpZ2h0IiwiaGlkZUFycm93cyIsImFkZGdvb2dsZWZvbnRzIiwiZ29vZ2xlZm9udHMiLCJmb250UmVmIiwiZm9udExpbmsiLCJjcmVhdGVXYXRlcm1hcmsiLCJzaG93d2F0ZXJtYXJrIiwid2F0ZXJtYXJrc3R5bGUiLCJ3YXRlcm1hcmt0ZXh0Iiwid2F0ZXJtYXJraW1hZ2UiLCJ3bUNvZGUiLCJ3YXRlcm1hcmtwb3NpdGlvbmNzcyIsIndhdGVybWFya3RleHRjc3MiLCJ3YXRlcm1hcmtsaW5rY3NzIiwid2F0ZXJtYXJrdGFyZ2V0IiwidmVyc2lvbm1hcmsiLCJwYXVzZW9ubW91c2VvdmVyIiwiY29udGludW91cyIsInRyYW5zaXRpb25lYXNpbmciLCJhbmltYXRpb25Eb25lIiwic2hvd2l0ZW1ib3R0b21zaGFkb3ciLCJpdGVtYm90dG9tc2hhZG93aW1hZ2V3aWR0aCIsInNoYWRvdyIsIml0ZW1ib3R0b21zaGFkb3dpbWFnZXRvcCIsIml0ZW1ib3R0b21zaGFkb3dpbWFnZSIsInNob3dib3R0b21zaGFkb3ciLCJib3R0b21zaGFkb3dpbWFnZXdpZHRoIiwiYm90dG9tc2hhZG93aW1hZ2V0b3AiLCJib3R0b21zaGFkb3dpbWFnZSIsInNob3dpdGVtYmFja2dyb3VuZGltYWdlIiwiaXRlbWJhY2tncm91bmRpbWFnZSIsIml0ZW1iYWNrZ3JvdW5kaW1hZ2V3aWR0aCIsImJhY2tncm91bmQiLCJpdGVtYmFja2dyb3VuZGltYWdldG9wIiwic2hvd2JhY2tncm91bmRpbWFnZSIsImJhY2tncm91bmRpbWFnZSIsImJhY2tncm91bmRpbWFnZXdpZHRoIiwiYmFja2dyb3VuZGltYWdldG9wIiwiYXJyb3dzdHlsZSIsIiRwcmV2QXJyb3ciLCIkbmV4dEFycm93IiwiYXJyb3d3aWR0aCIsImFycm93aGVpZ2h0IiwiYXJyb3dpbWFnZSIsImFycm93aGlkZW9ubW91c2VsZWF2ZSIsIm5hdnN0eWxlIiwiJG5hdiIsIiRidWxsZXRXcmFwcGVyIiwiJGJ1bGxldExpc3QiLCJidWxsZXRTaXplIiwibmF2ZGlyZWN0aW9uIiwibmF2d2lkdGgiLCJuYXZzcGFjaW5nIiwiJGJ1bGxldCIsImNyZWF0ZU5hdkJ1bGxldCIsIm5hdm1vZGUiLCJmIiwibWFyZ2luRiIsImJ1bGxldEluZGV4IiwibmF2c3dpdGNob25tb3VzZW92ZXIiLCJuYXZpbWFnZSIsInBhZ2UiLCJjZWlsIiwiY3VyUGFnZSIsImxvb3AiLCJzY3JvbGxJdGVtcyIsInNjcm9sbG1vZGUiLCJzY3JvbGxpdGVtcyIsIm5leHRJdGVtIiwiYW5pbUNzcyIsImFuaW1JdGVtU2l6ZSIsInRvdGFsV2lkdGgiLCJvdXRlcldpZHRoIiwidG90YWxIZWlnaHQiLCJhbmltSW5pdFBvcyIsImFuaW1UYXJnZXRQb3MiLCJzaG93U3RhcnQiLCJwcmV2SXRlbSIsInRyYW5zaXRpb25kdXJhdGlvbiIsIkFNQVpJTkdDQVJPVVNFTF9TS0lOX09QVElPTlMiLCJzZWFyY2hvcHRpb25zIiwic2VhcmNoc3RyaW5nIiwia2V5dmFsdWUiLCJkZWZhdWx0T3B0aW9ucyIsIndhdGVybWFya2xpbmtkZWZhdWx0Iiwid2F0ZXJtYXJrdGFyZ2V0ZGVmYXVsdCIsImNvbnRpbnVvdXNkdXJhdGlvbiIsInNob3d3ZGVmYXVsdCIsIndzdHlsZWRlZmF1bHQiLCJ3dGV4dGRlZmF1bHQiLCJ3aW1hZ2VkZWZhdWx0Iiwid3Bvc2NzcyIsInd0ZXh0Y3NzZGVmYXVsdCIsIndsaW5rY3NzZGVmYXVsdCIsImZ2bSIsImFtYXppbmdjYXJvdXNlbF9wcmV2aWV3bW9kZSIsImNhcm91c2VsaWQiLCJhbWF6aW5nY2Fyb3VzZWxJZCIsImFtYXppbmdjYXJvdXNlbE9iamVjdHMiLCJhZGRPYmplY3QiLCJkZWZhdWx0cyIsInN3aXBlVG9wIiwic3dpcGVCb3R0b20iLCJ0b3VjaFN0YXJ0IiwidGFyZ2V0VG91Y2hlcyIsInN0YXJ0WCIsInN0YXJ0WSIsInRvdWNoQ2FuY2VsIiwidG91Y2hNb3ZlIiwiY3VyWCIsImN1clkiLCJ0b3VjaEVuZCIsImFicyIsImRlZiIsIngiLCJjIiwiZCIsImVhc2VJblF1YWQiLCJlYXNlT3V0UXVhZCIsImVhc2VJbk91dFF1YWQiLCJlYXNlSW5DdWJpYyIsImVhc2VPdXRDdWJpYyIsImVhc2VJbk91dEN1YmljIiwiZWFzZUluUXVhcnQiLCJlYXNlT3V0UXVhcnQiLCJlYXNlSW5PdXRRdWFydCIsImVhc2VJblF1aW50IiwiZWFzZU91dFF1aW50IiwiZWFzZUluT3V0UXVpbnQiLCJlYXNlSW5TaW5lIiwiZWFzZU91dFNpbmUiLCJzaW4iLCJlYXNlSW5PdXRTaW5lIiwiZWFzZUluRXhwbyIsInBvdyIsImVhc2VPdXRFeHBvIiwiZWFzZUluT3V0RXhwbyIsImVhc2VJbkNpcmMiLCJzcXJ0IiwiZWFzZU91dENpcmMiLCJlYXNlSW5PdXRDaXJjIiwiZWFzZUluRWxhc3RpYyIsImFzaW4iLCJlYXNlT3V0RWxhc3RpYyIsImVhc2VJbk91dEVsYXN0aWMiLCJlYXNlSW5CYWNrIiwiZWFzZU91dEJhY2siLCJlYXNlSW5PdXRCYWNrIiwiZWFzZUluQm91bmNlIiwiZWFzZU91dEJvdW5jZSIsImVhc2VJbk91dEJvdW5jZSIsIm9iamVjdHMiLCJBU1lvdVR1YmVUaW1lb3V0IiwianNGb2xkZXIiLCJodG1sNUxpZ2h0Ym94IiwiZG9ub3Rjcm9wIiwicm93bnVtYmVyIiwiaW1hZ2VoZWlnaHQiLCJza2luIiwibGlnaHRib3h0aXRsZWJvdHRvbWNzcyIsImxpZ2h0Ym94c2hvd2Rlc2NyaXB0aW9uIiwibGlnaHRib3hzaG93bmF2aWdhdGlvbiIsImxpZ2h0Ym94ZGVzY3JpcHRpb25ib3R0b21jc3MiLCJzdXBwb3J0aWZyYW1lIiwibGlnaHRib3hiYXJoZWlnaHQiLCJsaWdodGJveHRodW1id2lkdGgiLCJsaWdodGJveHRodW1idG9wbWFyZ2luIiwibGlnaHRib3hub2dyb3VwIiwidHJhbnNwYXJlbnQiLCJsaWdodGJveHNob3d0aXRsZSIsImxpZ2h0Ym94dGh1bWJib3R0b21tYXJnaW4iLCJsaWdodGJveHRodW1iaGVpZ2h0IiwiaW1hZ2VmaWxsY29sb3IiLCJpbWFnZXdpZHRoIiwibW9iaWxlIiwiaGVpZ2h0QmxvY2siLCJjb2x1bW4iLCJteWJsb2NrIiwidGhpc0hpZ2h0IiwiYW5pbWF0ZWRNb2RhbCIsImFuaW1hdGVkSW4iLCJhbmltYXRlZE91dCIsImFuaW1hdGlvbkR1cmF0aW9uIiwibW9kYWxUYXJnZXQiLCJhbGxJZCIsImxpZ2h0R2FsbGVyeSIsInNob3dUaHVtYkJ5RGVmYXVsdCIsImNsYXNzUmVnIiwiY2xhc3NMaXN0IiwiY2xhc3NpZSIsIiRtZW51TGluayIsIiRtZW51QWxsTGluayIsImFmdGVyQ2xvc2UiLCJ6SW5kZXhPdXQiLCJhZnRlck9wZW4iLCJtb2RhbCIsInpJbmRleEluIiwib3BhY2l0eUluIiwib3BhY2l0eU91dCIsImJlZm9yZU9wZW4iLCJiZWZvcmVDbG9zZSIsImNsb3NlQnQiLCJpZENvbmMiLCJpbml0U3R5bGVzIiwib3ZlcmZsb3cteSIsIi13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uIiwiLW1vei1hbmltYXRpb24tZHVyYXRpb24iLCItbXMtYW5pbWF0aW9uLWR1cmF0aW9uIiwiYW5pbWF0aW9uLWR1cmF0aW9uIiwiYmxvY2tzIiwiZGF0YUNvdW50IiwibGlua3MiLCJhbHQiLCJ0ZW1wbGF0ZUluZm8iLCJ0ZW1wbGF0ZSIsIkhhbmRsZWJhcnMiLCJ0ZW1wbGF0ZURhdGEiXSwibWFwcGluZ3MiOiJBQXd3VkEsUUFBU0EsV0FDUixHQVdJQyxHQVhBQyxFQUFTLEdBQUlDLE9BQU0sU0FBUyxZQUFZLFdBQVcsU0FBUyxTQUFTLFVBQVUsVUFDL0VDLEVBQVcsR0FBSUQsT0FBTSxRQUFRLFNBQVMsVUFBVSxTQUFTLFNBQVMsU0FBUyxRQUFRLFNBQVMsVUFBVSxTQUFTLFVBQVUsVUFFekhFLEVBQU0sR0FB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M0RvOUQsU0FBV0MsV0FBVzU1QyxRQUFRMDVDLGNBRTlCRyxhQUFlRixTQUFTajRCLEtBQzVCcmxDLFVBQVNDLGVBQWUsbUJBQW1CQyxXQUFhczlEIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4qIFRoaXJkIHBhcnR5XHJcbiovXHJcbi8qIVxyXG4gKiBqUXVlcnkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYxLjEyLjRcclxuICogaHR0cDovL2pxdWVyeS5jb20vXHJcbiAqXHJcbiAqIEluY2x1ZGVzIFNpenpsZS5qc1xyXG4gKiBodHRwOi8vc2l6emxlanMuY29tL1xyXG4gKlxyXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xyXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcclxuICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZVxyXG4gKlxyXG4gKiBEYXRlOiAyMDE2LTA1LTIwVDE3OjE3WlxyXG4gKi9cclxuXHJcbihmdW5jdGlvbiggZ2xvYmFsLCBmYWN0b3J5ICkge1xyXG5cclxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xyXG5cdFx0Ly8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YFxyXG5cdFx0Ly8gaXMgcHJlc2VudCwgZXhlY3V0ZSB0aGUgZmFjdG9yeSBhbmQgZ2V0IGpRdWVyeS5cclxuXHRcdC8vIEZvciBlbnZpcm9ubWVudHMgdGhhdCBkbyBub3QgaGF2ZSBhIGB3aW5kb3dgIHdpdGggYSBgZG9jdW1lbnRgXHJcblx0XHQvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy5cclxuXHRcdC8vIFRoaXMgYWNjZW50dWF0ZXMgdGhlIG5lZWQgZm9yIHRoZSBjcmVhdGlvbiBvZiBhIHJlYWwgYHdpbmRvd2AuXHJcblx0XHQvLyBlLmcuIHZhciBqUXVlcnkgPSByZXF1aXJlKFwianF1ZXJ5XCIpKHdpbmRvdyk7XHJcblx0XHQvLyBTZWUgdGlja2V0ICMxNDU0OSBmb3IgbW9yZSBpbmZvLlxyXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBnbG9iYWwuZG9jdW1lbnQgP1xyXG5cdFx0XHRmYWN0b3J5KCBnbG9iYWwsIHRydWUgKSA6XHJcblx0XHRcdGZ1bmN0aW9uKCB3ICkge1xyXG5cdFx0XHRcdGlmICggIXcuZG9jdW1lbnQgKSB7XHJcblx0XHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoIFwialF1ZXJ5IHJlcXVpcmVzIGEgd2luZG93IHdpdGggYSBkb2N1bWVudFwiICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiBmYWN0b3J5KCB3ICk7XHJcblx0XHRcdH07XHJcblx0fSBlbHNlIHtcclxuXHRcdGZhY3RvcnkoIGdsb2JhbCApO1xyXG5cdH1cclxuXHJcbi8vIFBhc3MgdGhpcyBpZiB3aW5kb3cgaXMgbm90IGRlZmluZWQgeWV0XHJcbn0odHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIiA/IHdpbmRvdyA6IHRoaXMsIGZ1bmN0aW9uKCB3aW5kb3csIG5vR2xvYmFsICkge1xyXG5cclxuLy8gU3VwcG9ydDogRmlyZWZveCAxOCtcclxuLy8gQ2FuJ3QgYmUgaW4gc3RyaWN0IG1vZGUsIHNldmVyYWwgbGlicyBpbmNsdWRpbmcgQVNQLk5FVCB0cmFjZVxyXG4vLyB0aGUgc3RhY2sgdmlhIGFyZ3VtZW50cy5jYWxsZXIuY2FsbGVlIGFuZCBGaXJlZm94IGRpZXMgaWZcclxuLy8geW91IHRyeSB0byB0cmFjZSB0aHJvdWdoIFwidXNlIHN0cmljdFwiIGNhbGwgY2hhaW5zLiAoIzEzMzM1KVxyXG4vL1widXNlIHN0cmljdFwiO1xyXG52YXIgZGVsZXRlZElkcyA9IFtdO1xyXG5cclxudmFyIGRvY3VtZW50ID0gd2luZG93LmRvY3VtZW50O1xyXG5cclxudmFyIHNsaWNlID0gZGVsZXRlZElkcy5zbGljZTtcclxuXHJcbnZhciBjb25jYXQgPSBkZWxldGVkSWRzLmNvbmNhdDtcclxuXHJcbnZhciBwdXNoID0gZGVsZXRlZElkcy5wdXNoO1xyXG5cclxudmFyIGluZGV4T2YgPSBkZWxldGVkSWRzLmluZGV4T2Y7XHJcblxyXG52YXIgY2xhc3MydHlwZSA9IHt9O1xyXG5cclxudmFyIHRvU3RyaW5nID0gY2xhc3MydHlwZS50b1N0cmluZztcclxuXHJcbnZhciBoYXNPd24gPSBjbGFzczJ0eXBlLmhhc093blByb3BlcnR5O1xyXG5cclxudmFyIHN1cHBvcnQgPSB7fTtcclxuXHJcblxyXG5cclxudmFyXHJcblx0dmVyc2lvbiA9IFwiMS4xMi40XCIsXHJcblxyXG5cdC8vIERlZmluZSBhIGxvY2FsIGNvcHkgb2YgalF1ZXJ5XHJcblx0alF1ZXJ5ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xyXG5cclxuXHRcdC8vIFRoZSBqUXVlcnkgb2JqZWN0IGlzIGFjdHVhbGx5IGp1c3QgdGhlIGluaXQgY29uc3RydWN0b3IgJ2VuaGFuY2VkJ1xyXG5cdFx0Ly8gTmVlZCBpbml0IGlmIGpRdWVyeSBpcyBjYWxsZWQgKGp1c3QgYWxsb3cgZXJyb3IgdG8gYmUgdGhyb3duIGlmIG5vdCBpbmNsdWRlZClcclxuXHRcdHJldHVybiBuZXcgalF1ZXJ5LmZuLmluaXQoIHNlbGVjdG9yLCBjb250ZXh0ICk7XHJcblx0fSxcclxuXHJcblx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjEsIElFPDlcclxuXHQvLyBNYWtlIHN1cmUgd2UgdHJpbSBCT00gYW5kIE5CU1BcclxuXHRydHJpbSA9IC9eW1xcc1xcdUZFRkZcXHhBMF0rfFtcXHNcXHVGRUZGXFx4QTBdKyQvZyxcclxuXHJcblx0Ly8gTWF0Y2hlcyBkYXNoZWQgc3RyaW5nIGZvciBjYW1lbGl6aW5nXHJcblx0cm1zUHJlZml4ID0gL14tbXMtLyxcclxuXHRyZGFzaEFscGhhID0gLy0oW1xcZGEtel0pL2dpLFxyXG5cclxuXHQvLyBVc2VkIGJ5IGpRdWVyeS5jYW1lbENhc2UgYXMgY2FsbGJhY2sgdG8gcmVwbGFjZSgpXHJcblx0ZmNhbWVsQ2FzZSA9IGZ1bmN0aW9uKCBhbGwsIGxldHRlciApIHtcclxuXHRcdHJldHVybiBsZXR0ZXIudG9VcHBlckNhc2UoKTtcclxuXHR9O1xyXG5cclxualF1ZXJ5LmZuID0galF1ZXJ5LnByb3RvdHlwZSA9IHtcclxuXHJcblx0Ly8gVGhlIGN1cnJlbnQgdmVyc2lvbiBvZiBqUXVlcnkgYmVpbmcgdXNlZFxyXG5cdGpxdWVyeTogdmVyc2lvbixcclxuXHJcblx0Y29uc3RydWN0b3I6IGpRdWVyeSxcclxuXHJcblx0Ly8gU3RhcnQgd2l0aCBhbiBlbXB0eSBzZWxlY3RvclxyXG5cdHNlbGVjdG9yOiBcIlwiLFxyXG5cclxuXHQvLyBUaGUgZGVmYXVsdCBsZW5ndGggb2YgYSBqUXVlcnkgb2JqZWN0IGlzIDBcclxuXHRsZW5ndGg6IDAsXHJcblxyXG5cdHRvQXJyYXk6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIHNsaWNlLmNhbGwoIHRoaXMgKTtcclxuXHR9LFxyXG5cclxuXHQvLyBHZXQgdGhlIE50aCBlbGVtZW50IGluIHRoZSBtYXRjaGVkIGVsZW1lbnQgc2V0IE9SXHJcblx0Ly8gR2V0IHRoZSB3aG9sZSBtYXRjaGVkIGVsZW1lbnQgc2V0IGFzIGEgY2xlYW4gYXJyYXlcclxuXHRnZXQ6IGZ1bmN0aW9uKCBudW0gKSB7XHJcblx0XHRyZXR1cm4gbnVtICE9IG51bGwgP1xyXG5cclxuXHRcdFx0Ly8gUmV0dXJuIGp1c3QgdGhlIG9uZSBlbGVtZW50IGZyb20gdGhlIHNldFxyXG5cdFx0XHQoIG51bSA8IDAgPyB0aGlzWyBudW0gKyB0aGlzLmxlbmd0aCBdIDogdGhpc1sgbnVtIF0gKSA6XHJcblxyXG5cdFx0XHQvLyBSZXR1cm4gYWxsIHRoZSBlbGVtZW50cyBpbiBhIGNsZWFuIGFycmF5XHJcblx0XHRcdHNsaWNlLmNhbGwoIHRoaXMgKTtcclxuXHR9LFxyXG5cclxuXHQvLyBUYWtlIGFuIGFycmF5IG9mIGVsZW1lbnRzIGFuZCBwdXNoIGl0IG9udG8gdGhlIHN0YWNrXHJcblx0Ly8gKHJldHVybmluZyB0aGUgbmV3IG1hdGNoZWQgZWxlbWVudCBzZXQpXHJcblx0cHVzaFN0YWNrOiBmdW5jdGlvbiggZWxlbXMgKSB7XHJcblxyXG5cdFx0Ly8gQnVpbGQgYSBuZXcgalF1ZXJ5IG1hdGNoZWQgZWxlbWVudCBzZXRcclxuXHRcdHZhciByZXQgPSBqUXVlcnkubWVyZ2UoIHRoaXMuY29uc3RydWN0b3IoKSwgZWxlbXMgKTtcclxuXHJcblx0XHQvLyBBZGQgdGhlIG9sZCBvYmplY3Qgb250byB0aGUgc3RhY2sgKGFzIGEgcmVmZXJlbmNlKVxyXG5cdFx0cmV0LnByZXZPYmplY3QgPSB0aGlzO1xyXG5cdFx0cmV0LmNvbnRleHQgPSB0aGlzLmNvbnRleHQ7XHJcblxyXG5cdFx0Ly8gUmV0dXJuIHRoZSBuZXdseS1mb3JtZWQgZWxlbWVudCBzZXRcclxuXHRcdHJldHVybiByZXQ7XHJcblx0fSxcclxuXHJcblx0Ly8gRXhlY3V0ZSBhIGNhbGxiYWNrIGZvciBldmVyeSBlbGVtZW50IGluIHRoZSBtYXRjaGVkIHNldC5cclxuXHRlYWNoOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XHJcblx0XHRyZXR1cm4galF1ZXJ5LmVhY2goIHRoaXMsIGNhbGxiYWNrICk7XHJcblx0fSxcclxuXHJcblx0bWFwOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeS5tYXAoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xyXG5cdFx0XHRyZXR1cm4gY2FsbGJhY2suY2FsbCggZWxlbSwgaSwgZWxlbSApO1xyXG5cdFx0fSApICk7XHJcblx0fSxcclxuXHJcblx0c2xpY2U6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBzbGljZS5hcHBseSggdGhpcywgYXJndW1lbnRzICkgKTtcclxuXHR9LFxyXG5cclxuXHRmaXJzdDogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5lcSggMCApO1xyXG5cdH0sXHJcblxyXG5cdGxhc3Q6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIHRoaXMuZXEoIC0xICk7XHJcblx0fSxcclxuXHJcblx0ZXE6IGZ1bmN0aW9uKCBpICkge1xyXG5cdFx0dmFyIGxlbiA9IHRoaXMubGVuZ3RoLFxyXG5cdFx0XHRqID0gK2kgKyAoIGkgPCAwID8gbGVuIDogMCApO1xyXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqID49IDAgJiYgaiA8IGxlbiA/IFsgdGhpc1sgaiBdIF0gOiBbXSApO1xyXG5cdH0sXHJcblxyXG5cdGVuZDogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5wcmV2T2JqZWN0IHx8IHRoaXMuY29uc3RydWN0b3IoKTtcclxuXHR9LFxyXG5cclxuXHQvLyBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXHJcblx0Ly8gQmVoYXZlcyBsaWtlIGFuIEFycmF5J3MgbWV0aG9kLCBub3QgbGlrZSBhIGpRdWVyeSBtZXRob2QuXHJcblx0cHVzaDogcHVzaCxcclxuXHRzb3J0OiBkZWxldGVkSWRzLnNvcnQsXHJcblx0c3BsaWNlOiBkZWxldGVkSWRzLnNwbGljZVxyXG59O1xyXG5cclxualF1ZXJ5LmV4dGVuZCA9IGpRdWVyeS5mbi5leHRlbmQgPSBmdW5jdGlvbigpIHtcclxuXHR2YXIgc3JjLCBjb3B5SXNBcnJheSwgY29weSwgbmFtZSwgb3B0aW9ucywgY2xvbmUsXHJcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIDAgXSB8fCB7fSxcclxuXHRcdGkgPSAxLFxyXG5cdFx0bGVuZ3RoID0gYXJndW1lbnRzLmxlbmd0aCxcclxuXHRcdGRlZXAgPSBmYWxzZTtcclxuXHJcblx0Ly8gSGFuZGxlIGEgZGVlcCBjb3B5IHNpdHVhdGlvblxyXG5cdGlmICggdHlwZW9mIHRhcmdldCA9PT0gXCJib29sZWFuXCIgKSB7XHJcblx0XHRkZWVwID0gdGFyZ2V0O1xyXG5cclxuXHRcdC8vIHNraXAgdGhlIGJvb2xlYW4gYW5kIHRoZSB0YXJnZXRcclxuXHRcdHRhcmdldCA9IGFyZ3VtZW50c1sgaSBdIHx8IHt9O1xyXG5cdFx0aSsrO1xyXG5cdH1cclxuXHJcblx0Ly8gSGFuZGxlIGNhc2Ugd2hlbiB0YXJnZXQgaXMgYSBzdHJpbmcgb3Igc29tZXRoaW5nIChwb3NzaWJsZSBpbiBkZWVwIGNvcHkpXHJcblx0aWYgKCB0eXBlb2YgdGFyZ2V0ICE9PSBcIm9iamVjdFwiICYmICFqUXVlcnkuaXNGdW5jdGlvbiggdGFyZ2V0ICkgKSB7XHJcblx0XHR0YXJnZXQgPSB7fTtcclxuXHR9XHJcblxyXG5cdC8vIGV4dGVuZCBqUXVlcnkgaXRzZWxmIGlmIG9ubHkgb25lIGFyZ3VtZW50IGlzIHBhc3NlZFxyXG5cdGlmICggaSA9PT0gbGVuZ3RoICkge1xyXG5cdFx0dGFyZ2V0ID0gdGhpcztcclxuXHRcdGktLTtcclxuXHR9XHJcblxyXG5cdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xyXG5cclxuXHRcdC8vIE9ubHkgZGVhbCB3aXRoIG5vbi1udWxsL3VuZGVmaW5lZCB2YWx1ZXNcclxuXHRcdGlmICggKCBvcHRpb25zID0gYXJndW1lbnRzWyBpIF0gKSAhPSBudWxsICkge1xyXG5cclxuXHRcdFx0Ly8gRXh0ZW5kIHRoZSBiYXNlIG9iamVjdFxyXG5cdFx0XHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XHJcblx0XHRcdFx0c3JjID0gdGFyZ2V0WyBuYW1lIF07XHJcblx0XHRcdFx0Y29weSA9IG9wdGlvbnNbIG5hbWUgXTtcclxuXHJcblx0XHRcdFx0Ly8gUHJldmVudCBuZXZlci1lbmRpbmcgbG9vcFxyXG5cdFx0XHRcdGlmICggdGFyZ2V0ID09PSBjb3B5ICkge1xyXG5cdFx0XHRcdFx0Y29udGludWU7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXNcclxuXHRcdFx0XHRpZiAoIGRlZXAgJiYgY29weSAmJiAoIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb3B5ICkgfHxcclxuXHRcdFx0XHRcdCggY29weUlzQXJyYXkgPSBqUXVlcnkuaXNBcnJheSggY29weSApICkgKSApIHtcclxuXHJcblx0XHRcdFx0XHRpZiAoIGNvcHlJc0FycmF5ICkge1xyXG5cdFx0XHRcdFx0XHRjb3B5SXNBcnJheSA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0XHRjbG9uZSA9IHNyYyAmJiBqUXVlcnkuaXNBcnJheSggc3JjICkgPyBzcmMgOiBbXTtcclxuXHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRjbG9uZSA9IHNyYyAmJiBqUXVlcnkuaXNQbGFpbk9iamVjdCggc3JjICkgPyBzcmMgOiB7fTtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHQvLyBOZXZlciBtb3ZlIG9yaWdpbmFsIG9iamVjdHMsIGNsb25lIHRoZW1cclxuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0galF1ZXJ5LmV4dGVuZCggZGVlcCwgY2xvbmUsIGNvcHkgKTtcclxuXHJcblx0XHRcdFx0Ly8gRG9uJ3QgYnJpbmcgaW4gdW5kZWZpbmVkIHZhbHVlc1xyXG5cdFx0XHRcdH0gZWxzZSBpZiAoIGNvcHkgIT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0gY29weTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIFJldHVybiB0aGUgbW9kaWZpZWQgb2JqZWN0XHJcblx0cmV0dXJuIHRhcmdldDtcclxufTtcclxuXHJcbmpRdWVyeS5leHRlbmQoIHtcclxuXHJcblx0Ly8gVW5pcXVlIGZvciBlYWNoIGNvcHkgb2YgalF1ZXJ5IG9uIHRoZSBwYWdlXHJcblx0ZXhwYW5kbzogXCJqUXVlcnlcIiArICggdmVyc2lvbiArIE1hdGgucmFuZG9tKCkgKS5yZXBsYWNlKCAvXFxEL2csIFwiXCIgKSxcclxuXHJcblx0Ly8gQXNzdW1lIGpRdWVyeSBpcyByZWFkeSB3aXRob3V0IHRoZSByZWFkeSBtb2R1bGVcclxuXHRpc1JlYWR5OiB0cnVlLFxyXG5cclxuXHRlcnJvcjogZnVuY3Rpb24oIG1zZyApIHtcclxuXHRcdHRocm93IG5ldyBFcnJvciggbXNnICk7XHJcblx0fSxcclxuXHJcblx0bm9vcDogZnVuY3Rpb24oKSB7fSxcclxuXHJcblx0Ly8gU2VlIHRlc3QvdW5pdC9jb3JlLmpzIGZvciBkZXRhaWxzIGNvbmNlcm5pbmcgaXNGdW5jdGlvbi5cclxuXHQvLyBTaW5jZSB2ZXJzaW9uIDEuMywgRE9NIG1ldGhvZHMgYW5kIGZ1bmN0aW9ucyBsaWtlIGFsZXJ0XHJcblx0Ly8gYXJlbid0IHN1cHBvcnRlZC4gVGhleSByZXR1cm4gZmFsc2Ugb24gSUUgKCMyOTY4KS5cclxuXHRpc0Z1bmN0aW9uOiBmdW5jdGlvbiggb2JqICkge1xyXG5cdFx0cmV0dXJuIGpRdWVyeS50eXBlKCBvYmogKSA9PT0gXCJmdW5jdGlvblwiO1xyXG5cdH0sXHJcblxyXG5cdGlzQXJyYXk6IEFycmF5LmlzQXJyYXkgfHwgZnVuY3Rpb24oIG9iaiApIHtcclxuXHRcdHJldHVybiBqUXVlcnkudHlwZSggb2JqICkgPT09IFwiYXJyYXlcIjtcclxuXHR9LFxyXG5cclxuXHRpc1dpbmRvdzogZnVuY3Rpb24oIG9iaiApIHtcclxuXHRcdC8qIGpzaGludCBlcWVxZXE6IGZhbHNlICovXHJcblx0XHRyZXR1cm4gb2JqICE9IG51bGwgJiYgb2JqID09IG9iai53aW5kb3c7XHJcblx0fSxcclxuXHJcblx0aXNOdW1lcmljOiBmdW5jdGlvbiggb2JqICkge1xyXG5cclxuXHRcdC8vIHBhcnNlRmxvYXQgTmFOcyBudW1lcmljLWNhc3QgZmFsc2UgcG9zaXRpdmVzIChudWxsfHRydWV8ZmFsc2V8XCJcIilcclxuXHRcdC8vIC4uLmJ1dCBtaXNpbnRlcnByZXRzIGxlYWRpbmctbnVtYmVyIHN0cmluZ3MsIHBhcnRpY3VsYXJseSBoZXggbGl0ZXJhbHMgKFwiMHguLi5cIilcclxuXHRcdC8vIHN1YnRyYWN0aW9uIGZvcmNlcyBpbmZpbml0aWVzIHRvIE5hTlxyXG5cdFx0Ly8gYWRkaW5nIDEgY29ycmVjdHMgbG9zcyBvZiBwcmVjaXNpb24gZnJvbSBwYXJzZUZsb2F0ICgjMTUxMDApXHJcblx0XHR2YXIgcmVhbFN0cmluZ09iaiA9IG9iaiAmJiBvYmoudG9TdHJpbmcoKTtcclxuXHRcdHJldHVybiAhalF1ZXJ5LmlzQXJyYXkoIG9iaiApICYmICggcmVhbFN0cmluZ09iaiAtIHBhcnNlRmxvYXQoIHJlYWxTdHJpbmdPYmogKSArIDEgKSA+PSAwO1xyXG5cdH0sXHJcblxyXG5cdGlzRW1wdHlPYmplY3Q6IGZ1bmN0aW9uKCBvYmogKSB7XHJcblx0XHR2YXIgbmFtZTtcclxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gdHJ1ZTtcclxuXHR9LFxyXG5cclxuXHRpc1BsYWluT2JqZWN0OiBmdW5jdGlvbiggb2JqICkge1xyXG5cdFx0dmFyIGtleTtcclxuXHJcblx0XHQvLyBNdXN0IGJlIGFuIE9iamVjdC5cclxuXHRcdC8vIEJlY2F1c2Ugb2YgSUUsIHdlIGFsc28gaGF2ZSB0byBjaGVjayB0aGUgcHJlc2VuY2Ugb2YgdGhlIGNvbnN0cnVjdG9yIHByb3BlcnR5LlxyXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgRE9NIG5vZGVzIGFuZCB3aW5kb3cgb2JqZWN0cyBkb24ndCBwYXNzIHRocm91Z2gsIGFzIHdlbGxcclxuXHRcdGlmICggIW9iaiB8fCBqUXVlcnkudHlwZSggb2JqICkgIT09IFwib2JqZWN0XCIgfHwgb2JqLm5vZGVUeXBlIHx8IGpRdWVyeS5pc1dpbmRvdyggb2JqICkgKSB7XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHJcblx0XHR0cnkge1xyXG5cclxuXHRcdFx0Ly8gTm90IG93biBjb25zdHJ1Y3RvciBwcm9wZXJ0eSBtdXN0IGJlIE9iamVjdFxyXG5cdFx0XHRpZiAoIG9iai5jb25zdHJ1Y3RvciAmJlxyXG5cdFx0XHRcdCFoYXNPd24uY2FsbCggb2JqLCBcImNvbnN0cnVjdG9yXCIgKSAmJlxyXG5cdFx0XHRcdCFoYXNPd24uY2FsbCggb2JqLmNvbnN0cnVjdG9yLnByb3RvdHlwZSwgXCJpc1Byb3RvdHlwZU9mXCIgKSApIHtcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdH1cclxuXHRcdH0gY2F0Y2ggKCBlICkge1xyXG5cclxuXHRcdFx0Ly8gSUU4LDkgV2lsbCB0aHJvdyBleGNlcHRpb25zIG9uIGNlcnRhaW4gaG9zdCBvYmplY3RzICM5ODk3XHJcblx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBTdXBwb3J0OiBJRTw5XHJcblx0XHQvLyBIYW5kbGUgaXRlcmF0aW9uIG92ZXIgaW5oZXJpdGVkIHByb3BlcnRpZXMgYmVmb3JlIG93biBwcm9wZXJ0aWVzLlxyXG5cdFx0aWYgKCAhc3VwcG9ydC5vd25GaXJzdCApIHtcclxuXHRcdFx0Zm9yICgga2V5IGluIG9iaiApIHtcclxuXHRcdFx0XHRyZXR1cm4gaGFzT3duLmNhbGwoIG9iaiwga2V5ICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBPd24gcHJvcGVydGllcyBhcmUgZW51bWVyYXRlZCBmaXJzdGx5LCBzbyB0byBzcGVlZCB1cCxcclxuXHRcdC8vIGlmIGxhc3Qgb25lIGlzIG93biwgdGhlbiBhbGwgcHJvcGVydGllcyBhcmUgb3duLlxyXG5cdFx0Zm9yICgga2V5IGluIG9iaiApIHt9XHJcblxyXG5cdFx0cmV0dXJuIGtleSA9PT0gdW5kZWZpbmVkIHx8IGhhc093bi5jYWxsKCBvYmosIGtleSApO1xyXG5cdH0sXHJcblxyXG5cdHR5cGU6IGZ1bmN0aW9uKCBvYmogKSB7XHJcblx0XHRpZiAoIG9iaiA9PSBudWxsICkge1xyXG5cdFx0XHRyZXR1cm4gb2JqICsgXCJcIjtcclxuXHRcdH1cclxuXHRcdHJldHVybiB0eXBlb2Ygb2JqID09PSBcIm9iamVjdFwiIHx8IHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIiA/XHJcblx0XHRcdGNsYXNzMnR5cGVbIHRvU3RyaW5nLmNhbGwoIG9iaiApIF0gfHwgXCJvYmplY3RcIiA6XHJcblx0XHRcdHR5cGVvZiBvYmo7XHJcblx0fSxcclxuXHJcblx0Ly8gV29ya2Fyb3VuZHMgYmFzZWQgb24gZmluZGluZ3MgYnkgSmltIERyaXNjb2xsXHJcblx0Ly8gaHR0cDovL3dlYmxvZ3MuamF2YS5uZXQvYmxvZy9kcmlzY29sbC9hcmNoaXZlLzIwMDkvMDkvMDgvZXZhbC1qYXZhc2NyaXB0LWdsb2JhbC1jb250ZXh0XHJcblx0Z2xvYmFsRXZhbDogZnVuY3Rpb24oIGRhdGEgKSB7XHJcblx0XHRpZiAoIGRhdGEgJiYgalF1ZXJ5LnRyaW0oIGRhdGEgKSApIHtcclxuXHJcblx0XHRcdC8vIFdlIHVzZSBleGVjU2NyaXB0IG9uIEludGVybmV0IEV4cGxvcmVyXHJcblx0XHRcdC8vIFdlIHVzZSBhbiBhbm9ueW1vdXMgZnVuY3Rpb24gc28gdGhhdCBjb250ZXh0IGlzIHdpbmRvd1xyXG5cdFx0XHQvLyByYXRoZXIgdGhhbiBqUXVlcnkgaW4gRmlyZWZveFxyXG5cdFx0XHQoIHdpbmRvdy5leGVjU2NyaXB0IHx8IGZ1bmN0aW9uKCBkYXRhICkge1xyXG5cdFx0XHRcdHdpbmRvd1sgXCJldmFsXCIgXS5jYWxsKCB3aW5kb3csIGRhdGEgKTsgLy8ganNjczppZ25vcmUgcmVxdWlyZURvdE5vdGF0aW9uXHJcblx0XHRcdH0gKSggZGF0YSApO1xyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdC8vIENvbnZlcnQgZGFzaGVkIHRvIGNhbWVsQ2FzZTsgdXNlZCBieSB0aGUgY3NzIGFuZCBkYXRhIG1vZHVsZXNcclxuXHQvLyBNaWNyb3NvZnQgZm9yZ290IHRvIGh1bXAgdGhlaXIgdmVuZG9yIHByZWZpeCAoIzk1NzIpXHJcblx0Y2FtZWxDYXNlOiBmdW5jdGlvbiggc3RyaW5nICkge1xyXG5cdFx0cmV0dXJuIHN0cmluZy5yZXBsYWNlKCBybXNQcmVmaXgsIFwibXMtXCIgKS5yZXBsYWNlKCByZGFzaEFscGhhLCBmY2FtZWxDYXNlICk7XHJcblx0fSxcclxuXHJcblx0bm9kZU5hbWU6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lICkge1xyXG5cdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lLnRvTG93ZXJDYXNlKCk7XHJcblx0fSxcclxuXHJcblx0ZWFjaDogZnVuY3Rpb24oIG9iaiwgY2FsbGJhY2sgKSB7XHJcblx0XHR2YXIgbGVuZ3RoLCBpID0gMDtcclxuXHJcblx0XHRpZiAoIGlzQXJyYXlMaWtlKCBvYmogKSApIHtcclxuXHRcdFx0bGVuZ3RoID0gb2JqLmxlbmd0aDtcclxuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XHJcblx0XHRcdFx0aWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0gZmFsc2UgKSB7XHJcblx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGZvciAoIGkgaW4gb2JqICkge1xyXG5cdFx0XHRcdGlmICggY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICkgPT09IGZhbHNlICkge1xyXG5cdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIG9iajtcclxuXHR9LFxyXG5cclxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkPDQuMSwgSUU8OVxyXG5cdHRyaW06IGZ1bmN0aW9uKCB0ZXh0ICkge1xyXG5cdFx0cmV0dXJuIHRleHQgPT0gbnVsbCA/XHJcblx0XHRcdFwiXCIgOlxyXG5cdFx0XHQoIHRleHQgKyBcIlwiICkucmVwbGFjZSggcnRyaW0sIFwiXCIgKTtcclxuXHR9LFxyXG5cclxuXHQvLyByZXN1bHRzIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XHJcblx0bWFrZUFycmF5OiBmdW5jdGlvbiggYXJyLCByZXN1bHRzICkge1xyXG5cdFx0dmFyIHJldCA9IHJlc3VsdHMgfHwgW107XHJcblxyXG5cdFx0aWYgKCBhcnIgIT0gbnVsbCApIHtcclxuXHRcdFx0aWYgKCBpc0FycmF5TGlrZSggT2JqZWN0KCBhcnIgKSApICkge1xyXG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggcmV0LFxyXG5cdFx0XHRcdFx0dHlwZW9mIGFyciA9PT0gXCJzdHJpbmdcIiA/XHJcblx0XHRcdFx0XHRbIGFyciBdIDogYXJyXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRwdXNoLmNhbGwoIHJldCwgYXJyICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gcmV0O1xyXG5cdH0sXHJcblxyXG5cdGluQXJyYXk6IGZ1bmN0aW9uKCBlbGVtLCBhcnIsIGkgKSB7XHJcblx0XHR2YXIgbGVuO1xyXG5cclxuXHRcdGlmICggYXJyICkge1xyXG5cdFx0XHRpZiAoIGluZGV4T2YgKSB7XHJcblx0XHRcdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggYXJyLCBlbGVtLCBpICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGxlbiA9IGFyci5sZW5ndGg7XHJcblx0XHRcdGkgPSBpID8gaSA8IDAgPyBNYXRoLm1heCggMCwgbGVuICsgaSApIDogaSA6IDA7XHJcblxyXG5cdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcclxuXHJcblx0XHRcdFx0Ly8gU2tpcCBhY2Nlc3NpbmcgaW4gc3BhcnNlIGFycmF5c1xyXG5cdFx0XHRcdGlmICggaSBpbiBhcnIgJiYgYXJyWyBpIF0gPT09IGVsZW0gKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gaTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gLTE7XHJcblx0fSxcclxuXHJcblx0bWVyZ2U6IGZ1bmN0aW9uKCBmaXJzdCwgc2Vjb25kICkge1xyXG5cdFx0dmFyIGxlbiA9ICtzZWNvbmQubGVuZ3RoLFxyXG5cdFx0XHRqID0gMCxcclxuXHRcdFx0aSA9IGZpcnN0Lmxlbmd0aDtcclxuXHJcblx0XHR3aGlsZSAoIGogPCBsZW4gKSB7XHJcblx0XHRcdGZpcnN0WyBpKysgXSA9IHNlY29uZFsgaisrIF07XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gU3VwcG9ydDogSUU8OVxyXG5cdFx0Ly8gV29ya2Fyb3VuZCBjYXN0aW5nIG9mIC5sZW5ndGggdG8gTmFOIG9uIG90aGVyd2lzZSBhcnJheWxpa2Ugb2JqZWN0cyAoZS5nLiwgTm9kZUxpc3RzKVxyXG5cdFx0aWYgKCBsZW4gIT09IGxlbiApIHtcclxuXHRcdFx0d2hpbGUgKCBzZWNvbmRbIGogXSAhPT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHRcdGZpcnN0WyBpKysgXSA9IHNlY29uZFsgaisrIF07XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRmaXJzdC5sZW5ndGggPSBpO1xyXG5cclxuXHRcdHJldHVybiBmaXJzdDtcclxuXHR9LFxyXG5cclxuXHRncmVwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBpbnZlcnQgKSB7XHJcblx0XHR2YXIgY2FsbGJhY2tJbnZlcnNlLFxyXG5cdFx0XHRtYXRjaGVzID0gW10sXHJcblx0XHRcdGkgPSAwLFxyXG5cdFx0XHRsZW5ndGggPSBlbGVtcy5sZW5ndGgsXHJcblx0XHRcdGNhbGxiYWNrRXhwZWN0ID0gIWludmVydDtcclxuXHJcblx0XHQvLyBHbyB0aHJvdWdoIHRoZSBhcnJheSwgb25seSBzYXZpbmcgdGhlIGl0ZW1zXHJcblx0XHQvLyB0aGF0IHBhc3MgdGhlIHZhbGlkYXRvciBmdW5jdGlvblxyXG5cdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XHJcblx0XHRcdGNhbGxiYWNrSW52ZXJzZSA9ICFjYWxsYmFjayggZWxlbXNbIGkgXSwgaSApO1xyXG5cdFx0XHRpZiAoIGNhbGxiYWNrSW52ZXJzZSAhPT0gY2FsbGJhY2tFeHBlY3QgKSB7XHJcblx0XHRcdFx0bWF0Y2hlcy5wdXNoKCBlbGVtc1sgaSBdICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gbWF0Y2hlcztcclxuXHR9LFxyXG5cclxuXHQvLyBhcmcgaXMgZm9yIGludGVybmFsIHVzYWdlIG9ubHlcclxuXHRtYXA6IGZ1bmN0aW9uKCBlbGVtcywgY2FsbGJhY2ssIGFyZyApIHtcclxuXHRcdHZhciBsZW5ndGgsIHZhbHVlLFxyXG5cdFx0XHRpID0gMCxcclxuXHRcdFx0cmV0ID0gW107XHJcblxyXG5cdFx0Ly8gR28gdGhyb3VnaCB0aGUgYXJyYXksIHRyYW5zbGF0aW5nIGVhY2ggb2YgdGhlIGl0ZW1zIHRvIHRoZWlyIG5ldyB2YWx1ZXNcclxuXHRcdGlmICggaXNBcnJheUxpa2UoIGVsZW1zICkgKSB7XHJcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aDtcclxuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XHJcblx0XHRcdFx0dmFsdWUgPSBjYWxsYmFjayggZWxlbXNbIGkgXSwgaSwgYXJnICk7XHJcblxyXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcclxuXHRcdFx0XHRcdHJldC5wdXNoKCB2YWx1ZSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdC8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsXHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRmb3IgKCBpIGluIGVsZW1zICkge1xyXG5cdFx0XHRcdHZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApO1xyXG5cclxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XHJcblx0XHRcdFx0XHRyZXQucHVzaCggdmFsdWUgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBGbGF0dGVuIGFueSBuZXN0ZWQgYXJyYXlzXHJcblx0XHRyZXR1cm4gY29uY2F0LmFwcGx5KCBbXSwgcmV0ICk7XHJcblx0fSxcclxuXHJcblx0Ly8gQSBnbG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzXHJcblx0Z3VpZDogMSxcclxuXHJcblx0Ly8gQmluZCBhIGZ1bmN0aW9uIHRvIGEgY29udGV4dCwgb3B0aW9uYWxseSBwYXJ0aWFsbHkgYXBwbHlpbmcgYW55XHJcblx0Ly8gYXJndW1lbnRzLlxyXG5cdHByb3h5OiBmdW5jdGlvbiggZm4sIGNvbnRleHQgKSB7XHJcblx0XHR2YXIgYXJncywgcHJveHksIHRtcDtcclxuXHJcblx0XHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHR0bXAgPSBmblsgY29udGV4dCBdO1xyXG5cdFx0XHRjb250ZXh0ID0gZm47XHJcblx0XHRcdGZuID0gdG1wO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFF1aWNrIGNoZWNrIHRvIGRldGVybWluZSBpZiB0YXJnZXQgaXMgY2FsbGFibGUsIGluIHRoZSBzcGVjXHJcblx0XHQvLyB0aGlzIHRocm93cyBhIFR5cGVFcnJvciwgYnV0IHdlIHdpbGwganVzdCByZXR1cm4gdW5kZWZpbmVkLlxyXG5cdFx0aWYgKCAhalF1ZXJ5LmlzRnVuY3Rpb24oIGZuICkgKSB7XHJcblx0XHRcdHJldHVybiB1bmRlZmluZWQ7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gU2ltdWxhdGVkIGJpbmRcclxuXHRcdGFyZ3MgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMsIDIgKTtcclxuXHRcdHByb3h5ID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdHJldHVybiBmbi5hcHBseSggY29udGV4dCB8fCB0aGlzLCBhcmdzLmNvbmNhdCggc2xpY2UuY2FsbCggYXJndW1lbnRzICkgKSApO1xyXG5cdFx0fTtcclxuXHJcblx0XHQvLyBTZXQgdGhlIGd1aWQgb2YgdW5pcXVlIGhhbmRsZXIgdG8gdGhlIHNhbWUgb2Ygb3JpZ2luYWwgaGFuZGxlciwgc28gaXQgY2FuIGJlIHJlbW92ZWRcclxuXHRcdHByb3h5Lmd1aWQgPSBmbi5ndWlkID0gZm4uZ3VpZCB8fCBqUXVlcnkuZ3VpZCsrO1xyXG5cclxuXHRcdHJldHVybiBwcm94eTtcclxuXHR9LFxyXG5cclxuXHRub3c6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuICsoIG5ldyBEYXRlKCkgKTtcclxuXHR9LFxyXG5cclxuXHQvLyBqUXVlcnkuc3VwcG9ydCBpcyBub3QgdXNlZCBpbiBDb3JlIGJ1dCBvdGhlciBwcm9qZWN0cyBhdHRhY2ggdGhlaXJcclxuXHQvLyBwcm9wZXJ0aWVzIHRvIGl0IHNvIGl0IG5lZWRzIHRvIGV4aXN0LlxyXG5cdHN1cHBvcnQ6IHN1cHBvcnRcclxufSApO1xyXG5cclxuLy8gSlNIaW50IHdvdWxkIGVycm9yIG9uIHRoaXMgY29kZSBkdWUgdG8gdGhlIFN5bWJvbCBub3QgYmVpbmcgZGVmaW5lZCBpbiBFUzUuXHJcbi8vIERlZmluaW5nIHRoaXMgZ2xvYmFsIGluIC5qc2hpbnRyYyB3b3VsZCBjcmVhdGUgYSBkYW5nZXIgb2YgdXNpbmcgdGhlIGdsb2JhbFxyXG4vLyB1bmd1YXJkZWQgaW4gYW5vdGhlciBwbGFjZSwgaXQgc2VlbXMgc2FmZXIgdG8ganVzdCBkaXNhYmxlIEpTSGludCBmb3IgdGhlc2VcclxuLy8gdGhyZWUgbGluZXMuXHJcbi8qIGpzaGludCBpZ25vcmU6IHN0YXJ0ICovXHJcbmlmICggdHlwZW9mIFN5bWJvbCA9PT0gXCJmdW5jdGlvblwiICkge1xyXG5cdGpRdWVyeS5mblsgU3ltYm9sLml0ZXJhdG9yIF0gPSBkZWxldGVkSWRzWyBTeW1ib2wuaXRlcmF0b3IgXTtcclxufVxyXG4vKiBqc2hpbnQgaWdub3JlOiBlbmQgKi9cclxuXHJcbi8vIFBvcHVsYXRlIHRoZSBjbGFzczJ0eXBlIG1hcFxyXG5qUXVlcnkuZWFjaCggXCJCb29sZWFuIE51bWJlciBTdHJpbmcgRnVuY3Rpb24gQXJyYXkgRGF0ZSBSZWdFeHAgT2JqZWN0IEVycm9yIFN5bWJvbFwiLnNwbGl0KCBcIiBcIiApLFxyXG5mdW5jdGlvbiggaSwgbmFtZSApIHtcclxuXHRjbGFzczJ0eXBlWyBcIltvYmplY3QgXCIgKyBuYW1lICsgXCJdXCIgXSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcclxufSApO1xyXG5cclxuZnVuY3Rpb24gaXNBcnJheUxpa2UoIG9iaiApIHtcclxuXHJcblx0Ly8gU3VwcG9ydDogaU9TIDguMiAobm90IHJlcHJvZHVjaWJsZSBpbiBzaW11bGF0b3IpXHJcblx0Ly8gYGluYCBjaGVjayB1c2VkIHRvIHByZXZlbnQgSklUIGVycm9yIChnaC0yMTQ1KVxyXG5cdC8vIGhhc093biBpc24ndCB1c2VkIGhlcmUgZHVlIHRvIGZhbHNlIG5lZ2F0aXZlc1xyXG5cdC8vIHJlZ2FyZGluZyBOb2RlbGlzdCBsZW5ndGggaW4gSUVcclxuXHR2YXIgbGVuZ3RoID0gISFvYmogJiYgXCJsZW5ndGhcIiBpbiBvYmogJiYgb2JqLmxlbmd0aCxcclxuXHRcdHR5cGUgPSBqUXVlcnkudHlwZSggb2JqICk7XHJcblxyXG5cdGlmICggdHlwZSA9PT0gXCJmdW5jdGlvblwiIHx8IGpRdWVyeS5pc1dpbmRvdyggb2JqICkgKSB7XHJcblx0XHRyZXR1cm4gZmFsc2U7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gdHlwZSA9PT0gXCJhcnJheVwiIHx8IGxlbmd0aCA9PT0gMCB8fFxyXG5cdFx0dHlwZW9mIGxlbmd0aCA9PT0gXCJudW1iZXJcIiAmJiBsZW5ndGggPiAwICYmICggbGVuZ3RoIC0gMSApIGluIG9iajtcclxufVxyXG52YXIgU2l6emxlID1cclxuLyohXHJcbiAqIFNpenpsZSBDU1MgU2VsZWN0b3IgRW5naW5lIHYyLjIuMVxyXG4gKiBodHRwOi8vc2l6emxlanMuY29tL1xyXG4gKlxyXG4gKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xyXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcclxuICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZVxyXG4gKlxyXG4gKiBEYXRlOiAyMDE1LTEwLTE3XHJcbiAqL1xyXG4oZnVuY3Rpb24oIHdpbmRvdyApIHtcclxuXHJcbnZhciBpLFxyXG5cdHN1cHBvcnQsXHJcblx0RXhwcixcclxuXHRnZXRUZXh0LFxyXG5cdGlzWE1MLFxyXG5cdHRva2VuaXplLFxyXG5cdGNvbXBpbGUsXHJcblx0c2VsZWN0LFxyXG5cdG91dGVybW9zdENvbnRleHQsXHJcblx0c29ydElucHV0LFxyXG5cdGhhc0R1cGxpY2F0ZSxcclxuXHJcblx0Ly8gTG9jYWwgZG9jdW1lbnQgdmFyc1xyXG5cdHNldERvY3VtZW50LFxyXG5cdGRvY3VtZW50LFxyXG5cdGRvY0VsZW0sXHJcblx0ZG9jdW1lbnRJc0hUTUwsXHJcblx0cmJ1Z2d5UVNBLFxyXG5cdHJidWdneU1hdGNoZXMsXHJcblx0bWF0Y2hlcyxcclxuXHRjb250YWlucyxcclxuXHJcblx0Ly8gSW5zdGFuY2Utc3BlY2lmaWMgZGF0YVxyXG5cdGV4cGFuZG8gPSBcInNpenpsZVwiICsgMSAqIG5ldyBEYXRlKCksXHJcblx0cHJlZmVycmVkRG9jID0gd2luZG93LmRvY3VtZW50LFxyXG5cdGRpcnJ1bnMgPSAwLFxyXG5cdGRvbmUgPSAwLFxyXG5cdGNsYXNzQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxyXG5cdHRva2VuQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxyXG5cdGNvbXBpbGVyQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxyXG5cdHNvcnRPcmRlciA9IGZ1bmN0aW9uKCBhLCBiICkge1xyXG5cdFx0aWYgKCBhID09PSBiICkge1xyXG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIDA7XHJcblx0fSxcclxuXHJcblx0Ly8gR2VuZXJhbC1wdXJwb3NlIGNvbnN0YW50c1xyXG5cdE1BWF9ORUdBVElWRSA9IDEgPDwgMzEsXHJcblxyXG5cdC8vIEluc3RhbmNlIG1ldGhvZHNcclxuXHRoYXNPd24gPSAoe30pLmhhc093blByb3BlcnR5LFxyXG5cdGFyciA9IFtdLFxyXG5cdHBvcCA9IGFyci5wb3AsXHJcblx0cHVzaF9uYXRpdmUgPSBhcnIucHVzaCxcclxuXHRwdXNoID0gYXJyLnB1c2gsXHJcblx0c2xpY2UgPSBhcnIuc2xpY2UsXHJcblx0Ly8gVXNlIGEgc3RyaXBwZWQtZG93biBpbmRleE9mIGFzIGl0J3MgZmFzdGVyIHRoYW4gbmF0aXZlXHJcblx0Ly8gaHR0cDovL2pzcGVyZi5jb20vdGhvci1pbmRleG9mLXZzLWZvci81XHJcblx0aW5kZXhPZiA9IGZ1bmN0aW9uKCBsaXN0LCBlbGVtICkge1xyXG5cdFx0dmFyIGkgPSAwLFxyXG5cdFx0XHRsZW4gPSBsaXN0Lmxlbmd0aDtcclxuXHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xyXG5cdFx0XHRpZiAoIGxpc3RbaV0gPT09IGVsZW0gKSB7XHJcblx0XHRcdFx0cmV0dXJuIGk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJldHVybiAtMTtcclxuXHR9LFxyXG5cclxuXHRib29sZWFucyA9IFwiY2hlY2tlZHxzZWxlY3RlZHxhc3luY3xhdXRvZm9jdXN8YXV0b3BsYXl8Y29udHJvbHN8ZGVmZXJ8ZGlzYWJsZWR8aGlkZGVufGlzbWFwfGxvb3B8bXVsdGlwbGV8b3BlbnxyZWFkb25seXxyZXF1aXJlZHxzY29wZWRcIixcclxuXHJcblx0Ly8gUmVndWxhciBleHByZXNzaW9uc1xyXG5cclxuXHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9jc3MzLXNlbGVjdG9ycy8jd2hpdGVzcGFjZVxyXG5cdHdoaXRlc3BhY2UgPSBcIltcXFxceDIwXFxcXHRcXFxcclxcXFxuXFxcXGZdXCIsXHJcblxyXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3N5bmRhdGEuaHRtbCN2YWx1ZS1kZWYtaWRlbnRpZmllclxyXG5cdGlkZW50aWZpZXIgPSBcIig/OlxcXFxcXFxcLnxbXFxcXHctXXxbXlxcXFx4MDAtXFxcXHhhMF0pK1wiLFxyXG5cclxuXHQvLyBBdHRyaWJ1dGUgc2VsZWN0b3JzOiBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2F0dHJpYnV0ZS1zZWxlY3RvcnNcclxuXHRhdHRyaWJ1dGVzID0gXCJcXFxcW1wiICsgd2hpdGVzcGFjZSArIFwiKihcIiArIGlkZW50aWZpZXIgKyBcIikoPzpcIiArIHdoaXRlc3BhY2UgK1xyXG5cdFx0Ly8gT3BlcmF0b3IgKGNhcHR1cmUgMilcclxuXHRcdFwiKihbKl4kfCF+XT89KVwiICsgd2hpdGVzcGFjZSArXHJcblx0XHQvLyBcIkF0dHJpYnV0ZSB2YWx1ZXMgbXVzdCBiZSBDU1MgaWRlbnRpZmllcnMgW2NhcHR1cmUgNV0gb3Igc3RyaW5ncyBbY2FwdHVyZSAzIG9yIGNhcHR1cmUgNF1cIlxyXG5cdFx0XCIqKD86JygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwifChcIiArIGlkZW50aWZpZXIgKyBcIikpfClcIiArIHdoaXRlc3BhY2UgK1xyXG5cdFx0XCIqXFxcXF1cIixcclxuXHJcblx0cHNldWRvcyA9IFwiOihcIiArIGlkZW50aWZpZXIgKyBcIikoPzpcXFxcKChcIiArXHJcblx0XHQvLyBUbyByZWR1Y2UgdGhlIG51bWJlciBvZiBzZWxlY3RvcnMgbmVlZGluZyB0b2tlbml6ZSBpbiB0aGUgcHJlRmlsdGVyLCBwcmVmZXIgYXJndW1lbnRzOlxyXG5cdFx0Ly8gMS4gcXVvdGVkIChjYXB0dXJlIDM7IGNhcHR1cmUgNCBvciBjYXB0dXJlIDUpXHJcblx0XHRcIignKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCIpfFwiICtcclxuXHRcdC8vIDIuIHNpbXBsZSAoY2FwdHVyZSA2KVxyXG5cdFx0XCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFwoKVtcXFxcXV18XCIgKyBhdHRyaWJ1dGVzICsgXCIpKil8XCIgK1xyXG5cdFx0Ly8gMy4gYW55dGhpbmcgZWxzZSAoY2FwdHVyZSAyKVxyXG5cdFx0XCIuKlwiICtcclxuXHRcdFwiKVxcXFwpfClcIixcclxuXHJcblx0Ly8gTGVhZGluZyBhbmQgbm9uLWVzY2FwZWQgdHJhaWxpbmcgd2hpdGVzcGFjZSwgY2FwdHVyaW5nIHNvbWUgbm9uLXdoaXRlc3BhY2UgY2hhcmFjdGVycyBwcmVjZWRpbmcgdGhlIGxhdHRlclxyXG5cdHJ3aGl0ZXNwYWNlID0gbmV3IFJlZ0V4cCggd2hpdGVzcGFjZSArIFwiK1wiLCBcImdcIiApLFxyXG5cdHJ0cmltID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIrfCgoPzpefFteXFxcXFxcXFxdKSg/OlxcXFxcXFxcLikqKVwiICsgd2hpdGVzcGFjZSArIFwiKyRcIiwgXCJnXCIgKSxcclxuXHJcblx0cmNvbW1hID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqLFwiICsgd2hpdGVzcGFjZSArIFwiKlwiICksXHJcblx0cmNvbWJpbmF0b3JzID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFs+K35dfFwiICsgd2hpdGVzcGFjZSArIFwiKVwiICsgd2hpdGVzcGFjZSArIFwiKlwiICksXHJcblxyXG5cdHJhdHRyaWJ1dGVRdW90ZXMgPSBuZXcgUmVnRXhwKCBcIj1cIiArIHdoaXRlc3BhY2UgKyBcIiooW15cXFxcXSdcXFwiXSo/KVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFxdXCIsIFwiZ1wiICksXHJcblxyXG5cdHJwc2V1ZG8gPSBuZXcgUmVnRXhwKCBwc2V1ZG9zICksXHJcblx0cmlkZW50aWZpZXIgPSBuZXcgUmVnRXhwKCBcIl5cIiArIGlkZW50aWZpZXIgKyBcIiRcIiApLFxyXG5cclxuXHRtYXRjaEV4cHIgPSB7XHJcblx0XHRcIklEXCI6IG5ldyBSZWdFeHAoIFwiXiMoXCIgKyBpZGVudGlmaWVyICsgXCIpXCIgKSxcclxuXHRcdFwiQ0xBU1NcIjogbmV3IFJlZ0V4cCggXCJeXFxcXC4oXCIgKyBpZGVudGlmaWVyICsgXCIpXCIgKSxcclxuXHRcdFwiVEFHXCI6IG5ldyBSZWdFeHAoIFwiXihcIiArIGlkZW50aWZpZXIgKyBcInxbKl0pXCIgKSxcclxuXHRcdFwiQVRUUlwiOiBuZXcgUmVnRXhwKCBcIl5cIiArIGF0dHJpYnV0ZXMgKSxcclxuXHRcdFwiUFNFVURPXCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgcHNldWRvcyApLFxyXG5cdFx0XCJDSElMRFwiOiBuZXcgUmVnRXhwKCBcIl46KG9ubHl8Zmlyc3R8bGFzdHxudGh8bnRoLWxhc3QpLShjaGlsZHxvZi10eXBlKSg/OlxcXFwoXCIgKyB3aGl0ZXNwYWNlICtcclxuXHRcdFx0XCIqKGV2ZW58b2RkfCgoWystXXwpKFxcXFxkKilufClcIiArIHdoaXRlc3BhY2UgKyBcIiooPzooWystXXwpXCIgKyB3aGl0ZXNwYWNlICtcclxuXHRcdFx0XCIqKFxcXFxkKyl8KSlcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcKXwpXCIsIFwiaVwiICksXHJcblx0XHRcImJvb2xcIjogbmV3IFJlZ0V4cCggXCJeKD86XCIgKyBib29sZWFucyArIFwiKSRcIiwgXCJpXCIgKSxcclxuXHRcdC8vIEZvciB1c2UgaW4gbGlicmFyaWVzIGltcGxlbWVudGluZyAuaXMoKVxyXG5cdFx0Ly8gV2UgdXNlIHRoaXMgZm9yIFBPUyBtYXRjaGluZyBpbiBgc2VsZWN0YFxyXG5cdFx0XCJuZWVkc0NvbnRleHRcIjogbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqWz4rfl18OihldmVufG9kZHxlcXxndHxsdHxudGh8Zmlyc3R8bGFzdCkoPzpcXFxcKFwiICtcclxuXHRcdFx0d2hpdGVzcGFjZSArIFwiKigoPzotXFxcXGQpP1xcXFxkKilcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcKXwpKD89W14tXXwkKVwiLCBcImlcIiApXHJcblx0fSxcclxuXHJcblx0cmlucHV0cyA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksXHJcblx0cmhlYWRlciA9IC9eaFxcZCQvaSxcclxuXHJcblx0cm5hdGl2ZSA9IC9eW157XStcXHtcXHMqXFxbbmF0aXZlIFxcdy8sXHJcblxyXG5cdC8vIEVhc2lseS1wYXJzZWFibGUvcmV0cmlldmFibGUgSUQgb3IgVEFHIG9yIENMQVNTIHNlbGVjdG9yc1xyXG5cdHJxdWlja0V4cHIgPSAvXig/OiMoW1xcdy1dKyl8KFxcdyspfFxcLihbXFx3LV0rKSkkLyxcclxuXHJcblx0cnNpYmxpbmcgPSAvWyt+XS8sXHJcblx0cmVzY2FwZSA9IC8nfFxcXFwvZyxcclxuXHJcblx0Ly8gQ1NTIGVzY2FwZXMgaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI2VzY2FwZWQtY2hhcmFjdGVyc1xyXG5cdHJ1bmVzY2FwZSA9IG5ldyBSZWdFeHAoIFwiXFxcXFxcXFwoW1xcXFxkYS1mXXsxLDZ9XCIgKyB3aGl0ZXNwYWNlICsgXCI/fChcIiArIHdoaXRlc3BhY2UgKyBcIil8LilcIiwgXCJpZ1wiICksXHJcblx0ZnVuZXNjYXBlID0gZnVuY3Rpb24oIF8sIGVzY2FwZWQsIGVzY2FwZWRXaGl0ZXNwYWNlICkge1xyXG5cdFx0dmFyIGhpZ2ggPSBcIjB4XCIgKyBlc2NhcGVkIC0gMHgxMDAwMDtcclxuXHRcdC8vIE5hTiBtZWFucyBub24tY29kZXBvaW50XHJcblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94PDI0XHJcblx0XHQvLyBXb3JrYXJvdW5kIGVycm9uZW91cyBudW1lcmljIGludGVycHJldGF0aW9uIG9mICtcIjB4XCJcclxuXHRcdHJldHVybiBoaWdoICE9PSBoaWdoIHx8IGVzY2FwZWRXaGl0ZXNwYWNlID9cclxuXHRcdFx0ZXNjYXBlZCA6XHJcblx0XHRcdGhpZ2ggPCAwID9cclxuXHRcdFx0XHQvLyBCTVAgY29kZXBvaW50XHJcblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCArIDB4MTAwMDAgKSA6XHJcblx0XHRcdFx0Ly8gU3VwcGxlbWVudGFsIFBsYW5lIGNvZGVwb2ludCAoc3Vycm9nYXRlIHBhaXIpXHJcblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCA+PiAxMCB8IDB4RDgwMCwgaGlnaCAmIDB4M0ZGIHwgMHhEQzAwICk7XHJcblx0fSxcclxuXHJcblx0Ly8gVXNlZCBmb3IgaWZyYW1lc1xyXG5cdC8vIFNlZSBzZXREb2N1bWVudCgpXHJcblx0Ly8gUmVtb3ZpbmcgdGhlIGZ1bmN0aW9uIHdyYXBwZXIgY2F1c2VzIGEgXCJQZXJtaXNzaW9uIERlbmllZFwiXHJcblx0Ly8gZXJyb3IgaW4gSUVcclxuXHR1bmxvYWRIYW5kbGVyID0gZnVuY3Rpb24oKSB7XHJcblx0XHRzZXREb2N1bWVudCgpO1xyXG5cdH07XHJcblxyXG4vLyBPcHRpbWl6ZSBmb3IgcHVzaC5hcHBseSggXywgTm9kZUxpc3QgKVxyXG50cnkge1xyXG5cdHB1c2guYXBwbHkoXHJcblx0XHQoYXJyID0gc2xpY2UuY2FsbCggcHJlZmVycmVkRG9jLmNoaWxkTm9kZXMgKSksXHJcblx0XHRwcmVmZXJyZWREb2MuY2hpbGROb2Rlc1xyXG5cdCk7XHJcblx0Ly8gU3VwcG9ydDogQW5kcm9pZDw0LjBcclxuXHQvLyBEZXRlY3Qgc2lsZW50bHkgZmFpbGluZyBwdXNoLmFwcGx5XHJcblx0YXJyWyBwcmVmZXJyZWREb2MuY2hpbGROb2Rlcy5sZW5ndGggXS5ub2RlVHlwZTtcclxufSBjYXRjaCAoIGUgKSB7XHJcblx0cHVzaCA9IHsgYXBwbHk6IGFyci5sZW5ndGggP1xyXG5cclxuXHRcdC8vIExldmVyYWdlIHNsaWNlIGlmIHBvc3NpYmxlXHJcblx0XHRmdW5jdGlvbiggdGFyZ2V0LCBlbHMgKSB7XHJcblx0XHRcdHB1c2hfbmF0aXZlLmFwcGx5KCB0YXJnZXQsIHNsaWNlLmNhbGwoZWxzKSApO1xyXG5cdFx0fSA6XHJcblxyXG5cdFx0Ly8gU3VwcG9ydDogSUU8OVxyXG5cdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZCBkaXJlY3RseVxyXG5cdFx0ZnVuY3Rpb24oIHRhcmdldCwgZWxzICkge1xyXG5cdFx0XHR2YXIgaiA9IHRhcmdldC5sZW5ndGgsXHJcblx0XHRcdFx0aSA9IDA7XHJcblx0XHRcdC8vIENhbid0IHRydXN0IE5vZGVMaXN0Lmxlbmd0aFxyXG5cdFx0XHR3aGlsZSAoICh0YXJnZXRbaisrXSA9IGVsc1tpKytdKSApIHt9XHJcblx0XHRcdHRhcmdldC5sZW5ndGggPSBqIC0gMTtcclxuXHRcdH1cclxuXHR9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBTaXp6bGUoIHNlbGVjdG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkge1xyXG5cdHZhciBtLCBpLCBlbGVtLCBuaWQsIG5pZHNlbGVjdCwgbWF0Y2gsIGdyb3VwcywgbmV3U2VsZWN0b3IsXHJcblx0XHRuZXdDb250ZXh0ID0gY29udGV4dCAmJiBjb250ZXh0Lm93bmVyRG9jdW1lbnQsXHJcblxyXG5cdFx0Ly8gbm9kZVR5cGUgZGVmYXVsdHMgdG8gOSwgc2luY2UgY29udGV4dCBkZWZhdWx0cyB0byBkb2N1bWVudFxyXG5cdFx0bm9kZVR5cGUgPSBjb250ZXh0ID8gY29udGV4dC5ub2RlVHlwZSA6IDk7XHJcblxyXG5cdHJlc3VsdHMgPSByZXN1bHRzIHx8IFtdO1xyXG5cclxuXHQvLyBSZXR1cm4gZWFybHkgZnJvbSBjYWxscyB3aXRoIGludmFsaWQgc2VsZWN0b3Igb3IgY29udGV4dFxyXG5cdGlmICggdHlwZW9mIHNlbGVjdG9yICE9PSBcInN0cmluZ1wiIHx8ICFzZWxlY3RvciB8fFxyXG5cdFx0bm9kZVR5cGUgIT09IDEgJiYgbm9kZVR5cGUgIT09IDkgJiYgbm9kZVR5cGUgIT09IDExICkge1xyXG5cclxuXHRcdHJldHVybiByZXN1bHRzO1xyXG5cdH1cclxuXHJcblx0Ly8gVHJ5IHRvIHNob3J0Y3V0IGZpbmQgb3BlcmF0aW9ucyAoYXMgb3Bwb3NlZCB0byBmaWx0ZXJzKSBpbiBIVE1MIGRvY3VtZW50c1xyXG5cdGlmICggIXNlZWQgKSB7XHJcblxyXG5cdFx0aWYgKCAoIGNvbnRleHQgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IHByZWZlcnJlZERvYyApICE9PSBkb2N1bWVudCApIHtcclxuXHRcdFx0c2V0RG9jdW1lbnQoIGNvbnRleHQgKTtcclxuXHRcdH1cclxuXHRcdGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xyXG5cclxuXHRcdGlmICggZG9jdW1lbnRJc0hUTUwgKSB7XHJcblxyXG5cdFx0XHQvLyBJZiB0aGUgc2VsZWN0b3IgaXMgc3VmZmljaWVudGx5IHNpbXBsZSwgdHJ5IHVzaW5nIGEgXCJnZXQqQnkqXCIgRE9NIG1ldGhvZFxyXG5cdFx0XHQvLyAoZXhjZXB0aW5nIERvY3VtZW50RnJhZ21lbnQgY29udGV4dCwgd2hlcmUgdGhlIG1ldGhvZHMgZG9uJ3QgZXhpc3QpXHJcblx0XHRcdGlmICggbm9kZVR5cGUgIT09IDExICYmIChtYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKSkgKSB7XHJcblxyXG5cdFx0XHRcdC8vIElEIHNlbGVjdG9yXHJcblx0XHRcdFx0aWYgKCAobSA9IG1hdGNoWzFdKSApIHtcclxuXHJcblx0XHRcdFx0XHQvLyBEb2N1bWVudCBjb250ZXh0XHJcblx0XHRcdFx0XHRpZiAoIG5vZGVUeXBlID09PSA5ICkge1xyXG5cdFx0XHRcdFx0XHRpZiAoIChlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApKSApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUsIE9wZXJhLCBXZWJraXRcclxuXHRcdFx0XHRcdFx0XHQvLyBUT0RPOiBpZGVudGlmeSB2ZXJzaW9uc1xyXG5cdFx0XHRcdFx0XHRcdC8vIGdldEVsZW1lbnRCeUlkIGNhbiBtYXRjaCBlbGVtZW50cyBieSBuYW1lIGluc3RlYWQgb2YgSURcclxuXHRcdFx0XHRcdFx0XHRpZiAoIGVsZW0uaWQgPT09IG0gKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcclxuXHRcdFx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcclxuXHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdC8vIEVsZW1lbnQgY29udGV4dFxyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHJcblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFLCBPcGVyYSwgV2Via2l0XHJcblx0XHRcdFx0XHRcdC8vIFRPRE86IGlkZW50aWZ5IHZlcnNpb25zXHJcblx0XHRcdFx0XHRcdC8vIGdldEVsZW1lbnRCeUlkIGNhbiBtYXRjaCBlbGVtZW50cyBieSBuYW1lIGluc3RlYWQgb2YgSURcclxuXHRcdFx0XHRcdFx0aWYgKCBuZXdDb250ZXh0ICYmIChlbGVtID0gbmV3Q29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApKSAmJlxyXG5cdFx0XHRcdFx0XHRcdGNvbnRhaW5zKCBjb250ZXh0LCBlbGVtICkgJiZcclxuXHRcdFx0XHRcdFx0XHRlbGVtLmlkID09PSBtICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBUeXBlIHNlbGVjdG9yXHJcblx0XHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbMl0gKSB7XHJcblx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBzZWxlY3RvciApICk7XHJcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcclxuXHJcblx0XHRcdFx0Ly8gQ2xhc3Mgc2VsZWN0b3JcclxuXHRcdFx0XHR9IGVsc2UgaWYgKCAobSA9IG1hdGNoWzNdKSAmJiBzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiZcclxuXHRcdFx0XHRcdGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApIHtcclxuXHJcblx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIG0gKSApO1xyXG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBUYWtlIGFkdmFudGFnZSBvZiBxdWVyeVNlbGVjdG9yQWxsXHJcblx0XHRcdGlmICggc3VwcG9ydC5xc2EgJiZcclxuXHRcdFx0XHQhY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdICYmXHJcblx0XHRcdFx0KCFyYnVnZ3lRU0EgfHwgIXJidWdneVFTQS50ZXN0KCBzZWxlY3RvciApKSApIHtcclxuXHJcblx0XHRcdFx0aWYgKCBub2RlVHlwZSAhPT0gMSApIHtcclxuXHRcdFx0XHRcdG5ld0NvbnRleHQgPSBjb250ZXh0O1xyXG5cdFx0XHRcdFx0bmV3U2VsZWN0b3IgPSBzZWxlY3RvcjtcclxuXHJcblx0XHRcdFx0Ly8gcVNBIGxvb2tzIG91dHNpZGUgRWxlbWVudCBjb250ZXh0LCB3aGljaCBpcyBub3Qgd2hhdCB3ZSB3YW50XHJcblx0XHRcdFx0Ly8gVGhhbmtzIHRvIEFuZHJldyBEdXBvbnQgZm9yIHRoaXMgd29ya2Fyb3VuZCB0ZWNobmlxdWVcclxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PThcclxuXHRcdFx0XHQvLyBFeGNsdWRlIG9iamVjdCBlbGVtZW50c1xyXG5cdFx0XHRcdH0gZWxzZSBpZiAoIGNvbnRleHQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gXCJvYmplY3RcIiApIHtcclxuXHJcblx0XHRcdFx0XHQvLyBDYXB0dXJlIHRoZSBjb250ZXh0IElELCBzZXR0aW5nIGl0IGZpcnN0IGlmIG5lY2Vzc2FyeVxyXG5cdFx0XHRcdFx0aWYgKCAobmlkID0gY29udGV4dC5nZXRBdHRyaWJ1dGUoIFwiaWRcIiApKSApIHtcclxuXHRcdFx0XHRcdFx0bmlkID0gbmlkLnJlcGxhY2UoIHJlc2NhcGUsIFwiXFxcXCQmXCIgKTtcclxuXHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdGNvbnRleHQuc2V0QXR0cmlidXRlKCBcImlkXCIsIChuaWQgPSBleHBhbmRvKSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdC8vIFByZWZpeCBldmVyeSBzZWxlY3RvciBpbiB0aGUgbGlzdFxyXG5cdFx0XHRcdFx0Z3JvdXBzID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XHJcblx0XHRcdFx0XHRpID0gZ3JvdXBzLmxlbmd0aDtcclxuXHRcdFx0XHRcdG5pZHNlbGVjdCA9IHJpZGVudGlmaWVyLnRlc3QoIG5pZCApID8gXCIjXCIgKyBuaWQgOiBcIltpZD0nXCIgKyBuaWQgKyBcIiddXCI7XHJcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0XHRcdFx0Z3JvdXBzW2ldID0gbmlkc2VsZWN0ICsgXCIgXCIgKyB0b1NlbGVjdG9yKCBncm91cHNbaV0gKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdG5ld1NlbGVjdG9yID0gZ3JvdXBzLmpvaW4oIFwiLFwiICk7XHJcblxyXG5cdFx0XHRcdFx0Ly8gRXhwYW5kIGNvbnRleHQgZm9yIHNpYmxpbmcgc2VsZWN0b3JzXHJcblx0XHRcdFx0XHRuZXdDb250ZXh0ID0gcnNpYmxpbmcudGVzdCggc2VsZWN0b3IgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHxcclxuXHRcdFx0XHRcdFx0Y29udGV4dDtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmICggbmV3U2VsZWN0b3IgKSB7XHJcblx0XHRcdFx0XHR0cnkge1xyXG5cdFx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLFxyXG5cdFx0XHRcdFx0XHRcdG5ld0NvbnRleHQucXVlcnlTZWxlY3RvckFsbCggbmV3U2VsZWN0b3IgKVxyXG5cdFx0XHRcdFx0XHQpO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcclxuXHRcdFx0XHRcdH0gY2F0Y2ggKCBxc2FFcnJvciApIHtcclxuXHRcdFx0XHRcdH0gZmluYWxseSB7XHJcblx0XHRcdFx0XHRcdGlmICggbmlkID09PSBleHBhbmRvICkge1xyXG5cdFx0XHRcdFx0XHRcdGNvbnRleHQucmVtb3ZlQXR0cmlidXRlKCBcImlkXCIgKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly8gQWxsIG90aGVyc1xyXG5cdHJldHVybiBzZWxlY3QoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApO1xyXG59XHJcblxyXG4vKipcclxuICogQ3JlYXRlIGtleS12YWx1ZSBjYWNoZXMgb2YgbGltaXRlZCBzaXplXHJcbiAqIEByZXR1cm5zIHtmdW5jdGlvbihzdHJpbmcsIG9iamVjdCl9IFJldHVybnMgdGhlIE9iamVjdCBkYXRhIGFmdGVyIHN0b3JpbmcgaXQgb24gaXRzZWxmIHdpdGhcclxuICpcdHByb3BlcnR5IG5hbWUgdGhlIChzcGFjZS1zdWZmaXhlZCkgc3RyaW5nIGFuZCAoaWYgdGhlIGNhY2hlIGlzIGxhcmdlciB0aGFuIEV4cHIuY2FjaGVMZW5ndGgpXHJcbiAqXHRkZWxldGluZyB0aGUgb2xkZXN0IGVudHJ5XHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVDYWNoZSgpIHtcclxuXHR2YXIga2V5cyA9IFtdO1xyXG5cclxuXHRmdW5jdGlvbiBjYWNoZSgga2V5LCB2YWx1ZSApIHtcclxuXHRcdC8vIFVzZSAoa2V5ICsgXCIgXCIpIHRvIGF2b2lkIGNvbGxpc2lvbiB3aXRoIG5hdGl2ZSBwcm90b3R5cGUgcHJvcGVydGllcyAoc2VlIElzc3VlICMxNTcpXHJcblx0XHRpZiAoIGtleXMucHVzaCgga2V5ICsgXCIgXCIgKSA+IEV4cHIuY2FjaGVMZW5ndGggKSB7XHJcblx0XHRcdC8vIE9ubHkga2VlcCB0aGUgbW9zdCByZWNlbnQgZW50cmllc1xyXG5cdFx0XHRkZWxldGUgY2FjaGVbIGtleXMuc2hpZnQoKSBdO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIChjYWNoZVsga2V5ICsgXCIgXCIgXSA9IHZhbHVlKTtcclxuXHR9XHJcblx0cmV0dXJuIGNhY2hlO1xyXG59XHJcblxyXG4vKipcclxuICogTWFyayBhIGZ1bmN0aW9uIGZvciBzcGVjaWFsIHVzZSBieSBTaXp6bGVcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gVGhlIGZ1bmN0aW9uIHRvIG1hcmtcclxuICovXHJcbmZ1bmN0aW9uIG1hcmtGdW5jdGlvbiggZm4gKSB7XHJcblx0Zm5bIGV4cGFuZG8gXSA9IHRydWU7XHJcblx0cmV0dXJuIGZuO1xyXG59XHJcblxyXG4vKipcclxuICogU3VwcG9ydCB0ZXN0aW5nIHVzaW5nIGFuIGVsZW1lbnRcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm4gUGFzc2VkIHRoZSBjcmVhdGVkIGRpdiBhbmQgZXhwZWN0cyBhIGJvb2xlYW4gcmVzdWx0XHJcbiAqL1xyXG5mdW5jdGlvbiBhc3NlcnQoIGZuICkge1xyXG5cdHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpO1xyXG5cclxuXHR0cnkge1xyXG5cdFx0cmV0dXJuICEhZm4oIGRpdiApO1xyXG5cdH0gY2F0Y2ggKGUpIHtcclxuXHRcdHJldHVybiBmYWxzZTtcclxuXHR9IGZpbmFsbHkge1xyXG5cdFx0Ly8gUmVtb3ZlIGZyb20gaXRzIHBhcmVudCBieSBkZWZhdWx0XHJcblx0XHRpZiAoIGRpdi5wYXJlbnROb2RlICkge1xyXG5cdFx0XHRkaXYucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggZGl2ICk7XHJcblx0XHR9XHJcblx0XHQvLyByZWxlYXNlIG1lbW9yeSBpbiBJRVxyXG5cdFx0ZGl2ID0gbnVsbDtcclxuXHR9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGRzIHRoZSBzYW1lIGhhbmRsZXIgZm9yIGFsbCBvZiB0aGUgc3BlY2lmaWVkIGF0dHJzXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSBhdHRycyBQaXBlLXNlcGFyYXRlZCBsaXN0IG9mIGF0dHJpYnV0ZXNcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gaGFuZGxlciBUaGUgbWV0aG9kIHRoYXQgd2lsbCBiZSBhcHBsaWVkXHJcbiAqL1xyXG5mdW5jdGlvbiBhZGRIYW5kbGUoIGF0dHJzLCBoYW5kbGVyICkge1xyXG5cdHZhciBhcnIgPSBhdHRycy5zcGxpdChcInxcIiksXHJcblx0XHRpID0gYXJyLmxlbmd0aDtcclxuXHJcblx0d2hpbGUgKCBpLS0gKSB7XHJcblx0XHRFeHByLmF0dHJIYW5kbGVbIGFycltpXSBdID0gaGFuZGxlcjtcclxuXHR9XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDaGVja3MgZG9jdW1lbnQgb3JkZXIgb2YgdHdvIHNpYmxpbmdzXHJcbiAqIEBwYXJhbSB7RWxlbWVudH0gYVxyXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGJcclxuICogQHJldHVybnMge051bWJlcn0gUmV0dXJucyBsZXNzIHRoYW4gMCBpZiBhIHByZWNlZGVzIGIsIGdyZWF0ZXIgdGhhbiAwIGlmIGEgZm9sbG93cyBiXHJcbiAqL1xyXG5mdW5jdGlvbiBzaWJsaW5nQ2hlY2soIGEsIGIgKSB7XHJcblx0dmFyIGN1ciA9IGIgJiYgYSxcclxuXHRcdGRpZmYgPSBjdXIgJiYgYS5ub2RlVHlwZSA9PT0gMSAmJiBiLm5vZGVUeXBlID09PSAxICYmXHJcblx0XHRcdCggfmIuc291cmNlSW5kZXggfHwgTUFYX05FR0FUSVZFICkgLVxyXG5cdFx0XHQoIH5hLnNvdXJjZUluZGV4IHx8IE1BWF9ORUdBVElWRSApO1xyXG5cclxuXHQvLyBVc2UgSUUgc291cmNlSW5kZXggaWYgYXZhaWxhYmxlIG9uIGJvdGggbm9kZXNcclxuXHRpZiAoIGRpZmYgKSB7XHJcblx0XHRyZXR1cm4gZGlmZjtcclxuXHR9XHJcblxyXG5cdC8vIENoZWNrIGlmIGIgZm9sbG93cyBhXHJcblx0aWYgKCBjdXIgKSB7XHJcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIubmV4dFNpYmxpbmcpICkge1xyXG5cdFx0XHRpZiAoIGN1ciA9PT0gYiApIHtcclxuXHRcdFx0XHRyZXR1cm4gLTE7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiBhID8gMSA6IC0xO1xyXG59XHJcblxyXG4vKipcclxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBpbnB1dCB0eXBlc1xyXG4gKiBAcGFyYW0ge1N0cmluZ30gdHlwZVxyXG4gKi9cclxuZnVuY3Rpb24gY3JlYXRlSW5wdXRQc2V1ZG8oIHR5cGUgKSB7XHJcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gdHlwZTtcclxuXHR9O1xyXG59XHJcblxyXG4vKipcclxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBidXR0b25zXHJcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXHJcbiAqL1xyXG5mdW5jdGlvbiBjcmVhdGVCdXR0b25Qc2V1ZG8oIHR5cGUgKSB7XHJcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRyZXR1cm4gKG5hbWUgPT09IFwiaW5wdXRcIiB8fCBuYW1lID09PSBcImJ1dHRvblwiKSAmJiBlbGVtLnR5cGUgPT09IHR5cGU7XHJcblx0fTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHNcclxuICogQHBhcmFtIHtGdW5jdGlvbn0gZm5cclxuICovXHJcbmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkge1xyXG5cdHJldHVybiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIGFyZ3VtZW50ICkge1xyXG5cdFx0YXJndW1lbnQgPSArYXJndW1lbnQ7XHJcblx0XHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xyXG5cdFx0XHR2YXIgaixcclxuXHRcdFx0XHRtYXRjaEluZGV4ZXMgPSBmbiggW10sIHNlZWQubGVuZ3RoLCBhcmd1bWVudCApLFxyXG5cdFx0XHRcdGkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoO1xyXG5cclxuXHRcdFx0Ly8gTWF0Y2ggZWxlbWVudHMgZm91bmQgYXQgdGhlIHNwZWNpZmllZCBpbmRleGVzXHJcblx0XHRcdHdoaWxlICggaS0tICkge1xyXG5cdFx0XHRcdGlmICggc2VlZFsgKGogPSBtYXRjaEluZGV4ZXNbaV0pIF0gKSB7XHJcblx0XHRcdFx0XHRzZWVkW2pdID0gIShtYXRjaGVzW2pdID0gc2VlZFtqXSk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9KTtcclxuXHR9KTtcclxufVxyXG5cclxuLyoqXHJcbiAqIENoZWNrcyBhIG5vZGUgZm9yIHZhbGlkaXR5IGFzIGEgU2l6emxlIGNvbnRleHRcclxuICogQHBhcmFtIHtFbGVtZW50fE9iamVjdD19IGNvbnRleHRcclxuICogQHJldHVybnMge0VsZW1lbnR8T2JqZWN0fEJvb2xlYW59IFRoZSBpbnB1dCBub2RlIGlmIGFjY2VwdGFibGUsIG90aGVyd2lzZSBhIGZhbHN5IHZhbHVlXHJcbiAqL1xyXG5mdW5jdGlvbiB0ZXN0Q29udGV4dCggY29udGV4dCApIHtcclxuXHRyZXR1cm4gY29udGV4dCAmJiB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb250ZXh0O1xyXG59XHJcblxyXG4vLyBFeHBvc2Ugc3VwcG9ydCB2YXJzIGZvciBjb252ZW5pZW5jZVxyXG5zdXBwb3J0ID0gU2l6emxlLnN1cHBvcnQgPSB7fTtcclxuXHJcbi8qKlxyXG4gKiBEZXRlY3RzIFhNTCBub2Rlc1xyXG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBlbGVtIEFuIGVsZW1lbnQgb3IgYSBkb2N1bWVudFxyXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZmYgZWxlbSBpcyBhIG5vbi1IVE1MIFhNTCBub2RlXHJcbiAqL1xyXG5pc1hNTCA9IFNpenpsZS5pc1hNTCA9IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdC8vIGRvY3VtZW50RWxlbWVudCBpcyB2ZXJpZmllZCBmb3IgY2FzZXMgd2hlcmUgaXQgZG9lc24ndCB5ZXQgZXhpc3RcclxuXHQvLyAoc3VjaCBhcyBsb2FkaW5nIGlmcmFtZXMgaW4gSUUgLSAjNDgzMylcclxuXHR2YXIgZG9jdW1lbnRFbGVtZW50ID0gZWxlbSAmJiAoZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0pLmRvY3VtZW50RWxlbWVudDtcclxuXHRyZXR1cm4gZG9jdW1lbnRFbGVtZW50ID8gZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lICE9PSBcIkhUTUxcIiA6IGZhbHNlO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFNldHMgZG9jdW1lbnQtcmVsYXRlZCB2YXJpYWJsZXMgb25jZSBiYXNlZCBvbiB0aGUgY3VycmVudCBkb2N1bWVudFxyXG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0fSBbZG9jXSBBbiBlbGVtZW50IG9yIGRvY3VtZW50IG9iamVjdCB0byB1c2UgdG8gc2V0IHRoZSBkb2N1bWVudFxyXG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjdXJyZW50IGRvY3VtZW50XHJcbiAqL1xyXG5zZXREb2N1bWVudCA9IFNpenpsZS5zZXREb2N1bWVudCA9IGZ1bmN0aW9uKCBub2RlICkge1xyXG5cdHZhciBoYXNDb21wYXJlLCBwYXJlbnQsXHJcblx0XHRkb2MgPSBub2RlID8gbm9kZS5vd25lckRvY3VtZW50IHx8IG5vZGUgOiBwcmVmZXJyZWREb2M7XHJcblxyXG5cdC8vIFJldHVybiBlYXJseSBpZiBkb2MgaXMgaW52YWxpZCBvciBhbHJlYWR5IHNlbGVjdGVkXHJcblx0aWYgKCBkb2MgPT09IGRvY3VtZW50IHx8IGRvYy5ub2RlVHlwZSAhPT0gOSB8fCAhZG9jLmRvY3VtZW50RWxlbWVudCApIHtcclxuXHRcdHJldHVybiBkb2N1bWVudDtcclxuXHR9XHJcblxyXG5cdC8vIFVwZGF0ZSBnbG9iYWwgdmFyaWFibGVzXHJcblx0ZG9jdW1lbnQgPSBkb2M7XHJcblx0ZG9jRWxlbSA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcclxuXHRkb2N1bWVudElzSFRNTCA9ICFpc1hNTCggZG9jdW1lbnQgKTtcclxuXHJcblx0Ly8gU3VwcG9ydDogSUUgOS0xMSwgRWRnZVxyXG5cdC8vIEFjY2Vzc2luZyBpZnJhbWUgZG9jdW1lbnRzIGFmdGVyIHVubG9hZCB0aHJvd3MgXCJwZXJtaXNzaW9uIGRlbmllZFwiIGVycm9ycyAoalF1ZXJ5ICMxMzkzNilcclxuXHRpZiAoIChwYXJlbnQgPSBkb2N1bWVudC5kZWZhdWx0VmlldykgJiYgcGFyZW50LnRvcCAhPT0gcGFyZW50ICkge1xyXG5cdFx0Ly8gU3VwcG9ydDogSUUgMTFcclxuXHRcdGlmICggcGFyZW50LmFkZEV2ZW50TGlzdGVuZXIgKSB7XHJcblx0XHRcdHBhcmVudC5hZGRFdmVudExpc3RlbmVyKCBcInVubG9hZFwiLCB1bmxvYWRIYW5kbGVyLCBmYWxzZSApO1xyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IElFIDkgLSAxMCBvbmx5XHJcblx0XHR9IGVsc2UgaWYgKCBwYXJlbnQuYXR0YWNoRXZlbnQgKSB7XHJcblx0XHRcdHBhcmVudC5hdHRhY2hFdmVudCggXCJvbnVubG9hZFwiLCB1bmxvYWRIYW5kbGVyICk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvKiBBdHRyaWJ1dGVzXHJcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xyXG5cclxuXHQvLyBTdXBwb3J0OiBJRTw4XHJcblx0Ly8gVmVyaWZ5IHRoYXQgZ2V0QXR0cmlidXRlIHJlYWxseSByZXR1cm5zIGF0dHJpYnV0ZXMgYW5kIG5vdCBwcm9wZXJ0aWVzXHJcblx0Ly8gKGV4Y2VwdGluZyBJRTggYm9vbGVhbnMpXHJcblx0c3VwcG9ydC5hdHRyaWJ1dGVzID0gYXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XHJcblx0XHRkaXYuY2xhc3NOYW1lID0gXCJpXCI7XHJcblx0XHRyZXR1cm4gIWRpdi5nZXRBdHRyaWJ1dGUoXCJjbGFzc05hbWVcIik7XHJcblx0fSk7XHJcblxyXG5cdC8qIGdldEVsZW1lbnQocylCeSpcclxuXHQtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tICovXHJcblxyXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKSByZXR1cm5zIG9ubHkgZWxlbWVudHNcclxuXHRzdXBwb3J0LmdldEVsZW1lbnRzQnlUYWdOYW1lID0gYXNzZXJ0KGZ1bmN0aW9uKCBkaXYgKSB7XHJcblx0XHRkaXYuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUNvbW1lbnQoXCJcIikgKTtcclxuXHRcdHJldHVybiAhZGl2LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiKlwiKS5sZW5ndGg7XHJcblx0fSk7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IElFPDlcclxuXHRzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgKTtcclxuXHJcblx0Ly8gU3VwcG9ydDogSUU8MTBcclxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50QnlJZCByZXR1cm5zIGVsZW1lbnRzIGJ5IG5hbWVcclxuXHQvLyBUaGUgYnJva2VuIGdldEVsZW1lbnRCeUlkIG1ldGhvZHMgZG9uJ3QgcGljayB1cCBwcm9ncmFtYXRpY2FsbHktc2V0IG5hbWVzLFxyXG5cdC8vIHNvIHVzZSBhIHJvdW5kYWJvdXQgZ2V0RWxlbWVudHNCeU5hbWUgdGVzdFxyXG5cdHN1cHBvcnQuZ2V0QnlJZCA9IGFzc2VydChmdW5jdGlvbiggZGl2ICkge1xyXG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZGl2ICkuaWQgPSBleHBhbmRvO1xyXG5cdFx0cmV0dXJuICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoIGV4cGFuZG8gKS5sZW5ndGg7XHJcblx0fSk7XHJcblxyXG5cdC8vIElEIGZpbmQgYW5kIGZpbHRlclxyXG5cdGlmICggc3VwcG9ydC5nZXRCeUlkICkge1xyXG5cdFx0RXhwci5maW5kW1wiSURcIl0gPSBmdW5jdGlvbiggaWQsIGNvbnRleHQgKSB7XHJcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQgIT09IFwidW5kZWZpbmVkXCIgJiYgZG9jdW1lbnRJc0hUTUwgKSB7XHJcblx0XHRcdFx0dmFyIG0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApO1xyXG5cdFx0XHRcdHJldHVybiBtID8gWyBtIF0gOiBbXTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHRcdEV4cHIuZmlsdGVyW1wiSURcIl0gPSBmdW5jdGlvbiggaWQgKSB7XHJcblx0XHRcdHZhciBhdHRySWQgPSBpZC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xyXG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKFwiaWRcIikgPT09IGF0dHJJZDtcclxuXHRcdFx0fTtcclxuXHRcdH07XHJcblx0fSBlbHNlIHtcclxuXHRcdC8vIFN1cHBvcnQ6IElFNi83XHJcblx0XHQvLyBnZXRFbGVtZW50QnlJZCBpcyBub3QgcmVsaWFibGUgYXMgYSBmaW5kIHNob3J0Y3V0XHJcblx0XHRkZWxldGUgRXhwci5maW5kW1wiSURcIl07XHJcblxyXG5cdFx0RXhwci5maWx0ZXJbXCJJRFwiXSA9ICBmdW5jdGlvbiggaWQgKSB7XHJcblx0XHRcdHZhciBhdHRySWQgPSBpZC5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xyXG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdFx0dmFyIG5vZGUgPSB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGVOb2RlICE9PSBcInVuZGVmaW5lZFwiICYmXHJcblx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZU5vZGUoXCJpZFwiKTtcclxuXHRcdFx0XHRyZXR1cm4gbm9kZSAmJiBub2RlLnZhbHVlID09PSBhdHRySWQ7XHJcblx0XHRcdH07XHJcblx0XHR9O1xyXG5cdH1cclxuXHJcblx0Ly8gVGFnXHJcblx0RXhwci5maW5kW1wiVEFHXCJdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA/XHJcblx0XHRmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkge1xyXG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICkge1xyXG5cdFx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgKTtcclxuXHJcblx0XHRcdC8vIERvY3VtZW50RnJhZ21lbnQgbm9kZXMgZG9uJ3QgaGF2ZSBnRUJUTlxyXG5cdFx0XHR9IGVsc2UgaWYgKCBzdXBwb3J0LnFzYSApIHtcclxuXHRcdFx0XHRyZXR1cm4gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgKTtcclxuXHRcdFx0fVxyXG5cdFx0fSA6XHJcblxyXG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcclxuXHRcdFx0dmFyIGVsZW0sXHJcblx0XHRcdFx0dG1wID0gW10sXHJcblx0XHRcdFx0aSA9IDAsXHJcblx0XHRcdFx0Ly8gQnkgaGFwcHkgY29pbmNpZGVuY2UsIGEgKGJyb2tlbikgZ0VCVE4gYXBwZWFycyBvbiBEb2N1bWVudEZyYWdtZW50IG5vZGVzIHRvb1xyXG5cdFx0XHRcdHJlc3VsdHMgPSBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgKTtcclxuXHJcblx0XHRcdC8vIEZpbHRlciBvdXQgcG9zc2libGUgY29tbWVudHNcclxuXHRcdFx0aWYgKCB0YWcgPT09IFwiKlwiICkge1xyXG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSByZXN1bHRzW2krK10pICkge1xyXG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xyXG5cdFx0XHRcdFx0XHR0bXAucHVzaCggZWxlbSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0cmV0dXJuIHRtcDtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gcmVzdWx0cztcclxuXHRcdH07XHJcblxyXG5cdC8vIENsYXNzXHJcblx0RXhwci5maW5kW1wiQ0xBU1NcIl0gPSBzdXBwb3J0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUgJiYgZnVuY3Rpb24oIGNsYXNzTmFtZSwgY29udGV4dCApIHtcclxuXHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcclxuXHRcdFx0cmV0dXJuIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSggY2xhc3NOYW1lICk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0LyogUVNBL21hdGNoZXNTZWxlY3RvclxyXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcblx0Ly8gUVNBIGFuZCBtYXRjaGVzU2VsZWN0b3Igc3VwcG9ydFxyXG5cclxuXHQvLyBtYXRjaGVzU2VsZWN0b3IoOmFjdGl2ZSkgcmVwb3J0cyBmYWxzZSB3aGVuIHRydWUgKElFOS9PcGVyYSAxMS41KVxyXG5cdHJidWdneU1hdGNoZXMgPSBbXTtcclxuXHJcblx0Ly8gcVNhKDpmb2N1cykgcmVwb3J0cyBmYWxzZSB3aGVuIHRydWUgKENocm9tZSAyMSlcclxuXHQvLyBXZSBhbGxvdyB0aGlzIGJlY2F1c2Ugb2YgYSBidWcgaW4gSUU4LzkgdGhhdCB0aHJvd3MgYW4gZXJyb3JcclxuXHQvLyB3aGVuZXZlciBgZG9jdW1lbnQuYWN0aXZlRWxlbWVudGAgaXMgYWNjZXNzZWQgb24gYW4gaWZyYW1lXHJcblx0Ly8gU28sIHdlIGFsbG93IDpmb2N1cyB0byBwYXNzIHRocm91Z2ggUVNBIGFsbCB0aGUgdGltZSB0byBhdm9pZCB0aGUgSUUgZXJyb3JcclxuXHQvLyBTZWUgaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzNzhcclxuXHRyYnVnZ3lRU0EgPSBbXTtcclxuXHJcblx0aWYgKCAoc3VwcG9ydC5xc2EgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwgKSkgKSB7XHJcblx0XHQvLyBCdWlsZCBRU0EgcmVnZXhcclxuXHRcdC8vIFJlZ2V4IHN0cmF0ZWd5IGFkb3B0ZWQgZnJvbSBEaWVnbyBQZXJpbmlcclxuXHRcdGFzc2VydChmdW5jdGlvbiggZGl2ICkge1xyXG5cdFx0XHQvLyBTZWxlY3QgaXMgc2V0IHRvIGVtcHR5IHN0cmluZyBvbiBwdXJwb3NlXHJcblx0XHRcdC8vIFRoaXMgaXMgdG8gdGVzdCBJRSdzIHRyZWF0bWVudCBvZiBub3QgZXhwbGljaXRseVxyXG5cdFx0XHQvLyBzZXR0aW5nIGEgYm9vbGVhbiBjb250ZW50IGF0dHJpYnV0ZSxcclxuXHRcdFx0Ly8gc2luY2UgaXRzIHByZXNlbmNlIHNob3VsZCBiZSBlbm91Z2hcclxuXHRcdFx0Ly8gaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTIzNTlcclxuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZGl2ICkuaW5uZXJIVE1MID0gXCI8YSBpZD0nXCIgKyBleHBhbmRvICsgXCInPjwvYT5cIiArXHJcblx0XHRcdFx0XCI8c2VsZWN0IGlkPSdcIiArIGV4cGFuZG8gKyBcIi1cXHJcXFxcJyBtc2FsbG93Y2FwdHVyZT0nJz5cIiArXHJcblx0XHRcdFx0XCI8b3B0aW9uIHNlbGVjdGVkPScnPjwvb3B0aW9uPjwvc2VsZWN0PlwiO1xyXG5cclxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4LCBPcGVyYSAxMS0xMi4xNlxyXG5cdFx0XHQvLyBOb3RoaW5nIHNob3VsZCBiZSBzZWxlY3RlZCB3aGVuIGVtcHR5IHN0cmluZ3MgZm9sbG93IF49IG9yICQ9IG9yICo9XHJcblx0XHRcdC8vIFRoZSB0ZXN0IGF0dHJpYnV0ZSBtdXN0IGJlIHVua25vd24gaW4gT3BlcmEgYnV0IFwic2FmZVwiIGZvciBXaW5SVFxyXG5cdFx0XHQvLyBodHRwOi8vbXNkbi5taWNyb3NvZnQuY29tL2VuLXVzL2xpYnJhcnkvaWUvaGg0NjUzODguYXNweCNhdHRyaWJ1dGVfc2VjdGlvblxyXG5cdFx0XHRpZiAoIGRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiW21zYWxsb3djYXB0dXJlXj0nJ11cIikubGVuZ3RoICkge1xyXG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlsqXiRdPVwiICsgd2hpdGVzcGFjZSArIFwiKig/OicnfFxcXCJcXFwiKVwiICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxyXG5cdFx0XHQvLyBCb29sZWFuIGF0dHJpYnV0ZXMgYW5kIFwidmFsdWVcIiBhcmUgbm90IHRyZWF0ZWQgY29ycmVjdGx5XHJcblx0XHRcdGlmICggIWRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiW3NlbGVjdGVkXVwiKS5sZW5ndGggKSB7XHJcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiXFxcXFtcIiArIHdoaXRlc3BhY2UgKyBcIiooPzp2YWx1ZXxcIiArIGJvb2xlYW5zICsgXCIpXCIgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gU3VwcG9ydDogQ2hyb21lPDI5LCBBbmRyb2lkPDQuNCwgU2FmYXJpPDcuMCssIGlPUzw3LjArLCBQaGFudG9tSlM8MS45LjgrXHJcblx0XHRcdGlmICggIWRpdi5xdWVyeVNlbGVjdG9yQWxsKCBcIltpZH49XCIgKyBleHBhbmRvICsgXCItXVwiICkubGVuZ3RoICkge1xyXG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwifj1cIik7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFdlYmtpdC9PcGVyYSAtIDpjaGVja2VkIHNob3VsZCByZXR1cm4gc2VsZWN0ZWQgb3B0aW9uIGVsZW1lbnRzXHJcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXHJcblx0XHRcdC8vIElFOCB0aHJvd3MgZXJyb3IgaGVyZSBhbmQgd2lsbCBub3Qgc2VlIGxhdGVyIHRlc3RzXHJcblx0XHRcdGlmICggIWRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiOmNoZWNrZWRcIikubGVuZ3RoICkge1xyXG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwiOmNoZWNrZWRcIik7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4KywgaU9TIDgrXHJcblx0XHRcdC8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzY4NTFcclxuXHRcdFx0Ly8gSW4tcGFnZSBgc2VsZWN0b3IjaWQgc2liaW5nLWNvbWJpbmF0b3Igc2VsZWN0b3JgIGZhaWxzXHJcblx0XHRcdGlmICggIWRpdi5xdWVyeVNlbGVjdG9yQWxsKCBcImEjXCIgKyBleHBhbmRvICsgXCIrKlwiICkubGVuZ3RoICkge1xyXG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwiLiMuK1srfl1cIik7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cclxuXHRcdGFzc2VydChmdW5jdGlvbiggZGl2ICkge1xyXG5cdFx0XHQvLyBTdXBwb3J0OiBXaW5kb3dzIDggTmF0aXZlIEFwcHNcclxuXHRcdFx0Ly8gVGhlIHR5cGUgYW5kIG5hbWUgYXR0cmlidXRlcyBhcmUgcmVzdHJpY3RlZCBkdXJpbmcgLmlubmVySFRNTCBhc3NpZ25tZW50XHJcblx0XHRcdHZhciBpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJpbnB1dFwiKTtcclxuXHRcdFx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJoaWRkZW5cIiApO1xyXG5cdFx0XHRkaXYuYXBwZW5kQ2hpbGQoIGlucHV0ICkuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJEXCIgKTtcclxuXHJcblx0XHRcdC8vIFN1cHBvcnQ6IElFOFxyXG5cdFx0XHQvLyBFbmZvcmNlIGNhc2Utc2Vuc2l0aXZpdHkgb2YgbmFtZSBhdHRyaWJ1dGVcclxuXHRcdFx0aWYgKCBkaXYucXVlcnlTZWxlY3RvckFsbChcIltuYW1lPWRdXCIpLmxlbmd0aCApIHtcclxuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqWypeJHwhfl0/PVwiICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIEZGIDMuNSAtIDplbmFibGVkLzpkaXNhYmxlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChoaWRkZW4gZWxlbWVudHMgYXJlIHN0aWxsIGVuYWJsZWQpXHJcblx0XHRcdC8vIElFOCB0aHJvd3MgZXJyb3IgaGVyZSBhbmQgd2lsbCBub3Qgc2VlIGxhdGVyIHRlc3RzXHJcblx0XHRcdGlmICggIWRpdi5xdWVyeVNlbGVjdG9yQWxsKFwiOmVuYWJsZWRcIikubGVuZ3RoICkge1xyXG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIjplbmFibGVkXCIsIFwiOmRpc2FibGVkXCIgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gT3BlcmEgMTAtMTEgZG9lcyBub3QgdGhyb3cgb24gcG9zdC1jb21tYSBpbnZhbGlkIHBzZXVkb3NcclxuXHRcdFx0ZGl2LnF1ZXJ5U2VsZWN0b3JBbGwoXCIqLDp4XCIpO1xyXG5cdFx0XHRyYnVnZ3lRU0EucHVzaChcIiwuKjpcIik7XHJcblx0XHR9KTtcclxuXHR9XHJcblxyXG5cdGlmICggKHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0KCAobWF0Y2hlcyA9IGRvY0VsZW0ubWF0Y2hlcyB8fFxyXG5cdFx0ZG9jRWxlbS53ZWJraXRNYXRjaGVzU2VsZWN0b3IgfHxcclxuXHRcdGRvY0VsZW0ubW96TWF0Y2hlc1NlbGVjdG9yIHx8XHJcblx0XHRkb2NFbGVtLm9NYXRjaGVzU2VsZWN0b3IgfHxcclxuXHRcdGRvY0VsZW0ubXNNYXRjaGVzU2VsZWN0b3IpICkpICkge1xyXG5cclxuXHRcdGFzc2VydChmdW5jdGlvbiggZGl2ICkge1xyXG5cdFx0XHQvLyBDaGVjayB0byBzZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkbyBtYXRjaGVzU2VsZWN0b3JcclxuXHRcdFx0Ly8gb24gYSBkaXNjb25uZWN0ZWQgbm9kZSAoSUUgOSlcclxuXHRcdFx0c3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCA9IG1hdGNoZXMuY2FsbCggZGl2LCBcImRpdlwiICk7XHJcblxyXG5cdFx0XHQvLyBUaGlzIHNob3VsZCBmYWlsIHdpdGggYW4gZXhjZXB0aW9uXHJcblx0XHRcdC8vIEdlY2tvIGRvZXMgbm90IGVycm9yLCByZXR1cm5zIGZhbHNlIGluc3RlYWRcclxuXHRcdFx0bWF0Y2hlcy5jYWxsKCBkaXYsIFwiW3MhPScnXTp4XCIgKTtcclxuXHRcdFx0cmJ1Z2d5TWF0Y2hlcy5wdXNoKCBcIiE9XCIsIHBzZXVkb3MgKTtcclxuXHRcdH0pO1xyXG5cdH1cclxuXHJcblx0cmJ1Z2d5UVNBID0gcmJ1Z2d5UVNBLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lRU0Euam9pbihcInxcIikgKTtcclxuXHRyYnVnZ3lNYXRjaGVzID0gcmJ1Z2d5TWF0Y2hlcy5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5TWF0Y2hlcy5qb2luKFwifFwiKSApO1xyXG5cclxuXHQvKiBDb250YWluc1xyXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHRoYXNDb21wYXJlID0gcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICk7XHJcblxyXG5cdC8vIEVsZW1lbnQgY29udGFpbnMgYW5vdGhlclxyXG5cdC8vIFB1cnBvc2VmdWxseSBzZWxmLWV4Y2x1c2l2ZVxyXG5cdC8vIEFzIGluLCBhbiBlbGVtZW50IGRvZXMgbm90IGNvbnRhaW4gaXRzZWxmXHJcblx0Y29udGFpbnMgPSBoYXNDb21wYXJlIHx8IHJuYXRpdmUudGVzdCggZG9jRWxlbS5jb250YWlucyApID9cclxuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xyXG5cdFx0XHR2YXIgYWRvd24gPSBhLm5vZGVUeXBlID09PSA5ID8gYS5kb2N1bWVudEVsZW1lbnQgOiBhLFxyXG5cdFx0XHRcdGJ1cCA9IGIgJiYgYi5wYXJlbnROb2RlO1xyXG5cdFx0XHRyZXR1cm4gYSA9PT0gYnVwIHx8ICEhKCBidXAgJiYgYnVwLm5vZGVUeXBlID09PSAxICYmIChcclxuXHRcdFx0XHRhZG93bi5jb250YWlucyA/XHJcblx0XHRcdFx0XHRhZG93bi5jb250YWlucyggYnVwICkgOlxyXG5cdFx0XHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAmJiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBidXAgKSAmIDE2XHJcblx0XHRcdCkpO1xyXG5cdFx0fSA6XHJcblx0XHRmdW5jdGlvbiggYSwgYiApIHtcclxuXHRcdFx0aWYgKCBiICkge1xyXG5cdFx0XHRcdHdoaWxlICggKGIgPSBiLnBhcmVudE5vZGUpICkge1xyXG5cdFx0XHRcdFx0aWYgKCBiID09PSBhICkge1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0fTtcclxuXHJcblx0LyogU29ydGluZ1xyXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cclxuXHJcblx0Ly8gRG9jdW1lbnQgb3JkZXIgc29ydGluZ1xyXG5cdHNvcnRPcmRlciA9IGhhc0NvbXBhcmUgP1xyXG5cdGZ1bmN0aW9uKCBhLCBiICkge1xyXG5cclxuXHRcdC8vIEZsYWcgZm9yIGR1cGxpY2F0ZSByZW1vdmFsXHJcblx0XHRpZiAoIGEgPT09IGIgKSB7XHJcblx0XHRcdGhhc0R1cGxpY2F0ZSA9IHRydWU7XHJcblx0XHRcdHJldHVybiAwO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFNvcnQgb24gbWV0aG9kIGV4aXN0ZW5jZSBpZiBvbmx5IG9uZSBpbnB1dCBoYXMgY29tcGFyZURvY3VtZW50UG9zaXRpb25cclxuXHRcdHZhciBjb21wYXJlID0gIWEuY29tcGFyZURvY3VtZW50UG9zaXRpb24gLSAhYi5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbjtcclxuXHRcdGlmICggY29tcGFyZSApIHtcclxuXHRcdFx0cmV0dXJuIGNvbXBhcmU7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQ2FsY3VsYXRlIHBvc2l0aW9uIGlmIGJvdGggaW5wdXRzIGJlbG9uZyB0byB0aGUgc2FtZSBkb2N1bWVudFxyXG5cdFx0Y29tcGFyZSA9ICggYS5vd25lckRvY3VtZW50IHx8IGEgKSA9PT0gKCBiLm93bmVyRG9jdW1lbnQgfHwgYiApID9cclxuXHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiggYiApIDpcclxuXHJcblx0XHRcdC8vIE90aGVyd2lzZSB3ZSBrbm93IHRoZXkgYXJlIGRpc2Nvbm5lY3RlZFxyXG5cdFx0XHQxO1xyXG5cclxuXHRcdC8vIERpc2Nvbm5lY3RlZCBub2Rlc1xyXG5cdFx0aWYgKCBjb21wYXJlICYgMSB8fFxyXG5cdFx0XHQoIXN1cHBvcnQuc29ydERldGFjaGVkICYmIGIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGEgKSA9PT0gY29tcGFyZSkgKSB7XHJcblxyXG5cdFx0XHQvLyBDaG9vc2UgdGhlIGZpcnN0IGVsZW1lbnQgdGhhdCBpcyByZWxhdGVkIHRvIG91ciBwcmVmZXJyZWQgZG9jdW1lbnRcclxuXHRcdFx0aWYgKCBhID09PSBkb2N1bWVudCB8fCBhLm93bmVyRG9jdW1lbnQgPT09IHByZWZlcnJlZERvYyAmJiBjb250YWlucyhwcmVmZXJyZWREb2MsIGEpICkge1xyXG5cdFx0XHRcdHJldHVybiAtMTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoIGIgPT09IGRvY3VtZW50IHx8IGIub3duZXJEb2N1bWVudCA9PT0gcHJlZmVycmVkRG9jICYmIGNvbnRhaW5zKHByZWZlcnJlZERvYywgYikgKSB7XHJcblx0XHRcdFx0cmV0dXJuIDE7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIE1haW50YWluIG9yaWdpbmFsIG9yZGVyXHJcblx0XHRcdHJldHVybiBzb3J0SW5wdXQgP1xyXG5cdFx0XHRcdCggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRleE9mKCBzb3J0SW5wdXQsIGIgKSApIDpcclxuXHRcdFx0XHQwO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBjb21wYXJlICYgNCA/IC0xIDogMTtcclxuXHR9IDpcclxuXHRmdW5jdGlvbiggYSwgYiApIHtcclxuXHRcdC8vIEV4aXQgZWFybHkgaWYgdGhlIG5vZGVzIGFyZSBpZGVudGljYWxcclxuXHRcdGlmICggYSA9PT0gYiApIHtcclxuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcclxuXHRcdFx0cmV0dXJuIDA7XHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIGN1cixcclxuXHRcdFx0aSA9IDAsXHJcblx0XHRcdGF1cCA9IGEucGFyZW50Tm9kZSxcclxuXHRcdFx0YnVwID0gYi5wYXJlbnROb2RlLFxyXG5cdFx0XHRhcCA9IFsgYSBdLFxyXG5cdFx0XHRicCA9IFsgYiBdO1xyXG5cclxuXHRcdC8vIFBhcmVudGxlc3Mgbm9kZXMgYXJlIGVpdGhlciBkb2N1bWVudHMgb3IgZGlzY29ubmVjdGVkXHJcblx0XHRpZiAoICFhdXAgfHwgIWJ1cCApIHtcclxuXHRcdFx0cmV0dXJuIGEgPT09IGRvY3VtZW50ID8gLTEgOlxyXG5cdFx0XHRcdGIgPT09IGRvY3VtZW50ID8gMSA6XHJcblx0XHRcdFx0YXVwID8gLTEgOlxyXG5cdFx0XHRcdGJ1cCA/IDEgOlxyXG5cdFx0XHRcdHNvcnRJbnB1dCA/XHJcblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxyXG5cdFx0XHRcdDA7XHJcblxyXG5cdFx0Ly8gSWYgdGhlIG5vZGVzIGFyZSBzaWJsaW5ncywgd2UgY2FuIGRvIGEgcXVpY2sgY2hlY2tcclxuXHRcdH0gZWxzZSBpZiAoIGF1cCA9PT0gYnVwICkge1xyXG5cdFx0XHRyZXR1cm4gc2libGluZ0NoZWNrKCBhLCBiICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gT3RoZXJ3aXNlIHdlIG5lZWQgZnVsbCBsaXN0cyBvZiB0aGVpciBhbmNlc3RvcnMgZm9yIGNvbXBhcmlzb25cclxuXHRcdGN1ciA9IGE7XHJcblx0XHR3aGlsZSAoIChjdXIgPSBjdXIucGFyZW50Tm9kZSkgKSB7XHJcblx0XHRcdGFwLnVuc2hpZnQoIGN1ciApO1xyXG5cdFx0fVxyXG5cdFx0Y3VyID0gYjtcclxuXHRcdHdoaWxlICggKGN1ciA9IGN1ci5wYXJlbnROb2RlKSApIHtcclxuXHRcdFx0YnAudW5zaGlmdCggY3VyICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gV2FsayBkb3duIHRoZSB0cmVlIGxvb2tpbmcgZm9yIGEgZGlzY3JlcGFuY3lcclxuXHRcdHdoaWxlICggYXBbaV0gPT09IGJwW2ldICkge1xyXG5cdFx0XHRpKys7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIGkgP1xyXG5cdFx0XHQvLyBEbyBhIHNpYmxpbmcgY2hlY2sgaWYgdGhlIG5vZGVzIGhhdmUgYSBjb21tb24gYW5jZXN0b3JcclxuXHRcdFx0c2libGluZ0NoZWNrKCBhcFtpXSwgYnBbaV0gKSA6XHJcblxyXG5cdFx0XHQvLyBPdGhlcndpc2Ugbm9kZXMgaW4gb3VyIGRvY3VtZW50IHNvcnQgZmlyc3RcclxuXHRcdFx0YXBbaV0gPT09IHByZWZlcnJlZERvYyA/IC0xIDpcclxuXHRcdFx0YnBbaV0gPT09IHByZWZlcnJlZERvYyA/IDEgOlxyXG5cdFx0XHQwO1xyXG5cdH07XHJcblxyXG5cdHJldHVybiBkb2N1bWVudDtcclxufTtcclxuXHJcblNpenpsZS5tYXRjaGVzID0gZnVuY3Rpb24oIGV4cHIsIGVsZW1lbnRzICkge1xyXG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIG51bGwsIG51bGwsIGVsZW1lbnRzICk7XHJcbn07XHJcblxyXG5TaXp6bGUubWF0Y2hlc1NlbGVjdG9yID0gZnVuY3Rpb24oIGVsZW0sIGV4cHIgKSB7XHJcblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXHJcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT09IGRvY3VtZW50ICkge1xyXG5cdFx0c2V0RG9jdW1lbnQoIGVsZW0gKTtcclxuXHR9XHJcblxyXG5cdC8vIE1ha2Ugc3VyZSB0aGF0IGF0dHJpYnV0ZSBzZWxlY3RvcnMgYXJlIHF1b3RlZFxyXG5cdGV4cHIgPSBleHByLnJlcGxhY2UoIHJhdHRyaWJ1dGVRdW90ZXMsIFwiPSckMSddXCIgKTtcclxuXHJcblx0aWYgKCBzdXBwb3J0Lm1hdGNoZXNTZWxlY3RvciAmJiBkb2N1bWVudElzSFRNTCAmJlxyXG5cdFx0IWNvbXBpbGVyQ2FjaGVbIGV4cHIgKyBcIiBcIiBdICYmXHJcblx0XHQoICFyYnVnZ3lNYXRjaGVzIHx8ICFyYnVnZ3lNYXRjaGVzLnRlc3QoIGV4cHIgKSApICYmXHJcblx0XHQoICFyYnVnZ3lRU0EgICAgIHx8ICFyYnVnZ3lRU0EudGVzdCggZXhwciApICkgKSB7XHJcblxyXG5cdFx0dHJ5IHtcclxuXHRcdFx0dmFyIHJldCA9IG1hdGNoZXMuY2FsbCggZWxlbSwgZXhwciApO1xyXG5cclxuXHRcdFx0Ly8gSUUgOSdzIG1hdGNoZXNTZWxlY3RvciByZXR1cm5zIGZhbHNlIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xyXG5cdFx0XHRpZiAoIHJldCB8fCBzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoIHx8XHJcblx0XHRcdFx0XHQvLyBBcyB3ZWxsLCBkaXNjb25uZWN0ZWQgbm9kZXMgYXJlIHNhaWQgdG8gYmUgaW4gYSBkb2N1bWVudFxyXG5cdFx0XHRcdFx0Ly8gZnJhZ21lbnQgaW4gSUUgOVxyXG5cdFx0XHRcdFx0ZWxlbS5kb2N1bWVudCAmJiBlbGVtLmRvY3VtZW50Lm5vZGVUeXBlICE9PSAxMSApIHtcclxuXHRcdFx0XHRyZXR1cm4gcmV0O1xyXG5cdFx0XHR9XHJcblx0XHR9IGNhdGNoIChlKSB7fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIFNpenpsZSggZXhwciwgZG9jdW1lbnQsIG51bGwsIFsgZWxlbSBdICkubGVuZ3RoID4gMDtcclxufTtcclxuXHJcblNpenpsZS5jb250YWlucyA9IGZ1bmN0aW9uKCBjb250ZXh0LCBlbGVtICkge1xyXG5cdC8vIFNldCBkb2N1bWVudCB2YXJzIGlmIG5lZWRlZFxyXG5cdGlmICggKCBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCApICE9PSBkb2N1bWVudCApIHtcclxuXHRcdHNldERvY3VtZW50KCBjb250ZXh0ICk7XHJcblx0fVxyXG5cdHJldHVybiBjb250YWlucyggY29udGV4dCwgZWxlbSApO1xyXG59O1xyXG5cclxuU2l6emxlLmF0dHIgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcclxuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcclxuXHRpZiAoICggZWxlbS5vd25lckRvY3VtZW50IHx8IGVsZW0gKSAhPT0gZG9jdW1lbnQgKSB7XHJcblx0XHRzZXREb2N1bWVudCggZWxlbSApO1xyXG5cdH1cclxuXHJcblx0dmFyIGZuID0gRXhwci5hdHRySGFuZGxlWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSxcclxuXHRcdC8vIERvbid0IGdldCBmb29sZWQgYnkgT2JqZWN0LnByb3RvdHlwZSBwcm9wZXJ0aWVzIChqUXVlcnkgIzEzODA3KVxyXG5cdFx0dmFsID0gZm4gJiYgaGFzT3duLmNhbGwoIEV4cHIuYXR0ckhhbmRsZSwgbmFtZS50b0xvd2VyQ2FzZSgpICkgP1xyXG5cdFx0XHRmbiggZWxlbSwgbmFtZSwgIWRvY3VtZW50SXNIVE1MICkgOlxyXG5cdFx0XHR1bmRlZmluZWQ7XHJcblxyXG5cdHJldHVybiB2YWwgIT09IHVuZGVmaW5lZCA/XHJcblx0XHR2YWwgOlxyXG5cdFx0c3VwcG9ydC5hdHRyaWJ1dGVzIHx8ICFkb2N1bWVudElzSFRNTCA/XHJcblx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICkgOlxyXG5cdFx0XHQodmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKG5hbWUpKSAmJiB2YWwuc3BlY2lmaWVkID9cclxuXHRcdFx0XHR2YWwudmFsdWUgOlxyXG5cdFx0XHRcdG51bGw7XHJcbn07XHJcblxyXG5TaXp6bGUuZXJyb3IgPSBmdW5jdGlvbiggbXNnICkge1xyXG5cdHRocm93IG5ldyBFcnJvciggXCJTeW50YXggZXJyb3IsIHVucmVjb2duaXplZCBleHByZXNzaW9uOiBcIiArIG1zZyApO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIERvY3VtZW50IHNvcnRpbmcgYW5kIHJlbW92aW5nIGR1cGxpY2F0ZXNcclxuICogQHBhcmFtIHtBcnJheUxpa2V9IHJlc3VsdHNcclxuICovXHJcblNpenpsZS51bmlxdWVTb3J0ID0gZnVuY3Rpb24oIHJlc3VsdHMgKSB7XHJcblx0dmFyIGVsZW0sXHJcblx0XHRkdXBsaWNhdGVzID0gW10sXHJcblx0XHRqID0gMCxcclxuXHRcdGkgPSAwO1xyXG5cclxuXHQvLyBVbmxlc3Mgd2UgKmtub3cqIHdlIGNhbiBkZXRlY3QgZHVwbGljYXRlcywgYXNzdW1lIHRoZWlyIHByZXNlbmNlXHJcblx0aGFzRHVwbGljYXRlID0gIXN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcztcclxuXHRzb3J0SW5wdXQgPSAhc3VwcG9ydC5zb3J0U3RhYmxlICYmIHJlc3VsdHMuc2xpY2UoIDAgKTtcclxuXHRyZXN1bHRzLnNvcnQoIHNvcnRPcmRlciApO1xyXG5cclxuXHRpZiAoIGhhc0R1cGxpY2F0ZSApIHtcclxuXHRcdHdoaWxlICggKGVsZW0gPSByZXN1bHRzW2krK10pICkge1xyXG5cdFx0XHRpZiAoIGVsZW0gPT09IHJlc3VsdHNbIGkgXSApIHtcclxuXHRcdFx0XHRqID0gZHVwbGljYXRlcy5wdXNoKCBpICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHdoaWxlICggai0tICkge1xyXG5cdFx0XHRyZXN1bHRzLnNwbGljZSggZHVwbGljYXRlc1sgaiBdLCAxICk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBDbGVhciBpbnB1dCBhZnRlciBzb3J0aW5nIHRvIHJlbGVhc2Ugb2JqZWN0c1xyXG5cdC8vIFNlZSBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L3NpenpsZS9wdWxsLzIyNVxyXG5cdHNvcnRJbnB1dCA9IG51bGw7XHJcblxyXG5cdHJldHVybiByZXN1bHRzO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIFV0aWxpdHkgZnVuY3Rpb24gZm9yIHJldHJpZXZpbmcgdGhlIHRleHQgdmFsdWUgb2YgYW4gYXJyYXkgb2YgRE9NIG5vZGVzXHJcbiAqIEBwYXJhbSB7QXJyYXl8RWxlbWVudH0gZWxlbVxyXG4gKi9cclxuZ2V0VGV4dCA9IFNpenpsZS5nZXRUZXh0ID0gZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0dmFyIG5vZGUsXHJcblx0XHRyZXQgPSBcIlwiLFxyXG5cdFx0aSA9IDAsXHJcblx0XHRub2RlVHlwZSA9IGVsZW0ubm9kZVR5cGU7XHJcblxyXG5cdGlmICggIW5vZGVUeXBlICkge1xyXG5cdFx0Ly8gSWYgbm8gbm9kZVR5cGUsIHRoaXMgaXMgZXhwZWN0ZWQgdG8gYmUgYW4gYXJyYXlcclxuXHRcdHdoaWxlICggKG5vZGUgPSBlbGVtW2krK10pICkge1xyXG5cdFx0XHQvLyBEbyBub3QgdHJhdmVyc2UgY29tbWVudCBub2Rlc1xyXG5cdFx0XHRyZXQgKz0gZ2V0VGV4dCggbm9kZSApO1xyXG5cdFx0fVxyXG5cdH0gZWxzZSBpZiAoIG5vZGVUeXBlID09PSAxIHx8IG5vZGVUeXBlID09PSA5IHx8IG5vZGVUeXBlID09PSAxMSApIHtcclxuXHRcdC8vIFVzZSB0ZXh0Q29udGVudCBmb3IgZWxlbWVudHNcclxuXHRcdC8vIGlubmVyVGV4dCB1c2FnZSByZW1vdmVkIGZvciBjb25zaXN0ZW5jeSBvZiBuZXcgbGluZXMgKGpRdWVyeSAjMTExNTMpXHJcblx0XHRpZiAoIHR5cGVvZiBlbGVtLnRleHRDb250ZW50ID09PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRyZXR1cm4gZWxlbS50ZXh0Q29udGVudDtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdC8vIFRyYXZlcnNlIGl0cyBjaGlsZHJlblxyXG5cdFx0XHRmb3IgKCBlbGVtID0gZWxlbS5maXJzdENoaWxkOyBlbGVtOyBlbGVtID0gZWxlbS5uZXh0U2libGluZyApIHtcclxuXHRcdFx0XHRyZXQgKz0gZ2V0VGV4dCggZWxlbSApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDMgfHwgbm9kZVR5cGUgPT09IDQgKSB7XHJcblx0XHRyZXR1cm4gZWxlbS5ub2RlVmFsdWU7XHJcblx0fVxyXG5cdC8vIERvIG5vdCBpbmNsdWRlIGNvbW1lbnQgb3IgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbiBub2Rlc1xyXG5cclxuXHRyZXR1cm4gcmV0O1xyXG59O1xyXG5cclxuRXhwciA9IFNpenpsZS5zZWxlY3RvcnMgPSB7XHJcblxyXG5cdC8vIENhbiBiZSBhZGp1c3RlZCBieSB0aGUgdXNlclxyXG5cdGNhY2hlTGVuZ3RoOiA1MCxcclxuXHJcblx0Y3JlYXRlUHNldWRvOiBtYXJrRnVuY3Rpb24sXHJcblxyXG5cdG1hdGNoOiBtYXRjaEV4cHIsXHJcblxyXG5cdGF0dHJIYW5kbGU6IHt9LFxyXG5cclxuXHRmaW5kOiB7fSxcclxuXHJcblx0cmVsYXRpdmU6IHtcclxuXHRcdFwiPlwiOiB7IGRpcjogXCJwYXJlbnROb2RlXCIsIGZpcnN0OiB0cnVlIH0sXHJcblx0XHRcIiBcIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiIH0sXHJcblx0XHRcIitcIjogeyBkaXI6IFwicHJldmlvdXNTaWJsaW5nXCIsIGZpcnN0OiB0cnVlIH0sXHJcblx0XHRcIn5cIjogeyBkaXI6IFwicHJldmlvdXNTaWJsaW5nXCIgfVxyXG5cdH0sXHJcblxyXG5cdHByZUZpbHRlcjoge1xyXG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcclxuXHRcdFx0bWF0Y2hbMV0gPSBtYXRjaFsxXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xyXG5cclxuXHRcdFx0Ly8gTW92ZSB0aGUgZ2l2ZW4gdmFsdWUgdG8gbWF0Y2hbM10gd2hldGhlciBxdW90ZWQgb3IgdW5xdW90ZWRcclxuXHRcdFx0bWF0Y2hbM10gPSAoIG1hdGNoWzNdIHx8IG1hdGNoWzRdIHx8IG1hdGNoWzVdIHx8IFwiXCIgKS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApO1xyXG5cclxuXHRcdFx0aWYgKCBtYXRjaFsyXSA9PT0gXCJ+PVwiICkge1xyXG5cdFx0XHRcdG1hdGNoWzNdID0gXCIgXCIgKyBtYXRjaFszXSArIFwiIFwiO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDQgKTtcclxuXHRcdH0sXHJcblxyXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XHJcblx0XHRcdC8qIG1hdGNoZXMgZnJvbSBtYXRjaEV4cHJbXCJDSElMRFwiXVxyXG5cdFx0XHRcdDEgdHlwZSAob25seXxudGh8Li4uKVxyXG5cdFx0XHRcdDIgd2hhdCAoY2hpbGR8b2YtdHlwZSlcclxuXHRcdFx0XHQzIGFyZ3VtZW50IChldmVufG9kZHxcXGQqfFxcZCpuKFsrLV1cXGQrKT98Li4uKVxyXG5cdFx0XHRcdDQgeG4tY29tcG9uZW50IG9mIHhuK3kgYXJndW1lbnQgKFsrLV0/XFxkKm58KVxyXG5cdFx0XHRcdDUgc2lnbiBvZiB4bi1jb21wb25lbnRcclxuXHRcdFx0XHQ2IHggb2YgeG4tY29tcG9uZW50XHJcblx0XHRcdFx0NyBzaWduIG9mIHktY29tcG9uZW50XHJcblx0XHRcdFx0OCB5IG9mIHktY29tcG9uZW50XHJcblx0XHRcdCovXHJcblx0XHRcdG1hdGNoWzFdID0gbWF0Y2hbMV0udG9Mb3dlckNhc2UoKTtcclxuXHJcblx0XHRcdGlmICggbWF0Y2hbMV0uc2xpY2UoIDAsIDMgKSA9PT0gXCJudGhcIiApIHtcclxuXHRcdFx0XHQvLyBudGgtKiByZXF1aXJlcyBhcmd1bWVudFxyXG5cdFx0XHRcdGlmICggIW1hdGNoWzNdICkge1xyXG5cdFx0XHRcdFx0U2l6emxlLmVycm9yKCBtYXRjaFswXSApO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gbnVtZXJpYyB4IGFuZCB5IHBhcmFtZXRlcnMgZm9yIEV4cHIuZmlsdGVyLkNISUxEXHJcblx0XHRcdFx0Ly8gcmVtZW1iZXIgdGhhdCBmYWxzZS90cnVlIGNhc3QgcmVzcGVjdGl2ZWx5IHRvIDAvMVxyXG5cdFx0XHRcdG1hdGNoWzRdID0gKyggbWF0Y2hbNF0gPyBtYXRjaFs1XSArIChtYXRjaFs2XSB8fCAxKSA6IDIgKiAoIG1hdGNoWzNdID09PSBcImV2ZW5cIiB8fCBtYXRjaFszXSA9PT0gXCJvZGRcIiApICk7XHJcblx0XHRcdFx0bWF0Y2hbNV0gPSArKCAoIG1hdGNoWzddICsgbWF0Y2hbOF0gKSB8fCBtYXRjaFszXSA9PT0gXCJvZGRcIiApO1xyXG5cclxuXHRcdFx0Ly8gb3RoZXIgdHlwZXMgcHJvaGliaXQgYXJndW1lbnRzXHJcblx0XHRcdH0gZWxzZSBpZiAoIG1hdGNoWzNdICkge1xyXG5cdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIG1hdGNoO1xyXG5cdFx0fSxcclxuXHJcblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XHJcblx0XHRcdHZhciBleGNlc3MsXHJcblx0XHRcdFx0dW5xdW90ZWQgPSAhbWF0Y2hbNl0gJiYgbWF0Y2hbMl07XHJcblxyXG5cdFx0XHRpZiAoIG1hdGNoRXhwcltcIkNISUxEXCJdLnRlc3QoIG1hdGNoWzBdICkgKSB7XHJcblx0XHRcdFx0cmV0dXJuIG51bGw7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIEFjY2VwdCBxdW90ZWQgYXJndW1lbnRzIGFzLWlzXHJcblx0XHRcdGlmICggbWF0Y2hbM10gKSB7XHJcblx0XHRcdFx0bWF0Y2hbMl0gPSBtYXRjaFs0XSB8fCBtYXRjaFs1XSB8fCBcIlwiO1xyXG5cclxuXHRcdFx0Ly8gU3RyaXAgZXhjZXNzIGNoYXJhY3RlcnMgZnJvbSB1bnF1b3RlZCBhcmd1bWVudHNcclxuXHRcdFx0fSBlbHNlIGlmICggdW5xdW90ZWQgJiYgcnBzZXVkby50ZXN0KCB1bnF1b3RlZCApICYmXHJcblx0XHRcdFx0Ly8gR2V0IGV4Y2VzcyBmcm9tIHRva2VuaXplIChyZWN1cnNpdmVseSlcclxuXHRcdFx0XHQoZXhjZXNzID0gdG9rZW5pemUoIHVucXVvdGVkLCB0cnVlICkpICYmXHJcblx0XHRcdFx0Ly8gYWR2YW5jZSB0byB0aGUgbmV4dCBjbG9zaW5nIHBhcmVudGhlc2lzXHJcblx0XHRcdFx0KGV4Y2VzcyA9IHVucXVvdGVkLmluZGV4T2YoIFwiKVwiLCB1bnF1b3RlZC5sZW5ndGggLSBleGNlc3MgKSAtIHVucXVvdGVkLmxlbmd0aCkgKSB7XHJcblxyXG5cdFx0XHRcdC8vIGV4Y2VzcyBpcyBhIG5lZ2F0aXZlIGluZGV4XHJcblx0XHRcdFx0bWF0Y2hbMF0gPSBtYXRjaFswXS5zbGljZSggMCwgZXhjZXNzICk7XHJcblx0XHRcdFx0bWF0Y2hbMl0gPSB1bnF1b3RlZC5zbGljZSggMCwgZXhjZXNzICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFJldHVybiBvbmx5IGNhcHR1cmVzIG5lZWRlZCBieSB0aGUgcHNldWRvIGZpbHRlciBtZXRob2QgKHR5cGUgYW5kIGFyZ3VtZW50KVxyXG5cdFx0XHRyZXR1cm4gbWF0Y2guc2xpY2UoIDAsIDMgKTtcclxuXHRcdH1cclxuXHR9LFxyXG5cclxuXHRmaWx0ZXI6IHtcclxuXHJcblx0XHRcIlRBR1wiOiBmdW5jdGlvbiggbm9kZU5hbWVTZWxlY3RvciApIHtcclxuXHRcdFx0dmFyIG5vZGVOYW1lID0gbm9kZU5hbWVTZWxlY3Rvci5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRcdHJldHVybiBub2RlTmFtZVNlbGVjdG9yID09PSBcIipcIiA/XHJcblx0XHRcdFx0ZnVuY3Rpb24oKSB7IHJldHVybiB0cnVlOyB9IDpcclxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbm9kZU5hbWU7XHJcblx0XHRcdFx0fTtcclxuXHRcdH0sXHJcblxyXG5cdFx0XCJDTEFTU1wiOiBmdW5jdGlvbiggY2xhc3NOYW1lICkge1xyXG5cdFx0XHR2YXIgcGF0dGVybiA9IGNsYXNzQ2FjaGVbIGNsYXNzTmFtZSArIFwiIFwiIF07XHJcblxyXG5cdFx0XHRyZXR1cm4gcGF0dGVybiB8fFxyXG5cdFx0XHRcdChwYXR0ZXJuID0gbmV3IFJlZ0V4cCggXCIoXnxcIiArIHdoaXRlc3BhY2UgKyBcIilcIiArIGNsYXNzTmFtZSArIFwiKFwiICsgd2hpdGVzcGFjZSArIFwifCQpXCIgKSkgJiZcclxuXHRcdFx0XHRjbGFzc0NhY2hlKCBjbGFzc05hbWUsIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHBhdHRlcm4udGVzdCggdHlwZW9mIGVsZW0uY2xhc3NOYW1lID09PSBcInN0cmluZ1wiICYmIGVsZW0uY2xhc3NOYW1lIHx8IHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBlbGVtLmdldEF0dHJpYnV0ZShcImNsYXNzXCIpIHx8IFwiXCIgKTtcclxuXHRcdFx0XHR9KTtcclxuXHRcdH0sXHJcblxyXG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBuYW1lLCBvcGVyYXRvciwgY2hlY2sgKSB7XHJcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0XHR2YXIgcmVzdWx0ID0gU2l6emxlLmF0dHIoIGVsZW0sIG5hbWUgKTtcclxuXHJcblx0XHRcdFx0aWYgKCByZXN1bHQgPT0gbnVsbCApIHtcclxuXHRcdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCIhPVwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRpZiAoICFvcGVyYXRvciApIHtcclxuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0cmVzdWx0ICs9IFwiXCI7XHJcblxyXG5cdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCI9XCIgPyByZXN1bHQgPT09IGNoZWNrIDpcclxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIiE9XCIgPyByZXN1bHQgIT09IGNoZWNrIDpcclxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIl49XCIgPyBjaGVjayAmJiByZXN1bHQuaW5kZXhPZiggY2hlY2sgKSA9PT0gMCA6XHJcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIqPVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XHJcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIkPVwiID8gY2hlY2sgJiYgcmVzdWx0LnNsaWNlKCAtY2hlY2subGVuZ3RoICkgPT09IGNoZWNrIDpcclxuXHRcdFx0XHRcdG9wZXJhdG9yID09PSBcIn49XCIgPyAoIFwiIFwiICsgcmVzdWx0LnJlcGxhY2UoIHJ3aGl0ZXNwYWNlLCBcIiBcIiApICsgXCIgXCIgKS5pbmRleE9mKCBjaGVjayApID4gLTEgOlxyXG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifD1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgfHwgcmVzdWx0LnNsaWNlKCAwLCBjaGVjay5sZW5ndGggKyAxICkgPT09IGNoZWNrICsgXCItXCIgOlxyXG5cdFx0XHRcdFx0ZmFsc2U7XHJcblx0XHRcdH07XHJcblx0XHR9LFxyXG5cclxuXHRcdFwiQ0hJTERcIjogZnVuY3Rpb24oIHR5cGUsIHdoYXQsIGFyZ3VtZW50LCBmaXJzdCwgbGFzdCApIHtcclxuXHRcdFx0dmFyIHNpbXBsZSA9IHR5cGUuc2xpY2UoIDAsIDMgKSAhPT0gXCJudGhcIixcclxuXHRcdFx0XHRmb3J3YXJkID0gdHlwZS5zbGljZSggLTQgKSAhPT0gXCJsYXN0XCIsXHJcblx0XHRcdFx0b2ZUeXBlID0gd2hhdCA9PT0gXCJvZi10eXBlXCI7XHJcblxyXG5cdFx0XHRyZXR1cm4gZmlyc3QgPT09IDEgJiYgbGFzdCA9PT0gMCA/XHJcblxyXG5cdFx0XHRcdC8vIFNob3J0Y3V0IGZvciA6bnRoLSoobilcclxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0XHRcdHJldHVybiAhIWVsZW0ucGFyZW50Tm9kZTtcclxuXHRcdFx0XHR9IDpcclxuXHJcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcclxuXHRcdFx0XHRcdHZhciBjYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsIG5vZGUsIG5vZGVJbmRleCwgc3RhcnQsXHJcblx0XHRcdFx0XHRcdGRpciA9IHNpbXBsZSAhPT0gZm9yd2FyZCA/IFwibmV4dFNpYmxpbmdcIiA6IFwicHJldmlvdXNTaWJsaW5nXCIsXHJcblx0XHRcdFx0XHRcdHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZSxcclxuXHRcdFx0XHRcdFx0bmFtZSA9IG9mVHlwZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksXHJcblx0XHRcdFx0XHRcdHVzZUNhY2hlID0gIXhtbCAmJiAhb2ZUeXBlLFxyXG5cdFx0XHRcdFx0XHRkaWZmID0gZmFsc2U7XHJcblxyXG5cdFx0XHRcdFx0aWYgKCBwYXJlbnQgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyA6KGZpcnN0fGxhc3R8b25seSktKGNoaWxkfG9mLXR5cGUpXHJcblx0XHRcdFx0XHRcdGlmICggc2ltcGxlICkge1xyXG5cdFx0XHRcdFx0XHRcdHdoaWxlICggZGlyICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0bm9kZSA9IGVsZW07XHJcblx0XHRcdFx0XHRcdFx0XHR3aGlsZSAoIChub2RlID0gbm9kZVsgZGlyIF0pICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIG9mVHlwZSA/XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVUeXBlID09PSAxICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdC8vIFJldmVyc2UgZGlyZWN0aW9uIGZvciA6b25seS0qIChpZiB3ZSBoYXZlbid0IHlldCBkb25lIHNvKVxyXG5cdFx0XHRcdFx0XHRcdFx0c3RhcnQgPSBkaXIgPSB0eXBlID09PSBcIm9ubHlcIiAmJiAhc3RhcnQgJiYgXCJuZXh0U2libGluZ1wiO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0c3RhcnQgPSBbIGZvcndhcmQgPyBwYXJlbnQuZmlyc3RDaGlsZCA6IHBhcmVudC5sYXN0Q2hpbGQgXTtcclxuXHJcblx0XHRcdFx0XHRcdC8vIG5vbi14bWwgOm50aC1jaGlsZCguLi4pIHN0b3JlcyBjYWNoZSBkYXRhIG9uIGBwYXJlbnRgXHJcblx0XHRcdFx0XHRcdGlmICggZm9yd2FyZCAmJiB1c2VDYWNoZSApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gU2VlayBgZWxlbWAgZnJvbSBhIHByZXZpb3VzbHktY2FjaGVkIGluZGV4XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcclxuXHRcdFx0XHRcdFx0XHRub2RlID0gcGFyZW50O1xyXG5cdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxyXG5cdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxyXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlID0gb3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdIHx8XHJcblx0XHRcdFx0XHRcdFx0XHQob3V0ZXJDYWNoZVsgbm9kZS51bmlxdWVJRCBdID0ge30pO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XHJcblx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xyXG5cdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXggJiYgY2FjaGVbIDIgXTtcclxuXHRcdFx0XHRcdFx0XHRub2RlID0gbm9kZUluZGV4ICYmIHBhcmVudC5jaGlsZE5vZGVzWyBub2RlSW5kZXggXTtcclxuXHJcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9ICsrbm9kZUluZGV4ICYmIG5vZGUgJiYgbm9kZVsgZGlyIF0gfHxcclxuXHJcblx0XHRcdFx0XHRcdFx0XHQvLyBGYWxsYmFjayB0byBzZWVraW5nIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxyXG5cdFx0XHRcdFx0XHRcdFx0KGRpZmYgPSBub2RlSW5kZXggPSAwKSB8fCBzdGFydC5wb3AoKSkgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gV2hlbiBmb3VuZCwgY2FjaGUgaW5kZXhlcyBvbiBgcGFyZW50YCBhbmQgYnJlYWtcclxuXHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZS5ub2RlVHlwZSA9PT0gMSAmJiArK2RpZmYgJiYgbm9kZSA9PT0gZWxlbSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGVbIHR5cGUgXSA9IFsgZGlycnVucywgbm9kZUluZGV4LCBkaWZmIF07XHJcblx0XHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdFx0Ly8gVXNlIHByZXZpb3VzbHktY2FjaGVkIGVsZW1lbnQgaW5kZXggaWYgYXZhaWxhYmxlXHJcblx0XHRcdFx0XHRcdFx0aWYgKCB1c2VDYWNoZSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcclxuXHRcdFx0XHRcdFx0XHRcdG5vZGUgPSBlbGVtO1xyXG5cdFx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAobm9kZVsgZXhwYW5kbyBdID0ge30pO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcclxuXHRcdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxyXG5cdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcclxuXHRcdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XHJcblx0XHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XHJcblx0XHRcdFx0XHRcdFx0XHRkaWZmID0gbm9kZUluZGV4O1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8geG1sIDpudGgtY2hpbGQoLi4uKVxyXG5cdFx0XHRcdFx0XHRcdC8vIG9yIDpudGgtbGFzdC1jaGlsZCguLi4pIG9yIDpudGgoLWxhc3QpPy1vZi10eXBlKC4uLilcclxuXHRcdFx0XHRcdFx0XHRpZiAoIGRpZmYgPT09IGZhbHNlICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gVXNlIHRoZSBzYW1lIGxvb3AgYXMgYWJvdmUgdG8gc2VlayBgZWxlbWAgZnJvbSB0aGUgc3RhcnRcclxuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XHJcblx0XHRcdFx0XHRcdFx0XHRcdChkaWZmID0gbm9kZUluZGV4ID0gMCkgfHwgc3RhcnQucG9wKCkpICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCAoIG9mVHlwZSA/XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRub2RlLm5vZGVUeXBlID09PSAxICkgJiZcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQrK2RpZmYgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC8vIENhY2hlIHRoZSBpbmRleCBvZiBlYWNoIGVuY291bnRlcmVkIGVsZW1lbnRcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IG5vZGVbIGV4cGFuZG8gXSB8fCAobm9kZVsgZXhwYW5kbyBdID0ge30pO1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZVsgdHlwZSBdID0gWyBkaXJydW5zLCBkaWZmIF07XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIG5vZGUgPT09IGVsZW0gKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdC8vIEluY29ycG9yYXRlIHRoZSBvZmZzZXQsIHRoZW4gY2hlY2sgYWdhaW5zdCBjeWNsZSBzaXplXHJcblx0XHRcdFx0XHRcdGRpZmYgLT0gbGFzdDtcclxuXHRcdFx0XHRcdFx0cmV0dXJuIGRpZmYgPT09IGZpcnN0IHx8ICggZGlmZiAlIGZpcnN0ID09PSAwICYmIGRpZmYgLyBmaXJzdCA+PSAwICk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fTtcclxuXHRcdH0sXHJcblxyXG5cdFx0XCJQU0VVRE9cIjogZnVuY3Rpb24oIHBzZXVkbywgYXJndW1lbnQgKSB7XHJcblx0XHRcdC8vIHBzZXVkby1jbGFzcyBuYW1lcyBhcmUgY2FzZS1pbnNlbnNpdGl2ZVxyXG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI3BzZXVkby1jbGFzc2VzXHJcblx0XHRcdC8vIFByaW9yaXRpemUgYnkgY2FzZSBzZW5zaXRpdml0eSBpbiBjYXNlIGN1c3RvbSBwc2V1ZG9zIGFyZSBhZGRlZCB3aXRoIHVwcGVyY2FzZSBsZXR0ZXJzXHJcblx0XHRcdC8vIFJlbWVtYmVyIHRoYXQgc2V0RmlsdGVycyBpbmhlcml0cyBmcm9tIHBzZXVkb3NcclxuXHRcdFx0dmFyIGFyZ3MsXHJcblx0XHRcdFx0Zm4gPSBFeHByLnBzZXVkb3NbIHBzZXVkbyBdIHx8IEV4cHIuc2V0RmlsdGVyc1sgcHNldWRvLnRvTG93ZXJDYXNlKCkgXSB8fFxyXG5cdFx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIHBzZXVkbzogXCIgKyBwc2V1ZG8gKTtcclxuXHJcblx0XHRcdC8vIFRoZSB1c2VyIG1heSB1c2UgY3JlYXRlUHNldWRvIHRvIGluZGljYXRlIHRoYXRcclxuXHRcdFx0Ly8gYXJndW1lbnRzIGFyZSBuZWVkZWQgdG8gY3JlYXRlIHRoZSBmaWx0ZXIgZnVuY3Rpb25cclxuXHRcdFx0Ly8ganVzdCBhcyBTaXp6bGUgZG9lc1xyXG5cdFx0XHRpZiAoIGZuWyBleHBhbmRvIF0gKSB7XHJcblx0XHRcdFx0cmV0dXJuIGZuKCBhcmd1bWVudCApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBCdXQgbWFpbnRhaW4gc3VwcG9ydCBmb3Igb2xkIHNpZ25hdHVyZXNcclxuXHRcdFx0aWYgKCBmbi5sZW5ndGggPiAxICkge1xyXG5cdFx0XHRcdGFyZ3MgPSBbIHBzZXVkbywgcHNldWRvLCBcIlwiLCBhcmd1bWVudCBdO1xyXG5cdFx0XHRcdHJldHVybiBFeHByLnNldEZpbHRlcnMuaGFzT3duUHJvcGVydHkoIHBzZXVkby50b0xvd2VyQ2FzZSgpICkgP1xyXG5cdFx0XHRcdFx0bWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xyXG5cdFx0XHRcdFx0XHR2YXIgaWR4LFxyXG5cdFx0XHRcdFx0XHRcdG1hdGNoZWQgPSBmbiggc2VlZCwgYXJndW1lbnQgKSxcclxuXHRcdFx0XHRcdFx0XHRpID0gbWF0Y2hlZC5sZW5ndGg7XHJcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xyXG5cdFx0XHRcdFx0XHRcdGlkeCA9IGluZGV4T2YoIHNlZWQsIG1hdGNoZWRbaV0gKTtcclxuXHRcdFx0XHRcdFx0XHRzZWVkWyBpZHggXSA9ICEoIG1hdGNoZXNbIGlkeCBdID0gbWF0Y2hlZFtpXSApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KSA6XHJcblx0XHRcdFx0XHRmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0XHRcdFx0cmV0dXJuIGZuKCBlbGVtLCAwLCBhcmdzICk7XHJcblx0XHRcdFx0XHR9O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm4gZm47XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0cHNldWRvczoge1xyXG5cdFx0Ly8gUG90ZW50aWFsbHkgY29tcGxleCBwc2V1ZG9zXHJcblx0XHRcIm5vdFwiOiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlbGVjdG9yICkge1xyXG5cdFx0XHQvLyBUcmltIHRoZSBzZWxlY3RvciBwYXNzZWQgdG8gY29tcGlsZVxyXG5cdFx0XHQvLyB0byBhdm9pZCB0cmVhdGluZyBsZWFkaW5nIGFuZCB0cmFpbGluZ1xyXG5cdFx0XHQvLyBzcGFjZXMgYXMgY29tYmluYXRvcnNcclxuXHRcdFx0dmFyIGlucHV0ID0gW10sXHJcblx0XHRcdFx0cmVzdWx0cyA9IFtdLFxyXG5cdFx0XHRcdG1hdGNoZXIgPSBjb21waWxlKCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICkgKTtcclxuXHJcblx0XHRcdHJldHVybiBtYXRjaGVyWyBleHBhbmRvIF0gP1xyXG5cdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcywgY29udGV4dCwgeG1sICkge1xyXG5cdFx0XHRcdFx0dmFyIGVsZW0sXHJcblx0XHRcdFx0XHRcdHVubWF0Y2hlZCA9IG1hdGNoZXIoIHNlZWQsIG51bGwsIHhtbCwgW10gKSxcclxuXHRcdFx0XHRcdFx0aSA9IHNlZWQubGVuZ3RoO1xyXG5cclxuXHRcdFx0XHRcdC8vIE1hdGNoIGVsZW1lbnRzIHVubWF0Y2hlZCBieSBgbWF0Y2hlcmBcclxuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xyXG5cdFx0XHRcdFx0XHRpZiAoIChlbGVtID0gdW5tYXRjaGVkW2ldKSApIHtcclxuXHRcdFx0XHRcdFx0XHRzZWVkW2ldID0gIShtYXRjaGVzW2ldID0gZWxlbSk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KSA6XHJcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcclxuXHRcdFx0XHRcdGlucHV0WzBdID0gZWxlbTtcclxuXHRcdFx0XHRcdG1hdGNoZXIoIGlucHV0LCBudWxsLCB4bWwsIHJlc3VsdHMgKTtcclxuXHRcdFx0XHRcdC8vIERvbid0IGtlZXAgdGhlIGVsZW1lbnQgKGlzc3VlICMyOTkpXHJcblx0XHRcdFx0XHRpbnB1dFswXSA9IG51bGw7XHJcblx0XHRcdFx0XHRyZXR1cm4gIXJlc3VsdHMucG9wKCk7XHJcblx0XHRcdFx0fTtcclxuXHRcdH0pLFxyXG5cclxuXHRcdFwiaGFzXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VsZWN0b3IgKSB7XHJcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0XHRyZXR1cm4gU2l6emxlKCBzZWxlY3RvciwgZWxlbSApLmxlbmd0aCA+IDA7XHJcblx0XHRcdH07XHJcblx0XHR9KSxcclxuXHJcblx0XHRcImNvbnRhaW5zXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggdGV4dCApIHtcclxuXHRcdFx0dGV4dCA9IHRleHQucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcclxuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRcdHJldHVybiAoIGVsZW0udGV4dENvbnRlbnQgfHwgZWxlbS5pbm5lclRleHQgfHwgZ2V0VGV4dCggZWxlbSApICkuaW5kZXhPZiggdGV4dCApID4gLTE7XHJcblx0XHRcdH07XHJcblx0XHR9KSxcclxuXHJcblx0XHQvLyBcIldoZXRoZXIgYW4gZWxlbWVudCBpcyByZXByZXNlbnRlZCBieSBhIDpsYW5nKCkgc2VsZWN0b3JcclxuXHRcdC8vIGlzIGJhc2VkIHNvbGVseSBvbiB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlXHJcblx0XHQvLyBiZWluZyBlcXVhbCB0byB0aGUgaWRlbnRpZmllciBDLFxyXG5cdFx0Ly8gb3IgYmVnaW5uaW5nIHdpdGggdGhlIGlkZW50aWZpZXIgQyBpbW1lZGlhdGVseSBmb2xsb3dlZCBieSBcIi1cIi5cclxuXHRcdC8vIFRoZSBtYXRjaGluZyBvZiBDIGFnYWluc3QgdGhlIGVsZW1lbnQncyBsYW5ndWFnZSB2YWx1ZSBpcyBwZXJmb3JtZWQgY2FzZS1pbnNlbnNpdGl2ZWx5LlxyXG5cdFx0Ly8gVGhlIGlkZW50aWZpZXIgQyBkb2VzIG5vdCBoYXZlIHRvIGJlIGEgdmFsaWQgbGFuZ3VhZ2UgbmFtZS5cIlxyXG5cdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNsYW5nLXBzZXVkb1xyXG5cdFx0XCJsYW5nXCI6IG1hcmtGdW5jdGlvbiggZnVuY3Rpb24oIGxhbmcgKSB7XHJcblx0XHRcdC8vIGxhbmcgdmFsdWUgbXVzdCBiZSBhIHZhbGlkIGlkZW50aWZpZXJcclxuXHRcdFx0aWYgKCAhcmlkZW50aWZpZXIudGVzdChsYW5nIHx8IFwiXCIpICkge1xyXG5cdFx0XHRcdFNpenpsZS5lcnJvciggXCJ1bnN1cHBvcnRlZCBsYW5nOiBcIiArIGxhbmcgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRsYW5nID0gbGFuZy5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0XHR2YXIgZWxlbUxhbmc7XHJcblx0XHRcdFx0ZG8ge1xyXG5cdFx0XHRcdFx0aWYgKCAoZWxlbUxhbmcgPSBkb2N1bWVudElzSFRNTCA/XHJcblx0XHRcdFx0XHRcdGVsZW0ubGFuZyA6XHJcblx0XHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKFwieG1sOmxhbmdcIikgfHwgZWxlbS5nZXRBdHRyaWJ1dGUoXCJsYW5nXCIpKSApIHtcclxuXHJcblx0XHRcdFx0XHRcdGVsZW1MYW5nID0gZWxlbUxhbmcudG9Mb3dlckNhc2UoKTtcclxuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW1MYW5nID09PSBsYW5nIHx8IGVsZW1MYW5nLmluZGV4T2YoIGxhbmcgKyBcIi1cIiApID09PSAwO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0gd2hpbGUgKCAoZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSkgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApO1xyXG5cdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0fTtcclxuXHRcdH0pLFxyXG5cclxuXHRcdC8vIE1pc2NlbGxhbmVvdXNcclxuXHRcdFwidGFyZ2V0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHR2YXIgaGFzaCA9IHdpbmRvdy5sb2NhdGlvbiAmJiB3aW5kb3cubG9jYXRpb24uaGFzaDtcclxuXHRcdFx0cmV0dXJuIGhhc2ggJiYgaGFzaC5zbGljZSggMSApID09PSBlbGVtLmlkO1xyXG5cdFx0fSxcclxuXHJcblx0XHRcInJvb3RcIjogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdHJldHVybiBlbGVtID09PSBkb2NFbGVtO1xyXG5cdFx0fSxcclxuXHJcblx0XHRcImZvY3VzXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRyZXR1cm4gZWxlbSA9PT0gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCAmJiAoIWRvY3VtZW50Lmhhc0ZvY3VzIHx8IGRvY3VtZW50Lmhhc0ZvY3VzKCkpICYmICEhKGVsZW0udHlwZSB8fCBlbGVtLmhyZWYgfHwgfmVsZW0udGFiSW5kZXgpO1xyXG5cdFx0fSxcclxuXHJcblx0XHQvLyBCb29sZWFuIHByb3BlcnRpZXNcclxuXHRcdFwiZW5hYmxlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGZhbHNlO1xyXG5cdFx0fSxcclxuXHJcblx0XHRcImRpc2FibGVkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRyZXR1cm4gZWxlbS5kaXNhYmxlZCA9PT0gdHJ1ZTtcclxuXHRcdH0sXHJcblxyXG5cdFx0XCJjaGVja2VkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHQvLyBJbiBDU1MzLCA6Y2hlY2tlZCBzaG91bGQgcmV0dXJuIGJvdGggY2hlY2tlZCBhbmQgc2VsZWN0ZWQgZWxlbWVudHNcclxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcclxuXHRcdFx0dmFyIG5vZGVOYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xyXG5cdFx0XHRyZXR1cm4gKG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgISFlbGVtLmNoZWNrZWQpIHx8IChub2RlTmFtZSA9PT0gXCJvcHRpb25cIiAmJiAhIWVsZW0uc2VsZWN0ZWQpO1xyXG5cdFx0fSxcclxuXHJcblx0XHRcInNlbGVjdGVkXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHQvLyBBY2Nlc3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0XHJcblx0XHRcdC8vIG9wdGlvbnMgaW4gU2FmYXJpIHdvcmsgcHJvcGVybHlcclxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgKSB7XHJcblx0XHRcdFx0ZWxlbS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiBlbGVtLnNlbGVjdGVkID09PSB0cnVlO1xyXG5cdFx0fSxcclxuXHJcblx0XHQvLyBDb250ZW50c1xyXG5cdFx0XCJlbXB0eVwiOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNlbXB0eS1wc2V1ZG9cclxuXHRcdFx0Ly8gOmVtcHR5IGlzIG5lZ2F0ZWQgYnkgZWxlbWVudCAoMSkgb3IgY29udGVudCBub2RlcyAodGV4dDogMzsgY2RhdGE6IDQ7IGVudGl0eSByZWY6IDUpLFxyXG5cdFx0XHQvLyAgIGJ1dCBub3QgYnkgb3RoZXJzIChjb21tZW50OiA4OyBwcm9jZXNzaW5nIGluc3RydWN0aW9uOiA3OyBldGMuKVxyXG5cdFx0XHQvLyBub2RlVHlwZSA8IDYgd29ya3MgYmVjYXVzZSBhdHRyaWJ1dGVzICgyKSBkbyBub3QgYXBwZWFyIGFzIGNoaWxkcmVuXHJcblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xyXG5cdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA8IDYgKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0fSxcclxuXHJcblx0XHRcInBhcmVudFwiOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0cmV0dXJuICFFeHByLnBzZXVkb3NbXCJlbXB0eVwiXSggZWxlbSApO1xyXG5cdFx0fSxcclxuXHJcblx0XHQvLyBFbGVtZW50L2lucHV0IHR5cGVzXHJcblx0XHRcImhlYWRlclwiOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0cmV0dXJuIHJoZWFkZXIudGVzdCggZWxlbS5ub2RlTmFtZSApO1xyXG5cdFx0fSxcclxuXHJcblx0XHRcImlucHV0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRyZXR1cm4gcmlucHV0cy50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XHJcblx0XHR9LFxyXG5cclxuXHRcdFwiYnV0dG9uXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcclxuXHRcdFx0cmV0dXJuIG5hbWUgPT09IFwiaW5wdXRcIiAmJiBlbGVtLnR5cGUgPT09IFwiYnV0dG9uXCIgfHwgbmFtZSA9PT0gXCJidXR0b25cIjtcclxuXHRcdH0sXHJcblxyXG5cdFx0XCJ0ZXh0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHR2YXIgYXR0cjtcclxuXHRcdFx0cmV0dXJuIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICYmXHJcblx0XHRcdFx0ZWxlbS50eXBlID09PSBcInRleHRcIiAmJlxyXG5cclxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRTw4XHJcblx0XHRcdFx0Ly8gTmV3IEhUTUw1IGF0dHJpYnV0ZSB2YWx1ZXMgKGUuZy4sIFwic2VhcmNoXCIpIGFwcGVhciB3aXRoIGVsZW0udHlwZSA9PT0gXCJ0ZXh0XCJcclxuXHRcdFx0XHQoIChhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpKSA9PSBudWxsIHx8IGF0dHIudG9Mb3dlckNhc2UoKSA9PT0gXCJ0ZXh0XCIgKTtcclxuXHRcdH0sXHJcblxyXG5cdFx0Ly8gUG9zaXRpb24taW4tY29sbGVjdGlvblxyXG5cdFx0XCJmaXJzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRyZXR1cm4gWyAwIF07XHJcblx0XHR9KSxcclxuXHJcblx0XHRcImxhc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XHJcblx0XHRcdHJldHVybiBbIGxlbmd0aCAtIDEgXTtcclxuXHRcdH0pLFxyXG5cclxuXHRcdFwiZXFcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xyXG5cdFx0XHRyZXR1cm4gWyBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50IF07XHJcblx0XHR9KSxcclxuXHJcblx0XHRcImV2ZW5cIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XHJcblx0XHRcdHZhciBpID0gMDtcclxuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XHJcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xyXG5cdFx0fSksXHJcblxyXG5cdFx0XCJvZGRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XHJcblx0XHRcdHZhciBpID0gMTtcclxuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XHJcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xyXG5cdFx0fSksXHJcblxyXG5cdFx0XCJsdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XHJcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudDtcclxuXHRcdFx0Zm9yICggOyAtLWkgPj0gMDsgKSB7XHJcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xyXG5cdFx0fSksXHJcblxyXG5cdFx0XCJndFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCwgYXJndW1lbnQgKSB7XHJcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudDtcclxuXHRcdFx0Zm9yICggOyArK2kgPCBsZW5ndGg7ICkge1xyXG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcclxuXHRcdH0pXHJcblx0fVxyXG59O1xyXG5cclxuRXhwci5wc2V1ZG9zW1wibnRoXCJdID0gRXhwci5wc2V1ZG9zW1wiZXFcIl07XHJcblxyXG4vLyBBZGQgYnV0dG9uL2lucHV0IHR5cGUgcHNldWRvc1xyXG5mb3IgKCBpIGluIHsgcmFkaW86IHRydWUsIGNoZWNrYm94OiB0cnVlLCBmaWxlOiB0cnVlLCBwYXNzd29yZDogdHJ1ZSwgaW1hZ2U6IHRydWUgfSApIHtcclxuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUlucHV0UHNldWRvKCBpICk7XHJcbn1cclxuZm9yICggaSBpbiB7IHN1Ym1pdDogdHJ1ZSwgcmVzZXQ6IHRydWUgfSApIHtcclxuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUJ1dHRvblBzZXVkbyggaSApO1xyXG59XHJcblxyXG4vLyBFYXN5IEFQSSBmb3IgY3JlYXRpbmcgbmV3IHNldEZpbHRlcnNcclxuZnVuY3Rpb24gc2V0RmlsdGVycygpIHt9XHJcbnNldEZpbHRlcnMucHJvdG90eXBlID0gRXhwci5maWx0ZXJzID0gRXhwci5wc2V1ZG9zO1xyXG5FeHByLnNldEZpbHRlcnMgPSBuZXcgc2V0RmlsdGVycygpO1xyXG5cclxudG9rZW5pemUgPSBTaXp6bGUudG9rZW5pemUgPSBmdW5jdGlvbiggc2VsZWN0b3IsIHBhcnNlT25seSApIHtcclxuXHR2YXIgbWF0Y2hlZCwgbWF0Y2gsIHRva2VucywgdHlwZSxcclxuXHRcdHNvRmFyLCBncm91cHMsIHByZUZpbHRlcnMsXHJcblx0XHRjYWNoZWQgPSB0b2tlbkNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF07XHJcblxyXG5cdGlmICggY2FjaGVkICkge1xyXG5cdFx0cmV0dXJuIHBhcnNlT25seSA/IDAgOiBjYWNoZWQuc2xpY2UoIDAgKTtcclxuXHR9XHJcblxyXG5cdHNvRmFyID0gc2VsZWN0b3I7XHJcblx0Z3JvdXBzID0gW107XHJcblx0cHJlRmlsdGVycyA9IEV4cHIucHJlRmlsdGVyO1xyXG5cclxuXHR3aGlsZSAoIHNvRmFyICkge1xyXG5cclxuXHRcdC8vIENvbW1hIGFuZCBmaXJzdCBydW5cclxuXHRcdGlmICggIW1hdGNoZWQgfHwgKG1hdGNoID0gcmNvbW1hLmV4ZWMoIHNvRmFyICkpICkge1xyXG5cdFx0XHRpZiAoIG1hdGNoICkge1xyXG5cdFx0XHRcdC8vIERvbid0IGNvbnN1bWUgdHJhaWxpbmcgY29tbWFzIGFzIHZhbGlkXHJcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hbMF0ubGVuZ3RoICkgfHwgc29GYXI7XHJcblx0XHRcdH1cclxuXHRcdFx0Z3JvdXBzLnB1c2goICh0b2tlbnMgPSBbXSkgKTtcclxuXHRcdH1cclxuXHJcblx0XHRtYXRjaGVkID0gZmFsc2U7XHJcblxyXG5cdFx0Ly8gQ29tYmluYXRvcnNcclxuXHRcdGlmICggKG1hdGNoID0gcmNvbWJpbmF0b3JzLmV4ZWMoIHNvRmFyICkpICkge1xyXG5cdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcclxuXHRcdFx0dG9rZW5zLnB1c2goe1xyXG5cdFx0XHRcdHZhbHVlOiBtYXRjaGVkLFxyXG5cdFx0XHRcdC8vIENhc3QgZGVzY2VuZGFudCBjb21iaW5hdG9ycyB0byBzcGFjZVxyXG5cdFx0XHRcdHR5cGU6IG1hdGNoWzBdLnJlcGxhY2UoIHJ0cmltLCBcIiBcIiApXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEZpbHRlcnNcclxuXHRcdGZvciAoIHR5cGUgaW4gRXhwci5maWx0ZXIgKSB7XHJcblx0XHRcdGlmICggKG1hdGNoID0gbWF0Y2hFeHByWyB0eXBlIF0uZXhlYyggc29GYXIgKSkgJiYgKCFwcmVGaWx0ZXJzWyB0eXBlIF0gfHxcclxuXHRcdFx0XHQobWF0Y2ggPSBwcmVGaWx0ZXJzWyB0eXBlIF0oIG1hdGNoICkpKSApIHtcclxuXHRcdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcclxuXHRcdFx0XHR0b2tlbnMucHVzaCh7XHJcblx0XHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcclxuXHRcdFx0XHRcdHR5cGU6IHR5cGUsXHJcblx0XHRcdFx0XHRtYXRjaGVzOiBtYXRjaFxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdHNvRmFyID0gc29GYXIuc2xpY2UoIG1hdGNoZWQubGVuZ3RoICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRpZiAoICFtYXRjaGVkICkge1xyXG5cdFx0XHRicmVhaztcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIFJldHVybiB0aGUgbGVuZ3RoIG9mIHRoZSBpbnZhbGlkIGV4Y2Vzc1xyXG5cdC8vIGlmIHdlJ3JlIGp1c3QgcGFyc2luZ1xyXG5cdC8vIE90aGVyd2lzZSwgdGhyb3cgYW4gZXJyb3Igb3IgcmV0dXJuIHRva2Vuc1xyXG5cdHJldHVybiBwYXJzZU9ubHkgP1xyXG5cdFx0c29GYXIubGVuZ3RoIDpcclxuXHRcdHNvRmFyID9cclxuXHRcdFx0U2l6emxlLmVycm9yKCBzZWxlY3RvciApIDpcclxuXHRcdFx0Ly8gQ2FjaGUgdGhlIHRva2Vuc1xyXG5cdFx0XHR0b2tlbkNhY2hlKCBzZWxlY3RvciwgZ3JvdXBzICkuc2xpY2UoIDAgKTtcclxufTtcclxuXHJcbmZ1bmN0aW9uIHRvU2VsZWN0b3IoIHRva2VucyApIHtcclxuXHR2YXIgaSA9IDAsXHJcblx0XHRsZW4gPSB0b2tlbnMubGVuZ3RoLFxyXG5cdFx0c2VsZWN0b3IgPSBcIlwiO1xyXG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xyXG5cdFx0c2VsZWN0b3IgKz0gdG9rZW5zW2ldLnZhbHVlO1xyXG5cdH1cclxuXHRyZXR1cm4gc2VsZWN0b3I7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGFkZENvbWJpbmF0b3IoIG1hdGNoZXIsIGNvbWJpbmF0b3IsIGJhc2UgKSB7XHJcblx0dmFyIGRpciA9IGNvbWJpbmF0b3IuZGlyLFxyXG5cdFx0Y2hlY2tOb25FbGVtZW50cyA9IGJhc2UgJiYgZGlyID09PSBcInBhcmVudE5vZGVcIixcclxuXHRcdGRvbmVOYW1lID0gZG9uZSsrO1xyXG5cclxuXHRyZXR1cm4gY29tYmluYXRvci5maXJzdCA/XHJcblx0XHQvLyBDaGVjayBhZ2FpbnN0IGNsb3Nlc3QgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRcclxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XHJcblx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XHJcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XHJcblx0XHRcdFx0XHRyZXR1cm4gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9IDpcclxuXHJcblx0XHQvLyBDaGVjayBhZ2FpbnN0IGFsbCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudHNcclxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb250ZXh0LCB4bWwgKSB7XHJcblx0XHRcdHZhciBvbGRDYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsXHJcblx0XHRcdFx0bmV3Q2FjaGUgPSBbIGRpcnJ1bnMsIGRvbmVOYW1lIF07XHJcblxyXG5cdFx0XHQvLyBXZSBjYW4ndCBzZXQgYXJiaXRyYXJ5IGRhdGEgb24gWE1MIG5vZGVzLCBzbyB0aGV5IGRvbid0IGJlbmVmaXQgZnJvbSBjb21iaW5hdG9yIGNhY2hpbmdcclxuXHRcdFx0aWYgKCB4bWwgKSB7XHJcblx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcclxuXHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBjaGVja05vbkVsZW1lbnRzICkge1xyXG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xyXG5cdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XHJcblx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgfHwgY2hlY2tOb25FbGVtZW50cyApIHtcclxuXHRcdFx0XHRcdFx0b3V0ZXJDYWNoZSA9IGVsZW1bIGV4cGFuZG8gXSB8fCAoZWxlbVsgZXhwYW5kbyBdID0ge30pO1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPDkgb25seVxyXG5cdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcclxuXHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gfHwgKG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSA9IHt9KTtcclxuXHJcblx0XHRcdFx0XHRcdGlmICggKG9sZENhY2hlID0gdW5pcXVlQ2FjaGVbIGRpciBdKSAmJlxyXG5cdFx0XHRcdFx0XHRcdG9sZENhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgb2xkQ2FjaGVbIDEgXSA9PT0gZG9uZU5hbWUgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIEFzc2lnbiB0byBuZXdDYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIChuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSk7XHJcblx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdFx0Ly8gUmV1c2UgbmV3Y2FjaGUgc28gcmVzdWx0cyBiYWNrLXByb3BhZ2F0ZSB0byBwcmV2aW91cyBlbGVtZW50c1xyXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyBkaXIgXSA9IG5ld0NhY2hlO1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBBIG1hdGNoIG1lYW5zIHdlJ3JlIGRvbmU7IGEgZmFpbCBtZWFucyB3ZSBoYXZlIHRvIGtlZXAgY2hlY2tpbmdcclxuXHRcdFx0XHRcdFx0XHRpZiAoIChuZXdDYWNoZVsgMiBdID0gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkpICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG59XHJcblxyXG5mdW5jdGlvbiBlbGVtZW50TWF0Y2hlciggbWF0Y2hlcnMgKSB7XHJcblx0cmV0dXJuIG1hdGNoZXJzLmxlbmd0aCA+IDEgP1xyXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcclxuXHRcdFx0dmFyIGkgPSBtYXRjaGVycy5sZW5ndGg7XHJcblx0XHRcdHdoaWxlICggaS0tICkge1xyXG5cdFx0XHRcdGlmICggIW1hdGNoZXJzW2ldKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcclxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHR9IDpcclxuXHRcdG1hdGNoZXJzWzBdO1xyXG59XHJcblxyXG5mdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3VsdHMgKSB7XHJcblx0dmFyIGkgPSAwLFxyXG5cdFx0bGVuID0gY29udGV4dHMubGVuZ3RoO1xyXG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xyXG5cdFx0U2l6emxlKCBzZWxlY3RvciwgY29udGV4dHNbaV0sIHJlc3VsdHMgKTtcclxuXHR9XHJcblx0cmV0dXJuIHJlc3VsdHM7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNvbmRlbnNlKCB1bm1hdGNoZWQsIG1hcCwgZmlsdGVyLCBjb250ZXh0LCB4bWwgKSB7XHJcblx0dmFyIGVsZW0sXHJcblx0XHRuZXdVbm1hdGNoZWQgPSBbXSxcclxuXHRcdGkgPSAwLFxyXG5cdFx0bGVuID0gdW5tYXRjaGVkLmxlbmd0aCxcclxuXHRcdG1hcHBlZCA9IG1hcCAhPSBudWxsO1xyXG5cclxuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcclxuXHRcdGlmICggKGVsZW0gPSB1bm1hdGNoZWRbaV0pICkge1xyXG5cdFx0XHRpZiAoICFmaWx0ZXIgfHwgZmlsdGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcclxuXHRcdFx0XHRuZXdVbm1hdGNoZWQucHVzaCggZWxlbSApO1xyXG5cdFx0XHRcdGlmICggbWFwcGVkICkge1xyXG5cdFx0XHRcdFx0bWFwLnB1c2goIGkgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiBuZXdVbm1hdGNoZWQ7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNldE1hdGNoZXIoIHByZUZpbHRlciwgc2VsZWN0b3IsIG1hdGNoZXIsIHBvc3RGaWx0ZXIsIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApIHtcclxuXHRpZiAoIHBvc3RGaWx0ZXIgJiYgIXBvc3RGaWx0ZXJbIGV4cGFuZG8gXSApIHtcclxuXHRcdHBvc3RGaWx0ZXIgPSBzZXRNYXRjaGVyKCBwb3N0RmlsdGVyICk7XHJcblx0fVxyXG5cdGlmICggcG9zdEZpbmRlciAmJiAhcG9zdEZpbmRlclsgZXhwYW5kbyBdICkge1xyXG5cdFx0cG9zdEZpbmRlciA9IHNldE1hdGNoZXIoIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApO1xyXG5cdH1cclxuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCByZXN1bHRzLCBjb250ZXh0LCB4bWwgKSB7XHJcblx0XHR2YXIgdGVtcCwgaSwgZWxlbSxcclxuXHRcdFx0cHJlTWFwID0gW10sXHJcblx0XHRcdHBvc3RNYXAgPSBbXSxcclxuXHRcdFx0cHJlZXhpc3RpbmcgPSByZXN1bHRzLmxlbmd0aCxcclxuXHJcblx0XHRcdC8vIEdldCBpbml0aWFsIGVsZW1lbnRzIGZyb20gc2VlZCBvciBjb250ZXh0XHJcblx0XHRcdGVsZW1zID0gc2VlZCB8fCBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciB8fCBcIipcIiwgY29udGV4dC5ub2RlVHlwZSA/IFsgY29udGV4dCBdIDogY29udGV4dCwgW10gKSxcclxuXHJcblx0XHRcdC8vIFByZWZpbHRlciB0byBnZXQgbWF0Y2hlciBpbnB1dCwgcHJlc2VydmluZyBhIG1hcCBmb3Igc2VlZC1yZXN1bHRzIHN5bmNocm9uaXphdGlvblxyXG5cdFx0XHRtYXRjaGVySW4gPSBwcmVGaWx0ZXIgJiYgKCBzZWVkIHx8ICFzZWxlY3RvciApID9cclxuXHRcdFx0XHRjb25kZW5zZSggZWxlbXMsIHByZU1hcCwgcHJlRmlsdGVyLCBjb250ZXh0LCB4bWwgKSA6XHJcblx0XHRcdFx0ZWxlbXMsXHJcblxyXG5cdFx0XHRtYXRjaGVyT3V0ID0gbWF0Y2hlciA/XHJcblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBhIHBvc3RGaW5kZXIsIG9yIGZpbHRlcmVkIHNlZWQsIG9yIG5vbi1zZWVkIHBvc3RGaWx0ZXIgb3IgcHJlZXhpc3RpbmcgcmVzdWx0cyxcclxuXHRcdFx0XHRwb3N0RmluZGVyIHx8ICggc2VlZCA/IHByZUZpbHRlciA6IHByZWV4aXN0aW5nIHx8IHBvc3RGaWx0ZXIgKSA/XHJcblxyXG5cdFx0XHRcdFx0Ly8gLi4uaW50ZXJtZWRpYXRlIHByb2Nlc3NpbmcgaXMgbmVjZXNzYXJ5XHJcblx0XHRcdFx0XHRbXSA6XHJcblxyXG5cdFx0XHRcdFx0Ly8gLi4ub3RoZXJ3aXNlIHVzZSByZXN1bHRzIGRpcmVjdGx5XHJcblx0XHRcdFx0XHRyZXN1bHRzIDpcclxuXHRcdFx0XHRtYXRjaGVySW47XHJcblxyXG5cdFx0Ly8gRmluZCBwcmltYXJ5IG1hdGNoZXNcclxuXHRcdGlmICggbWF0Y2hlciApIHtcclxuXHRcdFx0bWF0Y2hlciggbWF0Y2hlckluLCBtYXRjaGVyT3V0LCBjb250ZXh0LCB4bWwgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBBcHBseSBwb3N0RmlsdGVyXHJcblx0XHRpZiAoIHBvc3RGaWx0ZXIgKSB7XHJcblx0XHRcdHRlbXAgPSBjb25kZW5zZSggbWF0Y2hlck91dCwgcG9zdE1hcCApO1xyXG5cdFx0XHRwb3N0RmlsdGVyKCB0ZW1wLCBbXSwgY29udGV4dCwgeG1sICk7XHJcblxyXG5cdFx0XHQvLyBVbi1tYXRjaCBmYWlsaW5nIGVsZW1lbnRzIGJ5IG1vdmluZyB0aGVtIGJhY2sgdG8gbWF0Y2hlckluXHJcblx0XHRcdGkgPSB0ZW1wLmxlbmd0aDtcclxuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XHJcblx0XHRcdFx0aWYgKCAoZWxlbSA9IHRlbXBbaV0pICkge1xyXG5cdFx0XHRcdFx0bWF0Y2hlck91dFsgcG9zdE1hcFtpXSBdID0gIShtYXRjaGVySW5bIHBvc3RNYXBbaV0gXSA9IGVsZW0pO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggc2VlZCApIHtcclxuXHRcdFx0aWYgKCBwb3N0RmluZGVyIHx8IHByZUZpbHRlciApIHtcclxuXHRcdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XHJcblx0XHRcdFx0XHQvLyBHZXQgdGhlIGZpbmFsIG1hdGNoZXJPdXQgYnkgY29uZGVuc2luZyB0aGlzIGludGVybWVkaWF0ZSBpbnRvIHBvc3RGaW5kZXIgY29udGV4dHNcclxuXHRcdFx0XHRcdHRlbXAgPSBbXTtcclxuXHRcdFx0XHRcdGkgPSBtYXRjaGVyT3V0Lmxlbmd0aDtcclxuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xyXG5cdFx0XHRcdFx0XHRpZiAoIChlbGVtID0gbWF0Y2hlck91dFtpXSkgKSB7XHJcblx0XHRcdFx0XHRcdFx0Ly8gUmVzdG9yZSBtYXRjaGVySW4gc2luY2UgZWxlbSBpcyBub3QgeWV0IGEgZmluYWwgbWF0Y2hcclxuXHRcdFx0XHRcdFx0XHR0ZW1wLnB1c2goIChtYXRjaGVySW5baV0gPSBlbGVtKSApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRwb3N0RmluZGVyKCBudWxsLCAobWF0Y2hlck91dCA9IFtdKSwgdGVtcCwgeG1sICk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBNb3ZlIG1hdGNoZWQgZWxlbWVudHMgZnJvbSBzZWVkIHRvIHJlc3VsdHMgdG8ga2VlcCB0aGVtIHN5bmNocm9uaXplZFxyXG5cdFx0XHRcdGkgPSBtYXRjaGVyT3V0Lmxlbmd0aDtcclxuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0XHRcdGlmICggKGVsZW0gPSBtYXRjaGVyT3V0W2ldKSAmJlxyXG5cdFx0XHRcdFx0XHQodGVtcCA9IHBvc3RGaW5kZXIgPyBpbmRleE9mKCBzZWVkLCBlbGVtICkgOiBwcmVNYXBbaV0pID4gLTEgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRzZWVkW3RlbXBdID0gIShyZXN1bHRzW3RlbXBdID0gZWxlbSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0Ly8gQWRkIGVsZW1lbnRzIHRvIHJlc3VsdHMsIHRocm91Z2ggcG9zdEZpbmRlciBpZiBkZWZpbmVkXHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRtYXRjaGVyT3V0ID0gY29uZGVuc2UoXHJcblx0XHRcdFx0bWF0Y2hlck91dCA9PT0gcmVzdWx0cyA/XHJcblx0XHRcdFx0XHRtYXRjaGVyT3V0LnNwbGljZSggcHJlZXhpc3RpbmcsIG1hdGNoZXJPdXQubGVuZ3RoICkgOlxyXG5cdFx0XHRcdFx0bWF0Y2hlck91dFxyXG5cdFx0XHQpO1xyXG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XHJcblx0XHRcdFx0cG9zdEZpbmRlciggbnVsbCwgcmVzdWx0cywgbWF0Y2hlck91dCwgeG1sICk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgbWF0Y2hlck91dCApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMgKSB7XHJcblx0dmFyIGNoZWNrQ29udGV4dCwgbWF0Y2hlciwgaixcclxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXHJcblx0XHRsZWFkaW5nUmVsYXRpdmUgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbMF0udHlwZSBdLFxyXG5cdFx0aW1wbGljaXRSZWxhdGl2ZSA9IGxlYWRpbmdSZWxhdGl2ZSB8fCBFeHByLnJlbGF0aXZlW1wiIFwiXSxcclxuXHRcdGkgPSBsZWFkaW5nUmVsYXRpdmUgPyAxIDogMCxcclxuXHJcblx0XHQvLyBUaGUgZm91bmRhdGlvbmFsIG1hdGNoZXIgZW5zdXJlcyB0aGF0IGVsZW1lbnRzIGFyZSByZWFjaGFibGUgZnJvbSB0b3AtbGV2ZWwgY29udGV4dChzKVxyXG5cdFx0bWF0Y2hDb250ZXh0ID0gYWRkQ29tYmluYXRvciggZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdHJldHVybiBlbGVtID09PSBjaGVja0NvbnRleHQ7XHJcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXHJcblx0XHRtYXRjaEFueUNvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0cmV0dXJuIGluZGV4T2YoIGNoZWNrQ29udGV4dCwgZWxlbSApID4gLTE7XHJcblx0XHR9LCBpbXBsaWNpdFJlbGF0aXZlLCB0cnVlICksXHJcblx0XHRtYXRjaGVycyA9IFsgZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcclxuXHRcdFx0dmFyIHJldCA9ICggIWxlYWRpbmdSZWxhdGl2ZSAmJiAoIHhtbCB8fCBjb250ZXh0ICE9PSBvdXRlcm1vc3RDb250ZXh0ICkgKSB8fCAoXHJcblx0XHRcdFx0KGNoZWNrQ29udGV4dCA9IGNvbnRleHQpLm5vZGVUeXBlID9cclxuXHRcdFx0XHRcdG1hdGNoQ29udGV4dCggZWxlbSwgY29udGV4dCwgeG1sICkgOlxyXG5cdFx0XHRcdFx0bWF0Y2hBbnlDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSApO1xyXG5cdFx0XHQvLyBBdm9pZCBoYW5naW5nIG9udG8gZWxlbWVudCAoaXNzdWUgIzI5OSlcclxuXHRcdFx0Y2hlY2tDb250ZXh0ID0gbnVsbDtcclxuXHRcdFx0cmV0dXJuIHJldDtcclxuXHRcdH0gXTtcclxuXHJcblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XHJcblx0XHRpZiAoIChtYXRjaGVyID0gRXhwci5yZWxhdGl2ZVsgdG9rZW5zW2ldLnR5cGUgXSkgKSB7XHJcblx0XHRcdG1hdGNoZXJzID0gWyBhZGRDb21iaW5hdG9yKGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLCBtYXRjaGVyKSBdO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0bWF0Y2hlciA9IEV4cHIuZmlsdGVyWyB0b2tlbnNbaV0udHlwZSBdLmFwcGx5KCBudWxsLCB0b2tlbnNbaV0ubWF0Y2hlcyApO1xyXG5cclxuXHRcdFx0Ly8gUmV0dXJuIHNwZWNpYWwgdXBvbiBzZWVpbmcgYSBwb3NpdGlvbmFsIG1hdGNoZXJcclxuXHRcdFx0aWYgKCBtYXRjaGVyWyBleHBhbmRvIF0gKSB7XHJcblx0XHRcdFx0Ly8gRmluZCB0aGUgbmV4dCByZWxhdGl2ZSBvcGVyYXRvciAoaWYgYW55KSBmb3IgcHJvcGVyIGhhbmRsaW5nXHJcblx0XHRcdFx0aiA9ICsraTtcclxuXHRcdFx0XHRmb3IgKCA7IGogPCBsZW47IGorKyApIHtcclxuXHRcdFx0XHRcdGlmICggRXhwci5yZWxhdGl2ZVsgdG9rZW5zW2pdLnR5cGUgXSApIHtcclxuXHRcdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiBzZXRNYXRjaGVyKFxyXG5cdFx0XHRcdFx0aSA+IDEgJiYgZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksXHJcblx0XHRcdFx0XHRpID4gMSAmJiB0b1NlbGVjdG9yKFxyXG5cdFx0XHRcdFx0XHQvLyBJZiB0aGUgcHJlY2VkaW5nIHRva2VuIHdhcyBhIGRlc2NlbmRhbnQgY29tYmluYXRvciwgaW5zZXJ0IGFuIGltcGxpY2l0IGFueS1lbGVtZW50IGAqYFxyXG5cdFx0XHRcdFx0XHR0b2tlbnMuc2xpY2UoIDAsIGkgLSAxICkuY29uY2F0KHsgdmFsdWU6IHRva2Vuc1sgaSAtIDIgXS50eXBlID09PSBcIiBcIiA/IFwiKlwiIDogXCJcIiB9KVxyXG5cdFx0XHRcdFx0KS5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICksXHJcblx0XHRcdFx0XHRtYXRjaGVyLFxyXG5cdFx0XHRcdFx0aSA8IGogJiYgbWF0Y2hlckZyb21Ub2tlbnMoIHRva2Vucy5zbGljZSggaSwgaiApICksXHJcblx0XHRcdFx0XHRqIDwgbGVuICYmIG1hdGNoZXJGcm9tVG9rZW5zKCAodG9rZW5zID0gdG9rZW5zLnNsaWNlKCBqICkpICksXHJcblx0XHRcdFx0XHRqIDwgbGVuICYmIHRvU2VsZWN0b3IoIHRva2VucyApXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fVxyXG5cdFx0XHRtYXRjaGVycy5wdXNoKCBtYXRjaGVyICk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIG1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyggZWxlbWVudE1hdGNoZXJzLCBzZXRNYXRjaGVycyApIHtcclxuXHR2YXIgYnlTZXQgPSBzZXRNYXRjaGVycy5sZW5ndGggPiAwLFxyXG5cdFx0YnlFbGVtZW50ID0gZWxlbWVudE1hdGNoZXJzLmxlbmd0aCA+IDAsXHJcblx0XHRzdXBlck1hdGNoZXIgPSBmdW5jdGlvbiggc2VlZCwgY29udGV4dCwgeG1sLCByZXN1bHRzLCBvdXRlcm1vc3QgKSB7XHJcblx0XHRcdHZhciBlbGVtLCBqLCBtYXRjaGVyLFxyXG5cdFx0XHRcdG1hdGNoZWRDb3VudCA9IDAsXHJcblx0XHRcdFx0aSA9IFwiMFwiLFxyXG5cdFx0XHRcdHVubWF0Y2hlZCA9IHNlZWQgJiYgW10sXHJcblx0XHRcdFx0c2V0TWF0Y2hlZCA9IFtdLFxyXG5cdFx0XHRcdGNvbnRleHRCYWNrdXAgPSBvdXRlcm1vc3RDb250ZXh0LFxyXG5cdFx0XHRcdC8vIFdlIG11c3QgYWx3YXlzIGhhdmUgZWl0aGVyIHNlZWQgZWxlbWVudHMgb3Igb3V0ZXJtb3N0IGNvbnRleHRcclxuXHRcdFx0XHRlbGVtcyA9IHNlZWQgfHwgYnlFbGVtZW50ICYmIEV4cHIuZmluZFtcIlRBR1wiXSggXCIqXCIsIG91dGVybW9zdCApLFxyXG5cdFx0XHRcdC8vIFVzZSBpbnRlZ2VyIGRpcnJ1bnMgaWZmIHRoaXMgaXMgdGhlIG91dGVybW9zdCBtYXRjaGVyXHJcblx0XHRcdFx0ZGlycnVuc1VuaXF1ZSA9IChkaXJydW5zICs9IGNvbnRleHRCYWNrdXAgPT0gbnVsbCA/IDEgOiBNYXRoLnJhbmRvbSgpIHx8IDAuMSksXHJcblx0XHRcdFx0bGVuID0gZWxlbXMubGVuZ3RoO1xyXG5cclxuXHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XHJcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHQgPT09IGRvY3VtZW50IHx8IGNvbnRleHQgfHwgb3V0ZXJtb3N0O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBBZGQgZWxlbWVudHMgcGFzc2luZyBlbGVtZW50TWF0Y2hlcnMgZGlyZWN0bHkgdG8gcmVzdWx0c1xyXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTw5LCBTYWZhcmlcclxuXHRcdFx0Ly8gVG9sZXJhdGUgTm9kZUxpc3QgcHJvcGVydGllcyAoSUU6IFwibGVuZ3RoXCI7IFNhZmFyaTogPG51bWJlcj4pIG1hdGNoaW5nIGVsZW1lbnRzIGJ5IGlkXHJcblx0XHRcdGZvciAoIDsgaSAhPT0gbGVuICYmIChlbGVtID0gZWxlbXNbaV0pICE9IG51bGw7IGkrKyApIHtcclxuXHRcdFx0XHRpZiAoIGJ5RWxlbWVudCAmJiBlbGVtICkge1xyXG5cdFx0XHRcdFx0aiA9IDA7XHJcblx0XHRcdFx0XHRpZiAoICFjb250ZXh0ICYmIGVsZW0ub3duZXJEb2N1bWVudCAhPT0gZG9jdW1lbnQgKSB7XHJcblx0XHRcdFx0XHRcdHNldERvY3VtZW50KCBlbGVtICk7XHJcblx0XHRcdFx0XHRcdHhtbCA9ICFkb2N1bWVudElzSFRNTDtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHdoaWxlICggKG1hdGNoZXIgPSBlbGVtZW50TWF0Y2hlcnNbaisrXSkgKSB7XHJcblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlciggZWxlbSwgY29udGV4dCB8fCBkb2N1bWVudCwgeG1sKSApIHtcclxuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcclxuXHRcdFx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0aWYgKCBvdXRlcm1vc3QgKSB7XHJcblx0XHRcdFx0XHRcdGRpcnJ1bnMgPSBkaXJydW5zVW5pcXVlO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gVHJhY2sgdW5tYXRjaGVkIGVsZW1lbnRzIGZvciBzZXQgZmlsdGVyc1xyXG5cdFx0XHRcdGlmICggYnlTZXQgKSB7XHJcblx0XHRcdFx0XHQvLyBUaGV5IHdpbGwgaGF2ZSBnb25lIHRocm91Z2ggYWxsIHBvc3NpYmxlIG1hdGNoZXJzXHJcblx0XHRcdFx0XHRpZiAoIChlbGVtID0gIW1hdGNoZXIgJiYgZWxlbSkgKSB7XHJcblx0XHRcdFx0XHRcdG1hdGNoZWRDb3VudC0tO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdC8vIExlbmd0aGVuIHRoZSBhcnJheSBmb3IgZXZlcnkgZWxlbWVudCwgbWF0Y2hlZCBvciBub3RcclxuXHRcdFx0XHRcdGlmICggc2VlZCApIHtcclxuXHRcdFx0XHRcdFx0dW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIGBpYCBpcyBub3cgdGhlIGNvdW50IG9mIGVsZW1lbnRzIHZpc2l0ZWQgYWJvdmUsIGFuZCBhZGRpbmcgaXQgdG8gYG1hdGNoZWRDb3VudGBcclxuXHRcdFx0Ly8gbWFrZXMgdGhlIGxhdHRlciBub25uZWdhdGl2ZS5cclxuXHRcdFx0bWF0Y2hlZENvdW50ICs9IGk7XHJcblxyXG5cdFx0XHQvLyBBcHBseSBzZXQgZmlsdGVycyB0byB1bm1hdGNoZWQgZWxlbWVudHNcclxuXHRcdFx0Ly8gTk9URTogVGhpcyBjYW4gYmUgc2tpcHBlZCBpZiB0aGVyZSBhcmUgbm8gdW5tYXRjaGVkIGVsZW1lbnRzIChpLmUuLCBgbWF0Y2hlZENvdW50YFxyXG5cdFx0XHQvLyBlcXVhbHMgYGlgKSwgdW5sZXNzIHdlIGRpZG4ndCB2aXNpdCBfYW55XyBlbGVtZW50cyBpbiB0aGUgYWJvdmUgbG9vcCBiZWNhdXNlIHdlIGhhdmVcclxuXHRcdFx0Ly8gbm8gZWxlbWVudCBtYXRjaGVycyBhbmQgbm8gc2VlZC5cclxuXHRcdFx0Ly8gSW5jcmVtZW50aW5nIGFuIGluaXRpYWxseS1zdHJpbmcgXCIwXCIgYGlgIGFsbG93cyBgaWAgdG8gcmVtYWluIGEgc3RyaW5nIG9ubHkgaW4gdGhhdFxyXG5cdFx0XHQvLyBjYXNlLCB3aGljaCB3aWxsIHJlc3VsdCBpbiBhIFwiMDBcIiBgbWF0Y2hlZENvdW50YCB0aGF0IGRpZmZlcnMgZnJvbSBgaWAgYnV0IGlzIGFsc29cclxuXHRcdFx0Ly8gbnVtZXJpY2FsbHkgemVyby5cclxuXHRcdFx0aWYgKCBieVNldCAmJiBpICE9PSBtYXRjaGVkQ291bnQgKSB7XHJcblx0XHRcdFx0aiA9IDA7XHJcblx0XHRcdFx0d2hpbGUgKCAobWF0Y2hlciA9IHNldE1hdGNoZXJzW2orK10pICkge1xyXG5cdFx0XHRcdFx0bWF0Y2hlciggdW5tYXRjaGVkLCBzZXRNYXRjaGVkLCBjb250ZXh0LCB4bWwgKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGlmICggc2VlZCApIHtcclxuXHRcdFx0XHRcdC8vIFJlaW50ZWdyYXRlIGVsZW1lbnQgbWF0Y2hlcyB0byBlbGltaW5hdGUgdGhlIG5lZWQgZm9yIHNvcnRpbmdcclxuXHRcdFx0XHRcdGlmICggbWF0Y2hlZENvdW50ID4gMCApIHtcclxuXHRcdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XHJcblx0XHRcdFx0XHRcdFx0aWYgKCAhKHVubWF0Y2hlZFtpXSB8fCBzZXRNYXRjaGVkW2ldKSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdHNldE1hdGNoZWRbaV0gPSBwb3AuY2FsbCggcmVzdWx0cyApO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdC8vIERpc2NhcmQgaW5kZXggcGxhY2Vob2xkZXIgdmFsdWVzIHRvIGdldCBvbmx5IGFjdHVhbCBtYXRjaGVzXHJcblx0XHRcdFx0XHRzZXRNYXRjaGVkID0gY29uZGVuc2UoIHNldE1hdGNoZWQgKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIEFkZCBtYXRjaGVzIHRvIHJlc3VsdHNcclxuXHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBzZXRNYXRjaGVkICk7XHJcblxyXG5cdFx0XHRcdC8vIFNlZWRsZXNzIHNldCBtYXRjaGVzIHN1Y2NlZWRpbmcgbXVsdGlwbGUgc3VjY2Vzc2Z1bCBtYXRjaGVycyBzdGlwdWxhdGUgc29ydGluZ1xyXG5cdFx0XHRcdGlmICggb3V0ZXJtb3N0ICYmICFzZWVkICYmIHNldE1hdGNoZWQubGVuZ3RoID4gMCAmJlxyXG5cdFx0XHRcdFx0KCBtYXRjaGVkQ291bnQgKyBzZXRNYXRjaGVycy5sZW5ndGggKSA+IDEgKSB7XHJcblxyXG5cdFx0XHRcdFx0U2l6emxlLnVuaXF1ZVNvcnQoIHJlc3VsdHMgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIE92ZXJyaWRlIG1hbmlwdWxhdGlvbiBvZiBnbG9iYWxzIGJ5IG5lc3RlZCBtYXRjaGVyc1xyXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcclxuXHRcdFx0XHRkaXJydW5zID0gZGlycnVuc1VuaXF1ZTtcclxuXHRcdFx0XHRvdXRlcm1vc3RDb250ZXh0ID0gY29udGV4dEJhY2t1cDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIHVubWF0Y2hlZDtcclxuXHRcdH07XHJcblxyXG5cdHJldHVybiBieVNldCA/XHJcblx0XHRtYXJrRnVuY3Rpb24oIHN1cGVyTWF0Y2hlciApIDpcclxuXHRcdHN1cGVyTWF0Y2hlcjtcclxufVxyXG5cclxuY29tcGlsZSA9IFNpenpsZS5jb21waWxlID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBtYXRjaCAvKiBJbnRlcm5hbCBVc2UgT25seSAqLyApIHtcclxuXHR2YXIgaSxcclxuXHRcdHNldE1hdGNoZXJzID0gW10sXHJcblx0XHRlbGVtZW50TWF0Y2hlcnMgPSBbXSxcclxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXTtcclxuXHJcblx0aWYgKCAhY2FjaGVkICkge1xyXG5cdFx0Ly8gR2VuZXJhdGUgYSBmdW5jdGlvbiBvZiByZWN1cnNpdmUgZnVuY3Rpb25zIHRoYXQgY2FuIGJlIHVzZWQgdG8gY2hlY2sgZWFjaCBlbGVtZW50XHJcblx0XHRpZiAoICFtYXRjaCApIHtcclxuXHRcdFx0bWF0Y2ggPSB0b2tlbml6ZSggc2VsZWN0b3IgKTtcclxuXHRcdH1cclxuXHRcdGkgPSBtYXRjaC5sZW5ndGg7XHJcblx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0Y2FjaGVkID0gbWF0Y2hlckZyb21Ub2tlbnMoIG1hdGNoW2ldICk7XHJcblx0XHRcdGlmICggY2FjaGVkWyBleHBhbmRvIF0gKSB7XHJcblx0XHRcdFx0c2V0TWF0Y2hlcnMucHVzaCggY2FjaGVkICk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0ZWxlbWVudE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQ2FjaGUgdGhlIGNvbXBpbGVkIGZ1bmN0aW9uXHJcblx0XHRjYWNoZWQgPSBjb21waWxlckNhY2hlKCBzZWxlY3RvciwgbWF0Y2hlckZyb21Hcm91cE1hdGNoZXJzKCBlbGVtZW50TWF0Y2hlcnMsIHNldE1hdGNoZXJzICkgKTtcclxuXHJcblx0XHQvLyBTYXZlIHNlbGVjdG9yIGFuZCB0b2tlbml6YXRpb25cclxuXHRcdGNhY2hlZC5zZWxlY3RvciA9IHNlbGVjdG9yO1xyXG5cdH1cclxuXHRyZXR1cm4gY2FjaGVkO1xyXG59O1xyXG5cclxuLyoqXHJcbiAqIEEgbG93LWxldmVsIHNlbGVjdGlvbiBmdW5jdGlvbiB0aGF0IHdvcmtzIHdpdGggU2l6emxlJ3MgY29tcGlsZWRcclxuICogIHNlbGVjdG9yIGZ1bmN0aW9uc1xyXG4gKiBAcGFyYW0ge1N0cmluZ3xGdW5jdGlvbn0gc2VsZWN0b3IgQSBzZWxlY3RvciBvciBhIHByZS1jb21waWxlZFxyXG4gKiAgc2VsZWN0b3IgZnVuY3Rpb24gYnVpbHQgd2l0aCBTaXp6bGUuY29tcGlsZVxyXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRleHRcclxuICogQHBhcmFtIHtBcnJheX0gW3Jlc3VsdHNdXHJcbiAqIEBwYXJhbSB7QXJyYXl9IFtzZWVkXSBBIHNldCBvZiBlbGVtZW50cyB0byBtYXRjaCBhZ2FpbnN0XHJcbiAqL1xyXG5zZWxlY3QgPSBTaXp6bGUuc2VsZWN0ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkge1xyXG5cdHZhciBpLCB0b2tlbnMsIHRva2VuLCB0eXBlLCBmaW5kLFxyXG5cdFx0Y29tcGlsZWQgPSB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBzZWxlY3RvcixcclxuXHRcdG1hdGNoID0gIXNlZWQgJiYgdG9rZW5pemUoIChzZWxlY3RvciA9IGNvbXBpbGVkLnNlbGVjdG9yIHx8IHNlbGVjdG9yKSApO1xyXG5cclxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcclxuXHJcblx0Ly8gVHJ5IHRvIG1pbmltaXplIG9wZXJhdGlvbnMgaWYgdGhlcmUgaXMgb25seSBvbmUgc2VsZWN0b3IgaW4gdGhlIGxpc3QgYW5kIG5vIHNlZWRcclxuXHQvLyAodGhlIGxhdHRlciBvZiB3aGljaCBndWFyYW50ZWVzIHVzIGNvbnRleHQpXHJcblx0aWYgKCBtYXRjaC5sZW5ndGggPT09IDEgKSB7XHJcblxyXG5cdFx0Ly8gUmVkdWNlIGNvbnRleHQgaWYgdGhlIGxlYWRpbmcgY29tcG91bmQgc2VsZWN0b3IgaXMgYW4gSURcclxuXHRcdHRva2VucyA9IG1hdGNoWzBdID0gbWF0Y2hbMF0uc2xpY2UoIDAgKTtcclxuXHRcdGlmICggdG9rZW5zLmxlbmd0aCA+IDIgJiYgKHRva2VuID0gdG9rZW5zWzBdKS50eXBlID09PSBcIklEXCIgJiZcclxuXHRcdFx0XHRzdXBwb3J0LmdldEJ5SWQgJiYgY29udGV4dC5ub2RlVHlwZSA9PT0gOSAmJiBkb2N1bWVudElzSFRNTCAmJlxyXG5cdFx0XHRcdEV4cHIucmVsYXRpdmVbIHRva2Vuc1sxXS50eXBlIF0gKSB7XHJcblxyXG5cdFx0XHRjb250ZXh0ID0gKCBFeHByLmZpbmRbXCJJRFwiXSggdG9rZW4ubWF0Y2hlc1swXS5yZXBsYWNlKHJ1bmVzY2FwZSwgZnVuZXNjYXBlKSwgY29udGV4dCApIHx8IFtdIClbMF07XHJcblx0XHRcdGlmICggIWNvbnRleHQgKSB7XHJcblx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XHJcblxyXG5cdFx0XHQvLyBQcmVjb21waWxlZCBtYXRjaGVycyB3aWxsIHN0aWxsIHZlcmlmeSBhbmNlc3RyeSwgc28gc3RlcCB1cCBhIGxldmVsXHJcblx0XHRcdH0gZWxzZSBpZiAoIGNvbXBpbGVkICkge1xyXG5cdFx0XHRcdGNvbnRleHQgPSBjb250ZXh0LnBhcmVudE5vZGU7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHNlbGVjdG9yID0gc2VsZWN0b3Iuc2xpY2UoIHRva2Vucy5zaGlmdCgpLnZhbHVlLmxlbmd0aCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEZldGNoIGEgc2VlZCBzZXQgZm9yIHJpZ2h0LXRvLWxlZnQgbWF0Y2hpbmdcclxuXHRcdGkgPSBtYXRjaEV4cHJbXCJuZWVkc0NvbnRleHRcIl0udGVzdCggc2VsZWN0b3IgKSA/IDAgOiB0b2tlbnMubGVuZ3RoO1xyXG5cdFx0d2hpbGUgKCBpLS0gKSB7XHJcblx0XHRcdHRva2VuID0gdG9rZW5zW2ldO1xyXG5cclxuXHRcdFx0Ly8gQWJvcnQgaWYgd2UgaGl0IGEgY29tYmluYXRvclxyXG5cdFx0XHRpZiAoIEV4cHIucmVsYXRpdmVbICh0eXBlID0gdG9rZW4udHlwZSkgXSApIHtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoIChmaW5kID0gRXhwci5maW5kWyB0eXBlIF0pICkge1xyXG5cdFx0XHRcdC8vIFNlYXJjaCwgZXhwYW5kaW5nIGNvbnRleHQgZm9yIGxlYWRpbmcgc2libGluZyBjb21iaW5hdG9yc1xyXG5cdFx0XHRcdGlmICggKHNlZWQgPSBmaW5kKFxyXG5cdFx0XHRcdFx0dG9rZW4ubWF0Y2hlc1swXS5yZXBsYWNlKCBydW5lc2NhcGUsIGZ1bmVzY2FwZSApLFxyXG5cdFx0XHRcdFx0cnNpYmxpbmcudGVzdCggdG9rZW5zWzBdLnR5cGUgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHwgY29udGV4dFxyXG5cdFx0XHRcdCkpICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIElmIHNlZWQgaXMgZW1wdHkgb3Igbm8gdG9rZW5zIHJlbWFpbiwgd2UgY2FuIHJldHVybiBlYXJseVxyXG5cdFx0XHRcdFx0dG9rZW5zLnNwbGljZSggaSwgMSApO1xyXG5cdFx0XHRcdFx0c2VsZWN0b3IgPSBzZWVkLmxlbmd0aCAmJiB0b1NlbGVjdG9yKCB0b2tlbnMgKTtcclxuXHRcdFx0XHRcdGlmICggIXNlbGVjdG9yICkge1xyXG5cdFx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBzZWVkICk7XHJcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly8gQ29tcGlsZSBhbmQgZXhlY3V0ZSBhIGZpbHRlcmluZyBmdW5jdGlvbiBpZiBvbmUgaXMgbm90IHByb3ZpZGVkXHJcblx0Ly8gUHJvdmlkZSBgbWF0Y2hgIHRvIGF2b2lkIHJldG9rZW5pemF0aW9uIGlmIHdlIG1vZGlmaWVkIHRoZSBzZWxlY3RvciBhYm92ZVxyXG5cdCggY29tcGlsZWQgfHwgY29tcGlsZSggc2VsZWN0b3IsIG1hdGNoICkgKShcclxuXHRcdHNlZWQsXHJcblx0XHRjb250ZXh0LFxyXG5cdFx0IWRvY3VtZW50SXNIVE1MLFxyXG5cdFx0cmVzdWx0cyxcclxuXHRcdCFjb250ZXh0IHx8IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHRcclxuXHQpO1xyXG5cdHJldHVybiByZXN1bHRzO1xyXG59O1xyXG5cclxuLy8gT25lLXRpbWUgYXNzaWdubWVudHNcclxuXHJcbi8vIFNvcnQgc3RhYmlsaXR5XHJcbnN1cHBvcnQuc29ydFN0YWJsZSA9IGV4cGFuZG8uc3BsaXQoXCJcIikuc29ydCggc29ydE9yZGVyICkuam9pbihcIlwiKSA9PT0gZXhwYW5kbztcclxuXHJcbi8vIFN1cHBvcnQ6IENocm9tZSAxNC0zNStcclxuLy8gQWx3YXlzIGFzc3VtZSBkdXBsaWNhdGVzIGlmIHRoZXkgYXJlbid0IHBhc3NlZCB0byB0aGUgY29tcGFyaXNvbiBmdW5jdGlvblxyXG5zdXBwb3J0LmRldGVjdER1cGxpY2F0ZXMgPSAhIWhhc0R1cGxpY2F0ZTtcclxuXHJcbi8vIEluaXRpYWxpemUgYWdhaW5zdCB0aGUgZGVmYXVsdCBkb2N1bWVudFxyXG5zZXREb2N1bWVudCgpO1xyXG5cclxuLy8gU3VwcG9ydDogV2Via2l0PDUzNy4zMiAtIFNhZmFyaSA2LjAuMy9DaHJvbWUgMjUgKGZpeGVkIGluIENocm9tZSAyNylcclxuLy8gRGV0YWNoZWQgbm9kZXMgY29uZm91bmRpbmdseSBmb2xsb3cgKmVhY2ggb3RoZXIqXHJcbnN1cHBvcnQuc29ydERldGFjaGVkID0gYXNzZXJ0KGZ1bmN0aW9uKCBkaXYxICkge1xyXG5cdC8vIFNob3VsZCByZXR1cm4gMSwgYnV0IHJldHVybnMgNCAoZm9sbG93aW5nKVxyXG5cdHJldHVybiBkaXYxLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiZGl2XCIpICkgJiAxO1xyXG59KTtcclxuXHJcbi8vIFN1cHBvcnQ6IElFPDhcclxuLy8gUHJldmVudCBhdHRyaWJ1dGUvcHJvcGVydHkgXCJpbnRlcnBvbGF0aW9uXCJcclxuLy8gaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L21zNTM2NDI5JTI4VlMuODUlMjkuYXNweFxyXG5pZiAoICFhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcclxuXHRkaXYuaW5uZXJIVE1MID0gXCI8YSBocmVmPScjJz48L2E+XCI7XHJcblx0cmV0dXJuIGRpdi5maXJzdENoaWxkLmdldEF0dHJpYnV0ZShcImhyZWZcIikgPT09IFwiI1wiIDtcclxufSkgKSB7XHJcblx0YWRkSGFuZGxlKCBcInR5cGV8aHJlZnxoZWlnaHR8d2lkdGhcIiwgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xyXG5cdFx0aWYgKCAhaXNYTUwgKSB7XHJcblx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggbmFtZSwgbmFtZS50b0xvd2VyQ2FzZSgpID09PSBcInR5cGVcIiA/IDEgOiAyICk7XHJcblx0XHR9XHJcblx0fSk7XHJcbn1cclxuXHJcbi8vIFN1cHBvcnQ6IElFPDlcclxuLy8gVXNlIGRlZmF1bHRWYWx1ZSBpbiBwbGFjZSBvZiBnZXRBdHRyaWJ1dGUoXCJ2YWx1ZVwiKVxyXG5pZiAoICFzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWFzc2VydChmdW5jdGlvbiggZGl2ICkge1xyXG5cdGRpdi5pbm5lckhUTUwgPSBcIjxpbnB1dC8+XCI7XHJcblx0ZGl2LmZpcnN0Q2hpbGQuc2V0QXR0cmlidXRlKCBcInZhbHVlXCIsIFwiXCIgKTtcclxuXHRyZXR1cm4gZGl2LmZpcnN0Q2hpbGQuZ2V0QXR0cmlidXRlKCBcInZhbHVlXCIgKSA9PT0gXCJcIjtcclxufSkgKSB7XHJcblx0YWRkSGFuZGxlKCBcInZhbHVlXCIsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcclxuXHRcdGlmICggIWlzWE1MICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gXCJpbnB1dFwiICkge1xyXG5cdFx0XHRyZXR1cm4gZWxlbS5kZWZhdWx0VmFsdWU7XHJcblx0XHR9XHJcblx0fSk7XHJcbn1cclxuXHJcbi8vIFN1cHBvcnQ6IElFPDlcclxuLy8gVXNlIGdldEF0dHJpYnV0ZU5vZGUgdG8gZmV0Y2ggYm9vbGVhbnMgd2hlbiBnZXRBdHRyaWJ1dGUgbGllc1xyXG5pZiAoICFhc3NlcnQoZnVuY3Rpb24oIGRpdiApIHtcclxuXHRyZXR1cm4gZGl2LmdldEF0dHJpYnV0ZShcImRpc2FibGVkXCIpID09IG51bGw7XHJcbn0pICkge1xyXG5cdGFkZEhhbmRsZSggYm9vbGVhbnMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcclxuXHRcdHZhciB2YWw7XHJcblx0XHRpZiAoICFpc1hNTCApIHtcclxuXHRcdFx0cmV0dXJuIGVsZW1bIG5hbWUgXSA9PT0gdHJ1ZSA/IG5hbWUudG9Mb3dlckNhc2UoKSA6XHJcblx0XHRcdFx0XHQodmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICkpICYmIHZhbC5zcGVjaWZpZWQgP1xyXG5cdFx0XHRcdFx0dmFsLnZhbHVlIDpcclxuXHRcdFx0XHRudWxsO1xyXG5cdFx0fVxyXG5cdH0pO1xyXG59XHJcblxyXG5yZXR1cm4gU2l6emxlO1xyXG5cclxufSkoIHdpbmRvdyApO1xyXG5cclxuXHJcblxyXG5qUXVlcnkuZmluZCA9IFNpenpsZTtcclxualF1ZXJ5LmV4cHIgPSBTaXp6bGUuc2VsZWN0b3JzO1xyXG5qUXVlcnkuZXhwclsgXCI6XCIgXSA9IGpRdWVyeS5leHByLnBzZXVkb3M7XHJcbmpRdWVyeS51bmlxdWVTb3J0ID0galF1ZXJ5LnVuaXF1ZSA9IFNpenpsZS51bmlxdWVTb3J0O1xyXG5qUXVlcnkudGV4dCA9IFNpenpsZS5nZXRUZXh0O1xyXG5qUXVlcnkuaXNYTUxEb2MgPSBTaXp6bGUuaXNYTUw7XHJcbmpRdWVyeS5jb250YWlucyA9IFNpenpsZS5jb250YWlucztcclxuXHJcblxyXG5cclxudmFyIGRpciA9IGZ1bmN0aW9uKCBlbGVtLCBkaXIsIHVudGlsICkge1xyXG5cdHZhciBtYXRjaGVkID0gW10sXHJcblx0XHR0cnVuY2F0ZSA9IHVudGlsICE9PSB1bmRlZmluZWQ7XHJcblxyXG5cdHdoaWxlICggKCBlbGVtID0gZWxlbVsgZGlyIF0gKSAmJiBlbGVtLm5vZGVUeXBlICE9PSA5ICkge1xyXG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xyXG5cdFx0XHRpZiAoIHRydW5jYXRlICYmIGpRdWVyeSggZWxlbSApLmlzKCB1bnRpbCApICkge1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHRcdG1hdGNoZWQucHVzaCggZWxlbSApO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRyZXR1cm4gbWF0Y2hlZDtcclxufTtcclxuXHJcblxyXG52YXIgc2libGluZ3MgPSBmdW5jdGlvbiggbiwgZWxlbSApIHtcclxuXHR2YXIgbWF0Y2hlZCA9IFtdO1xyXG5cclxuXHRmb3IgKCA7IG47IG4gPSBuLm5leHRTaWJsaW5nICkge1xyXG5cdFx0aWYgKCBuLm5vZGVUeXBlID09PSAxICYmIG4gIT09IGVsZW0gKSB7XHJcblx0XHRcdG1hdGNoZWQucHVzaCggbiApO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIG1hdGNoZWQ7XHJcbn07XHJcblxyXG5cclxudmFyIHJuZWVkc0NvbnRleHQgPSBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQ7XHJcblxyXG52YXIgcnNpbmdsZVRhZyA9ICggL148KFtcXHctXSspXFxzKlxcLz8+KD86PFxcL1xcMT58KSQvICk7XHJcblxyXG5cclxuXHJcbnZhciByaXNTaW1wbGUgPSAvXi5bXjojXFxbXFwuLF0qJC87XHJcblxyXG4vLyBJbXBsZW1lbnQgdGhlIGlkZW50aWNhbCBmdW5jdGlvbmFsaXR5IGZvciBmaWx0ZXIgYW5kIG5vdFxyXG5mdW5jdGlvbiB3aW5ub3coIGVsZW1lbnRzLCBxdWFsaWZpZXIsIG5vdCApIHtcclxuXHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBxdWFsaWZpZXIgKSApIHtcclxuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xyXG5cdFx0XHQvKiBqc2hpbnQgLVcwMTggKi9cclxuXHRcdFx0cmV0dXJuICEhcXVhbGlmaWVyLmNhbGwoIGVsZW0sIGksIGVsZW0gKSAhPT0gbm90O1xyXG5cdFx0fSApO1xyXG5cclxuXHR9XHJcblxyXG5cdGlmICggcXVhbGlmaWVyLm5vZGVUeXBlICkge1xyXG5cdFx0cmV0dXJuIGpRdWVyeS5ncmVwKCBlbGVtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdHJldHVybiAoIGVsZW0gPT09IHF1YWxpZmllciApICE9PSBub3Q7XHJcblx0XHR9ICk7XHJcblxyXG5cdH1cclxuXHJcblx0aWYgKCB0eXBlb2YgcXVhbGlmaWVyID09PSBcInN0cmluZ1wiICkge1xyXG5cdFx0aWYgKCByaXNTaW1wbGUudGVzdCggcXVhbGlmaWVyICkgKSB7XHJcblx0XHRcdHJldHVybiBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzLCBub3QgKTtcclxuXHRcdH1cclxuXHJcblx0XHRxdWFsaWZpZXIgPSBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzICk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4galF1ZXJ5LmdyZXAoIGVsZW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdHJldHVybiAoIGpRdWVyeS5pbkFycmF5KCBlbGVtLCBxdWFsaWZpZXIgKSA+IC0xICkgIT09IG5vdDtcclxuXHR9ICk7XHJcbn1cclxuXHJcbmpRdWVyeS5maWx0ZXIgPSBmdW5jdGlvbiggZXhwciwgZWxlbXMsIG5vdCApIHtcclxuXHR2YXIgZWxlbSA9IGVsZW1zWyAwIF07XHJcblxyXG5cdGlmICggbm90ICkge1xyXG5cdFx0ZXhwciA9IFwiOm5vdChcIiArIGV4cHIgKyBcIilcIjtcclxuXHR9XHJcblxyXG5cdHJldHVybiBlbGVtcy5sZW5ndGggPT09IDEgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSA/XHJcblx0XHRqUXVlcnkuZmluZC5tYXRjaGVzU2VsZWN0b3IoIGVsZW0sIGV4cHIgKSA/IFsgZWxlbSBdIDogW10gOlxyXG5cdFx0alF1ZXJ5LmZpbmQubWF0Y2hlcyggZXhwciwgalF1ZXJ5LmdyZXAoIGVsZW1zLCBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0cmV0dXJuIGVsZW0ubm9kZVR5cGUgPT09IDE7XHJcblx0XHR9ICkgKTtcclxufTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRmaW5kOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XHJcblx0XHR2YXIgaSxcclxuXHRcdFx0cmV0ID0gW10sXHJcblx0XHRcdHNlbGYgPSB0aGlzLFxyXG5cdFx0XHRsZW4gPSBzZWxmLmxlbmd0aDtcclxuXHJcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCBqUXVlcnkoIHNlbGVjdG9yICkuZmlsdGVyKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xyXG5cdFx0XHRcdFx0aWYgKCBqUXVlcnkuY29udGFpbnMoIHNlbGZbIGkgXSwgdGhpcyApICkge1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gKSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGZvciAoIGkgPSAwOyBpIDwgbGVuOyBpKysgKSB7XHJcblx0XHRcdGpRdWVyeS5maW5kKCBzZWxlY3Rvciwgc2VsZlsgaSBdLCByZXQgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBOZWVkZWQgYmVjYXVzZSAkKCBzZWxlY3RvciwgY29udGV4dCApIGJlY29tZXMgJCggY29udGV4dCApLmZpbmQoIHNlbGVjdG9yIClcclxuXHRcdHJldCA9IHRoaXMucHVzaFN0YWNrKCBsZW4gPiAxID8galF1ZXJ5LnVuaXF1ZSggcmV0ICkgOiByZXQgKTtcclxuXHRcdHJldC5zZWxlY3RvciA9IHRoaXMuc2VsZWN0b3IgPyB0aGlzLnNlbGVjdG9yICsgXCIgXCIgKyBzZWxlY3RvciA6IHNlbGVjdG9yO1xyXG5cdFx0cmV0dXJuIHJldDtcclxuXHR9LFxyXG5cdGZpbHRlcjogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xyXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCBmYWxzZSApICk7XHJcblx0fSxcclxuXHRub3Q6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcclxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggd2lubm93KCB0aGlzLCBzZWxlY3RvciB8fCBbXSwgdHJ1ZSApICk7XHJcblx0fSxcclxuXHRpczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xyXG5cdFx0cmV0dXJuICEhd2lubm93KFxyXG5cdFx0XHR0aGlzLFxyXG5cclxuXHRcdFx0Ly8gSWYgdGhpcyBpcyBhIHBvc2l0aW9uYWwvcmVsYXRpdmUgc2VsZWN0b3IsIGNoZWNrIG1lbWJlcnNoaXAgaW4gdGhlIHJldHVybmVkIHNldFxyXG5cdFx0XHQvLyBzbyAkKFwicDpmaXJzdFwiKS5pcyhcInA6bGFzdFwiKSB3b24ndCByZXR1cm4gdHJ1ZSBmb3IgYSBkb2Mgd2l0aCB0d28gXCJwXCIuXHJcblx0XHRcdHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiAmJiBybmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICkgP1xyXG5cdFx0XHRcdGpRdWVyeSggc2VsZWN0b3IgKSA6XHJcblx0XHRcdFx0c2VsZWN0b3IgfHwgW10sXHJcblx0XHRcdGZhbHNlXHJcblx0XHQpLmxlbmd0aDtcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG4vLyBJbml0aWFsaXplIGEgalF1ZXJ5IG9iamVjdFxyXG5cclxuXHJcbi8vIEEgY2VudHJhbCByZWZlcmVuY2UgdG8gdGhlIHJvb3QgalF1ZXJ5KGRvY3VtZW50KVxyXG52YXIgcm9vdGpRdWVyeSxcclxuXHJcblx0Ly8gQSBzaW1wbGUgd2F5IHRvIGNoZWNrIGZvciBIVE1MIHN0cmluZ3NcclxuXHQvLyBQcmlvcml0aXplICNpZCBvdmVyIDx0YWc+IHRvIGF2b2lkIFhTUyB2aWEgbG9jYXRpb24uaGFzaCAoIzk1MjEpXHJcblx0Ly8gU3RyaWN0IEhUTUwgcmVjb2duaXRpb24gKCMxMTI5MDogbXVzdCBzdGFydCB3aXRoIDwpXHJcblx0cnF1aWNrRXhwciA9IC9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKnwjKFtcXHctXSopKSQvLFxyXG5cclxuXHRpbml0ID0galF1ZXJ5LmZuLmluaXQgPSBmdW5jdGlvbiggc2VsZWN0b3IsIGNvbnRleHQsIHJvb3QgKSB7XHJcblx0XHR2YXIgbWF0Y2gsIGVsZW07XHJcblxyXG5cdFx0Ly8gSEFORExFOiAkKFwiXCIpLCAkKG51bGwpLCAkKHVuZGVmaW5lZCksICQoZmFsc2UpXHJcblx0XHRpZiAoICFzZWxlY3RvciApIHtcclxuXHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gaW5pdCBhY2NlcHRzIGFuIGFsdGVybmF0ZSByb290alF1ZXJ5XHJcblx0XHQvLyBzbyBtaWdyYXRlIGNhbiBzdXBwb3J0IGpRdWVyeS5zdWIgKGdoLTIxMDEpXHJcblx0XHRyb290ID0gcm9vdCB8fCByb290alF1ZXJ5O1xyXG5cclxuXHRcdC8vIEhhbmRsZSBIVE1MIHN0cmluZ3NcclxuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRpZiAoIHNlbGVjdG9yLmNoYXJBdCggMCApID09PSBcIjxcIiAmJlxyXG5cdFx0XHRcdHNlbGVjdG9yLmNoYXJBdCggc2VsZWN0b3IubGVuZ3RoIC0gMSApID09PSBcIj5cIiAmJlxyXG5cdFx0XHRcdHNlbGVjdG9yLmxlbmd0aCA+PSAzICkge1xyXG5cclxuXHRcdFx0XHQvLyBBc3N1bWUgdGhhdCBzdHJpbmdzIHRoYXQgc3RhcnQgYW5kIGVuZCB3aXRoIDw+IGFyZSBIVE1MIGFuZCBza2lwIHRoZSByZWdleCBjaGVja1xyXG5cdFx0XHRcdG1hdGNoID0gWyBudWxsLCBzZWxlY3RvciwgbnVsbCBdO1xyXG5cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRtYXRjaCA9IHJxdWlja0V4cHIuZXhlYyggc2VsZWN0b3IgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gTWF0Y2ggaHRtbCBvciBtYWtlIHN1cmUgbm8gY29udGV4dCBpcyBzcGVjaWZpZWQgZm9yICNpZFxyXG5cdFx0XHRpZiAoIG1hdGNoICYmICggbWF0Y2hbIDEgXSB8fCAhY29udGV4dCApICkge1xyXG5cclxuXHRcdFx0XHQvLyBIQU5ETEU6ICQoaHRtbCkgLT4gJChhcnJheSlcclxuXHRcdFx0XHRpZiAoIG1hdGNoWyAxIF0gKSB7XHJcblx0XHRcdFx0XHRjb250ZXh0ID0gY29udGV4dCBpbnN0YW5jZW9mIGpRdWVyeSA/IGNvbnRleHRbIDAgXSA6IGNvbnRleHQ7XHJcblxyXG5cdFx0XHRcdFx0Ly8gc2NyaXB0cyBpcyB0cnVlIGZvciBiYWNrLWNvbXBhdFxyXG5cdFx0XHRcdFx0Ly8gSW50ZW50aW9uYWxseSBsZXQgdGhlIGVycm9yIGJlIHRocm93biBpZiBwYXJzZUhUTUwgaXMgbm90IHByZXNlbnRcclxuXHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggdGhpcywgalF1ZXJ5LnBhcnNlSFRNTChcclxuXHRcdFx0XHRcdFx0bWF0Y2hbIDEgXSxcclxuXHRcdFx0XHRcdFx0Y29udGV4dCAmJiBjb250ZXh0Lm5vZGVUeXBlID8gY29udGV4dC5vd25lckRvY3VtZW50IHx8IGNvbnRleHQgOiBkb2N1bWVudCxcclxuXHRcdFx0XHRcdFx0dHJ1ZVxyXG5cdFx0XHRcdFx0KSApO1xyXG5cclxuXHRcdFx0XHRcdC8vIEhBTkRMRTogJChodG1sLCBwcm9wcylcclxuXHRcdFx0XHRcdGlmICggcnNpbmdsZVRhZy50ZXN0KCBtYXRjaFsgMSBdICkgJiYgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGNvbnRleHQgKSApIHtcclxuXHRcdFx0XHRcdFx0Zm9yICggbWF0Y2ggaW4gY29udGV4dCApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gUHJvcGVydGllcyBvZiBjb250ZXh0IGFyZSBjYWxsZWQgYXMgbWV0aG9kcyBpZiBwb3NzaWJsZVxyXG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHRoaXNbIG1hdGNoIF0gKSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdHRoaXNbIG1hdGNoIF0oIGNvbnRleHRbIG1hdGNoIF0gKTtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gLi4uYW5kIG90aGVyd2lzZSBzZXQgYXMgYXR0cmlidXRlc1xyXG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdFx0XHR0aGlzLmF0dHIoIG1hdGNoLCBjb250ZXh0WyBtYXRjaCBdICk7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblxyXG5cdFx0XHRcdC8vIEhBTkRMRTogJCgjaWQpXHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggbWF0Y2hbIDIgXSApO1xyXG5cclxuXHRcdFx0XHRcdC8vIENoZWNrIHBhcmVudE5vZGUgdG8gY2F0Y2ggd2hlbiBCbGFja2JlcnJ5IDQuNiByZXR1cm5zXHJcblx0XHRcdFx0XHQvLyBub2RlcyB0aGF0IGFyZSBubyBsb25nZXIgaW4gdGhlIGRvY3VtZW50ICM2OTYzXHJcblx0XHRcdFx0XHRpZiAoIGVsZW0gJiYgZWxlbS5wYXJlbnROb2RlICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gSGFuZGxlIHRoZSBjYXNlIHdoZXJlIElFIGFuZCBPcGVyYSByZXR1cm4gaXRlbXNcclxuXHRcdFx0XHRcdFx0Ly8gYnkgbmFtZSBpbnN0ZWFkIG9mIElEXHJcblx0XHRcdFx0XHRcdGlmICggZWxlbS5pZCAhPT0gbWF0Y2hbIDIgXSApIHtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcm9vdGpRdWVyeS5maW5kKCBzZWxlY3RvciApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBPdGhlcndpc2UsIHdlIGluamVjdCB0aGUgZWxlbWVudCBkaXJlY3RseSBpbnRvIHRoZSBqUXVlcnkgb2JqZWN0XHJcblx0XHRcdFx0XHRcdHRoaXMubGVuZ3RoID0gMTtcclxuXHRcdFx0XHRcdFx0dGhpc1sgMCBdID0gZWxlbTtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHR0aGlzLmNvbnRleHQgPSBkb2N1bWVudDtcclxuXHRcdFx0XHRcdHRoaXMuc2VsZWN0b3IgPSBzZWxlY3RvcjtcclxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdC8vIEhBTkRMRTogJChleHByLCAkKC4uLikpXHJcblx0XHRcdH0gZWxzZSBpZiAoICFjb250ZXh0IHx8IGNvbnRleHQuanF1ZXJ5ICkge1xyXG5cdFx0XHRcdHJldHVybiAoIGNvbnRleHQgfHwgcm9vdCApLmZpbmQoIHNlbGVjdG9yICk7XHJcblxyXG5cdFx0XHQvLyBIQU5ETEU6ICQoZXhwciwgY29udGV4dClcclxuXHRcdFx0Ly8gKHdoaWNoIGlzIGp1c3QgZXF1aXZhbGVudCB0bzogJChjb250ZXh0KS5maW5kKGV4cHIpXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0cmV0dXJuIHRoaXMuY29uc3RydWN0b3IoIGNvbnRleHQgKS5maW5kKCBzZWxlY3RvciApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0Ly8gSEFORExFOiAkKERPTUVsZW1lbnQpXHJcblx0XHR9IGVsc2UgaWYgKCBzZWxlY3Rvci5ub2RlVHlwZSApIHtcclxuXHRcdFx0dGhpcy5jb250ZXh0ID0gdGhpc1sgMCBdID0gc2VsZWN0b3I7XHJcblx0XHRcdHRoaXMubGVuZ3RoID0gMTtcclxuXHRcdFx0cmV0dXJuIHRoaXM7XHJcblxyXG5cdFx0Ly8gSEFORExFOiAkKGZ1bmN0aW9uKVxyXG5cdFx0Ly8gU2hvcnRjdXQgZm9yIGRvY3VtZW50IHJlYWR5XHJcblx0XHR9IGVsc2UgaWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggc2VsZWN0b3IgKSApIHtcclxuXHRcdFx0cmV0dXJuIHR5cGVvZiByb290LnJlYWR5ICE9PSBcInVuZGVmaW5lZFwiID9cclxuXHRcdFx0XHRyb290LnJlYWR5KCBzZWxlY3RvciApIDpcclxuXHJcblx0XHRcdFx0Ly8gRXhlY3V0ZSBpbW1lZGlhdGVseSBpZiByZWFkeSBpcyBub3QgcHJlc2VudFxyXG5cdFx0XHRcdHNlbGVjdG9yKCBqUXVlcnkgKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoIHNlbGVjdG9yLnNlbGVjdG9yICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdHRoaXMuc2VsZWN0b3IgPSBzZWxlY3Rvci5zZWxlY3RvcjtcclxuXHRcdFx0dGhpcy5jb250ZXh0ID0gc2VsZWN0b3IuY29udGV4dDtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4galF1ZXJ5Lm1ha2VBcnJheSggc2VsZWN0b3IsIHRoaXMgKTtcclxuXHR9O1xyXG5cclxuLy8gR2l2ZSB0aGUgaW5pdCBmdW5jdGlvbiB0aGUgalF1ZXJ5IHByb3RvdHlwZSBmb3IgbGF0ZXIgaW5zdGFudGlhdGlvblxyXG5pbml0LnByb3RvdHlwZSA9IGpRdWVyeS5mbjtcclxuXHJcbi8vIEluaXRpYWxpemUgY2VudHJhbCByZWZlcmVuY2Vcclxucm9vdGpRdWVyeSA9IGpRdWVyeSggZG9jdW1lbnQgKTtcclxuXHJcblxyXG52YXIgcnBhcmVudHNwcmV2ID0gL14oPzpwYXJlbnRzfHByZXYoPzpVbnRpbHxBbGwpKS8sXHJcblxyXG5cdC8vIG1ldGhvZHMgZ3VhcmFudGVlZCB0byBwcm9kdWNlIGEgdW5pcXVlIHNldCB3aGVuIHN0YXJ0aW5nIGZyb20gYSB1bmlxdWUgc2V0XHJcblx0Z3VhcmFudGVlZFVuaXF1ZSA9IHtcclxuXHRcdGNoaWxkcmVuOiB0cnVlLFxyXG5cdFx0Y29udGVudHM6IHRydWUsXHJcblx0XHRuZXh0OiB0cnVlLFxyXG5cdFx0cHJldjogdHJ1ZVxyXG5cdH07XHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblx0aGFzOiBmdW5jdGlvbiggdGFyZ2V0ICkge1xyXG5cdFx0dmFyIGksXHJcblx0XHRcdHRhcmdldHMgPSBqUXVlcnkoIHRhcmdldCwgdGhpcyApLFxyXG5cdFx0XHRsZW4gPSB0YXJnZXRzLmxlbmd0aDtcclxuXHJcblx0XHRyZXR1cm4gdGhpcy5maWx0ZXIoIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xyXG5cdFx0XHRcdGlmICggalF1ZXJ5LmNvbnRhaW5zKCB0aGlzLCB0YXJnZXRzWyBpIF0gKSApIHtcclxuXHRcdFx0XHRcdHJldHVybiB0cnVlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSApO1xyXG5cdH0sXHJcblxyXG5cdGNsb3Nlc3Q6IGZ1bmN0aW9uKCBzZWxlY3RvcnMsIGNvbnRleHQgKSB7XHJcblx0XHR2YXIgY3VyLFxyXG5cdFx0XHRpID0gMCxcclxuXHRcdFx0bCA9IHRoaXMubGVuZ3RoLFxyXG5cdFx0XHRtYXRjaGVkID0gW10sXHJcblx0XHRcdHBvcyA9IHJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3JzICkgfHwgdHlwZW9mIHNlbGVjdG9ycyAhPT0gXCJzdHJpbmdcIiA/XHJcblx0XHRcdFx0alF1ZXJ5KCBzZWxlY3RvcnMsIGNvbnRleHQgfHwgdGhpcy5jb250ZXh0ICkgOlxyXG5cdFx0XHRcdDA7XHJcblxyXG5cdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xyXG5cdFx0XHRmb3IgKCBjdXIgPSB0aGlzWyBpIF07IGN1ciAmJiBjdXIgIT09IGNvbnRleHQ7IGN1ciA9IGN1ci5wYXJlbnROb2RlICkge1xyXG5cclxuXHRcdFx0XHQvLyBBbHdheXMgc2tpcCBkb2N1bWVudCBmcmFnbWVudHNcclxuXHRcdFx0XHRpZiAoIGN1ci5ub2RlVHlwZSA8IDExICYmICggcG9zID9cclxuXHRcdFx0XHRcdHBvcy5pbmRleCggY3VyICkgPiAtMSA6XHJcblxyXG5cdFx0XHRcdFx0Ly8gRG9uJ3QgcGFzcyBub24tZWxlbWVudHMgdG8gU2l6emxlXHJcblx0XHRcdFx0XHRjdXIubm9kZVR5cGUgPT09IDEgJiZcclxuXHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBjdXIsIHNlbGVjdG9ycyApICkgKSB7XHJcblxyXG5cdFx0XHRcdFx0bWF0Y2hlZC5wdXNoKCBjdXIgKTtcclxuXHRcdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggbWF0Y2hlZC5sZW5ndGggPiAxID8galF1ZXJ5LnVuaXF1ZVNvcnQoIG1hdGNoZWQgKSA6IG1hdGNoZWQgKTtcclxuXHR9LFxyXG5cclxuXHQvLyBEZXRlcm1pbmUgdGhlIHBvc2l0aW9uIG9mIGFuIGVsZW1lbnQgd2l0aGluXHJcblx0Ly8gdGhlIG1hdGNoZWQgc2V0IG9mIGVsZW1lbnRzXHJcblx0aW5kZXg6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cclxuXHRcdC8vIE5vIGFyZ3VtZW50LCByZXR1cm4gaW5kZXggaW4gcGFyZW50XHJcblx0XHRpZiAoICFlbGVtICkge1xyXG5cdFx0XHRyZXR1cm4gKCB0aGlzWyAwIF0gJiYgdGhpc1sgMCBdLnBhcmVudE5vZGUgKSA/IHRoaXMuZmlyc3QoKS5wcmV2QWxsKCkubGVuZ3RoIDogLTE7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gaW5kZXggaW4gc2VsZWN0b3JcclxuXHRcdGlmICggdHlwZW9mIGVsZW0gPT09IFwic3RyaW5nXCIgKSB7XHJcblx0XHRcdHJldHVybiBqUXVlcnkuaW5BcnJheSggdGhpc1sgMCBdLCBqUXVlcnkoIGVsZW0gKSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIExvY2F0ZSB0aGUgcG9zaXRpb24gb2YgdGhlIGRlc2lyZWQgZWxlbWVudFxyXG5cdFx0cmV0dXJuIGpRdWVyeS5pbkFycmF5KFxyXG5cclxuXHRcdFx0Ly8gSWYgaXQgcmVjZWl2ZXMgYSBqUXVlcnkgb2JqZWN0LCB0aGUgZmlyc3QgZWxlbWVudCBpcyB1c2VkXHJcblx0XHRcdGVsZW0uanF1ZXJ5ID8gZWxlbVsgMCBdIDogZWxlbSwgdGhpcyApO1xyXG5cdH0sXHJcblxyXG5cdGFkZDogZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xyXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKFxyXG5cdFx0XHRqUXVlcnkudW5pcXVlU29ydChcclxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMuZ2V0KCksIGpRdWVyeSggc2VsZWN0b3IsIGNvbnRleHQgKSApXHJcblx0XHRcdClcclxuXHRcdCk7XHJcblx0fSxcclxuXHJcblx0YWRkQmFjazogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xyXG5cdFx0cmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID9cclxuXHRcdFx0dGhpcy5wcmV2T2JqZWN0IDogdGhpcy5wcmV2T2JqZWN0LmZpbHRlciggc2VsZWN0b3IgKVxyXG5cdFx0KTtcclxuXHR9XHJcbn0gKTtcclxuXHJcbmZ1bmN0aW9uIHNpYmxpbmcoIGN1ciwgZGlyICkge1xyXG5cdGRvIHtcclxuXHRcdGN1ciA9IGN1clsgZGlyIF07XHJcblx0fSB3aGlsZSAoIGN1ciAmJiBjdXIubm9kZVR5cGUgIT09IDEgKTtcclxuXHJcblx0cmV0dXJuIGN1cjtcclxufVxyXG5cclxualF1ZXJ5LmVhY2goIHtcclxuXHRwYXJlbnQ6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcclxuXHRcdHJldHVybiBwYXJlbnQgJiYgcGFyZW50Lm5vZGVUeXBlICE9PSAxMSA/IHBhcmVudCA6IG51bGw7XHJcblx0fSxcclxuXHRwYXJlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicGFyZW50Tm9kZVwiICk7XHJcblx0fSxcclxuXHRwYXJlbnRzVW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcclxuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicGFyZW50Tm9kZVwiLCB1bnRpbCApO1xyXG5cdH0sXHJcblx0bmV4dDogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJuZXh0U2libGluZ1wiICk7XHJcblx0fSxcclxuXHRwcmV2OiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdHJldHVybiBzaWJsaW5nKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XHJcblx0fSxcclxuXHRuZXh0QWxsOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xyXG5cdH0sXHJcblx0cHJldkFsbDogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInByZXZpb3VzU2libGluZ1wiICk7XHJcblx0fSxcclxuXHRuZXh0VW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcclxuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiwgdW50aWwgKTtcclxuXHR9LFxyXG5cdHByZXZVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkge1xyXG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiwgdW50aWwgKTtcclxuXHR9LFxyXG5cdHNpYmxpbmdzOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdHJldHVybiBzaWJsaW5ncyggKCBlbGVtLnBhcmVudE5vZGUgfHwge30gKS5maXJzdENoaWxkLCBlbGVtICk7XHJcblx0fSxcclxuXHRjaGlsZHJlbjogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRyZXR1cm4gc2libGluZ3MoIGVsZW0uZmlyc3RDaGlsZCApO1xyXG5cdH0sXHJcblx0Y29udGVudHM6IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0cmV0dXJuIGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgXCJpZnJhbWVcIiApID9cclxuXHRcdFx0ZWxlbS5jb250ZW50RG9jdW1lbnQgfHwgZWxlbS5jb250ZW50V2luZG93LmRvY3VtZW50IDpcclxuXHRcdFx0alF1ZXJ5Lm1lcmdlKCBbXSwgZWxlbS5jaGlsZE5vZGVzICk7XHJcblx0fVxyXG59LCBmdW5jdGlvbiggbmFtZSwgZm4gKSB7XHJcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggdW50aWwsIHNlbGVjdG9yICkge1xyXG5cdFx0dmFyIHJldCA9IGpRdWVyeS5tYXAoIHRoaXMsIGZuLCB1bnRpbCApO1xyXG5cclxuXHRcdGlmICggbmFtZS5zbGljZSggLTUgKSAhPT0gXCJVbnRpbFwiICkge1xyXG5cdFx0XHRzZWxlY3RvciA9IHVudGlsO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRyZXQgPSBqUXVlcnkuZmlsdGVyKCBzZWxlY3RvciwgcmV0ICk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCB0aGlzLmxlbmd0aCA+IDEgKSB7XHJcblxyXG5cdFx0XHQvLyBSZW1vdmUgZHVwbGljYXRlc1xyXG5cdFx0XHRpZiAoICFndWFyYW50ZWVkVW5pcXVlWyBuYW1lIF0gKSB7XHJcblx0XHRcdFx0cmV0ID0galF1ZXJ5LnVuaXF1ZVNvcnQoIHJldCApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBSZXZlcnNlIG9yZGVyIGZvciBwYXJlbnRzKiBhbmQgcHJldi1kZXJpdmF0aXZlc1xyXG5cdFx0XHRpZiAoIHJwYXJlbnRzcHJldi50ZXN0KCBuYW1lICkgKSB7XHJcblx0XHRcdFx0cmV0ID0gcmV0LnJldmVyc2UoKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggcmV0ICk7XHJcblx0fTtcclxufSApO1xyXG52YXIgcm5vdHdoaXRlID0gKCAvXFxTKy9nICk7XHJcblxyXG5cclxuXHJcbi8vIENvbnZlcnQgU3RyaW5nLWZvcm1hdHRlZCBvcHRpb25zIGludG8gT2JqZWN0LWZvcm1hdHRlZCBvbmVzXHJcbmZ1bmN0aW9uIGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSB7XHJcblx0dmFyIG9iamVjdCA9IHt9O1xyXG5cdGpRdWVyeS5lYWNoKCBvcHRpb25zLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbXSwgZnVuY3Rpb24oIF8sIGZsYWcgKSB7XHJcblx0XHRvYmplY3RbIGZsYWcgXSA9IHRydWU7XHJcblx0fSApO1xyXG5cdHJldHVybiBvYmplY3Q7XHJcbn1cclxuXHJcbi8qXHJcbiAqIENyZWF0ZSBhIGNhbGxiYWNrIGxpc3QgdXNpbmcgdGhlIGZvbGxvd2luZyBwYXJhbWV0ZXJzOlxyXG4gKlxyXG4gKlx0b3B0aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdpbGwgY2hhbmdlIGhvd1xyXG4gKlx0XHRcdHRoZSBjYWxsYmFjayBsaXN0IGJlaGF2ZXMgb3IgYSBtb3JlIHRyYWRpdGlvbmFsIG9wdGlvbiBvYmplY3RcclxuICpcclxuICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qgd2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmVcclxuICogXCJmaXJlZFwiIG11bHRpcGxlIHRpbWVzLlxyXG4gKlxyXG4gKiBQb3NzaWJsZSBvcHRpb25zOlxyXG4gKlxyXG4gKlx0b25jZTpcdFx0XHR3aWxsIGVuc3VyZSB0aGUgY2FsbGJhY2sgbGlzdCBjYW4gb25seSBiZSBmaXJlZCBvbmNlIChsaWtlIGEgRGVmZXJyZWQpXHJcbiAqXHJcbiAqXHRtZW1vcnk6XHRcdFx0d2lsbCBrZWVwIHRyYWNrIG9mIHByZXZpb3VzIHZhbHVlcyBhbmQgd2lsbCBjYWxsIGFueSBjYWxsYmFjayBhZGRlZFxyXG4gKlx0XHRcdFx0XHRhZnRlciB0aGUgbGlzdCBoYXMgYmVlbiBmaXJlZCByaWdodCBhd2F5IHdpdGggdGhlIGxhdGVzdCBcIm1lbW9yaXplZFwiXHJcbiAqXHRcdFx0XHRcdHZhbHVlcyAobGlrZSBhIERlZmVycmVkKVxyXG4gKlxyXG4gKlx0dW5pcXVlOlx0XHRcdHdpbGwgZW5zdXJlIGEgY2FsbGJhY2sgY2FuIG9ubHkgYmUgYWRkZWQgb25jZSAobm8gZHVwbGljYXRlIGluIHRoZSBsaXN0KVxyXG4gKlxyXG4gKlx0c3RvcE9uRmFsc2U6XHRpbnRlcnJ1cHQgY2FsbGluZ3Mgd2hlbiBhIGNhbGxiYWNrIHJldHVybnMgZmFsc2VcclxuICpcclxuICovXHJcbmpRdWVyeS5DYWxsYmFja3MgPSBmdW5jdGlvbiggb3B0aW9ucyApIHtcclxuXHJcblx0Ly8gQ29udmVydCBvcHRpb25zIGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkIGlmIG5lZWRlZFxyXG5cdC8vICh3ZSBjaGVjayBpbiBjYWNoZSBmaXJzdClcclxuXHRvcHRpb25zID0gdHlwZW9mIG9wdGlvbnMgPT09IFwic3RyaW5nXCIgP1xyXG5cdFx0Y3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIDpcclxuXHRcdGpRdWVyeS5leHRlbmQoIHt9LCBvcHRpb25zICk7XHJcblxyXG5cdHZhciAvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCBpcyBjdXJyZW50bHkgZmlyaW5nXHJcblx0XHRmaXJpbmcsXHJcblxyXG5cdFx0Ly8gTGFzdCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHNcclxuXHRcdG1lbW9yeSxcclxuXHJcblx0XHQvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMgYWxyZWFkeSBmaXJlZFxyXG5cdFx0ZmlyZWQsXHJcblxyXG5cdFx0Ly8gRmxhZyB0byBwcmV2ZW50IGZpcmluZ1xyXG5cdFx0bG9ja2VkLFxyXG5cclxuXHRcdC8vIEFjdHVhbCBjYWxsYmFjayBsaXN0XHJcblx0XHRsaXN0ID0gW10sXHJcblxyXG5cdFx0Ly8gUXVldWUgb2YgZXhlY3V0aW9uIGRhdGEgZm9yIHJlcGVhdGFibGUgbGlzdHNcclxuXHRcdHF1ZXVlID0gW10sXHJcblxyXG5cdFx0Ly8gSW5kZXggb2YgY3VycmVudGx5IGZpcmluZyBjYWxsYmFjayAobW9kaWZpZWQgYnkgYWRkL3JlbW92ZSBhcyBuZWVkZWQpXHJcblx0XHRmaXJpbmdJbmRleCA9IC0xLFxyXG5cclxuXHRcdC8vIEZpcmUgY2FsbGJhY2tzXHJcblx0XHRmaXJlID0gZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHQvLyBFbmZvcmNlIHNpbmdsZS1maXJpbmdcclxuXHRcdFx0bG9ja2VkID0gb3B0aW9ucy5vbmNlO1xyXG5cclxuXHRcdFx0Ly8gRXhlY3V0ZSBjYWxsYmFja3MgZm9yIGFsbCBwZW5kaW5nIGV4ZWN1dGlvbnMsXHJcblx0XHRcdC8vIHJlc3BlY3RpbmcgZmlyaW5nSW5kZXggb3ZlcnJpZGVzIGFuZCBydW50aW1lIGNoYW5nZXNcclxuXHRcdFx0ZmlyZWQgPSBmaXJpbmcgPSB0cnVlO1xyXG5cdFx0XHRmb3IgKCA7IHF1ZXVlLmxlbmd0aDsgZmlyaW5nSW5kZXggPSAtMSApIHtcclxuXHRcdFx0XHRtZW1vcnkgPSBxdWV1ZS5zaGlmdCgpO1xyXG5cdFx0XHRcdHdoaWxlICggKytmaXJpbmdJbmRleCA8IGxpc3QubGVuZ3RoICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIFJ1biBjYWxsYmFjayBhbmQgY2hlY2sgZm9yIGVhcmx5IHRlcm1pbmF0aW9uXHJcblx0XHRcdFx0XHRpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHkoIG1lbW9yeVsgMCBdLCBtZW1vcnlbIDEgXSApID09PSBmYWxzZSAmJlxyXG5cdFx0XHRcdFx0XHRvcHRpb25zLnN0b3BPbkZhbHNlICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gSnVtcCB0byBlbmQgYW5kIGZvcmdldCB0aGUgZGF0YSBzbyAuYWRkIGRvZXNuJ3QgcmUtZmlyZVxyXG5cdFx0XHRcdFx0XHRmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3RoO1xyXG5cdFx0XHRcdFx0XHRtZW1vcnkgPSBmYWxzZTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIEZvcmdldCB0aGUgZGF0YSBpZiB3ZSdyZSBkb25lIHdpdGggaXRcclxuXHRcdFx0aWYgKCAhb3B0aW9ucy5tZW1vcnkgKSB7XHJcblx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGZpcmluZyA9IGZhbHNlO1xyXG5cclxuXHRcdFx0Ly8gQ2xlYW4gdXAgaWYgd2UncmUgZG9uZSBmaXJpbmcgZm9yIGdvb2RcclxuXHRcdFx0aWYgKCBsb2NrZWQgKSB7XHJcblxyXG5cdFx0XHRcdC8vIEtlZXAgYW4gZW1wdHkgbGlzdCBpZiB3ZSBoYXZlIGRhdGEgZm9yIGZ1dHVyZSBhZGQgY2FsbHNcclxuXHRcdFx0XHRpZiAoIG1lbW9yeSApIHtcclxuXHRcdFx0XHRcdGxpc3QgPSBbXTtcclxuXHJcblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB0aGlzIG9iamVjdCBpcyBzcGVudFxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRsaXN0ID0gXCJcIjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblxyXG5cdFx0Ly8gQWN0dWFsIENhbGxiYWNrcyBvYmplY3RcclxuXHRcdHNlbGYgPSB7XHJcblxyXG5cdFx0XHQvLyBBZGQgYSBjYWxsYmFjayBvciBhIGNvbGxlY3Rpb24gb2YgY2FsbGJhY2tzIHRvIHRoZSBsaXN0XHJcblx0XHRcdGFkZDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIElmIHdlIGhhdmUgbWVtb3J5IGZyb20gYSBwYXN0IHJ1biwgd2Ugc2hvdWxkIGZpcmUgYWZ0ZXIgYWRkaW5nXHJcblx0XHRcdFx0XHRpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkge1xyXG5cdFx0XHRcdFx0XHRmaXJpbmdJbmRleCA9IGxpc3QubGVuZ3RoIC0gMTtcclxuXHRcdFx0XHRcdFx0cXVldWUucHVzaCggbWVtb3J5ICk7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0KCBmdW5jdGlvbiBhZGQoIGFyZ3MgKSB7XHJcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmdzLCBmdW5jdGlvbiggXywgYXJnICkge1xyXG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGFyZyApICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCAhb3B0aW9ucy51bmlxdWUgfHwgIXNlbGYuaGFzKCBhcmcgKSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0bGlzdC5wdXNoKCBhcmcgKTtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBhcmcgJiYgYXJnLmxlbmd0aCAmJiBqUXVlcnkudHlwZSggYXJnICkgIT09IFwic3RyaW5nXCIgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gSW5zcGVjdCByZWN1cnNpdmVseVxyXG5cdFx0XHRcdFx0XHRcdFx0YWRkKCBhcmcgKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH0gKTtcclxuXHRcdFx0XHRcdH0gKSggYXJndW1lbnRzICk7XHJcblxyXG5cdFx0XHRcdFx0aWYgKCBtZW1vcnkgJiYgIWZpcmluZyApIHtcclxuXHRcdFx0XHRcdFx0ZmlyZSgpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdFx0fSxcclxuXHJcblx0XHRcdC8vIFJlbW92ZSBhIGNhbGxiYWNrIGZyb20gdGhlIGxpc3RcclxuXHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRqUXVlcnkuZWFjaCggYXJndW1lbnRzLCBmdW5jdGlvbiggXywgYXJnICkge1xyXG5cdFx0XHRcdFx0dmFyIGluZGV4O1xyXG5cdFx0XHRcdFx0d2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5kZXggKSApID4gLTEgKSB7XHJcblx0XHRcdFx0XHRcdGxpc3Quc3BsaWNlKCBpbmRleCwgMSApO1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGZpcmluZyBpbmRleGVzXHJcblx0XHRcdFx0XHRcdGlmICggaW5kZXggPD0gZmlyaW5nSW5kZXggKSB7XHJcblx0XHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXgtLTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0gKTtcclxuXHRcdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdFx0fSxcclxuXHJcblx0XHRcdC8vIENoZWNrIGlmIGEgZ2l2ZW4gY2FsbGJhY2sgaXMgaW4gdGhlIGxpc3QuXHJcblx0XHRcdC8vIElmIG5vIGFyZ3VtZW50IGlzIGdpdmVuLCByZXR1cm4gd2hldGhlciBvciBub3QgbGlzdCBoYXMgY2FsbGJhY2tzIGF0dGFjaGVkLlxyXG5cdFx0XHRoYXM6IGZ1bmN0aW9uKCBmbiApIHtcclxuXHRcdFx0XHRyZXR1cm4gZm4gP1xyXG5cdFx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIGZuLCBsaXN0ICkgPiAtMSA6XHJcblx0XHRcdFx0XHRsaXN0Lmxlbmd0aCA+IDA7XHJcblx0XHRcdH0sXHJcblxyXG5cdFx0XHQvLyBSZW1vdmUgYWxsIGNhbGxiYWNrcyBmcm9tIHRoZSBsaXN0XHJcblx0XHRcdGVtcHR5OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRpZiAoIGxpc3QgKSB7XHJcblx0XHRcdFx0XHRsaXN0ID0gW107XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHR9LFxyXG5cclxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZSBhbmQgLmFkZFxyXG5cdFx0XHQvLyBBYm9ydCBhbnkgY3VycmVudC9wZW5kaW5nIGV4ZWN1dGlvbnNcclxuXHRcdFx0Ly8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzXHJcblx0XHRcdGRpc2FibGU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGxvY2tlZCA9IHF1ZXVlID0gW107XHJcblx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XHJcblx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHRcdH0sXHJcblx0XHRcdGRpc2FibGVkOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRyZXR1cm4gIWxpc3Q7XHJcblx0XHRcdH0sXHJcblxyXG5cdFx0XHQvLyBEaXNhYmxlIC5maXJlXHJcblx0XHRcdC8vIEFsc28gZGlzYWJsZSAuYWRkIHVubGVzcyB3ZSBoYXZlIG1lbW9yeSAoc2luY2UgaXQgd291bGQgaGF2ZSBubyBlZmZlY3QpXHJcblx0XHRcdC8vIEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnNcclxuXHRcdFx0bG9jazogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0bG9ja2VkID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAoICFtZW1vcnkgKSB7XHJcblx0XHRcdFx0XHRzZWxmLmRpc2FibGUoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHRcdH0sXHJcblx0XHRcdGxvY2tlZDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0cmV0dXJuICEhbG9ja2VkO1xyXG5cdFx0XHR9LFxyXG5cclxuXHRcdFx0Ly8gQ2FsbCBhbGwgY2FsbGJhY2tzIHdpdGggdGhlIGdpdmVuIGNvbnRleHQgYW5kIGFyZ3VtZW50c1xyXG5cdFx0XHRmaXJlV2l0aDogZnVuY3Rpb24oIGNvbnRleHQsIGFyZ3MgKSB7XHJcblx0XHRcdFx0aWYgKCAhbG9ja2VkICkge1xyXG5cdFx0XHRcdFx0YXJncyA9IGFyZ3MgfHwgW107XHJcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xyXG5cdFx0XHRcdFx0cXVldWUucHVzaCggYXJncyApO1xyXG5cdFx0XHRcdFx0aWYgKCAhZmlyaW5nICkge1xyXG5cdFx0XHRcdFx0XHRmaXJlKCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHR9LFxyXG5cclxuXHRcdFx0Ly8gQ2FsbCBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHNcclxuXHRcdFx0ZmlyZTogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0c2VsZi5maXJlV2l0aCggdGhpcywgYXJndW1lbnRzICk7XHJcblx0XHRcdFx0cmV0dXJuIHRoaXM7XHJcblx0XHRcdH0sXHJcblxyXG5cdFx0XHQvLyBUbyBrbm93IGlmIHRoZSBjYWxsYmFja3MgaGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkIGF0IGxlYXN0IG9uY2VcclxuXHRcdFx0ZmlyZWQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHJldHVybiAhIWZpcmVkO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHRyZXR1cm4gc2VsZjtcclxufTtcclxuXHJcblxyXG5qUXVlcnkuZXh0ZW5kKCB7XHJcblxyXG5cdERlZmVycmVkOiBmdW5jdGlvbiggZnVuYyApIHtcclxuXHRcdHZhciB0dXBsZXMgPSBbXHJcblxyXG5cdFx0XHRcdC8vIGFjdGlvbiwgYWRkIGxpc3RlbmVyLCBsaXN0ZW5lciBsaXN0LCBmaW5hbCBzdGF0ZVxyXG5cdFx0XHRcdFsgXCJyZXNvbHZlXCIsIFwiZG9uZVwiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSwgXCJyZXNvbHZlZFwiIF0sXHJcblx0XHRcdFx0WyBcInJlamVjdFwiLCBcImZhaWxcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIFwicmVqZWN0ZWRcIiBdLFxyXG5cdFx0XHRcdFsgXCJub3RpZnlcIiwgXCJwcm9ncmVzc1wiLCBqUXVlcnkuQ2FsbGJhY2tzKCBcIm1lbW9yeVwiICkgXVxyXG5cdFx0XHRdLFxyXG5cdFx0XHRzdGF0ZSA9IFwicGVuZGluZ1wiLFxyXG5cdFx0XHRwcm9taXNlID0ge1xyXG5cdFx0XHRcdHN0YXRlOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdHJldHVybiBzdGF0ZTtcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdGFsd2F5czogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5kb25lKCBhcmd1bWVudHMgKS5mYWlsKCBhcmd1bWVudHMgKTtcclxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0dGhlbjogZnVuY3Rpb24oIC8qIGZuRG9uZSwgZm5GYWlsLCBmblByb2dyZXNzICovICkge1xyXG5cdFx0XHRcdFx0dmFyIGZucyA9IGFyZ3VtZW50cztcclxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcclxuXHRcdFx0XHRcdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xyXG5cdFx0XHRcdFx0XHRcdHZhciBmbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBmbnNbIGkgXSApICYmIGZuc1sgaSBdO1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZFsgZG9uZSB8IGZhaWwgfCBwcm9ncmVzcyBdIGZvciBmb3J3YXJkaW5nIGFjdGlvbnMgdG8gbmV3RGVmZXJcclxuXHRcdFx0XHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDEgXSBdKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCA9IGZuICYmIGZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcclxuXHRcdFx0XHRcdFx0XHRcdGlmICggcmV0dXJuZWQgJiYgalF1ZXJ5LmlzRnVuY3Rpb24oIHJldHVybmVkLnByb21pc2UgKSApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQucHJvbWlzZSgpXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0LnByb2dyZXNzKCBuZXdEZWZlci5ub3RpZnkgKVxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5kb25lKCBuZXdEZWZlci5yZXNvbHZlIClcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHQuZmFpbCggbmV3RGVmZXIucmVqZWN0ICk7XHJcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlclsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhpcyA9PT0gcHJvbWlzZSA/IG5ld0RlZmVyLnByb21pc2UoKSA6IHRoaXMsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0Zm4gPyBbIHJldHVybmVkIF0gOiBhcmd1bWVudHNcclxuXHRcdFx0XHRcdFx0XHRcdFx0KTtcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9ICk7XHJcblx0XHRcdFx0XHRcdH0gKTtcclxuXHRcdFx0XHRcdFx0Zm5zID0gbnVsbDtcclxuXHRcdFx0XHRcdH0gKS5wcm9taXNlKCk7XHJcblx0XHRcdFx0fSxcclxuXHJcblx0XHRcdFx0Ly8gR2V0IGEgcHJvbWlzZSBmb3IgdGhpcyBkZWZlcnJlZFxyXG5cdFx0XHRcdC8vIElmIG9iaiBpcyBwcm92aWRlZCwgdGhlIHByb21pc2UgYXNwZWN0IGlzIGFkZGVkIHRvIHRoZSBvYmplY3RcclxuXHRcdFx0XHRwcm9taXNlOiBmdW5jdGlvbiggb2JqICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIG9iaiAhPSBudWxsID8galF1ZXJ5LmV4dGVuZCggb2JqLCBwcm9taXNlICkgOiBwcm9taXNlO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSxcclxuXHRcdFx0ZGVmZXJyZWQgPSB7fTtcclxuXHJcblx0XHQvLyBLZWVwIHBpcGUgZm9yIGJhY2stY29tcGF0XHJcblx0XHRwcm9taXNlLnBpcGUgPSBwcm9taXNlLnRoZW47XHJcblxyXG5cdFx0Ly8gQWRkIGxpc3Qtc3BlY2lmaWMgbWV0aG9kc1xyXG5cdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xyXG5cdFx0XHR2YXIgbGlzdCA9IHR1cGxlWyAyIF0sXHJcblx0XHRcdFx0c3RhdGVTdHJpbmcgPSB0dXBsZVsgMyBdO1xyXG5cclxuXHRcdFx0Ly8gcHJvbWlzZVsgZG9uZSB8IGZhaWwgfCBwcm9ncmVzcyBdID0gbGlzdC5hZGRcclxuXHRcdFx0cHJvbWlzZVsgdHVwbGVbIDEgXSBdID0gbGlzdC5hZGQ7XHJcblxyXG5cdFx0XHQvLyBIYW5kbGUgc3RhdGVcclxuXHRcdFx0aWYgKCBzdGF0ZVN0cmluZyApIHtcclxuXHRcdFx0XHRsaXN0LmFkZCggZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHRcdFx0Ly8gc3RhdGUgPSBbIHJlc29sdmVkIHwgcmVqZWN0ZWQgXVxyXG5cdFx0XHRcdFx0c3RhdGUgPSBzdGF0ZVN0cmluZztcclxuXHJcblx0XHRcdFx0Ly8gWyByZWplY3RfbGlzdCB8IHJlc29sdmVfbGlzdCBdLmRpc2FibGU7IHByb2dyZXNzX2xpc3QubG9ja1xyXG5cdFx0XHRcdH0sIHR1cGxlc1sgaSBeIDEgXVsgMiBdLmRpc2FibGUsIHR1cGxlc1sgMiBdWyAyIF0ubG9jayApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBkZWZlcnJlZFsgcmVzb2x2ZSB8IHJlamVjdCB8IG5vdGlmeSBdXHJcblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdIF0gPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oIHRoaXMgPT09IGRlZmVycmVkID8gcHJvbWlzZSA6IHRoaXMsIGFyZ3VtZW50cyApO1xyXG5cdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHR9O1xyXG5cdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0gPSBsaXN0LmZpcmVXaXRoO1xyXG5cdFx0fSApO1xyXG5cclxuXHRcdC8vIE1ha2UgdGhlIGRlZmVycmVkIGEgcHJvbWlzZVxyXG5cdFx0cHJvbWlzZS5wcm9taXNlKCBkZWZlcnJlZCApO1xyXG5cclxuXHRcdC8vIENhbGwgZ2l2ZW4gZnVuYyBpZiBhbnlcclxuXHRcdGlmICggZnVuYyApIHtcclxuXHRcdFx0ZnVuYy5jYWxsKCBkZWZlcnJlZCwgZGVmZXJyZWQgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBBbGwgZG9uZSFcclxuXHRcdHJldHVybiBkZWZlcnJlZDtcclxuXHR9LFxyXG5cclxuXHQvLyBEZWZlcnJlZCBoZWxwZXJcclxuXHR3aGVuOiBmdW5jdGlvbiggc3Vib3JkaW5hdGUgLyogLCAuLi4sIHN1Ym9yZGluYXRlTiAqLyApIHtcclxuXHRcdHZhciBpID0gMCxcclxuXHRcdFx0cmVzb2x2ZVZhbHVlcyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLFxyXG5cdFx0XHRsZW5ndGggPSByZXNvbHZlVmFsdWVzLmxlbmd0aCxcclxuXHJcblx0XHRcdC8vIHRoZSBjb3VudCBvZiB1bmNvbXBsZXRlZCBzdWJvcmRpbmF0ZXNcclxuXHRcdFx0cmVtYWluaW5nID0gbGVuZ3RoICE9PSAxIHx8XHJcblx0XHRcdFx0KCBzdWJvcmRpbmF0ZSAmJiBqUXVlcnkuaXNGdW5jdGlvbiggc3Vib3JkaW5hdGUucHJvbWlzZSApICkgPyBsZW5ndGggOiAwLFxyXG5cclxuXHRcdFx0Ly8gdGhlIG1hc3RlciBEZWZlcnJlZC5cclxuXHRcdFx0Ly8gSWYgcmVzb2x2ZVZhbHVlcyBjb25zaXN0IG9mIG9ubHkgYSBzaW5nbGUgRGVmZXJyZWQsIGp1c3QgdXNlIHRoYXQuXHJcblx0XHRcdGRlZmVycmVkID0gcmVtYWluaW5nID09PSAxID8gc3Vib3JkaW5hdGUgOiBqUXVlcnkuRGVmZXJyZWQoKSxcclxuXHJcblx0XHRcdC8vIFVwZGF0ZSBmdW5jdGlvbiBmb3IgYm90aCByZXNvbHZlIGFuZCBwcm9ncmVzcyB2YWx1ZXNcclxuXHRcdFx0dXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpLCBjb250ZXh0cywgdmFsdWVzICkge1xyXG5cdFx0XHRcdHJldHVybiBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHRcdFx0XHRjb250ZXh0c1sgaSBdID0gdGhpcztcclxuXHRcdFx0XHRcdHZhbHVlc1sgaSBdID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBzbGljZS5jYWxsKCBhcmd1bWVudHMgKSA6IHZhbHVlO1xyXG5cdFx0XHRcdFx0aWYgKCB2YWx1ZXMgPT09IHByb2dyZXNzVmFsdWVzICkge1xyXG5cdFx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBjb250ZXh0cywgdmFsdWVzICk7XHJcblxyXG5cdFx0XHRcdFx0fSBlbHNlIGlmICggISggLS1yZW1haW5pbmcgKSApIHtcclxuXHRcdFx0XHRcdFx0ZGVmZXJyZWQucmVzb2x2ZVdpdGgoIGNvbnRleHRzLCB2YWx1ZXMgKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9O1xyXG5cdFx0XHR9LFxyXG5cclxuXHRcdFx0cHJvZ3Jlc3NWYWx1ZXMsIHByb2dyZXNzQ29udGV4dHMsIHJlc29sdmVDb250ZXh0cztcclxuXHJcblx0XHQvLyBhZGQgbGlzdGVuZXJzIHRvIERlZmVycmVkIHN1Ym9yZGluYXRlczsgdHJlYXQgb3RoZXJzIGFzIHJlc29sdmVkXHJcblx0XHRpZiAoIGxlbmd0aCA+IDEgKSB7XHJcblx0XHRcdHByb2dyZXNzVmFsdWVzID0gbmV3IEFycmF5KCBsZW5ndGggKTtcclxuXHRcdFx0cHJvZ3Jlc3NDb250ZXh0cyA9IG5ldyBBcnJheSggbGVuZ3RoICk7XHJcblx0XHRcdHJlc29sdmVDb250ZXh0cyA9IG5ldyBBcnJheSggbGVuZ3RoICk7XHJcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xyXG5cdFx0XHRcdGlmICggcmVzb2x2ZVZhbHVlc1sgaSBdICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCByZXNvbHZlVmFsdWVzWyBpIF0ucHJvbWlzZSApICkge1xyXG5cdFx0XHRcdFx0cmVzb2x2ZVZhbHVlc1sgaSBdLnByb21pc2UoKVxyXG5cdFx0XHRcdFx0XHQucHJvZ3Jlc3MoIHVwZGF0ZUZ1bmMoIGksIHByb2dyZXNzQ29udGV4dHMsIHByb2dyZXNzVmFsdWVzICkgKVxyXG5cdFx0XHRcdFx0XHQuZG9uZSggdXBkYXRlRnVuYyggaSwgcmVzb2x2ZUNvbnRleHRzLCByZXNvbHZlVmFsdWVzICkgKVxyXG5cdFx0XHRcdFx0XHQuZmFpbCggZGVmZXJyZWQucmVqZWN0ICk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdC0tcmVtYWluaW5nO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdC8vIGlmIHdlJ3JlIG5vdCB3YWl0aW5nIG9uIGFueXRoaW5nLCByZXNvbHZlIHRoZSBtYXN0ZXJcclxuXHRcdGlmICggIXJlbWFpbmluZyApIHtcclxuXHRcdFx0ZGVmZXJyZWQucmVzb2x2ZVdpdGgoIHJlc29sdmVDb250ZXh0cywgcmVzb2x2ZVZhbHVlcyApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBkZWZlcnJlZC5wcm9taXNlKCk7XHJcblx0fVxyXG59ICk7XHJcblxyXG5cclxuLy8gVGhlIGRlZmVycmVkIHVzZWQgb24gRE9NIHJlYWR5XHJcbnZhciByZWFkeUxpc3Q7XHJcblxyXG5qUXVlcnkuZm4ucmVhZHkgPSBmdW5jdGlvbiggZm4gKSB7XHJcblxyXG5cdC8vIEFkZCB0aGUgY2FsbGJhY2tcclxuXHRqUXVlcnkucmVhZHkucHJvbWlzZSgpLmRvbmUoIGZuICk7XHJcblxyXG5cdHJldHVybiB0aGlzO1xyXG59O1xyXG5cclxualF1ZXJ5LmV4dGVuZCgge1xyXG5cclxuXHQvLyBJcyB0aGUgRE9NIHJlYWR5IHRvIGJlIHVzZWQ/IFNldCB0byB0cnVlIG9uY2UgaXQgb2NjdXJzLlxyXG5cdGlzUmVhZHk6IGZhbHNlLFxyXG5cclxuXHQvLyBBIGNvdW50ZXIgdG8gdHJhY2sgaG93IG1hbnkgaXRlbXMgdG8gd2FpdCBmb3IgYmVmb3JlXHJcblx0Ly8gdGhlIHJlYWR5IGV2ZW50IGZpcmVzLiBTZWUgIzY3ODFcclxuXHRyZWFkeVdhaXQ6IDEsXHJcblxyXG5cdC8vIEhvbGQgKG9yIHJlbGVhc2UpIHRoZSByZWFkeSBldmVudFxyXG5cdGhvbGRSZWFkeTogZnVuY3Rpb24oIGhvbGQgKSB7XHJcblx0XHRpZiAoIGhvbGQgKSB7XHJcblx0XHRcdGpRdWVyeS5yZWFkeVdhaXQrKztcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGpRdWVyeS5yZWFkeSggdHJ1ZSApO1xyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdC8vIEhhbmRsZSB3aGVuIHRoZSBET00gaXMgcmVhZHlcclxuXHRyZWFkeTogZnVuY3Rpb24oIHdhaXQgKSB7XHJcblxyXG5cdFx0Ly8gQWJvcnQgaWYgdGhlcmUgYXJlIHBlbmRpbmcgaG9sZHMgb3Igd2UncmUgYWxyZWFkeSByZWFkeVxyXG5cdFx0aWYgKCB3YWl0ID09PSB0cnVlID8gLS1qUXVlcnkucmVhZHlXYWl0IDogalF1ZXJ5LmlzUmVhZHkgKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBSZW1lbWJlciB0aGF0IHRoZSBET00gaXMgcmVhZHlcclxuXHRcdGpRdWVyeS5pc1JlYWR5ID0gdHJ1ZTtcclxuXHJcblx0XHQvLyBJZiBhIG5vcm1hbCBET00gUmVhZHkgZXZlbnQgZmlyZWQsIGRlY3JlbWVudCwgYW5kIHdhaXQgaWYgbmVlZCBiZVxyXG5cdFx0aWYgKCB3YWl0ICE9PSB0cnVlICYmIC0talF1ZXJ5LnJlYWR5V2FpdCA+IDAgKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBJZiB0aGVyZSBhcmUgZnVuY3Rpb25zIGJvdW5kLCB0byBleGVjdXRlXHJcblx0XHRyZWFkeUxpc3QucmVzb2x2ZVdpdGgoIGRvY3VtZW50LCBbIGpRdWVyeSBdICk7XHJcblxyXG5cdFx0Ly8gVHJpZ2dlciBhbnkgYm91bmQgcmVhZHkgZXZlbnRzXHJcblx0XHRpZiAoIGpRdWVyeS5mbi50cmlnZ2VySGFuZGxlciApIHtcclxuXHRcdFx0alF1ZXJ5KCBkb2N1bWVudCApLnRyaWdnZXJIYW5kbGVyKCBcInJlYWR5XCIgKTtcclxuXHRcdFx0alF1ZXJ5KCBkb2N1bWVudCApLm9mZiggXCJyZWFkeVwiICk7XHJcblx0XHR9XHJcblx0fVxyXG59ICk7XHJcblxyXG4vKipcclxuICogQ2xlYW4tdXAgbWV0aG9kIGZvciBkb20gcmVhZHkgZXZlbnRzXHJcbiAqL1xyXG5mdW5jdGlvbiBkZXRhY2goKSB7XHJcblx0aWYgKCBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyICkge1xyXG5cdFx0ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggXCJET01Db250ZW50TG9hZGVkXCIsIGNvbXBsZXRlZCApO1xyXG5cdFx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcclxuXHJcblx0fSBlbHNlIHtcclxuXHRcdGRvY3VtZW50LmRldGFjaEV2ZW50KCBcIm9ucmVhZHlzdGF0ZWNoYW5nZVwiLCBjb21wbGV0ZWQgKTtcclxuXHRcdHdpbmRvdy5kZXRhY2hFdmVudCggXCJvbmxvYWRcIiwgY29tcGxldGVkICk7XHJcblx0fVxyXG59XHJcblxyXG4vKipcclxuICogVGhlIHJlYWR5IGV2ZW50IGhhbmRsZXIgYW5kIHNlbGYgY2xlYW51cCBtZXRob2RcclxuICovXHJcbmZ1bmN0aW9uIGNvbXBsZXRlZCgpIHtcclxuXHJcblx0Ly8gcmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiIGlzIGdvb2QgZW5vdWdoIGZvciB1cyB0byBjYWxsIHRoZSBkb20gcmVhZHkgaW4gb2xkSUVcclxuXHRpZiAoIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIgfHxcclxuXHRcdHdpbmRvdy5ldmVudC50eXBlID09PSBcImxvYWRcIiB8fFxyXG5cdFx0ZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gXCJjb21wbGV0ZVwiICkge1xyXG5cclxuXHRcdGRldGFjaCgpO1xyXG5cdFx0alF1ZXJ5LnJlYWR5KCk7XHJcblx0fVxyXG59XHJcblxyXG5qUXVlcnkucmVhZHkucHJvbWlzZSA9IGZ1bmN0aW9uKCBvYmogKSB7XHJcblx0aWYgKCAhcmVhZHlMaXN0ICkge1xyXG5cclxuXHRcdHJlYWR5TGlzdCA9IGpRdWVyeS5EZWZlcnJlZCgpO1xyXG5cclxuXHRcdC8vIENhdGNoIGNhc2VzIHdoZXJlICQoZG9jdW1lbnQpLnJlYWR5KCkgaXMgY2FsbGVkXHJcblx0XHQvLyBhZnRlciB0aGUgYnJvd3NlciBldmVudCBoYXMgYWxyZWFkeSBvY2N1cnJlZC5cclxuXHRcdC8vIFN1cHBvcnQ6IElFNi0xMFxyXG5cdFx0Ly8gT2xkZXIgSUUgc29tZXRpbWVzIHNpZ25hbHMgXCJpbnRlcmFjdGl2ZVwiIHRvbyBzb29uXHJcblx0XHRpZiAoIGRvY3VtZW50LnJlYWR5U3RhdGUgPT09IFwiY29tcGxldGVcIiB8fFxyXG5cdFx0XHQoIGRvY3VtZW50LnJlYWR5U3RhdGUgIT09IFwibG9hZGluZ1wiICYmICFkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuZG9TY3JvbGwgKSApIHtcclxuXHJcblx0XHRcdC8vIEhhbmRsZSBpdCBhc3luY2hyb25vdXNseSB0byBhbGxvdyBzY3JpcHRzIHRoZSBvcHBvcnR1bml0eSB0byBkZWxheSByZWFkeVxyXG5cdFx0XHR3aW5kb3cuc2V0VGltZW91dCggalF1ZXJ5LnJlYWR5ICk7XHJcblxyXG5cdFx0Ly8gU3RhbmRhcmRzLWJhc2VkIGJyb3dzZXJzIHN1cHBvcnQgRE9NQ29udGVudExvYWRlZFxyXG5cdFx0fSBlbHNlIGlmICggZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciApIHtcclxuXHJcblx0XHRcdC8vIFVzZSB0aGUgaGFuZHkgZXZlbnQgY2FsbGJhY2tcclxuXHRcdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lciggXCJET01Db250ZW50TG9hZGVkXCIsIGNvbXBsZXRlZCApO1xyXG5cclxuXHRcdFx0Ly8gQSBmYWxsYmFjayB0byB3aW5kb3cub25sb2FkLCB0aGF0IHdpbGwgYWx3YXlzIHdvcmtcclxuXHRcdFx0d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcclxuXHJcblx0XHQvLyBJZiBJRSBldmVudCBtb2RlbCBpcyB1c2VkXHJcblx0XHR9IGVsc2Uge1xyXG5cclxuXHRcdFx0Ly8gRW5zdXJlIGZpcmluZyBiZWZvcmUgb25sb2FkLCBtYXliZSBsYXRlIGJ1dCBzYWZlIGFsc28gZm9yIGlmcmFtZXNcclxuXHRcdFx0ZG9jdW1lbnQuYXR0YWNoRXZlbnQoIFwib25yZWFkeXN0YXRlY2hhbmdlXCIsIGNvbXBsZXRlZCApO1xyXG5cclxuXHRcdFx0Ly8gQSBmYWxsYmFjayB0byB3aW5kb3cub25sb2FkLCB0aGF0IHdpbGwgYWx3YXlzIHdvcmtcclxuXHRcdFx0d2luZG93LmF0dGFjaEV2ZW50KCBcIm9ubG9hZFwiLCBjb21wbGV0ZWQgKTtcclxuXHJcblx0XHRcdC8vIElmIElFIGFuZCBub3QgYSBmcmFtZVxyXG5cdFx0XHQvLyBjb250aW51YWxseSBjaGVjayB0byBzZWUgaWYgdGhlIGRvY3VtZW50IGlzIHJlYWR5XHJcblx0XHRcdHZhciB0b3AgPSBmYWxzZTtcclxuXHJcblx0XHRcdHRyeSB7XHJcblx0XHRcdFx0dG9wID0gd2luZG93LmZyYW1lRWxlbWVudCA9PSBudWxsICYmIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcclxuXHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxyXG5cclxuXHRcdFx0aWYgKCB0b3AgJiYgdG9wLmRvU2Nyb2xsICkge1xyXG5cdFx0XHRcdCggZnVuY3Rpb24gZG9TY3JvbGxDaGVjaygpIHtcclxuXHRcdFx0XHRcdGlmICggIWpRdWVyeS5pc1JlYWR5ICkge1xyXG5cclxuXHRcdFx0XHRcdFx0dHJ5IHtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gVXNlIHRoZSB0cmljayBieSBEaWVnbyBQZXJpbmlcclxuXHRcdFx0XHRcdFx0XHQvLyBodHRwOi8vamF2YXNjcmlwdC5ud2JveC5jb20vSUVDb250ZW50TG9hZGVkL1xyXG5cdFx0XHRcdFx0XHRcdHRvcC5kb1Njcm9sbCggXCJsZWZ0XCIgKTtcclxuXHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHdpbmRvdy5zZXRUaW1lb3V0KCBkb1Njcm9sbENoZWNrLCA1MCApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBkZXRhY2ggYWxsIGRvbSByZWFkeSBldmVudHNcclxuXHRcdFx0XHRcdFx0ZGV0YWNoKCk7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBhbmQgZXhlY3V0ZSBhbnkgd2FpdGluZyBmdW5jdGlvbnNcclxuXHRcdFx0XHRcdFx0alF1ZXJ5LnJlYWR5KCk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSApKCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblx0cmV0dXJuIHJlYWR5TGlzdC5wcm9taXNlKCBvYmogKTtcclxufTtcclxuXHJcbi8vIEtpY2sgb2ZmIHRoZSBET00gcmVhZHkgY2hlY2sgZXZlbiBpZiB0aGUgdXNlciBkb2VzIG5vdFxyXG5qUXVlcnkucmVhZHkucHJvbWlzZSgpO1xyXG5cclxuXHJcblxyXG5cclxuLy8gU3VwcG9ydDogSUU8OVxyXG4vLyBJdGVyYXRpb24gb3ZlciBvYmplY3QncyBpbmhlcml0ZWQgcHJvcGVydGllcyBiZWZvcmUgaXRzIG93blxyXG52YXIgaTtcclxuZm9yICggaSBpbiBqUXVlcnkoIHN1cHBvcnQgKSApIHtcclxuXHRicmVhaztcclxufVxyXG5zdXBwb3J0Lm93bkZpcnN0ID0gaSA9PT0gXCIwXCI7XHJcblxyXG4vLyBOb3RlOiBtb3N0IHN1cHBvcnQgdGVzdHMgYXJlIGRlZmluZWQgaW4gdGhlaXIgcmVzcGVjdGl2ZSBtb2R1bGVzLlxyXG4vLyBmYWxzZSB1bnRpbCB0aGUgdGVzdCBpcyBydW5cclxuc3VwcG9ydC5pbmxpbmVCbG9ja05lZWRzTGF5b3V0ID0gZmFsc2U7XHJcblxyXG4vLyBFeGVjdXRlIEFTQVAgaW4gY2FzZSB3ZSBuZWVkIHRvIHNldCBib2R5LnN0eWxlLnpvb21cclxualF1ZXJ5KCBmdW5jdGlvbigpIHtcclxuXHJcblx0Ly8gTWluaWZpZWQ6IHZhciBhLGIsYyxkXHJcblx0dmFyIHZhbCwgZGl2LCBib2R5LCBjb250YWluZXI7XHJcblxyXG5cdGJvZHkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJib2R5XCIgKVsgMCBdO1xyXG5cdGlmICggIWJvZHkgfHwgIWJvZHkuc3R5bGUgKSB7XHJcblxyXG5cdFx0Ly8gUmV0dXJuIGZvciBmcmFtZXNldCBkb2NzIHRoYXQgZG9uJ3QgaGF2ZSBhIGJvZHlcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdC8vIFNldHVwXHJcblx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApO1xyXG5cdGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKTtcclxuXHRjb250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFwicG9zaXRpb246YWJzb2x1dGU7Ym9yZGVyOjA7d2lkdGg6MDtoZWlnaHQ6MDt0b3A6MDtsZWZ0Oi05OTk5cHhcIjtcclxuXHRib2R5LmFwcGVuZENoaWxkKCBjb250YWluZXIgKS5hcHBlbmRDaGlsZCggZGl2ICk7XHJcblxyXG5cdGlmICggdHlwZW9mIGRpdi5zdHlsZS56b29tICE9PSBcInVuZGVmaW5lZFwiICkge1xyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IElFPDhcclxuXHRcdC8vIENoZWNrIGlmIG5hdGl2ZWx5IGJsb2NrLWxldmVsIGVsZW1lbnRzIGFjdCBsaWtlIGlubGluZS1ibG9ja1xyXG5cdFx0Ly8gZWxlbWVudHMgd2hlbiBzZXR0aW5nIHRoZWlyIGRpc3BsYXkgdG8gJ2lubGluZScgYW5kIGdpdmluZ1xyXG5cdFx0Ly8gdGhlbSBsYXlvdXRcclxuXHRcdGRpdi5zdHlsZS5jc3NUZXh0ID0gXCJkaXNwbGF5OmlubGluZTttYXJnaW46MDtib3JkZXI6MDtwYWRkaW5nOjFweDt3aWR0aDoxcHg7em9vbToxXCI7XHJcblxyXG5cdFx0c3VwcG9ydC5pbmxpbmVCbG9ja05lZWRzTGF5b3V0ID0gdmFsID0gZGl2Lm9mZnNldFdpZHRoID09PSAzO1xyXG5cdFx0aWYgKCB2YWwgKSB7XHJcblxyXG5cdFx0XHQvLyBQcmV2ZW50IElFIDYgZnJvbSBhZmZlY3RpbmcgbGF5b3V0IGZvciBwb3NpdGlvbmVkIGVsZW1lbnRzICMxMTA0OFxyXG5cdFx0XHQvLyBQcmV2ZW50IElFIGZyb20gc2hyaW5raW5nIHRoZSBib2R5IGluIElFIDcgbW9kZSAjMTI4NjlcclxuXHRcdFx0Ly8gU3VwcG9ydDogSUU8OFxyXG5cdFx0XHRib2R5LnN0eWxlLnpvb20gPSAxO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ym9keS5yZW1vdmVDaGlsZCggY29udGFpbmVyICk7XHJcbn0gKTtcclxuXHJcblxyXG4oIGZ1bmN0aW9uKCkge1xyXG5cdHZhciBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IElFPDlcclxuXHRzdXBwb3J0LmRlbGV0ZUV4cGFuZG8gPSB0cnVlO1xyXG5cdHRyeSB7XHJcblx0XHRkZWxldGUgZGl2LnRlc3Q7XHJcblx0fSBjYXRjaCAoIGUgKSB7XHJcblx0XHRzdXBwb3J0LmRlbGV0ZUV4cGFuZG8gPSBmYWxzZTtcclxuXHR9XHJcblxyXG5cdC8vIE51bGwgZWxlbWVudHMgdG8gYXZvaWQgbGVha3MgaW4gSUUuXHJcblx0ZGl2ID0gbnVsbDtcclxufSApKCk7XHJcbnZhciBhY2NlcHREYXRhID0gZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0dmFyIG5vRGF0YSA9IGpRdWVyeS5ub0RhdGFbICggZWxlbS5ub2RlTmFtZSArIFwiIFwiICkudG9Mb3dlckNhc2UoKSBdLFxyXG5cdFx0bm9kZVR5cGUgPSArZWxlbS5ub2RlVHlwZSB8fCAxO1xyXG5cclxuXHQvLyBEbyBub3Qgc2V0IGRhdGEgb24gbm9uLWVsZW1lbnQgRE9NIG5vZGVzIGJlY2F1c2UgaXQgd2lsbCBub3QgYmUgY2xlYXJlZCAoIzgzMzUpLlxyXG5cdHJldHVybiBub2RlVHlwZSAhPT0gMSAmJiBub2RlVHlwZSAhPT0gOSA/XHJcblx0XHRmYWxzZSA6XHJcblxyXG5cdFx0Ly8gTm9kZXMgYWNjZXB0IGRhdGEgdW5sZXNzIG90aGVyd2lzZSBzcGVjaWZpZWQ7IHJlamVjdGlvbiBjYW4gYmUgY29uZGl0aW9uYWxcclxuXHRcdCFub0RhdGEgfHwgbm9EYXRhICE9PSB0cnVlICYmIGVsZW0uZ2V0QXR0cmlidXRlKCBcImNsYXNzaWRcIiApID09PSBub0RhdGE7XHJcbn07XHJcblxyXG5cclxuXHJcblxyXG52YXIgcmJyYWNlID0gL14oPzpcXHtbXFx3XFxXXSpcXH18XFxbW1xcd1xcV10qXFxdKSQvLFxyXG5cdHJtdWx0aURhc2ggPSAvKFtBLVpdKS9nO1xyXG5cclxuZnVuY3Rpb24gZGF0YUF0dHIoIGVsZW0sIGtleSwgZGF0YSApIHtcclxuXHJcblx0Ly8gSWYgbm90aGluZyB3YXMgZm91bmQgaW50ZXJuYWxseSwgdHJ5IHRvIGZldGNoIGFueVxyXG5cdC8vIGRhdGEgZnJvbSB0aGUgSFRNTDUgZGF0YS0qIGF0dHJpYnV0ZVxyXG5cdGlmICggZGF0YSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XHJcblxyXG5cdFx0dmFyIG5hbWUgPSBcImRhdGEtXCIgKyBrZXkucmVwbGFjZSggcm11bHRpRGFzaCwgXCItJDFcIiApLnRvTG93ZXJDYXNlKCk7XHJcblxyXG5cdFx0ZGF0YSA9IGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICk7XHJcblxyXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRkYXRhID0gZGF0YSA9PT0gXCJ0cnVlXCIgPyB0cnVlIDpcclxuXHRcdFx0XHRcdGRhdGEgPT09IFwiZmFsc2VcIiA/IGZhbHNlIDpcclxuXHRcdFx0XHRcdGRhdGEgPT09IFwibnVsbFwiID8gbnVsbCA6XHJcblxyXG5cdFx0XHRcdFx0Ly8gT25seSBjb252ZXJ0IHRvIGEgbnVtYmVyIGlmIGl0IGRvZXNuJ3QgY2hhbmdlIHRoZSBzdHJpbmdcclxuXHRcdFx0XHRcdCtkYXRhICsgXCJcIiA9PT0gZGF0YSA/ICtkYXRhIDpcclxuXHRcdFx0XHRcdHJicmFjZS50ZXN0KCBkYXRhICkgPyBqUXVlcnkucGFyc2VKU09OKCBkYXRhICkgOlxyXG5cdFx0XHRcdFx0ZGF0YTtcclxuXHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxyXG5cclxuXHRcdFx0Ly8gTWFrZSBzdXJlIHdlIHNldCB0aGUgZGF0YSBzbyBpdCBpc24ndCBjaGFuZ2VkIGxhdGVyXHJcblx0XHRcdGpRdWVyeS5kYXRhKCBlbGVtLCBrZXksIGRhdGEgKTtcclxuXHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRkYXRhID0gdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIGRhdGE7XHJcbn1cclxuXHJcbi8vIGNoZWNrcyBhIGNhY2hlIG9iamVjdCBmb3IgZW1wdGluZXNzXHJcbmZ1bmN0aW9uIGlzRW1wdHlEYXRhT2JqZWN0KCBvYmogKSB7XHJcblx0dmFyIG5hbWU7XHJcblx0Zm9yICggbmFtZSBpbiBvYmogKSB7XHJcblxyXG5cdFx0Ly8gaWYgdGhlIHB1YmxpYyBkYXRhIG9iamVjdCBpcyBlbXB0eSwgdGhlIHByaXZhdGUgaXMgc3RpbGwgZW1wdHlcclxuXHRcdGlmICggbmFtZSA9PT0gXCJkYXRhXCIgJiYgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIG9ialsgbmFtZSBdICkgKSB7XHJcblx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0fVxyXG5cdFx0aWYgKCBuYW1lICE9PSBcInRvSlNPTlwiICkge1xyXG5cdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gdHJ1ZTtcclxufVxyXG5cclxuZnVuY3Rpb24gaW50ZXJuYWxEYXRhKCBlbGVtLCBuYW1lLCBkYXRhLCBwdnQgLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7XHJcblx0aWYgKCAhYWNjZXB0RGF0YSggZWxlbSApICkge1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0dmFyIHJldCwgdGhpc0NhY2hlLFxyXG5cdFx0aW50ZXJuYWxLZXkgPSBqUXVlcnkuZXhwYW5kbyxcclxuXHJcblx0XHQvLyBXZSBoYXZlIHRvIGhhbmRsZSBET00gbm9kZXMgYW5kIEpTIG9iamVjdHMgZGlmZmVyZW50bHkgYmVjYXVzZSBJRTYtN1xyXG5cdFx0Ly8gY2FuJ3QgR0Mgb2JqZWN0IHJlZmVyZW5jZXMgcHJvcGVybHkgYWNyb3NzIHRoZSBET00tSlMgYm91bmRhcnlcclxuXHRcdGlzTm9kZSA9IGVsZW0ubm9kZVR5cGUsXHJcblxyXG5cdFx0Ly8gT25seSBET00gbm9kZXMgbmVlZCB0aGUgZ2xvYmFsIGpRdWVyeSBjYWNoZTsgSlMgb2JqZWN0IGRhdGEgaXNcclxuXHRcdC8vIGF0dGFjaGVkIGRpcmVjdGx5IHRvIHRoZSBvYmplY3Qgc28gR0MgY2FuIG9jY3VyIGF1dG9tYXRpY2FsbHlcclxuXHRcdGNhY2hlID0gaXNOb2RlID8galF1ZXJ5LmNhY2hlIDogZWxlbSxcclxuXHJcblx0XHQvLyBPbmx5IGRlZmluaW5nIGFuIElEIGZvciBKUyBvYmplY3RzIGlmIGl0cyBjYWNoZSBhbHJlYWR5IGV4aXN0cyBhbGxvd3NcclxuXHRcdC8vIHRoZSBjb2RlIHRvIHNob3J0Y3V0IG9uIHRoZSBzYW1lIHBhdGggYXMgYSBET00gbm9kZSB3aXRoIG5vIGNhY2hlXHJcblx0XHRpZCA9IGlzTm9kZSA/IGVsZW1bIGludGVybmFsS2V5IF0gOiBlbGVtWyBpbnRlcm5hbEtleSBdICYmIGludGVybmFsS2V5O1xyXG5cclxuXHQvLyBBdm9pZCBkb2luZyBhbnkgbW9yZSB3b3JrIHRoYW4gd2UgbmVlZCB0byB3aGVuIHRyeWluZyB0byBnZXQgZGF0YSBvbiBhblxyXG5cdC8vIG9iamVjdCB0aGF0IGhhcyBubyBkYXRhIGF0IGFsbFxyXG5cdGlmICggKCAhaWQgfHwgIWNhY2hlWyBpZCBdIHx8ICggIXB2dCAmJiAhY2FjaGVbIGlkIF0uZGF0YSApICkgJiZcclxuXHRcdGRhdGEgPT09IHVuZGVmaW5lZCAmJiB0eXBlb2YgbmFtZSA9PT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGlmICggIWlkICkge1xyXG5cclxuXHRcdC8vIE9ubHkgRE9NIG5vZGVzIG5lZWQgYSBuZXcgdW5pcXVlIElEIGZvciBlYWNoIGVsZW1lbnQgc2luY2UgdGhlaXIgZGF0YVxyXG5cdFx0Ly8gZW5kcyB1cCBpbiB0aGUgZ2xvYmFsIGNhY2hlXHJcblx0XHRpZiAoIGlzTm9kZSApIHtcclxuXHRcdFx0aWQgPSBlbGVtWyBpbnRlcm5hbEtleSBdID0gZGVsZXRlZElkcy5wb3AoKSB8fCBqUXVlcnkuZ3VpZCsrO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0aWQgPSBpbnRlcm5hbEtleTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGlmICggIWNhY2hlWyBpZCBdICkge1xyXG5cclxuXHRcdC8vIEF2b2lkIGV4cG9zaW5nIGpRdWVyeSBtZXRhZGF0YSBvbiBwbGFpbiBKUyBvYmplY3RzIHdoZW4gdGhlIG9iamVjdFxyXG5cdFx0Ly8gaXMgc2VyaWFsaXplZCB1c2luZyBKU09OLnN0cmluZ2lmeVxyXG5cdFx0Y2FjaGVbIGlkIF0gPSBpc05vZGUgPyB7fSA6IHsgdG9KU09OOiBqUXVlcnkubm9vcCB9O1xyXG5cdH1cclxuXHJcblx0Ly8gQW4gb2JqZWN0IGNhbiBiZSBwYXNzZWQgdG8galF1ZXJ5LmRhdGEgaW5zdGVhZCBvZiBhIGtleS92YWx1ZSBwYWlyOyB0aGlzIGdldHNcclxuXHQvLyBzaGFsbG93IGNvcGllZCBvdmVyIG9udG8gdGhlIGV4aXN0aW5nIGNhY2hlXHJcblx0aWYgKCB0eXBlb2YgbmFtZSA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2YgbmFtZSA9PT0gXCJmdW5jdGlvblwiICkge1xyXG5cdFx0aWYgKCBwdnQgKSB7XHJcblx0XHRcdGNhY2hlWyBpZCBdID0galF1ZXJ5LmV4dGVuZCggY2FjaGVbIGlkIF0sIG5hbWUgKTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGNhY2hlWyBpZCBdLmRhdGEgPSBqUXVlcnkuZXh0ZW5kKCBjYWNoZVsgaWQgXS5kYXRhLCBuYW1lICk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHR0aGlzQ2FjaGUgPSBjYWNoZVsgaWQgXTtcclxuXHJcblx0Ly8galF1ZXJ5IGRhdGEoKSBpcyBzdG9yZWQgaW4gYSBzZXBhcmF0ZSBvYmplY3QgaW5zaWRlIHRoZSBvYmplY3QncyBpbnRlcm5hbCBkYXRhXHJcblx0Ly8gY2FjaGUgaW4gb3JkZXIgdG8gYXZvaWQga2V5IGNvbGxpc2lvbnMgYmV0d2VlbiBpbnRlcm5hbCBkYXRhIGFuZCB1c2VyLWRlZmluZWRcclxuXHQvLyBkYXRhLlxyXG5cdGlmICggIXB2dCApIHtcclxuXHRcdGlmICggIXRoaXNDYWNoZS5kYXRhICkge1xyXG5cdFx0XHR0aGlzQ2FjaGUuZGF0YSA9IHt9O1xyXG5cdFx0fVxyXG5cclxuXHRcdHRoaXNDYWNoZSA9IHRoaXNDYWNoZS5kYXRhO1xyXG5cdH1cclxuXHJcblx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHR0aGlzQ2FjaGVbIGpRdWVyeS5jYW1lbENhc2UoIG5hbWUgKSBdID0gZGF0YTtcclxuXHR9XHJcblxyXG5cdC8vIENoZWNrIGZvciBib3RoIGNvbnZlcnRlZC10by1jYW1lbCBhbmQgbm9uLWNvbnZlcnRlZCBkYXRhIHByb3BlcnR5IG5hbWVzXHJcblx0Ly8gSWYgYSBkYXRhIHByb3BlcnR5IHdhcyBzcGVjaWZpZWRcclxuXHRpZiAoIHR5cGVvZiBuYW1lID09PSBcInN0cmluZ1wiICkge1xyXG5cclxuXHRcdC8vIEZpcnN0IFRyeSB0byBmaW5kIGFzLWlzIHByb3BlcnR5IGRhdGFcclxuXHRcdHJldCA9IHRoaXNDYWNoZVsgbmFtZSBdO1xyXG5cclxuXHRcdC8vIFRlc3QgZm9yIG51bGx8dW5kZWZpbmVkIHByb3BlcnR5IGRhdGFcclxuXHRcdGlmICggcmV0ID09IG51bGwgKSB7XHJcblxyXG5cdFx0XHQvLyBUcnkgdG8gZmluZCB0aGUgY2FtZWxDYXNlZCBwcm9wZXJ0eVxyXG5cdFx0XHRyZXQgPSB0aGlzQ2FjaGVbIGpRdWVyeS5jYW1lbENhc2UoIG5hbWUgKSBdO1xyXG5cdFx0fVxyXG5cdH0gZWxzZSB7XHJcblx0XHRyZXQgPSB0aGlzQ2FjaGU7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gcmV0O1xyXG59XHJcblxyXG5mdW5jdGlvbiBpbnRlcm5hbFJlbW92ZURhdGEoIGVsZW0sIG5hbWUsIHB2dCApIHtcclxuXHRpZiAoICFhY2NlcHREYXRhKCBlbGVtICkgKSB7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHR2YXIgdGhpc0NhY2hlLCBpLFxyXG5cdFx0aXNOb2RlID0gZWxlbS5ub2RlVHlwZSxcclxuXHJcblx0XHQvLyBTZWUgalF1ZXJ5LmRhdGEgZm9yIG1vcmUgaW5mb3JtYXRpb25cclxuXHRcdGNhY2hlID0gaXNOb2RlID8galF1ZXJ5LmNhY2hlIDogZWxlbSxcclxuXHRcdGlkID0gaXNOb2RlID8gZWxlbVsgalF1ZXJ5LmV4cGFuZG8gXSA6IGpRdWVyeS5leHBhbmRvO1xyXG5cclxuXHQvLyBJZiB0aGVyZSBpcyBhbHJlYWR5IG5vIGNhY2hlIGVudHJ5IGZvciB0aGlzIG9iamVjdCwgdGhlcmUgaXMgbm9cclxuXHQvLyBwdXJwb3NlIGluIGNvbnRpbnVpbmdcclxuXHRpZiAoICFjYWNoZVsgaWQgXSApIHtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdGlmICggbmFtZSApIHtcclxuXHJcblx0XHR0aGlzQ2FjaGUgPSBwdnQgPyBjYWNoZVsgaWQgXSA6IGNhY2hlWyBpZCBdLmRhdGE7XHJcblxyXG5cdFx0aWYgKCB0aGlzQ2FjaGUgKSB7XHJcblxyXG5cdFx0XHQvLyBTdXBwb3J0IGFycmF5IG9yIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmcgbmFtZXMgZm9yIGRhdGEga2V5c1xyXG5cdFx0XHRpZiAoICFqUXVlcnkuaXNBcnJheSggbmFtZSApICkge1xyXG5cclxuXHRcdFx0XHQvLyB0cnkgdGhlIHN0cmluZyBhcyBhIGtleSBiZWZvcmUgYW55IG1hbmlwdWxhdGlvblxyXG5cdFx0XHRcdGlmICggbmFtZSBpbiB0aGlzQ2FjaGUgKSB7XHJcblx0XHRcdFx0XHRuYW1lID0gWyBuYW1lIF07XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHJcblx0XHRcdFx0XHQvLyBzcGxpdCB0aGUgY2FtZWwgY2FzZWQgdmVyc2lvbiBieSBzcGFjZXMgdW5sZXNzIGEga2V5IHdpdGggdGhlIHNwYWNlcyBleGlzdHNcclxuXHRcdFx0XHRcdG5hbWUgPSBqUXVlcnkuY2FtZWxDYXNlKCBuYW1lICk7XHJcblx0XHRcdFx0XHRpZiAoIG5hbWUgaW4gdGhpc0NhY2hlICkge1xyXG5cdFx0XHRcdFx0XHRuYW1lID0gWyBuYW1lIF07XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRuYW1lID0gbmFtZS5zcGxpdCggXCIgXCIgKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHRcdC8vIElmIFwibmFtZVwiIGlzIGFuIGFycmF5IG9mIGtleXMuLi5cclxuXHRcdFx0XHQvLyBXaGVuIGRhdGEgaXMgaW5pdGlhbGx5IGNyZWF0ZWQsIHZpYSAoXCJrZXlcIiwgXCJ2YWxcIikgc2lnbmF0dXJlLFxyXG5cdFx0XHRcdC8vIGtleXMgd2lsbCBiZSBjb252ZXJ0ZWQgdG8gY2FtZWxDYXNlLlxyXG5cdFx0XHRcdC8vIFNpbmNlIHRoZXJlIGlzIG5vIHdheSB0byB0ZWxsIF9ob3dfIGEga2V5IHdhcyBhZGRlZCwgcmVtb3ZlXHJcblx0XHRcdFx0Ly8gYm90aCBwbGFpbiBrZXkgYW5kIGNhbWVsQ2FzZSBrZXkuICMxMjc4NlxyXG5cdFx0XHRcdC8vIFRoaXMgd2lsbCBvbmx5IHBlbmFsaXplIHRoZSBhcnJheSBhcmd1bWVudCBwYXRoLlxyXG5cdFx0XHRcdG5hbWUgPSBuYW1lLmNvbmNhdCggalF1ZXJ5Lm1hcCggbmFtZSwgalF1ZXJ5LmNhbWVsQ2FzZSApICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGkgPSBuYW1lLmxlbmd0aDtcclxuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XHJcblx0XHRcdFx0ZGVsZXRlIHRoaXNDYWNoZVsgbmFtZVsgaSBdIF07XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIElmIHRoZXJlIGlzIG5vIGRhdGEgbGVmdCBpbiB0aGUgY2FjaGUsIHdlIHdhbnQgdG8gY29udGludWVcclxuXHRcdFx0Ly8gYW5kIGxldCB0aGUgY2FjaGUgb2JqZWN0IGl0c2VsZiBnZXQgZGVzdHJveWVkXHJcblx0XHRcdGlmICggcHZ0ID8gIWlzRW1wdHlEYXRhT2JqZWN0KCB0aGlzQ2FjaGUgKSA6ICFqUXVlcnkuaXNFbXB0eU9iamVjdCggdGhpc0NhY2hlICkgKSB7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBTZWUgalF1ZXJ5LmRhdGEgZm9yIG1vcmUgaW5mb3JtYXRpb25cclxuXHRpZiAoICFwdnQgKSB7XHJcblx0XHRkZWxldGUgY2FjaGVbIGlkIF0uZGF0YTtcclxuXHJcblx0XHQvLyBEb24ndCBkZXN0cm95IHRoZSBwYXJlbnQgY2FjaGUgdW5sZXNzIHRoZSBpbnRlcm5hbCBkYXRhIG9iamVjdFxyXG5cdFx0Ly8gaGFkIGJlZW4gdGhlIG9ubHkgdGhpbmcgbGVmdCBpbiBpdFxyXG5cdFx0aWYgKCAhaXNFbXB0eURhdGFPYmplY3QoIGNhY2hlWyBpZCBdICkgKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIERlc3Ryb3kgdGhlIGNhY2hlXHJcblx0aWYgKCBpc05vZGUgKSB7XHJcblx0XHRqUXVlcnkuY2xlYW5EYXRhKCBbIGVsZW0gXSwgdHJ1ZSApO1xyXG5cclxuXHQvLyBVc2UgZGVsZXRlIHdoZW4gc3VwcG9ydGVkIGZvciBleHBhbmRvcyBvciBgY2FjaGVgIGlzIG5vdCBhIHdpbmRvdyBwZXIgaXNXaW5kb3cgKCMxMDA4MClcclxuXHQvKiBqc2hpbnQgZXFlcWVxOiBmYWxzZSAqL1xyXG5cdH0gZWxzZSBpZiAoIHN1cHBvcnQuZGVsZXRlRXhwYW5kbyB8fCBjYWNoZSAhPSBjYWNoZS53aW5kb3cgKSB7XHJcblx0XHQvKiBqc2hpbnQgZXFlcWVxOiB0cnVlICovXHJcblx0XHRkZWxldGUgY2FjaGVbIGlkIF07XHJcblxyXG5cdC8vIFdoZW4gYWxsIGVsc2UgZmFpbHMsIHVuZGVmaW5lZFxyXG5cdH0gZWxzZSB7XHJcblx0XHRjYWNoZVsgaWQgXSA9IHVuZGVmaW5lZDtcclxuXHR9XHJcbn1cclxuXHJcbmpRdWVyeS5leHRlbmQoIHtcclxuXHRjYWNoZToge30sXHJcblxyXG5cdC8vIFRoZSBmb2xsb3dpbmcgZWxlbWVudHMgKHNwYWNlLXN1ZmZpeGVkIHRvIGF2b2lkIE9iamVjdC5wcm90b3R5cGUgY29sbGlzaW9ucylcclxuXHQvLyB0aHJvdyB1bmNhdGNoYWJsZSBleGNlcHRpb25zIGlmIHlvdSBhdHRlbXB0IHRvIHNldCBleHBhbmRvIHByb3BlcnRpZXNcclxuXHRub0RhdGE6IHtcclxuXHRcdFwiYXBwbGV0IFwiOiB0cnVlLFxyXG5cdFx0XCJlbWJlZCBcIjogdHJ1ZSxcclxuXHJcblx0XHQvLyAuLi5idXQgRmxhc2ggb2JqZWN0cyAod2hpY2ggaGF2ZSB0aGlzIGNsYXNzaWQpICpjYW4qIGhhbmRsZSBleHBhbmRvc1xyXG5cdFx0XCJvYmplY3QgXCI6IFwiY2xzaWQ6RDI3Q0RCNkUtQUU2RC0xMWNmLTk2QjgtNDQ0NTUzNTQwMDAwXCJcclxuXHR9LFxyXG5cclxuXHRoYXNEYXRhOiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdGVsZW0gPSBlbGVtLm5vZGVUeXBlID8galF1ZXJ5LmNhY2hlWyBlbGVtWyBqUXVlcnkuZXhwYW5kbyBdIF0gOiBlbGVtWyBqUXVlcnkuZXhwYW5kbyBdO1xyXG5cdFx0cmV0dXJuICEhZWxlbSAmJiAhaXNFbXB0eURhdGFPYmplY3QoIGVsZW0gKTtcclxuXHR9LFxyXG5cclxuXHRkYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZGF0YSApIHtcclxuXHRcdHJldHVybiBpbnRlcm5hbERhdGEoIGVsZW0sIG5hbWUsIGRhdGEgKTtcclxuXHR9LFxyXG5cclxuXHRyZW1vdmVEYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcclxuXHRcdHJldHVybiBpbnRlcm5hbFJlbW92ZURhdGEoIGVsZW0sIG5hbWUgKTtcclxuXHR9LFxyXG5cclxuXHQvLyBGb3IgaW50ZXJuYWwgdXNlIG9ubHkuXHJcblx0X2RhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xyXG5cdFx0cmV0dXJuIGludGVybmFsRGF0YSggZWxlbSwgbmFtZSwgZGF0YSwgdHJ1ZSApO1xyXG5cdH0sXHJcblxyXG5cdF9yZW1vdmVEYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcclxuXHRcdHJldHVybiBpbnRlcm5hbFJlbW92ZURhdGEoIGVsZW0sIG5hbWUsIHRydWUgKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRkYXRhOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcclxuXHRcdHZhciBpLCBuYW1lLCBkYXRhLFxyXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdLFxyXG5cdFx0XHRhdHRycyA9IGVsZW0gJiYgZWxlbS5hdHRyaWJ1dGVzO1xyXG5cclxuXHRcdC8vIFNwZWNpYWwgZXhwZWN0aW9ucyBvZiAuZGF0YSBiYXNpY2FsbHkgdGh3YXJ0IGpRdWVyeS5hY2Nlc3MsXHJcblx0XHQvLyBzbyBpbXBsZW1lbnQgdGhlIHJlbGV2YW50IGJlaGF2aW9yIG91cnNlbHZlc1xyXG5cclxuXHRcdC8vIEdldHMgYWxsIHZhbHVlc1xyXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0aWYgKCB0aGlzLmxlbmd0aCApIHtcclxuXHRcdFx0XHRkYXRhID0galF1ZXJ5LmRhdGEoIGVsZW0gKTtcclxuXHJcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmICFqUXVlcnkuX2RhdGEoIGVsZW0sIFwicGFyc2VkQXR0cnNcIiApICkge1xyXG5cdFx0XHRcdFx0aSA9IGF0dHJzLmxlbmd0aDtcclxuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUxMStcclxuXHRcdFx0XHRcdFx0Ly8gVGhlIGF0dHJzIGVsZW1lbnRzIGNhbiBiZSBudWxsICgjMTQ4OTQpXHJcblx0XHRcdFx0XHRcdGlmICggYXR0cnNbIGkgXSApIHtcclxuXHRcdFx0XHRcdFx0XHRuYW1lID0gYXR0cnNbIGkgXS5uYW1lO1xyXG5cdFx0XHRcdFx0XHRcdGlmICggbmFtZS5pbmRleE9mKCBcImRhdGEtXCIgKSA9PT0gMCApIHtcclxuXHRcdFx0XHRcdFx0XHRcdG5hbWUgPSBqUXVlcnkuY2FtZWxDYXNlKCBuYW1lLnNsaWNlKCA1ICkgKTtcclxuXHRcdFx0XHRcdFx0XHRcdGRhdGFBdHRyKCBlbGVtLCBuYW1lLCBkYXRhWyBuYW1lIF0gKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGpRdWVyeS5fZGF0YSggZWxlbSwgXCJwYXJzZWRBdHRyc1wiLCB0cnVlICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm4gZGF0YTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBTZXRzIG11bHRpcGxlIHZhbHVlc1xyXG5cdFx0aWYgKCB0eXBlb2Yga2V5ID09PSBcIm9iamVjdFwiICkge1xyXG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRqUXVlcnkuZGF0YSggdGhpcywga2V5ICk7XHJcblx0XHRcdH0gKTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA+IDEgP1xyXG5cclxuXHRcdFx0Ly8gU2V0cyBvbmUgdmFsdWVcclxuXHRcdFx0dGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRqUXVlcnkuZGF0YSggdGhpcywga2V5LCB2YWx1ZSApO1xyXG5cdFx0XHR9ICkgOlxyXG5cclxuXHRcdFx0Ly8gR2V0cyBvbmUgdmFsdWVcclxuXHRcdFx0Ly8gVHJ5IHRvIGZldGNoIGFueSBpbnRlcm5hbGx5IHN0b3JlZCBkYXRhIGZpcnN0XHJcblx0XHRcdGVsZW0gPyBkYXRhQXR0ciggZWxlbSwga2V5LCBqUXVlcnkuZGF0YSggZWxlbSwga2V5ICkgKSA6IHVuZGVmaW5lZDtcclxuXHR9LFxyXG5cclxuXHRyZW1vdmVEYXRhOiBmdW5jdGlvbigga2V5ICkge1xyXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdGpRdWVyeS5yZW1vdmVEYXRhKCB0aGlzLCBrZXkgKTtcclxuXHRcdH0gKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG5qUXVlcnkuZXh0ZW5kKCB7XHJcblx0cXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBkYXRhICkge1xyXG5cdFx0dmFyIHF1ZXVlO1xyXG5cclxuXHRcdGlmICggZWxlbSApIHtcclxuXHRcdFx0dHlwZSA9ICggdHlwZSB8fCBcImZ4XCIgKSArIFwicXVldWVcIjtcclxuXHRcdFx0cXVldWUgPSBqUXVlcnkuX2RhdGEoIGVsZW0sIHR5cGUgKTtcclxuXHJcblx0XHRcdC8vIFNwZWVkIHVwIGRlcXVldWUgYnkgZ2V0dGluZyBvdXQgcXVpY2tseSBpZiB0aGlzIGlzIGp1c3QgYSBsb29rdXBcclxuXHRcdFx0aWYgKCBkYXRhICkge1xyXG5cdFx0XHRcdGlmICggIXF1ZXVlIHx8IGpRdWVyeS5pc0FycmF5KCBkYXRhICkgKSB7XHJcblx0XHRcdFx0XHRxdWV1ZSA9IGpRdWVyeS5fZGF0YSggZWxlbSwgdHlwZSwgalF1ZXJ5Lm1ha2VBcnJheSggZGF0YSApICk7XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGRhdGEgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHF1ZXVlIHx8IFtdO1xyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlICkge1xyXG5cdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xyXG5cclxuXHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggZWxlbSwgdHlwZSApLFxyXG5cdFx0XHRzdGFydExlbmd0aCA9IHF1ZXVlLmxlbmd0aCxcclxuXHRcdFx0Zm4gPSBxdWV1ZS5zaGlmdCgpLFxyXG5cdFx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgdHlwZSApLFxyXG5cdFx0XHRuZXh0ID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIGVsZW0sIHR5cGUgKTtcclxuXHRcdFx0fTtcclxuXHJcblx0XHQvLyBJZiB0aGUgZnggcXVldWUgaXMgZGVxdWV1ZWQsIGFsd2F5cyByZW1vdmUgdGhlIHByb2dyZXNzIHNlbnRpbmVsXHJcblx0XHRpZiAoIGZuID09PSBcImlucHJvZ3Jlc3NcIiApIHtcclxuXHRcdFx0Zm4gPSBxdWV1ZS5zaGlmdCgpO1xyXG5cdFx0XHRzdGFydExlbmd0aC0tO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggZm4gKSB7XHJcblxyXG5cdFx0XHQvLyBBZGQgYSBwcm9ncmVzcyBzZW50aW5lbCB0byBwcmV2ZW50IHRoZSBmeCBxdWV1ZSBmcm9tIGJlaW5nXHJcblx0XHRcdC8vIGF1dG9tYXRpY2FsbHkgZGVxdWV1ZWRcclxuXHRcdFx0aWYgKCB0eXBlID09PSBcImZ4XCIgKSB7XHJcblx0XHRcdFx0cXVldWUudW5zaGlmdCggXCJpbnByb2dyZXNzXCIgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gY2xlYXIgdXAgdGhlIGxhc3QgcXVldWUgc3RvcCBmdW5jdGlvblxyXG5cdFx0XHRkZWxldGUgaG9va3Muc3RvcDtcclxuXHRcdFx0Zm4uY2FsbCggZWxlbSwgbmV4dCwgaG9va3MgKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoICFzdGFydExlbmd0aCAmJiBob29rcyApIHtcclxuXHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdC8vIG5vdCBpbnRlbmRlZCBmb3IgcHVibGljIGNvbnN1bXB0aW9uIC0gZ2VuZXJhdGVzIGEgcXVldWVIb29rcyBvYmplY3QsXHJcblx0Ly8gb3IgcmV0dXJucyB0aGUgY3VycmVudCBvbmVcclxuXHRfcXVldWVIb29rczogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7XHJcblx0XHR2YXIga2V5ID0gdHlwZSArIFwicXVldWVIb29rc1wiO1xyXG5cdFx0cmV0dXJuIGpRdWVyeS5fZGF0YSggZWxlbSwga2V5ICkgfHwgalF1ZXJ5Ll9kYXRhKCBlbGVtLCBrZXksIHtcclxuXHRcdFx0ZW1wdHk6IGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLmFkZCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0alF1ZXJ5Ll9yZW1vdmVEYXRhKCBlbGVtLCB0eXBlICsgXCJxdWV1ZVwiICk7XHJcblx0XHRcdFx0alF1ZXJ5Ll9yZW1vdmVEYXRhKCBlbGVtLCBrZXkgKTtcclxuXHRcdFx0fSApXHJcblx0XHR9ICk7XHJcblx0fVxyXG59ICk7XHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblx0cXVldWU6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xyXG5cdFx0dmFyIHNldHRlciA9IDI7XHJcblxyXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdFx0ZGF0YSA9IHR5cGU7XHJcblx0XHRcdHR5cGUgPSBcImZ4XCI7XHJcblx0XHRcdHNldHRlci0tO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCA8IHNldHRlciApIHtcclxuXHRcdFx0cmV0dXJuIGpRdWVyeS5xdWV1ZSggdGhpc1sgMCBdLCB0eXBlICk7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIGRhdGEgPT09IHVuZGVmaW5lZCA/XHJcblx0XHRcdHRoaXMgOlxyXG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHZhciBxdWV1ZSA9IGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgZGF0YSApO1xyXG5cclxuXHRcdFx0XHQvLyBlbnN1cmUgYSBob29rcyBmb3IgdGhpcyBxdWV1ZVxyXG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggdGhpcywgdHlwZSApO1xyXG5cclxuXHRcdFx0XHRpZiAoIHR5cGUgPT09IFwiZnhcIiAmJiBxdWV1ZVsgMCBdICE9PSBcImlucHJvZ3Jlc3NcIiApIHtcclxuXHRcdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCB0eXBlICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9ICk7XHJcblx0fSxcclxuXHRkZXF1ZXVlOiBmdW5jdGlvbiggdHlwZSApIHtcclxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xyXG5cdFx0fSApO1xyXG5cdH0sXHJcblx0Y2xlYXJRdWV1ZTogZnVuY3Rpb24oIHR5cGUgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5xdWV1ZSggdHlwZSB8fCBcImZ4XCIsIFtdICk7XHJcblx0fSxcclxuXHJcblx0Ly8gR2V0IGEgcHJvbWlzZSByZXNvbHZlZCB3aGVuIHF1ZXVlcyBvZiBhIGNlcnRhaW4gdHlwZVxyXG5cdC8vIGFyZSBlbXB0aWVkIChmeCBpcyB0aGUgdHlwZSBieSBkZWZhdWx0KVxyXG5cdHByb21pc2U6IGZ1bmN0aW9uKCB0eXBlLCBvYmogKSB7XHJcblx0XHR2YXIgdG1wLFxyXG5cdFx0XHRjb3VudCA9IDEsXHJcblx0XHRcdGRlZmVyID0galF1ZXJ5LkRlZmVycmVkKCksXHJcblx0XHRcdGVsZW1lbnRzID0gdGhpcyxcclxuXHRcdFx0aSA9IHRoaXMubGVuZ3RoLFxyXG5cdFx0XHRyZXNvbHZlID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aWYgKCAhKCAtLWNvdW50ICkgKSB7XHJcblx0XHRcdFx0XHRkZWZlci5yZXNvbHZlV2l0aCggZWxlbWVudHMsIFsgZWxlbWVudHMgXSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHJcblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRvYmogPSB0eXBlO1xyXG5cdFx0XHR0eXBlID0gdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xyXG5cclxuXHRcdHdoaWxlICggaS0tICkge1xyXG5cdFx0XHR0bXAgPSBqUXVlcnkuX2RhdGEoIGVsZW1lbnRzWyBpIF0sIHR5cGUgKyBcInF1ZXVlSG9va3NcIiApO1xyXG5cdFx0XHRpZiAoIHRtcCAmJiB0bXAuZW1wdHkgKSB7XHJcblx0XHRcdFx0Y291bnQrKztcclxuXHRcdFx0XHR0bXAuZW1wdHkuYWRkKCByZXNvbHZlICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHRcdHJlc29sdmUoKTtcclxuXHRcdHJldHVybiBkZWZlci5wcm9taXNlKCBvYmogKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG4oIGZ1bmN0aW9uKCkge1xyXG5cdHZhciBzaHJpbmtXcmFwQmxvY2tzVmFsO1xyXG5cclxuXHRzdXBwb3J0LnNocmlua1dyYXBCbG9ja3MgPSBmdW5jdGlvbigpIHtcclxuXHRcdGlmICggc2hyaW5rV3JhcEJsb2Nrc1ZhbCAhPSBudWxsICkge1xyXG5cdFx0XHRyZXR1cm4gc2hyaW5rV3JhcEJsb2Nrc1ZhbDtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBXaWxsIGJlIGNoYW5nZWQgbGF0ZXIgaWYgbmVlZGVkLlxyXG5cdFx0c2hyaW5rV3JhcEJsb2Nrc1ZhbCA9IGZhbHNlO1xyXG5cclxuXHRcdC8vIE1pbmlmaWVkOiB2YXIgYixjLGRcclxuXHRcdHZhciBkaXYsIGJvZHksIGNvbnRhaW5lcjtcclxuXHJcblx0XHRib2R5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwiYm9keVwiIClbIDAgXTtcclxuXHRcdGlmICggIWJvZHkgfHwgIWJvZHkuc3R5bGUgKSB7XHJcblxyXG5cdFx0XHQvLyBUZXN0IGZpcmVkIHRvbyBlYXJseSBvciBpbiBhbiB1bnN1cHBvcnRlZCBlbnZpcm9ubWVudCwgZXhpdC5cclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFNldHVwXHJcblx0XHRkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XHJcblx0XHRjb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XHJcblx0XHRjb250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFwicG9zaXRpb246YWJzb2x1dGU7Ym9yZGVyOjA7d2lkdGg6MDtoZWlnaHQ6MDt0b3A6MDtsZWZ0Oi05OTk5cHhcIjtcclxuXHRcdGJvZHkuYXBwZW5kQ2hpbGQoIGNvbnRhaW5lciApLmFwcGVuZENoaWxkKCBkaXYgKTtcclxuXHJcblx0XHQvLyBTdXBwb3J0OiBJRTZcclxuXHRcdC8vIENoZWNrIGlmIGVsZW1lbnRzIHdpdGggbGF5b3V0IHNocmluay13cmFwIHRoZWlyIGNoaWxkcmVuXHJcblx0XHRpZiAoIHR5cGVvZiBkaXYuc3R5bGUuem9vbSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcclxuXHJcblx0XHRcdC8vIFJlc2V0IENTUzogYm94LXNpemluZzsgZGlzcGxheTsgbWFyZ2luOyBib3JkZXJcclxuXHRcdFx0ZGl2LnN0eWxlLmNzc1RleHQgPVxyXG5cclxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94PDI5LCBBbmRyb2lkIDIuM1xyXG5cdFx0XHRcdC8vIFZlbmRvci1wcmVmaXggYm94LXNpemluZ1xyXG5cdFx0XHRcdFwiLXdlYmtpdC1ib3gtc2l6aW5nOmNvbnRlbnQtYm94Oy1tb3otYm94LXNpemluZzpjb250ZW50LWJveDtcIiArXHJcblx0XHRcdFx0XCJib3gtc2l6aW5nOmNvbnRlbnQtYm94O2Rpc3BsYXk6YmxvY2s7bWFyZ2luOjA7Ym9yZGVyOjA7XCIgK1xyXG5cdFx0XHRcdFwicGFkZGluZzoxcHg7d2lkdGg6MXB4O3pvb206MVwiO1xyXG5cdFx0XHRkaXYuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApLnN0eWxlLndpZHRoID0gXCI1cHhcIjtcclxuXHRcdFx0c2hyaW5rV3JhcEJsb2Nrc1ZhbCA9IGRpdi5vZmZzZXRXaWR0aCAhPT0gMztcclxuXHRcdH1cclxuXHJcblx0XHRib2R5LnJlbW92ZUNoaWxkKCBjb250YWluZXIgKTtcclxuXHJcblx0XHRyZXR1cm4gc2hyaW5rV3JhcEJsb2Nrc1ZhbDtcclxuXHR9O1xyXG5cclxufSApKCk7XHJcbnZhciBwbnVtID0gKCAvWystXT8oPzpcXGQqXFwufClcXGQrKD86W2VFXVsrLV0/XFxkK3wpLyApLnNvdXJjZTtcclxuXHJcbnZhciByY3NzTnVtID0gbmV3IFJlZ0V4cCggXCJeKD86KFsrLV0pPXwpKFwiICsgcG51bSArIFwiKShbYS16JV0qKSRcIiwgXCJpXCIgKTtcclxuXHJcblxyXG52YXIgY3NzRXhwYW5kID0gWyBcIlRvcFwiLCBcIlJpZ2h0XCIsIFwiQm90dG9tXCIsIFwiTGVmdFwiIF07XHJcblxyXG52YXIgaXNIaWRkZW4gPSBmdW5jdGlvbiggZWxlbSwgZWwgKSB7XHJcblxyXG5cdFx0Ly8gaXNIaWRkZW4gbWlnaHQgYmUgY2FsbGVkIGZyb20galF1ZXJ5I2ZpbHRlciBmdW5jdGlvbjtcclxuXHRcdC8vIGluIHRoYXQgY2FzZSwgZWxlbWVudCB3aWxsIGJlIHNlY29uZCBhcmd1bWVudFxyXG5cdFx0ZWxlbSA9IGVsIHx8IGVsZW07XHJcblx0XHRyZXR1cm4galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKSA9PT0gXCJub25lXCIgfHxcclxuXHRcdFx0IWpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICk7XHJcblx0fTtcclxuXHJcblxyXG5cclxuZnVuY3Rpb24gYWRqdXN0Q1NTKCBlbGVtLCBwcm9wLCB2YWx1ZVBhcnRzLCB0d2VlbiApIHtcclxuXHR2YXIgYWRqdXN0ZWQsXHJcblx0XHRzY2FsZSA9IDEsXHJcblx0XHRtYXhJdGVyYXRpb25zID0gMjAsXHJcblx0XHRjdXJyZW50VmFsdWUgPSB0d2VlbiA/XHJcblx0XHRcdGZ1bmN0aW9uKCkgeyByZXR1cm4gdHdlZW4uY3VyKCk7IH0gOlxyXG5cdFx0XHRmdW5jdGlvbigpIHsgcmV0dXJuIGpRdWVyeS5jc3MoIGVsZW0sIHByb3AsIFwiXCIgKTsgfSxcclxuXHRcdGluaXRpYWwgPSBjdXJyZW50VmFsdWUoKSxcclxuXHRcdHVuaXQgPSB2YWx1ZVBhcnRzICYmIHZhbHVlUGFydHNbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSA/IFwiXCIgOiBcInB4XCIgKSxcclxuXHJcblx0XHQvLyBTdGFydGluZyB2YWx1ZSBjb21wdXRhdGlvbiBpcyByZXF1aXJlZCBmb3IgcG90ZW50aWFsIHVuaXQgbWlzbWF0Y2hlc1xyXG5cdFx0aW5pdGlhbEluVW5pdCA9ICggalF1ZXJ5LmNzc051bWJlclsgcHJvcCBdIHx8IHVuaXQgIT09IFwicHhcIiAmJiAraW5pdGlhbCApICYmXHJcblx0XHRcdHJjc3NOdW0uZXhlYyggalF1ZXJ5LmNzcyggZWxlbSwgcHJvcCApICk7XHJcblxyXG5cdGlmICggaW5pdGlhbEluVW5pdCAmJiBpbml0aWFsSW5Vbml0WyAzIF0gIT09IHVuaXQgKSB7XHJcblxyXG5cdFx0Ly8gVHJ1c3QgdW5pdHMgcmVwb3J0ZWQgYnkgalF1ZXJ5LmNzc1xyXG5cdFx0dW5pdCA9IHVuaXQgfHwgaW5pdGlhbEluVW5pdFsgMyBdO1xyXG5cclxuXHRcdC8vIE1ha2Ugc3VyZSB3ZSB1cGRhdGUgdGhlIHR3ZWVuIHByb3BlcnRpZXMgbGF0ZXIgb25cclxuXHRcdHZhbHVlUGFydHMgPSB2YWx1ZVBhcnRzIHx8IFtdO1xyXG5cclxuXHRcdC8vIEl0ZXJhdGl2ZWx5IGFwcHJveGltYXRlIGZyb20gYSBub256ZXJvIHN0YXJ0aW5nIHBvaW50XHJcblx0XHRpbml0aWFsSW5Vbml0ID0gK2luaXRpYWwgfHwgMTtcclxuXHJcblx0XHRkbyB7XHJcblxyXG5cdFx0XHQvLyBJZiBwcmV2aW91cyBpdGVyYXRpb24gemVyb2VkIG91dCwgZG91YmxlIHVudGlsIHdlIGdldCAqc29tZXRoaW5nKi5cclxuXHRcdFx0Ly8gVXNlIHN0cmluZyBmb3IgZG91Ymxpbmcgc28gd2UgZG9uJ3QgYWNjaWRlbnRhbGx5IHNlZSBzY2FsZSBhcyB1bmNoYW5nZWQgYmVsb3dcclxuXHRcdFx0c2NhbGUgPSBzY2FsZSB8fCBcIi41XCI7XHJcblxyXG5cdFx0XHQvLyBBZGp1c3QgYW5kIGFwcGx5XHJcblx0XHRcdGluaXRpYWxJblVuaXQgPSBpbml0aWFsSW5Vbml0IC8gc2NhbGU7XHJcblx0XHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcclxuXHJcblx0XHQvLyBVcGRhdGUgc2NhbGUsIHRvbGVyYXRpbmcgemVybyBvciBOYU4gZnJvbSB0d2Vlbi5jdXIoKVxyXG5cdFx0Ly8gQnJlYWsgdGhlIGxvb3AgaWYgc2NhbGUgaXMgdW5jaGFuZ2VkIG9yIHBlcmZlY3QsIG9yIGlmIHdlJ3ZlIGp1c3QgaGFkIGVub3VnaC5cclxuXHRcdH0gd2hpbGUgKFxyXG5cdFx0XHRzY2FsZSAhPT0gKCBzY2FsZSA9IGN1cnJlbnRWYWx1ZSgpIC8gaW5pdGlhbCApICYmIHNjYWxlICE9PSAxICYmIC0tbWF4SXRlcmF0aW9uc1xyXG5cdFx0KTtcclxuXHR9XHJcblxyXG5cdGlmICggdmFsdWVQYXJ0cyApIHtcclxuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbEluVW5pdCB8fCAraW5pdGlhbCB8fCAwO1xyXG5cclxuXHRcdC8vIEFwcGx5IHJlbGF0aXZlIG9mZnNldCAoKz0vLT0pIGlmIHNwZWNpZmllZFxyXG5cdFx0YWRqdXN0ZWQgPSB2YWx1ZVBhcnRzWyAxIF0gP1xyXG5cdFx0XHRpbml0aWFsSW5Vbml0ICsgKCB2YWx1ZVBhcnRzWyAxIF0gKyAxICkgKiB2YWx1ZVBhcnRzWyAyIF0gOlxyXG5cdFx0XHQrdmFsdWVQYXJ0c1sgMiBdO1xyXG5cdFx0aWYgKCB0d2VlbiApIHtcclxuXHRcdFx0dHdlZW4udW5pdCA9IHVuaXQ7XHJcblx0XHRcdHR3ZWVuLnN0YXJ0ID0gaW5pdGlhbEluVW5pdDtcclxuXHRcdFx0dHdlZW4uZW5kID0gYWRqdXN0ZWQ7XHJcblx0XHR9XHJcblx0fVxyXG5cdHJldHVybiBhZGp1c3RlZDtcclxufVxyXG5cclxuXHJcbi8vIE11bHRpZnVuY3Rpb25hbCBtZXRob2QgdG8gZ2V0IGFuZCBzZXQgdmFsdWVzIG9mIGEgY29sbGVjdGlvblxyXG4vLyBUaGUgdmFsdWUvcyBjYW4gb3B0aW9uYWxseSBiZSBleGVjdXRlZCBpZiBpdCdzIGEgZnVuY3Rpb25cclxudmFyIGFjY2VzcyA9IGZ1bmN0aW9uKCBlbGVtcywgZm4sIGtleSwgdmFsdWUsIGNoYWluYWJsZSwgZW1wdHlHZXQsIHJhdyApIHtcclxuXHR2YXIgaSA9IDAsXHJcblx0XHRsZW5ndGggPSBlbGVtcy5sZW5ndGgsXHJcblx0XHRidWxrID0ga2V5ID09IG51bGw7XHJcblxyXG5cdC8vIFNldHMgbWFueSB2YWx1ZXNcclxuXHRpZiAoIGpRdWVyeS50eXBlKCBrZXkgKSA9PT0gXCJvYmplY3RcIiApIHtcclxuXHRcdGNoYWluYWJsZSA9IHRydWU7XHJcblx0XHRmb3IgKCBpIGluIGtleSApIHtcclxuXHRcdFx0YWNjZXNzKCBlbGVtcywgZm4sIGksIGtleVsgaSBdLCB0cnVlLCBlbXB0eUdldCwgcmF3ICk7XHJcblx0XHR9XHJcblxyXG5cdC8vIFNldHMgb25lIHZhbHVlXHJcblx0fSBlbHNlIGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcclxuXHRcdGNoYWluYWJsZSA9IHRydWU7XHJcblxyXG5cdFx0aWYgKCAhalF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XHJcblx0XHRcdHJhdyA9IHRydWU7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBidWxrICkge1xyXG5cclxuXHRcdFx0Ly8gQnVsayBvcGVyYXRpb25zIHJ1biBhZ2FpbnN0IHRoZSBlbnRpcmUgc2V0XHJcblx0XHRcdGlmICggcmF3ICkge1xyXG5cdFx0XHRcdGZuLmNhbGwoIGVsZW1zLCB2YWx1ZSApO1xyXG5cdFx0XHRcdGZuID0gbnVsbDtcclxuXHJcblx0XHRcdC8vIC4uLmV4Y2VwdCB3aGVuIGV4ZWN1dGluZyBmdW5jdGlvbiB2YWx1ZXNcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRidWxrID0gZm47XHJcblx0XHRcdFx0Zm4gPSBmdW5jdGlvbiggZWxlbSwga2V5LCB2YWx1ZSApIHtcclxuXHRcdFx0XHRcdHJldHVybiBidWxrLmNhbGwoIGpRdWVyeSggZWxlbSApLCB2YWx1ZSApO1xyXG5cdFx0XHRcdH07XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRpZiAoIGZuICkge1xyXG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcclxuXHRcdFx0XHRmbihcclxuXHRcdFx0XHRcdGVsZW1zWyBpIF0sXHJcblx0XHRcdFx0XHRrZXksXHJcblx0XHRcdFx0XHRyYXcgPyB2YWx1ZSA6IHZhbHVlLmNhbGwoIGVsZW1zWyBpIF0sIGksIGZuKCBlbGVtc1sgaSBdLCBrZXkgKSApXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIGNoYWluYWJsZSA/XHJcblx0XHRlbGVtcyA6XHJcblxyXG5cdFx0Ly8gR2V0c1xyXG5cdFx0YnVsayA/XHJcblx0XHRcdGZuLmNhbGwoIGVsZW1zICkgOlxyXG5cdFx0XHRsZW5ndGggPyBmbiggZWxlbXNbIDAgXSwga2V5ICkgOiBlbXB0eUdldDtcclxufTtcclxudmFyIHJjaGVja2FibGVUeXBlID0gKCAvXig/OmNoZWNrYm94fHJhZGlvKSQvaSApO1xyXG5cclxudmFyIHJ0YWdOYW1lID0gKCAvPChbXFx3Oi1dKykvICk7XHJcblxyXG52YXIgcnNjcmlwdFR5cGUgPSAoIC9eJHxcXC8oPzpqYXZhfGVjbWEpc2NyaXB0L2kgKTtcclxuXHJcbnZhciBybGVhZGluZ1doaXRlc3BhY2UgPSAoIC9eXFxzKy8gKTtcclxuXHJcbnZhciBub2RlTmFtZXMgPSBcImFiYnJ8YXJ0aWNsZXxhc2lkZXxhdWRpb3xiZGl8Y2FudmFzfGRhdGF8ZGF0YWxpc3R8XCIgK1xyXG5cdFx0XCJkZXRhaWxzfGRpYWxvZ3xmaWdjYXB0aW9ufGZpZ3VyZXxmb290ZXJ8aGVhZGVyfGhncm91cHxtYWlufFwiICtcclxuXHRcdFwibWFya3xtZXRlcnxuYXZ8b3V0cHV0fHBpY3R1cmV8cHJvZ3Jlc3N8c2VjdGlvbnxzdW1tYXJ5fHRlbXBsYXRlfHRpbWV8dmlkZW9cIjtcclxuXHJcblxyXG5cclxuZnVuY3Rpb24gY3JlYXRlU2FmZUZyYWdtZW50KCBkb2N1bWVudCApIHtcclxuXHR2YXIgbGlzdCA9IG5vZGVOYW1lcy5zcGxpdCggXCJ8XCIgKSxcclxuXHRcdHNhZmVGcmFnID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpO1xyXG5cclxuXHRpZiAoIHNhZmVGcmFnLmNyZWF0ZUVsZW1lbnQgKSB7XHJcblx0XHR3aGlsZSAoIGxpc3QubGVuZ3RoICkge1xyXG5cdFx0XHRzYWZlRnJhZy5jcmVhdGVFbGVtZW50KFxyXG5cdFx0XHRcdGxpc3QucG9wKClcclxuXHRcdFx0KTtcclxuXHRcdH1cclxuXHR9XHJcblx0cmV0dXJuIHNhZmVGcmFnO1xyXG59XHJcblxyXG5cclxuKCBmdW5jdGlvbigpIHtcclxuXHR2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApLFxyXG5cdFx0ZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCksXHJcblx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xyXG5cclxuXHQvLyBTZXR1cFxyXG5cdGRpdi5pbm5lckhUTUwgPSBcIiAgPGxpbmsvPjx0YWJsZT48L3RhYmxlPjxhIGhyZWY9Jy9hJz5hPC9hPjxpbnB1dCB0eXBlPSdjaGVja2JveCcvPlwiO1xyXG5cclxuXHQvLyBJRSBzdHJpcHMgbGVhZGluZyB3aGl0ZXNwYWNlIHdoZW4gLmlubmVySFRNTCBpcyB1c2VkXHJcblx0c3VwcG9ydC5sZWFkaW5nV2hpdGVzcGFjZSA9IGRpdi5maXJzdENoaWxkLm5vZGVUeXBlID09PSAzO1xyXG5cclxuXHQvLyBNYWtlIHN1cmUgdGhhdCB0Ym9keSBlbGVtZW50cyBhcmVuJ3QgYXV0b21hdGljYWxseSBpbnNlcnRlZFxyXG5cdC8vIElFIHdpbGwgaW5zZXJ0IHRoZW0gaW50byBlbXB0eSB0YWJsZXNcclxuXHRzdXBwb3J0LnRib2R5ID0gIWRpdi5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJ0Ym9keVwiICkubGVuZ3RoO1xyXG5cclxuXHQvLyBNYWtlIHN1cmUgdGhhdCBsaW5rIGVsZW1lbnRzIGdldCBzZXJpYWxpemVkIGNvcnJlY3RseSBieSBpbm5lckhUTUxcclxuXHQvLyBUaGlzIHJlcXVpcmVzIGEgd3JhcHBlciBlbGVtZW50IGluIElFXHJcblx0c3VwcG9ydC5odG1sU2VyaWFsaXplID0gISFkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwibGlua1wiICkubGVuZ3RoO1xyXG5cclxuXHQvLyBNYWtlcyBzdXJlIGNsb25pbmcgYW4gaHRtbDUgZWxlbWVudCBkb2VzIG5vdCBjYXVzZSBwcm9ibGVtc1xyXG5cdC8vIFdoZXJlIG91dGVySFRNTCBpcyB1bmRlZmluZWQsIHRoaXMgc3RpbGwgd29ya3NcclxuXHRzdXBwb3J0Lmh0bWw1Q2xvbmUgPVxyXG5cdFx0ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJuYXZcIiApLmNsb25lTm9kZSggdHJ1ZSApLm91dGVySFRNTCAhPT0gXCI8Om5hdj48LzpuYXY+XCI7XHJcblxyXG5cdC8vIENoZWNrIGlmIGEgZGlzY29ubmVjdGVkIGNoZWNrYm94IHdpbGwgcmV0YWluIGl0cyBjaGVja2VkXHJcblx0Ly8gdmFsdWUgb2YgdHJ1ZSBhZnRlciBhcHBlbmRlZCB0byB0aGUgRE9NIChJRTYvNylcclxuXHRpbnB1dC50eXBlID0gXCJjaGVja2JveFwiO1xyXG5cdGlucHV0LmNoZWNrZWQgPSB0cnVlO1xyXG5cdGZyYWdtZW50LmFwcGVuZENoaWxkKCBpbnB1dCApO1xyXG5cdHN1cHBvcnQuYXBwZW5kQ2hlY2tlZCA9IGlucHV0LmNoZWNrZWQ7XHJcblxyXG5cdC8vIE1ha2Ugc3VyZSB0ZXh0YXJlYSAoYW5kIGNoZWNrYm94KSBkZWZhdWx0VmFsdWUgaXMgcHJvcGVybHkgY2xvbmVkXHJcblx0Ly8gU3VwcG9ydDogSUU2LUlFMTErXHJcblx0ZGl2LmlubmVySFRNTCA9IFwiPHRleHRhcmVhPng8L3RleHRhcmVhPlwiO1xyXG5cdHN1cHBvcnQubm9DbG9uZUNoZWNrZWQgPSAhIWRpdi5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuZGVmYXVsdFZhbHVlO1xyXG5cclxuXHQvLyAjMTEyMTcgLSBXZWJLaXQgbG9zZXMgY2hlY2sgd2hlbiB0aGUgbmFtZSBpcyBhZnRlciB0aGUgY2hlY2tlZCBhdHRyaWJ1dGVcclxuXHRmcmFnbWVudC5hcHBlbmRDaGlsZCggZGl2ICk7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IFdpbmRvd3MgV2ViIEFwcHMgKFdXQSlcclxuXHQvLyBgbmFtZWAgYW5kIGB0eXBlYCBtdXN0IHVzZSAuc2V0QXR0cmlidXRlIGZvciBXV0EgKCMxNDkwMSlcclxuXHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xyXG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIFwicmFkaW9cIiApO1xyXG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJjaGVja2VkXCIsIFwiY2hlY2tlZFwiICk7XHJcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcIm5hbWVcIiwgXCJ0XCIgKTtcclxuXHJcblx0ZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApO1xyXG5cclxuXHQvLyBTdXBwb3J0OiBTYWZhcmkgNS4xLCBpT1MgNS4xLCBBbmRyb2lkIDQueCwgQW5kcm9pZCAyLjNcclxuXHQvLyBvbGQgV2ViS2l0IGRvZXNuJ3QgY2xvbmUgY2hlY2tlZCBzdGF0ZSBjb3JyZWN0bHkgaW4gZnJhZ21lbnRzXHJcblx0c3VwcG9ydC5jaGVja0Nsb25lID0gZGl2LmNsb25lTm9kZSggdHJ1ZSApLmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5jaGVja2VkO1xyXG5cclxuXHQvLyBTdXBwb3J0OiBJRTw5XHJcblx0Ly8gQ2xvbmVkIGVsZW1lbnRzIGtlZXAgYXR0YWNoRXZlbnQgaGFuZGxlcnMsIHdlIHVzZSBhZGRFdmVudExpc3RlbmVyIG9uIElFOStcclxuXHRzdXBwb3J0Lm5vQ2xvbmVFdmVudCA9ICEhZGl2LmFkZEV2ZW50TGlzdGVuZXI7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IElFPDlcclxuXHQvLyBTaW5jZSBhdHRyaWJ1dGVzIGFuZCBwcm9wZXJ0aWVzIGFyZSB0aGUgc2FtZSBpbiBJRSxcclxuXHQvLyBjbGVhbkRhdGEgbXVzdCBzZXQgcHJvcGVydGllcyB0byB1bmRlZmluZWQgcmF0aGVyIHRoYW4gdXNlIHJlbW92ZUF0dHJpYnV0ZVxyXG5cdGRpdlsgalF1ZXJ5LmV4cGFuZG8gXSA9IDE7XHJcblx0c3VwcG9ydC5hdHRyaWJ1dGVzID0gIWRpdi5nZXRBdHRyaWJ1dGUoIGpRdWVyeS5leHBhbmRvICk7XHJcbn0gKSgpO1xyXG5cclxuXHJcbi8vIFdlIGhhdmUgdG8gY2xvc2UgdGhlc2UgdGFncyB0byBzdXBwb3J0IFhIVE1MICgjMTMyMDApXHJcbnZhciB3cmFwTWFwID0ge1xyXG5cdG9wdGlvbjogWyAxLCBcIjxzZWxlY3QgbXVsdGlwbGU9J211bHRpcGxlJz5cIiwgXCI8L3NlbGVjdD5cIiBdLFxyXG5cdGxlZ2VuZDogWyAxLCBcIjxmaWVsZHNldD5cIiwgXCI8L2ZpZWxkc2V0PlwiIF0sXHJcblx0YXJlYTogWyAxLCBcIjxtYXA+XCIsIFwiPC9tYXA+XCIgXSxcclxuXHJcblx0Ly8gU3VwcG9ydDogSUU4XHJcblx0cGFyYW06IFsgMSwgXCI8b2JqZWN0PlwiLCBcIjwvb2JqZWN0PlwiIF0sXHJcblx0dGhlYWQ6IFsgMSwgXCI8dGFibGU+XCIsIFwiPC90YWJsZT5cIiBdLFxyXG5cdHRyOiBbIDIsIFwiPHRhYmxlPjx0Ym9keT5cIiwgXCI8L3Rib2R5PjwvdGFibGU+XCIgXSxcclxuXHRjb2w6IFsgMiwgXCI8dGFibGU+PHRib2R5PjwvdGJvZHk+PGNvbGdyb3VwPlwiLCBcIjwvY29sZ3JvdXA+PC90YWJsZT5cIiBdLFxyXG5cdHRkOiBbIDMsIFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsIFwiPC90cj48L3Rib2R5PjwvdGFibGU+XCIgXSxcclxuXHJcblx0Ly8gSUU2LTggY2FuJ3Qgc2VyaWFsaXplIGxpbmssIHNjcmlwdCwgc3R5bGUsIG9yIGFueSBodG1sNSAoTm9TY29wZSkgdGFncyxcclxuXHQvLyB1bmxlc3Mgd3JhcHBlZCBpbiBhIGRpdiB3aXRoIG5vbi1icmVha2luZyBjaGFyYWN0ZXJzIGluIGZyb250IG9mIGl0LlxyXG5cdF9kZWZhdWx0OiBzdXBwb3J0Lmh0bWxTZXJpYWxpemUgPyBbIDAsIFwiXCIsIFwiXCIgXSA6IFsgMSwgXCJYPGRpdj5cIiwgXCI8L2Rpdj5cIiBdXHJcbn07XHJcblxyXG4vLyBTdXBwb3J0OiBJRTgtSUU5XHJcbndyYXBNYXAub3B0Z3JvdXAgPSB3cmFwTWFwLm9wdGlvbjtcclxuXHJcbndyYXBNYXAudGJvZHkgPSB3cmFwTWFwLnRmb290ID0gd3JhcE1hcC5jb2xncm91cCA9IHdyYXBNYXAuY2FwdGlvbiA9IHdyYXBNYXAudGhlYWQ7XHJcbndyYXBNYXAudGggPSB3cmFwTWFwLnRkO1xyXG5cclxuXHJcbmZ1bmN0aW9uIGdldEFsbCggY29udGV4dCwgdGFnICkge1xyXG5cdHZhciBlbGVtcywgZWxlbSxcclxuXHRcdGkgPSAwLFxyXG5cdFx0Zm91bmQgPSB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiA/XHJcblx0XHRcdGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyB8fCBcIipcIiApIDpcclxuXHRcdFx0dHlwZW9mIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCAhPT0gXCJ1bmRlZmluZWRcIiA/XHJcblx0XHRcdFx0Y29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgfHwgXCIqXCIgKSA6XHJcblx0XHRcdFx0dW5kZWZpbmVkO1xyXG5cclxuXHRpZiAoICFmb3VuZCApIHtcclxuXHRcdGZvciAoIGZvdW5kID0gW10sIGVsZW1zID0gY29udGV4dC5jaGlsZE5vZGVzIHx8IGNvbnRleHQ7XHJcblx0XHRcdCggZWxlbSA9IGVsZW1zWyBpIF0gKSAhPSBudWxsO1xyXG5cdFx0XHRpKytcclxuXHRcdCkge1xyXG5cdFx0XHRpZiAoICF0YWcgfHwgalF1ZXJ5Lm5vZGVOYW1lKCBlbGVtLCB0YWcgKSApIHtcclxuXHRcdFx0XHRmb3VuZC5wdXNoKCBlbGVtICk7XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBmb3VuZCwgZ2V0QWxsKCBlbGVtLCB0YWcgKSApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gdGFnID09PSB1bmRlZmluZWQgfHwgdGFnICYmIGpRdWVyeS5ub2RlTmFtZSggY29udGV4dCwgdGFnICkgP1xyXG5cdFx0alF1ZXJ5Lm1lcmdlKCBbIGNvbnRleHQgXSwgZm91bmQgKSA6XHJcblx0XHRmb3VuZDtcclxufVxyXG5cclxuXHJcbi8vIE1hcmsgc2NyaXB0cyBhcyBoYXZpbmcgYWxyZWFkeSBiZWVuIGV2YWx1YXRlZFxyXG5mdW5jdGlvbiBzZXRHbG9iYWxFdmFsKCBlbGVtcywgcmVmRWxlbWVudHMgKSB7XHJcblx0dmFyIGVsZW0sXHJcblx0XHRpID0gMDtcclxuXHRmb3IgKCA7ICggZWxlbSA9IGVsZW1zWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XHJcblx0XHRqUXVlcnkuX2RhdGEoXHJcblx0XHRcdGVsZW0sXHJcblx0XHRcdFwiZ2xvYmFsRXZhbFwiLFxyXG5cdFx0XHQhcmVmRWxlbWVudHMgfHwgalF1ZXJ5Ll9kYXRhKCByZWZFbGVtZW50c1sgaSBdLCBcImdsb2JhbEV2YWxcIiApXHJcblx0XHQpO1xyXG5cdH1cclxufVxyXG5cclxuXHJcbnZhciByaHRtbCA9IC88fCYjP1xcdys7LyxcclxuXHRydGJvZHkgPSAvPHRib2R5L2k7XHJcblxyXG5mdW5jdGlvbiBmaXhEZWZhdWx0Q2hlY2tlZCggZWxlbSApIHtcclxuXHRpZiAoIHJjaGVja2FibGVUeXBlLnRlc3QoIGVsZW0udHlwZSApICkge1xyXG5cdFx0ZWxlbS5kZWZhdWx0Q2hlY2tlZCA9IGVsZW0uY2hlY2tlZDtcclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGJ1aWxkRnJhZ21lbnQoIGVsZW1zLCBjb250ZXh0LCBzY3JpcHRzLCBzZWxlY3Rpb24sIGlnbm9yZWQgKSB7XHJcblx0dmFyIGosIGVsZW0sIGNvbnRhaW5zLFxyXG5cdFx0dG1wLCB0YWcsIHRib2R5LCB3cmFwLFxyXG5cdFx0bCA9IGVsZW1zLmxlbmd0aCxcclxuXHJcblx0XHQvLyBFbnN1cmUgYSBzYWZlIGZyYWdtZW50XHJcblx0XHRzYWZlID0gY3JlYXRlU2FmZUZyYWdtZW50KCBjb250ZXh0ICksXHJcblxyXG5cdFx0bm9kZXMgPSBbXSxcclxuXHRcdGkgPSAwO1xyXG5cclxuXHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XHJcblx0XHRlbGVtID0gZWxlbXNbIGkgXTtcclxuXHJcblx0XHRpZiAoIGVsZW0gfHwgZWxlbSA9PT0gMCApIHtcclxuXHJcblx0XHRcdC8vIEFkZCBub2RlcyBkaXJlY3RseVxyXG5cdFx0XHRpZiAoIGpRdWVyeS50eXBlKCBlbGVtICkgPT09IFwib2JqZWN0XCIgKSB7XHJcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBub2RlcywgZWxlbS5ub2RlVHlwZSA/IFsgZWxlbSBdIDogZWxlbSApO1xyXG5cclxuXHRcdFx0Ly8gQ29udmVydCBub24taHRtbCBpbnRvIGEgdGV4dCBub2RlXHJcblx0XHRcdH0gZWxzZSBpZiAoICFyaHRtbC50ZXN0KCBlbGVtICkgKSB7XHJcblx0XHRcdFx0bm9kZXMucHVzaCggY29udGV4dC5jcmVhdGVUZXh0Tm9kZSggZWxlbSApICk7XHJcblxyXG5cdFx0XHQvLyBDb252ZXJ0IGh0bWwgaW50byBET00gbm9kZXNcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR0bXAgPSB0bXAgfHwgc2FmZS5hcHBlbmRDaGlsZCggY29udGV4dC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKTtcclxuXHJcblx0XHRcdFx0Ly8gRGVzZXJpYWxpemUgYSBzdGFuZGFyZCByZXByZXNlbnRhdGlvblxyXG5cdFx0XHRcdHRhZyA9ICggcnRhZ05hbWUuZXhlYyggZWxlbSApIHx8IFsgXCJcIiwgXCJcIiBdIClbIDEgXS50b0xvd2VyQ2FzZSgpO1xyXG5cdFx0XHRcdHdyYXAgPSB3cmFwTWFwWyB0YWcgXSB8fCB3cmFwTWFwLl9kZWZhdWx0O1xyXG5cclxuXHRcdFx0XHR0bXAuaW5uZXJIVE1MID0gd3JhcFsgMSBdICsgalF1ZXJ5Lmh0bWxQcmVmaWx0ZXIoIGVsZW0gKSArIHdyYXBbIDIgXTtcclxuXHJcblx0XHRcdFx0Ly8gRGVzY2VuZCB0aHJvdWdoIHdyYXBwZXJzIHRvIHRoZSByaWdodCBjb250ZW50XHJcblx0XHRcdFx0aiA9IHdyYXBbIDAgXTtcclxuXHRcdFx0XHR3aGlsZSAoIGotLSApIHtcclxuXHRcdFx0XHRcdHRtcCA9IHRtcC5sYXN0Q2hpbGQ7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBNYW51YWxseSBhZGQgbGVhZGluZyB3aGl0ZXNwYWNlIHJlbW92ZWQgYnkgSUVcclxuXHRcdFx0XHRpZiAoICFzdXBwb3J0LmxlYWRpbmdXaGl0ZXNwYWNlICYmIHJsZWFkaW5nV2hpdGVzcGFjZS50ZXN0KCBlbGVtICkgKSB7XHJcblx0XHRcdFx0XHRub2Rlcy5wdXNoKCBjb250ZXh0LmNyZWF0ZVRleHROb2RlKCBybGVhZGluZ1doaXRlc3BhY2UuZXhlYyggZWxlbSApWyAwIF0gKSApO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gUmVtb3ZlIElFJ3MgYXV0b2luc2VydGVkIDx0Ym9keT4gZnJvbSB0YWJsZSBmcmFnbWVudHNcclxuXHRcdFx0XHRpZiAoICFzdXBwb3J0LnRib2R5ICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIFN0cmluZyB3YXMgYSA8dGFibGU+LCAqbWF5KiBoYXZlIHNwdXJpb3VzIDx0Ym9keT5cclxuXHRcdFx0XHRcdGVsZW0gPSB0YWcgPT09IFwidGFibGVcIiAmJiAhcnRib2R5LnRlc3QoIGVsZW0gKSA/XHJcblx0XHRcdFx0XHRcdHRtcC5maXJzdENoaWxkIDpcclxuXHJcblx0XHRcdFx0XHRcdC8vIFN0cmluZyB3YXMgYSBiYXJlIDx0aGVhZD4gb3IgPHRmb290PlxyXG5cdFx0XHRcdFx0XHR3cmFwWyAxIF0gPT09IFwiPHRhYmxlPlwiICYmICFydGJvZHkudGVzdCggZWxlbSApID9cclxuXHRcdFx0XHRcdFx0XHR0bXAgOlxyXG5cdFx0XHRcdFx0XHRcdDA7XHJcblxyXG5cdFx0XHRcdFx0aiA9IGVsZW0gJiYgZWxlbS5jaGlsZE5vZGVzLmxlbmd0aDtcclxuXHRcdFx0XHRcdHdoaWxlICggai0tICkge1xyXG5cdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5ub2RlTmFtZSggKCB0Ym9keSA9IGVsZW0uY2hpbGROb2Rlc1sgaiBdICksIFwidGJvZHlcIiApICYmXHJcblx0XHRcdFx0XHRcdFx0IXRib2R5LmNoaWxkTm9kZXMubGVuZ3RoICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHRlbGVtLnJlbW92ZUNoaWxkKCB0Ym9keSApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIG5vZGVzLCB0bXAuY2hpbGROb2RlcyApO1xyXG5cclxuXHRcdFx0XHQvLyBGaXggIzEyMzkyIGZvciBXZWJLaXQgYW5kIElFID4gOVxyXG5cdFx0XHRcdHRtcC50ZXh0Q29udGVudCA9IFwiXCI7XHJcblxyXG5cdFx0XHRcdC8vIEZpeCAjMTIzOTIgZm9yIG9sZElFXHJcblx0XHRcdFx0d2hpbGUgKCB0bXAuZmlyc3RDaGlsZCApIHtcclxuXHRcdFx0XHRcdHRtcC5yZW1vdmVDaGlsZCggdG1wLmZpcnN0Q2hpbGQgKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIFJlbWVtYmVyIHRoZSB0b3AtbGV2ZWwgY29udGFpbmVyIGZvciBwcm9wZXIgY2xlYW51cFxyXG5cdFx0XHRcdHRtcCA9IHNhZmUubGFzdENoaWxkO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBGaXggIzExMzU2OiBDbGVhciBlbGVtZW50cyBmcm9tIGZyYWdtZW50XHJcblx0aWYgKCB0bXAgKSB7XHJcblx0XHRzYWZlLnJlbW92ZUNoaWxkKCB0bXAgKTtcclxuXHR9XHJcblxyXG5cdC8vIFJlc2V0IGRlZmF1bHRDaGVja2VkIGZvciBhbnkgcmFkaW9zIGFuZCBjaGVja2JveGVzXHJcblx0Ly8gYWJvdXQgdG8gYmUgYXBwZW5kZWQgdG8gdGhlIERPTSBpbiBJRSA2LzcgKCM4MDYwKVxyXG5cdGlmICggIXN1cHBvcnQuYXBwZW5kQ2hlY2tlZCApIHtcclxuXHRcdGpRdWVyeS5ncmVwKCBnZXRBbGwoIG5vZGVzLCBcImlucHV0XCIgKSwgZml4RGVmYXVsdENoZWNrZWQgKTtcclxuXHR9XHJcblxyXG5cdGkgPSAwO1xyXG5cdHdoaWxlICggKCBlbGVtID0gbm9kZXNbIGkrKyBdICkgKSB7XHJcblxyXG5cdFx0Ly8gU2tpcCBlbGVtZW50cyBhbHJlYWR5IGluIHRoZSBjb250ZXh0IGNvbGxlY3Rpb24gKHRyYWMtNDA4NylcclxuXHRcdGlmICggc2VsZWN0aW9uICYmIGpRdWVyeS5pbkFycmF5KCBlbGVtLCBzZWxlY3Rpb24gKSA+IC0xICkge1xyXG5cdFx0XHRpZiAoIGlnbm9yZWQgKSB7XHJcblx0XHRcdFx0aWdub3JlZC5wdXNoKCBlbGVtICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0fVxyXG5cclxuXHRcdGNvbnRhaW5zID0galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcclxuXHJcblx0XHQvLyBBcHBlbmQgdG8gZnJhZ21lbnRcclxuXHRcdHRtcCA9IGdldEFsbCggc2FmZS5hcHBlbmRDaGlsZCggZWxlbSApLCBcInNjcmlwdFwiICk7XHJcblxyXG5cdFx0Ly8gUHJlc2VydmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeVxyXG5cdFx0aWYgKCBjb250YWlucyApIHtcclxuXHRcdFx0c2V0R2xvYmFsRXZhbCggdG1wICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQ2FwdHVyZSBleGVjdXRhYmxlc1xyXG5cdFx0aWYgKCBzY3JpcHRzICkge1xyXG5cdFx0XHRqID0gMDtcclxuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0bXBbIGorKyBdICkgKSB7XHJcblx0XHRcdFx0aWYgKCByc2NyaXB0VHlwZS50ZXN0KCBlbGVtLnR5cGUgfHwgXCJcIiApICkge1xyXG5cdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHR0bXAgPSBudWxsO1xyXG5cclxuXHRyZXR1cm4gc2FmZTtcclxufVxyXG5cclxuXHJcbiggZnVuY3Rpb24oKSB7XHJcblx0dmFyIGksIGV2ZW50TmFtZSxcclxuXHRcdGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKTtcclxuXHJcblx0Ly8gU3VwcG9ydDogSUU8OSAobGFjayBzdWJtaXQvY2hhbmdlIGJ1YmJsZSksIEZpcmVmb3ggKGxhY2sgZm9jdXMoaW4gfCBvdXQpIGV2ZW50cylcclxuXHRmb3IgKCBpIGluIHsgc3VibWl0OiB0cnVlLCBjaGFuZ2U6IHRydWUsIGZvY3VzaW46IHRydWUgfSApIHtcclxuXHRcdGV2ZW50TmFtZSA9IFwib25cIiArIGk7XHJcblxyXG5cdFx0aWYgKCAhKCBzdXBwb3J0WyBpIF0gPSBldmVudE5hbWUgaW4gd2luZG93ICkgKSB7XHJcblxyXG5cdFx0XHQvLyBCZXdhcmUgb2YgQ1NQIHJlc3RyaWN0aW9ucyAoaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4vU2VjdXJpdHkvQ1NQKVxyXG5cdFx0XHRkaXYuc2V0QXR0cmlidXRlKCBldmVudE5hbWUsIFwidFwiICk7XHJcblx0XHRcdHN1cHBvcnRbIGkgXSA9IGRpdi5hdHRyaWJ1dGVzWyBldmVudE5hbWUgXS5leHBhbmRvID09PSBmYWxzZTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIE51bGwgZWxlbWVudHMgdG8gYXZvaWQgbGVha3MgaW4gSUUuXHJcblx0ZGl2ID0gbnVsbDtcclxufSApKCk7XHJcblxyXG5cclxudmFyIHJmb3JtRWxlbXMgPSAvXig/OmlucHV0fHNlbGVjdHx0ZXh0YXJlYSkkL2ksXHJcblx0cmtleUV2ZW50ID0gL15rZXkvLFxyXG5cdHJtb3VzZUV2ZW50ID0gL14oPzptb3VzZXxwb2ludGVyfGNvbnRleHRtZW51fGRyYWd8ZHJvcCl8Y2xpY2svLFxyXG5cdHJmb2N1c01vcnBoID0gL14oPzpmb2N1c2luZm9jdXN8Zm9jdXNvdXRibHVyKSQvLFxyXG5cdHJ0eXBlbmFtZXNwYWNlID0gL14oW14uXSopKD86XFwuKC4rKXwpLztcclxuXHJcbmZ1bmN0aW9uIHJldHVyblRydWUoKSB7XHJcblx0cmV0dXJuIHRydWU7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJldHVybkZhbHNlKCkge1xyXG5cdHJldHVybiBmYWxzZTtcclxufVxyXG5cclxuLy8gU3VwcG9ydDogSUU5XHJcbi8vIFNlZSAjMTMzOTMgZm9yIG1vcmUgaW5mb1xyXG5mdW5jdGlvbiBzYWZlQWN0aXZlRWxlbWVudCgpIHtcclxuXHR0cnkge1xyXG5cdFx0cmV0dXJuIGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7XHJcblx0fSBjYXRjaCAoIGVyciApIHsgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBvbiggZWxlbSwgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgb25lICkge1xyXG5cdHZhciBvcmlnRm4sIHR5cGU7XHJcblxyXG5cdC8vIFR5cGVzIGNhbiBiZSBhIG1hcCBvZiB0eXBlcy9oYW5kbGVyc1xyXG5cdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xyXG5cclxuXHRcdC8vICggdHlwZXMtT2JqZWN0LCBzZWxlY3RvciwgZGF0YSApXHJcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcclxuXHJcblx0XHRcdC8vICggdHlwZXMtT2JqZWN0LCBkYXRhIClcclxuXHRcdFx0ZGF0YSA9IGRhdGEgfHwgc2VsZWN0b3I7XHJcblx0XHRcdHNlbGVjdG9yID0gdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcclxuXHRcdFx0b24oIGVsZW0sIHR5cGUsIHNlbGVjdG9yLCBkYXRhLCB0eXBlc1sgdHlwZSBdLCBvbmUgKTtcclxuXHRcdH1cclxuXHRcdHJldHVybiBlbGVtO1xyXG5cdH1cclxuXHJcblx0aWYgKCBkYXRhID09IG51bGwgJiYgZm4gPT0gbnVsbCApIHtcclxuXHJcblx0XHQvLyAoIHR5cGVzLCBmbiApXHJcblx0XHRmbiA9IHNlbGVjdG9yO1xyXG5cdFx0ZGF0YSA9IHNlbGVjdG9yID0gdW5kZWZpbmVkO1xyXG5cdH0gZWxzZSBpZiAoIGZuID09IG51bGwgKSB7XHJcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcclxuXHJcblx0XHRcdC8vICggdHlwZXMsIHNlbGVjdG9yLCBmbiApXHJcblx0XHRcdGZuID0gZGF0YTtcclxuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcclxuXHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHQvLyAoIHR5cGVzLCBkYXRhLCBmbiApXHJcblx0XHRcdGZuID0gZGF0YTtcclxuXHRcdFx0ZGF0YSA9IHNlbGVjdG9yO1xyXG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHR9XHJcblx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XHJcblx0XHRmbiA9IHJldHVybkZhbHNlO1xyXG5cdH0gZWxzZSBpZiAoICFmbiApIHtcclxuXHRcdHJldHVybiBlbGVtO1xyXG5cdH1cclxuXHJcblx0aWYgKCBvbmUgPT09IDEgKSB7XHJcblx0XHRvcmlnRm4gPSBmbjtcclxuXHRcdGZuID0gZnVuY3Rpb24oIGV2ZW50ICkge1xyXG5cclxuXHRcdFx0Ly8gQ2FuIHVzZSBhbiBlbXB0eSBzZXQsIHNpbmNlIGV2ZW50IGNvbnRhaW5zIHRoZSBpbmZvXHJcblx0XHRcdGpRdWVyeSgpLm9mZiggZXZlbnQgKTtcclxuXHRcdFx0cmV0dXJuIG9yaWdGbi5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XHJcblx0XHR9O1xyXG5cclxuXHRcdC8vIFVzZSBzYW1lIGd1aWQgc28gY2FsbGVyIGNhbiByZW1vdmUgdXNpbmcgb3JpZ0ZuXHJcblx0XHRmbi5ndWlkID0gb3JpZ0ZuLmd1aWQgfHwgKCBvcmlnRm4uZ3VpZCA9IGpRdWVyeS5ndWlkKysgKTtcclxuXHR9XHJcblx0cmV0dXJuIGVsZW0uZWFjaCggZnVuY3Rpb24oKSB7XHJcblx0XHRqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCB0eXBlcywgZm4sIGRhdGEsIHNlbGVjdG9yICk7XHJcblx0fSApO1xyXG59XHJcblxyXG4vKlxyXG4gKiBIZWxwZXIgZnVuY3Rpb25zIGZvciBtYW5hZ2luZyBldmVudHMgLS0gbm90IHBhcnQgb2YgdGhlIHB1YmxpYyBpbnRlcmZhY2UuXHJcbiAqIFByb3BzIHRvIERlYW4gRWR3YXJkcycgYWRkRXZlbnQgbGlicmFyeSBmb3IgbWFueSBvZiB0aGUgaWRlYXMuXHJcbiAqL1xyXG5qUXVlcnkuZXZlbnQgPSB7XHJcblxyXG5cdGdsb2JhbDoge30sXHJcblxyXG5cdGFkZDogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBkYXRhLCBzZWxlY3RvciApIHtcclxuXHRcdHZhciB0bXAsIGV2ZW50cywgdCwgaGFuZGxlT2JqSW4sXHJcblx0XHRcdHNwZWNpYWwsIGV2ZW50SGFuZGxlLCBoYW5kbGVPYmosXHJcblx0XHRcdGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcclxuXHRcdFx0ZWxlbURhdGEgPSBqUXVlcnkuX2RhdGEoIGVsZW0gKTtcclxuXHJcblx0XHQvLyBEb24ndCBhdHRhY2ggZXZlbnRzIHRvIG5vRGF0YSBvciB0ZXh0L2NvbW1lbnQgbm9kZXMgKGJ1dCBhbGxvdyBwbGFpbiBvYmplY3RzKVxyXG5cdFx0aWYgKCAhZWxlbURhdGEgKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYW4gb2JqZWN0IG9mIGN1c3RvbSBkYXRhIGluIGxpZXUgb2YgdGhlIGhhbmRsZXJcclxuXHRcdGlmICggaGFuZGxlci5oYW5kbGVyICkge1xyXG5cdFx0XHRoYW5kbGVPYmpJbiA9IGhhbmRsZXI7XHJcblx0XHRcdGhhbmRsZXIgPSBoYW5kbGVPYmpJbi5oYW5kbGVyO1xyXG5cdFx0XHRzZWxlY3RvciA9IGhhbmRsZU9iakluLnNlbGVjdG9yO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBoYW5kbGVyIGhhcyBhIHVuaXF1ZSBJRCwgdXNlZCB0byBmaW5kL3JlbW92ZSBpdCBsYXRlclxyXG5cdFx0aWYgKCAhaGFuZGxlci5ndWlkICkge1xyXG5cdFx0XHRoYW5kbGVyLmd1aWQgPSBqUXVlcnkuZ3VpZCsrO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEluaXQgdGhlIGVsZW1lbnQncyBldmVudCBzdHJ1Y3R1cmUgYW5kIG1haW4gaGFuZGxlciwgaWYgdGhpcyBpcyB0aGUgZmlyc3RcclxuXHRcdGlmICggISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XHJcblx0XHRcdGV2ZW50cyA9IGVsZW1EYXRhLmV2ZW50cyA9IHt9O1xyXG5cdFx0fVxyXG5cdFx0aWYgKCAhKCBldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSApICkge1xyXG5cdFx0XHRldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSA9IGZ1bmN0aW9uKCBlICkge1xyXG5cclxuXHRcdFx0XHQvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZlbnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZFxyXG5cdFx0XHRcdC8vIHdoZW4gYW4gZXZlbnQgaXMgY2FsbGVkIGFmdGVyIGEgcGFnZSBoYXMgdW5sb2FkZWRcclxuXHRcdFx0XHRyZXR1cm4gdHlwZW9mIGpRdWVyeSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxyXG5cdFx0XHRcdFx0KCAhZSB8fCBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICE9PSBlLnR5cGUgKSA/XHJcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQuZGlzcGF0Y2guYXBwbHkoIGV2ZW50SGFuZGxlLmVsZW0sIGFyZ3VtZW50cyApIDpcclxuXHRcdFx0XHRcdHVuZGVmaW5lZDtcclxuXHRcdFx0fTtcclxuXHJcblx0XHRcdC8vIEFkZCBlbGVtIGFzIGEgcHJvcGVydHkgb2YgdGhlIGhhbmRsZSBmbiB0byBwcmV2ZW50IGEgbWVtb3J5IGxlYWtcclxuXHRcdFx0Ly8gd2l0aCBJRSBub24tbmF0aXZlIGV2ZW50c1xyXG5cdFx0XHRldmVudEhhbmRsZS5lbGVtID0gZWxlbTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBIYW5kbGUgbXVsdGlwbGUgZXZlbnRzIHNlcGFyYXRlZCBieSBhIHNwYWNlXHJcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbIFwiXCIgXTtcclxuXHRcdHQgPSB0eXBlcy5sZW5ndGg7XHJcblx0XHR3aGlsZSAoIHQtLSApIHtcclxuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xyXG5cdFx0XHR0eXBlID0gb3JpZ1R5cGUgPSB0bXBbIDEgXTtcclxuXHRcdFx0bmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgXCJcIiApLnNwbGl0KCBcIi5cIiApLnNvcnQoKTtcclxuXHJcblx0XHRcdC8vIFRoZXJlICptdXN0KiBiZSBhIHR5cGUsIG5vIGF0dGFjaGluZyBuYW1lc3BhY2Utb25seSBoYW5kbGVyc1xyXG5cdFx0XHRpZiAoICF0eXBlICkge1xyXG5cdFx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBJZiBldmVudCBjaGFuZ2VzIGl0cyB0eXBlLCB1c2UgdGhlIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoZSBjaGFuZ2VkIHR5cGVcclxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XHJcblxyXG5cdFx0XHQvLyBJZiBzZWxlY3RvciBkZWZpbmVkLCBkZXRlcm1pbmUgc3BlY2lhbCBldmVudCBhcGkgdHlwZSwgb3RoZXJ3aXNlIGdpdmVuIHR5cGVcclxuXHRcdFx0dHlwZSA9ICggc2VsZWN0b3IgPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8fCB0eXBlO1xyXG5cclxuXHRcdFx0Ly8gVXBkYXRlIHNwZWNpYWwgYmFzZWQgb24gbmV3bHkgcmVzZXQgdHlwZVxyXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcclxuXHJcblx0XHRcdC8vIGhhbmRsZU9iaiBpcyBwYXNzZWQgdG8gYWxsIGV2ZW50IGhhbmRsZXJzXHJcblx0XHRcdGhhbmRsZU9iaiA9IGpRdWVyeS5leHRlbmQoIHtcclxuXHRcdFx0XHR0eXBlOiB0eXBlLFxyXG5cdFx0XHRcdG9yaWdUeXBlOiBvcmlnVHlwZSxcclxuXHRcdFx0XHRkYXRhOiBkYXRhLFxyXG5cdFx0XHRcdGhhbmRsZXI6IGhhbmRsZXIsXHJcblx0XHRcdFx0Z3VpZDogaGFuZGxlci5ndWlkLFxyXG5cdFx0XHRcdHNlbGVjdG9yOiBzZWxlY3RvcixcclxuXHRcdFx0XHRuZWVkc0NvbnRleHQ6IHNlbGVjdG9yICYmIGpRdWVyeS5leHByLm1hdGNoLm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvciApLFxyXG5cdFx0XHRcdG5hbWVzcGFjZTogbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApXHJcblx0XHRcdH0sIGhhbmRsZU9iakluICk7XHJcblxyXG5cdFx0XHQvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdFxyXG5cdFx0XHRpZiAoICEoIGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gKSApIHtcclxuXHRcdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdID0gW107XHJcblx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudCA9IDA7XHJcblxyXG5cdFx0XHRcdC8vIE9ubHkgdXNlIGFkZEV2ZW50TGlzdGVuZXIvYXR0YWNoRXZlbnQgaWYgdGhlIHNwZWNpYWwgZXZlbnRzIGhhbmRsZXIgcmV0dXJucyBmYWxzZVxyXG5cdFx0XHRcdGlmICggIXNwZWNpYWwuc2V0dXAgfHxcclxuXHRcdFx0XHRcdHNwZWNpYWwuc2V0dXAuY2FsbCggZWxlbSwgZGF0YSwgbmFtZXNwYWNlcywgZXZlbnRIYW5kbGUgKSA9PT0gZmFsc2UgKSB7XHJcblxyXG5cdFx0XHRcdFx0Ly8gQmluZCB0aGUgZ2xvYmFsIGV2ZW50IGhhbmRsZXIgdG8gdGhlIGVsZW1lbnRcclxuXHRcdFx0XHRcdGlmICggZWxlbS5hZGRFdmVudExpc3RlbmVyICkge1xyXG5cdFx0XHRcdFx0XHRlbGVtLmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIGV2ZW50SGFuZGxlLCBmYWxzZSApO1xyXG5cclxuXHRcdFx0XHRcdH0gZWxzZSBpZiAoIGVsZW0uYXR0YWNoRXZlbnQgKSB7XHJcblx0XHRcdFx0XHRcdGVsZW0uYXR0YWNoRXZlbnQoIFwib25cIiArIHR5cGUsIGV2ZW50SGFuZGxlICk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIHNwZWNpYWwuYWRkICkge1xyXG5cdFx0XHRcdHNwZWNpYWwuYWRkLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xyXG5cclxuXHRcdFx0XHRpZiAoICFoYW5kbGVPYmouaGFuZGxlci5ndWlkICkge1xyXG5cdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCA9IGhhbmRsZXIuZ3VpZDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIEFkZCB0byB0aGUgZWxlbWVudCdzIGhhbmRsZXIgbGlzdCwgZGVsZWdhdGVzIGluIGZyb250XHJcblx0XHRcdGlmICggc2VsZWN0b3IgKSB7XHJcblx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50KyssIDAsIGhhbmRsZU9iaiApO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGhhbmRsZXJzLnB1c2goIGhhbmRsZU9iaiApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBLZWVwIHRyYWNrIG9mIHdoaWNoIGV2ZW50cyBoYXZlIGV2ZXIgYmVlbiB1c2VkLCBmb3IgZXZlbnQgb3B0aW1pemF0aW9uXHJcblx0XHRcdGpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSA9IHRydWU7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gTnVsbGlmeSBlbGVtIHRvIHByZXZlbnQgbWVtb3J5IGxlYWtzIGluIElFXHJcblx0XHRlbGVtID0gbnVsbDtcclxuXHR9LFxyXG5cclxuXHQvLyBEZXRhY2ggYW4gZXZlbnQgb3Igc2V0IG9mIGV2ZW50cyBmcm9tIGFuIGVsZW1lbnRcclxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBlbGVtLCB0eXBlcywgaGFuZGxlciwgc2VsZWN0b3IsIG1hcHBlZFR5cGVzICkge1xyXG5cdFx0dmFyIGosIGhhbmRsZU9iaiwgdG1wLFxyXG5cdFx0XHRvcmlnQ291bnQsIHQsIGV2ZW50cyxcclxuXHRcdFx0c3BlY2lhbCwgaGFuZGxlcnMsIHR5cGUsXHJcblx0XHRcdG5hbWVzcGFjZXMsIG9yaWdUeXBlLFxyXG5cdFx0XHRlbGVtRGF0YSA9IGpRdWVyeS5oYXNEYXRhKCBlbGVtICkgJiYgalF1ZXJ5Ll9kYXRhKCBlbGVtICk7XHJcblxyXG5cdFx0aWYgKCAhZWxlbURhdGEgfHwgISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBPbmNlIGZvciBlYWNoIHR5cGUubmFtZXNwYWNlIGluIHR5cGVzOyB0eXBlIG1heSBiZSBvbWl0dGVkXHJcblx0XHR0eXBlcyA9ICggdHlwZXMgfHwgXCJcIiApLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbIFwiXCIgXTtcclxuXHRcdHQgPSB0eXBlcy5sZW5ndGg7XHJcblx0XHR3aGlsZSAoIHQtLSApIHtcclxuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xyXG5cdFx0XHR0eXBlID0gb3JpZ1R5cGUgPSB0bXBbIDEgXTtcclxuXHRcdFx0bmFtZXNwYWNlcyA9ICggdG1wWyAyIF0gfHwgXCJcIiApLnNwbGl0KCBcIi5cIiApLnNvcnQoKTtcclxuXHJcblx0XHRcdC8vIFVuYmluZCBhbGwgZXZlbnRzIChvbiB0aGlzIG5hbWVzcGFjZSwgaWYgcHJvdmlkZWQpIGZvciB0aGUgZWxlbWVudFxyXG5cdFx0XHRpZiAoICF0eXBlICkge1xyXG5cdFx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xyXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSArIHR5cGVzWyB0IF0sIGhhbmRsZXIsIHNlbGVjdG9yLCB0cnVlICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcclxuXHRcdFx0dHlwZSA9ICggc2VsZWN0b3IgPyBzcGVjaWFsLmRlbGVnYXRlVHlwZSA6IHNwZWNpYWwuYmluZFR5cGUgKSB8fCB0eXBlO1xyXG5cdFx0XHRoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdIHx8IFtdO1xyXG5cdFx0XHR0bXAgPSB0bXBbIDIgXSAmJlxyXG5cdFx0XHRcdG5ldyBSZWdFeHAoIFwiKF58XFxcXC4pXCIgKyBuYW1lc3BhY2VzLmpvaW4oIFwiXFxcXC4oPzouKlxcXFwufClcIiApICsgXCIoXFxcXC58JClcIiApO1xyXG5cclxuXHRcdFx0Ly8gUmVtb3ZlIG1hdGNoaW5nIGV2ZW50c1xyXG5cdFx0XHRvcmlnQ291bnQgPSBqID0gaGFuZGxlcnMubGVuZ3RoO1xyXG5cdFx0XHR3aGlsZSAoIGotLSApIHtcclxuXHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaiBdO1xyXG5cclxuXHRcdFx0XHRpZiAoICggbWFwcGVkVHlwZXMgfHwgb3JpZ1R5cGUgPT09IGhhbmRsZU9iai5vcmlnVHlwZSApICYmXHJcblx0XHRcdFx0XHQoICFoYW5kbGVyIHx8IGhhbmRsZXIuZ3VpZCA9PT0gaGFuZGxlT2JqLmd1aWQgKSAmJlxyXG5cdFx0XHRcdFx0KCAhdG1wIHx8IHRtcC50ZXN0KCBoYW5kbGVPYmoubmFtZXNwYWNlICkgKSAmJlxyXG5cdFx0XHRcdFx0KCAhc2VsZWN0b3IgfHwgc2VsZWN0b3IgPT09IGhhbmRsZU9iai5zZWxlY3RvciB8fFxyXG5cdFx0XHRcdFx0XHRzZWxlY3RvciA9PT0gXCIqKlwiICYmIGhhbmRsZU9iai5zZWxlY3RvciApICkge1xyXG5cdFx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBqLCAxICk7XHJcblxyXG5cdFx0XHRcdFx0aWYgKCBoYW5kbGVPYmouc2VsZWN0b3IgKSB7XHJcblx0XHRcdFx0XHRcdGhhbmRsZXJzLmRlbGVnYXRlQ291bnQtLTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGlmICggc3BlY2lhbC5yZW1vdmUgKSB7XHJcblx0XHRcdFx0XHRcdHNwZWNpYWwucmVtb3ZlLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gUmVtb3ZlIGdlbmVyaWMgZXZlbnQgaGFuZGxlciBpZiB3ZSByZW1vdmVkIHNvbWV0aGluZyBhbmQgbm8gbW9yZSBoYW5kbGVycyBleGlzdFxyXG5cdFx0XHQvLyAoYXZvaWRzIHBvdGVudGlhbCBmb3IgZW5kbGVzcyByZWN1cnNpb24gZHVyaW5nIHJlbW92YWwgb2Ygc3BlY2lhbCBldmVudCBoYW5kbGVycylcclxuXHRcdFx0aWYgKCBvcmlnQ291bnQgJiYgIWhhbmRsZXJzLmxlbmd0aCApIHtcclxuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnRlYXJkb3duIHx8XHJcblx0XHRcdFx0XHRzcGVjaWFsLnRlYXJkb3duLmNhbGwoIGVsZW0sIG5hbWVzcGFjZXMsIGVsZW1EYXRhLmhhbmRsZSApID09PSBmYWxzZSApIHtcclxuXHJcblx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGVsZW1EYXRhLmhhbmRsZSApO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0ZGVsZXRlIGV2ZW50c1sgdHlwZSBdO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gUmVtb3ZlIHRoZSBleHBhbmRvIGlmIGl0J3Mgbm8gbG9uZ2VyIHVzZWRcclxuXHRcdGlmICggalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGV2ZW50cyApICkge1xyXG5cdFx0XHRkZWxldGUgZWxlbURhdGEuaGFuZGxlO1xyXG5cclxuXHRcdFx0Ly8gcmVtb3ZlRGF0YSBhbHNvIGNoZWNrcyBmb3IgZW1wdGluZXNzIGFuZCBjbGVhcnMgdGhlIGV4cGFuZG8gaWYgZW1wdHlcclxuXHRcdFx0Ly8gc28gdXNlIGl0IGluc3RlYWQgb2YgZGVsZXRlXHJcblx0XHRcdGpRdWVyeS5fcmVtb3ZlRGF0YSggZWxlbSwgXCJldmVudHNcIiApO1xyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdHRyaWdnZXI6IGZ1bmN0aW9uKCBldmVudCwgZGF0YSwgZWxlbSwgb25seUhhbmRsZXJzICkge1xyXG5cdFx0dmFyIGhhbmRsZSwgb250eXBlLCBjdXIsXHJcblx0XHRcdGJ1YmJsZVR5cGUsIHNwZWNpYWwsIHRtcCwgaSxcclxuXHRcdFx0ZXZlbnRQYXRoID0gWyBlbGVtIHx8IGRvY3VtZW50IF0sXHJcblx0XHRcdHR5cGUgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwidHlwZVwiICkgPyBldmVudC50eXBlIDogZXZlbnQsXHJcblx0XHRcdG5hbWVzcGFjZXMgPSBoYXNPd24uY2FsbCggZXZlbnQsIFwibmFtZXNwYWNlXCIgKSA/IGV2ZW50Lm5hbWVzcGFjZS5zcGxpdCggXCIuXCIgKSA6IFtdO1xyXG5cclxuXHRcdGN1ciA9IHRtcCA9IGVsZW0gPSBlbGVtIHx8IGRvY3VtZW50O1xyXG5cclxuXHRcdC8vIERvbid0IGRvIGV2ZW50cyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXHJcblx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDMgfHwgZWxlbS5ub2RlVHlwZSA9PT0gOCApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIGZvY3VzL2JsdXIgbW9ycGhzIHRvIGZvY3VzaW4vb3V0OyBlbnN1cmUgd2UncmUgbm90IGZpcmluZyB0aGVtIHJpZ2h0IG5vd1xyXG5cdFx0aWYgKCByZm9jdXNNb3JwaC50ZXN0KCB0eXBlICsgalF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCApICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCB0eXBlLmluZGV4T2YoIFwiLlwiICkgPiAtMSApIHtcclxuXHJcblx0XHRcdC8vIE5hbWVzcGFjZWQgdHJpZ2dlcjsgY3JlYXRlIGEgcmVnZXhwIHRvIG1hdGNoIGV2ZW50IHR5cGUgaW4gaGFuZGxlKClcclxuXHRcdFx0bmFtZXNwYWNlcyA9IHR5cGUuc3BsaXQoIFwiLlwiICk7XHJcblx0XHRcdHR5cGUgPSBuYW1lc3BhY2VzLnNoaWZ0KCk7XHJcblx0XHRcdG5hbWVzcGFjZXMuc29ydCgpO1xyXG5cdFx0fVxyXG5cdFx0b250eXBlID0gdHlwZS5pbmRleE9mKCBcIjpcIiApIDwgMCAmJiBcIm9uXCIgKyB0eXBlO1xyXG5cclxuXHRcdC8vIENhbGxlciBjYW4gcGFzcyBpbiBhIGpRdWVyeS5FdmVudCBvYmplY3QsIE9iamVjdCwgb3IganVzdCBhbiBldmVudCB0eXBlIHN0cmluZ1xyXG5cdFx0ZXZlbnQgPSBldmVudFsgalF1ZXJ5LmV4cGFuZG8gXSA/XHJcblx0XHRcdGV2ZW50IDpcclxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCggdHlwZSwgdHlwZW9mIGV2ZW50ID09PSBcIm9iamVjdFwiICYmIGV2ZW50ICk7XHJcblxyXG5cdFx0Ly8gVHJpZ2dlciBiaXRtYXNrOiAmIDEgZm9yIG5hdGl2ZSBoYW5kbGVyczsgJiAyIGZvciBqUXVlcnkgKGFsd2F5cyB0cnVlKVxyXG5cdFx0ZXZlbnQuaXNUcmlnZ2VyID0gb25seUhhbmRsZXJzID8gMiA6IDM7XHJcblx0XHRldmVudC5uYW1lc3BhY2UgPSBuYW1lc3BhY2VzLmpvaW4oIFwiLlwiICk7XHJcblx0XHRldmVudC5ybmFtZXNwYWNlID0gZXZlbnQubmFtZXNwYWNlID9cclxuXHRcdFx0bmV3IFJlZ0V4cCggXCIoXnxcXFxcLilcIiArIG5hbWVzcGFjZXMuam9pbiggXCJcXFxcLig/Oi4qXFxcXC58KVwiICkgKyBcIihcXFxcLnwkKVwiICkgOlxyXG5cdFx0XHRudWxsO1xyXG5cclxuXHRcdC8vIENsZWFuIHVwIHRoZSBldmVudCBpbiBjYXNlIGl0IGlzIGJlaW5nIHJldXNlZFxyXG5cdFx0ZXZlbnQucmVzdWx0ID0gdW5kZWZpbmVkO1xyXG5cdFx0aWYgKCAhZXZlbnQudGFyZ2V0ICkge1xyXG5cdFx0XHRldmVudC50YXJnZXQgPSBlbGVtO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIENsb25lIGFueSBpbmNvbWluZyBkYXRhIGFuZCBwcmVwZW5kIHRoZSBldmVudCwgY3JlYXRpbmcgdGhlIGhhbmRsZXIgYXJnIGxpc3RcclxuXHRcdGRhdGEgPSBkYXRhID09IG51bGwgP1xyXG5cdFx0XHRbIGV2ZW50IF0gOlxyXG5cdFx0XHRqUXVlcnkubWFrZUFycmF5KCBkYXRhLCBbIGV2ZW50IF0gKTtcclxuXHJcblx0XHQvLyBBbGxvdyBzcGVjaWFsIGV2ZW50cyB0byBkcmF3IG91dHNpZGUgdGhlIGxpbmVzXHJcblx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcclxuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiBzcGVjaWFsLnRyaWdnZXIgJiYgc3BlY2lhbC50cmlnZ2VyLmFwcGx5KCBlbGVtLCBkYXRhICkgPT09IGZhbHNlICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gRGV0ZXJtaW5lIGV2ZW50IHByb3BhZ2F0aW9uIHBhdGggaW4gYWR2YW5jZSwgcGVyIFczQyBldmVudHMgc3BlYyAoIzk5NTEpXHJcblx0XHQvLyBCdWJibGUgdXAgdG8gZG9jdW1lbnQsIHRoZW4gdG8gd2luZG93OyB3YXRjaCBmb3IgYSBnbG9iYWwgb3duZXJEb2N1bWVudCB2YXIgKCM5NzI0KVxyXG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmICFzcGVjaWFsLm5vQnViYmxlICYmICFqUXVlcnkuaXNXaW5kb3coIGVsZW0gKSApIHtcclxuXHJcblx0XHRcdGJ1YmJsZVR5cGUgPSBzcGVjaWFsLmRlbGVnYXRlVHlwZSB8fCB0eXBlO1xyXG5cdFx0XHRpZiAoICFyZm9jdXNNb3JwaC50ZXN0KCBidWJibGVUeXBlICsgdHlwZSApICkge1xyXG5cdFx0XHRcdGN1ciA9IGN1ci5wYXJlbnROb2RlO1xyXG5cdFx0XHR9XHJcblx0XHRcdGZvciAoIDsgY3VyOyBjdXIgPSBjdXIucGFyZW50Tm9kZSApIHtcclxuXHRcdFx0XHRldmVudFBhdGgucHVzaCggY3VyICk7XHJcblx0XHRcdFx0dG1wID0gY3VyO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBPbmx5IGFkZCB3aW5kb3cgaWYgd2UgZ290IHRvIGRvY3VtZW50IChlLmcuLCBub3QgcGxhaW4gb2JqIG9yIGRldGFjaGVkIERPTSlcclxuXHRcdFx0aWYgKCB0bXAgPT09ICggZWxlbS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50ICkgKSB7XHJcblx0XHRcdFx0ZXZlbnRQYXRoLnB1c2goIHRtcC5kZWZhdWx0VmlldyB8fCB0bXAucGFyZW50V2luZG93IHx8IHdpbmRvdyApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gRmlyZSBoYW5kbGVycyBvbiB0aGUgZXZlbnQgcGF0aFxyXG5cdFx0aSA9IDA7XHJcblx0XHR3aGlsZSAoICggY3VyID0gZXZlbnRQYXRoWyBpKysgXSApICYmICFldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xyXG5cclxuXHRcdFx0ZXZlbnQudHlwZSA9IGkgPiAxID9cclxuXHRcdFx0XHRidWJibGVUeXBlIDpcclxuXHRcdFx0XHRzcGVjaWFsLmJpbmRUeXBlIHx8IHR5cGU7XHJcblxyXG5cdFx0XHQvLyBqUXVlcnkgaGFuZGxlclxyXG5cdFx0XHRoYW5kbGUgPSAoIGpRdWVyeS5fZGF0YSggY3VyLCBcImV2ZW50c1wiICkgfHwge30gKVsgZXZlbnQudHlwZSBdICYmXHJcblx0XHRcdFx0alF1ZXJ5Ll9kYXRhKCBjdXIsIFwiaGFuZGxlXCIgKTtcclxuXHJcblx0XHRcdGlmICggaGFuZGxlICkge1xyXG5cdFx0XHRcdGhhbmRsZS5hcHBseSggY3VyLCBkYXRhICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIE5hdGl2ZSBoYW5kbGVyXHJcblx0XHRcdGhhbmRsZSA9IG9udHlwZSAmJiBjdXJbIG9udHlwZSBdO1xyXG5cdFx0XHRpZiAoIGhhbmRsZSAmJiBoYW5kbGUuYXBwbHkgJiYgYWNjZXB0RGF0YSggY3VyICkgKSB7XHJcblx0XHRcdFx0ZXZlbnQucmVzdWx0ID0gaGFuZGxlLmFwcGx5KCBjdXIsIGRhdGEgKTtcclxuXHRcdFx0XHRpZiAoIGV2ZW50LnJlc3VsdCA9PT0gZmFsc2UgKSB7XHJcblx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0ZXZlbnQudHlwZSA9IHR5cGU7XHJcblxyXG5cdFx0Ly8gSWYgbm9ib2R5IHByZXZlbnRlZCB0aGUgZGVmYXVsdCBhY3Rpb24sIGRvIGl0IG5vd1xyXG5cdFx0aWYgKCAhb25seUhhbmRsZXJzICYmICFldmVudC5pc0RlZmF1bHRQcmV2ZW50ZWQoKSApIHtcclxuXHJcblx0XHRcdGlmIChcclxuXHRcdFx0XHQoICFzcGVjaWFsLl9kZWZhdWx0IHx8XHJcblx0XHRcdFx0IHNwZWNpYWwuX2RlZmF1bHQuYXBwbHkoIGV2ZW50UGF0aC5wb3AoKSwgZGF0YSApID09PSBmYWxzZVxyXG5cdFx0XHRcdCkgJiYgYWNjZXB0RGF0YSggZWxlbSApXHJcblx0XHRcdCkge1xyXG5cclxuXHRcdFx0XHQvLyBDYWxsIGEgbmF0aXZlIERPTSBtZXRob2Qgb24gdGhlIHRhcmdldCB3aXRoIHRoZSBzYW1lIG5hbWUgbmFtZSBhcyB0aGUgZXZlbnQuXHJcblx0XHRcdFx0Ly8gQ2FuJ3QgdXNlIGFuIC5pc0Z1bmN0aW9uKCkgY2hlY2sgaGVyZSBiZWNhdXNlIElFNi83IGZhaWxzIHRoYXQgdGVzdC5cclxuXHRcdFx0XHQvLyBEb24ndCBkbyBkZWZhdWx0IGFjdGlvbnMgb24gd2luZG93LCB0aGF0J3Mgd2hlcmUgZ2xvYmFsIHZhcmlhYmxlcyBiZSAoIzYxNzApXHJcblx0XHRcdFx0aWYgKCBvbnR5cGUgJiYgZWxlbVsgdHlwZSBdICYmICFqUXVlcnkuaXNXaW5kb3coIGVsZW0gKSApIHtcclxuXHJcblx0XHRcdFx0XHQvLyBEb24ndCByZS10cmlnZ2VyIGFuIG9uRk9PIGV2ZW50IHdoZW4gd2UgY2FsbCBpdHMgRk9PKCkgbWV0aG9kXHJcblx0XHRcdFx0XHR0bXAgPSBlbGVtWyBvbnR5cGUgXTtcclxuXHJcblx0XHRcdFx0XHRpZiAoIHRtcCApIHtcclxuXHRcdFx0XHRcdFx0ZWxlbVsgb250eXBlIF0gPSBudWxsO1xyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdC8vIFByZXZlbnQgcmUtdHJpZ2dlcmluZyBvZiB0aGUgc2FtZSBldmVudCwgc2luY2Ugd2UgYWxyZWFkeSBidWJibGVkIGl0IGFib3ZlXHJcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdHlwZTtcclxuXHRcdFx0XHRcdHRyeSB7XHJcblx0XHRcdFx0XHRcdGVsZW1bIHR5cGUgXSgpO1xyXG5cdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBJRTw5IGRpZXMgb24gZm9jdXMvYmx1ciB0byBoaWRkZW4gZWxlbWVudCAoIzE0ODYsIzEyNTE4KVxyXG5cdFx0XHRcdFx0XHQvLyBvbmx5IHJlcHJvZHVjaWJsZSBvbiB3aW5YUCBJRTggbmF0aXZlLCBub3QgSUU5IGluIElFOCBtb2RlXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdW5kZWZpbmVkO1xyXG5cclxuXHRcdFx0XHRcdGlmICggdG1wICkge1xyXG5cdFx0XHRcdFx0XHRlbGVtWyBvbnR5cGUgXSA9IHRtcDtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xyXG5cdH0sXHJcblxyXG5cdGRpc3BhdGNoOiBmdW5jdGlvbiggZXZlbnQgKSB7XHJcblxyXG5cdFx0Ly8gTWFrZSBhIHdyaXRhYmxlIGpRdWVyeS5FdmVudCBmcm9tIHRoZSBuYXRpdmUgZXZlbnQgb2JqZWN0XHJcblx0XHRldmVudCA9IGpRdWVyeS5ldmVudC5maXgoIGV2ZW50ICk7XHJcblxyXG5cdFx0dmFyIGksIGosIHJldCwgbWF0Y2hlZCwgaGFuZGxlT2JqLFxyXG5cdFx0XHRoYW5kbGVyUXVldWUgPSBbXSxcclxuXHRcdFx0YXJncyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLFxyXG5cdFx0XHRoYW5kbGVycyA9ICggalF1ZXJ5Ll9kYXRhKCB0aGlzLCBcImV2ZW50c1wiICkgfHwge30gKVsgZXZlbnQudHlwZSBdIHx8IFtdLFxyXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGV2ZW50LnR5cGUgXSB8fCB7fTtcclxuXHJcblx0XHQvLyBVc2UgdGhlIGZpeC1lZCBqUXVlcnkuRXZlbnQgcmF0aGVyIHRoYW4gdGhlIChyZWFkLW9ubHkpIG5hdGl2ZSBldmVudFxyXG5cdFx0YXJnc1sgMCBdID0gZXZlbnQ7XHJcblx0XHRldmVudC5kZWxlZ2F0ZVRhcmdldCA9IHRoaXM7XHJcblxyXG5cdFx0Ly8gQ2FsbCB0aGUgcHJlRGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlLCBhbmQgbGV0IGl0IGJhaWwgaWYgZGVzaXJlZFxyXG5cdFx0aWYgKCBzcGVjaWFsLnByZURpc3BhdGNoICYmIHNwZWNpYWwucHJlRGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKSA9PT0gZmFsc2UgKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBEZXRlcm1pbmUgaGFuZGxlcnNcclxuXHRcdGhhbmRsZXJRdWV1ZSA9IGpRdWVyeS5ldmVudC5oYW5kbGVycy5jYWxsKCB0aGlzLCBldmVudCwgaGFuZGxlcnMgKTtcclxuXHJcblx0XHQvLyBSdW4gZGVsZWdhdGVzIGZpcnN0OyB0aGV5IG1heSB3YW50IHRvIHN0b3AgcHJvcGFnYXRpb24gYmVuZWF0aCB1c1xyXG5cdFx0aSA9IDA7XHJcblx0XHR3aGlsZSAoICggbWF0Y2hlZCA9IGhhbmRsZXJRdWV1ZVsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcclxuXHRcdFx0ZXZlbnQuY3VycmVudFRhcmdldCA9IG1hdGNoZWQuZWxlbTtcclxuXHJcblx0XHRcdGogPSAwO1xyXG5cdFx0XHR3aGlsZSAoICggaGFuZGxlT2JqID0gbWF0Y2hlZC5oYW5kbGVyc1sgaisrIF0gKSAmJlxyXG5cdFx0XHRcdCFldmVudC5pc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xyXG5cclxuXHRcdFx0XHQvLyBUcmlnZ2VyZWQgZXZlbnQgbXVzdCBlaXRoZXIgMSkgaGF2ZSBubyBuYW1lc3BhY2UsIG9yIDIpIGhhdmUgbmFtZXNwYWNlKHMpXHJcblx0XHRcdFx0Ly8gYSBzdWJzZXQgb3IgZXF1YWwgdG8gdGhvc2UgaW4gdGhlIGJvdW5kIGV2ZW50IChib3RoIGNhbiBoYXZlIG5vIG5hbWVzcGFjZSkuXHJcblx0XHRcdFx0aWYgKCAhZXZlbnQucm5hbWVzcGFjZSB8fCBldmVudC5ybmFtZXNwYWNlLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApIHtcclxuXHJcblx0XHRcdFx0XHRldmVudC5oYW5kbGVPYmogPSBoYW5kbGVPYmo7XHJcblx0XHRcdFx0XHRldmVudC5kYXRhID0gaGFuZGxlT2JqLmRhdGE7XHJcblxyXG5cdFx0XHRcdFx0cmV0ID0gKCAoIGpRdWVyeS5ldmVudC5zcGVjaWFsWyBoYW5kbGVPYmoub3JpZ1R5cGUgXSB8fCB7fSApLmhhbmRsZSB8fFxyXG5cdFx0XHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlciApLmFwcGx5KCBtYXRjaGVkLmVsZW0sIGFyZ3MgKTtcclxuXHJcblx0XHRcdFx0XHRpZiAoIHJldCAhPT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHRcdFx0XHRpZiAoICggZXZlbnQucmVzdWx0ID0gcmV0ICkgPT09IGZhbHNlICkge1xyXG5cdFx0XHRcdFx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdFx0XHRcdFx0ZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBDYWxsIHRoZSBwb3N0RGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlXHJcblx0XHRpZiAoIHNwZWNpYWwucG9zdERpc3BhdGNoICkge1xyXG5cdFx0XHRzcGVjaWFsLnBvc3REaXNwYXRjaC5jYWxsKCB0aGlzLCBldmVudCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBldmVudC5yZXN1bHQ7XHJcblx0fSxcclxuXHJcblx0aGFuZGxlcnM6IGZ1bmN0aW9uKCBldmVudCwgaGFuZGxlcnMgKSB7XHJcblx0XHR2YXIgaSwgbWF0Y2hlcywgc2VsLCBoYW5kbGVPYmosXHJcblx0XHRcdGhhbmRsZXJRdWV1ZSA9IFtdLFxyXG5cdFx0XHRkZWxlZ2F0ZUNvdW50ID0gaGFuZGxlcnMuZGVsZWdhdGVDb3VudCxcclxuXHRcdFx0Y3VyID0gZXZlbnQudGFyZ2V0O1xyXG5cclxuXHRcdC8vIFN1cHBvcnQgKGF0IGxlYXN0KTogQ2hyb21lLCBJRTlcclxuXHRcdC8vIEZpbmQgZGVsZWdhdGUgaGFuZGxlcnNcclxuXHRcdC8vIEJsYWNrLWhvbGUgU1ZHIDx1c2U+IGluc3RhbmNlIHRyZWVzICgjMTMxODApXHJcblx0XHQvL1xyXG5cdFx0Ly8gU3VwcG9ydDogRmlyZWZveDw9NDIrXHJcblx0XHQvLyBBdm9pZCBub24tbGVmdC1jbGljayBpbiBGRiBidXQgZG9uJ3QgYmxvY2sgSUUgcmFkaW8gZXZlbnRzICgjMzg2MSwgZ2gtMjM0MylcclxuXHRcdGlmICggZGVsZWdhdGVDb3VudCAmJiBjdXIubm9kZVR5cGUgJiZcclxuXHRcdFx0KCBldmVudC50eXBlICE9PSBcImNsaWNrXCIgfHwgaXNOYU4oIGV2ZW50LmJ1dHRvbiApIHx8IGV2ZW50LmJ1dHRvbiA8IDEgKSApIHtcclxuXHJcblx0XHRcdC8qIGpzaGludCBlcWVxZXE6IGZhbHNlICovXHJcblx0XHRcdGZvciAoIDsgY3VyICE9IHRoaXM7IGN1ciA9IGN1ci5wYXJlbnROb2RlIHx8IHRoaXMgKSB7XHJcblx0XHRcdFx0LyoganNoaW50IGVxZXFlcTogdHJ1ZSAqL1xyXG5cclxuXHRcdFx0XHQvLyBEb24ndCBjaGVjayBub24tZWxlbWVudHMgKCMxMzIwOClcclxuXHRcdFx0XHQvLyBEb24ndCBwcm9jZXNzIGNsaWNrcyBvbiBkaXNhYmxlZCBlbGVtZW50cyAoIzY5MTEsICM4MTY1LCAjMTEzODIsICMxMTc2NClcclxuXHRcdFx0XHRpZiAoIGN1ci5ub2RlVHlwZSA9PT0gMSAmJiAoIGN1ci5kaXNhYmxlZCAhPT0gdHJ1ZSB8fCBldmVudC50eXBlICE9PSBcImNsaWNrXCIgKSApIHtcclxuXHRcdFx0XHRcdG1hdGNoZXMgPSBbXTtcclxuXHRcdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgZGVsZWdhdGVDb3VudDsgaSsrICkge1xyXG5cdFx0XHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaSBdO1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gRG9uJ3QgY29uZmxpY3Qgd2l0aCBPYmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKCMxMzIwMylcclxuXHRcdFx0XHRcdFx0c2VsID0gaGFuZGxlT2JqLnNlbGVjdG9yICsgXCIgXCI7XHJcblxyXG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXNbIHNlbCBdID09PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdFx0XHRcdFx0bWF0Y2hlc1sgc2VsIF0gPSBoYW5kbGVPYmoubmVlZHNDb250ZXh0ID9cclxuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeSggc2VsLCB0aGlzICkuaW5kZXgoIGN1ciApID4gLTEgOlxyXG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQoIHNlbCwgdGhpcywgbnVsbCwgWyBjdXIgXSApLmxlbmd0aDtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXNbIHNlbCBdICkge1xyXG5cdFx0XHRcdFx0XHRcdG1hdGNoZXMucHVzaCggaGFuZGxlT2JqICk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGlmICggbWF0Y2hlcy5sZW5ndGggKSB7XHJcblx0XHRcdFx0XHRcdGhhbmRsZXJRdWV1ZS5wdXNoKCB7IGVsZW06IGN1ciwgaGFuZGxlcnM6IG1hdGNoZXMgfSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEFkZCB0aGUgcmVtYWluaW5nIChkaXJlY3RseS1ib3VuZCkgaGFuZGxlcnNcclxuXHRcdGlmICggZGVsZWdhdGVDb3VudCA8IGhhbmRsZXJzLmxlbmd0aCApIHtcclxuXHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogdGhpcywgaGFuZGxlcnM6IGhhbmRsZXJzLnNsaWNlKCBkZWxlZ2F0ZUNvdW50ICkgfSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBoYW5kbGVyUXVldWU7XHJcblx0fSxcclxuXHJcblx0Zml4OiBmdW5jdGlvbiggZXZlbnQgKSB7XHJcblx0XHRpZiAoIGV2ZW50WyBqUXVlcnkuZXhwYW5kbyBdICkge1xyXG5cdFx0XHRyZXR1cm4gZXZlbnQ7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQ3JlYXRlIGEgd3JpdGFibGUgY29weSBvZiB0aGUgZXZlbnQgb2JqZWN0IGFuZCBub3JtYWxpemUgc29tZSBwcm9wZXJ0aWVzXHJcblx0XHR2YXIgaSwgcHJvcCwgY29weSxcclxuXHRcdFx0dHlwZSA9IGV2ZW50LnR5cGUsXHJcblx0XHRcdG9yaWdpbmFsRXZlbnQgPSBldmVudCxcclxuXHRcdFx0Zml4SG9vayA9IHRoaXMuZml4SG9va3NbIHR5cGUgXTtcclxuXHJcblx0XHRpZiAoICFmaXhIb29rICkge1xyXG5cdFx0XHR0aGlzLmZpeEhvb2tzWyB0eXBlIF0gPSBmaXhIb29rID1cclxuXHRcdFx0XHRybW91c2VFdmVudC50ZXN0KCB0eXBlICkgPyB0aGlzLm1vdXNlSG9va3MgOlxyXG5cdFx0XHRcdHJrZXlFdmVudC50ZXN0KCB0eXBlICkgPyB0aGlzLmtleUhvb2tzIDpcclxuXHRcdFx0XHR7fTtcclxuXHRcdH1cclxuXHRcdGNvcHkgPSBmaXhIb29rLnByb3BzID8gdGhpcy5wcm9wcy5jb25jYXQoIGZpeEhvb2sucHJvcHMgKSA6IHRoaXMucHJvcHM7XHJcblxyXG5cdFx0ZXZlbnQgPSBuZXcgalF1ZXJ5LkV2ZW50KCBvcmlnaW5hbEV2ZW50ICk7XHJcblxyXG5cdFx0aSA9IGNvcHkubGVuZ3RoO1xyXG5cdFx0d2hpbGUgKCBpLS0gKSB7XHJcblx0XHRcdHByb3AgPSBjb3B5WyBpIF07XHJcblx0XHRcdGV2ZW50WyBwcm9wIF0gPSBvcmlnaW5hbEV2ZW50WyBwcm9wIF07XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gU3VwcG9ydDogSUU8OVxyXG5cdFx0Ly8gRml4IHRhcmdldCBwcm9wZXJ0eSAoIzE5MjUpXHJcblx0XHRpZiAoICFldmVudC50YXJnZXQgKSB7XHJcblx0XHRcdGV2ZW50LnRhcmdldCA9IG9yaWdpbmFsRXZlbnQuc3JjRWxlbWVudCB8fCBkb2N1bWVudDtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgNi04K1xyXG5cdFx0Ly8gVGFyZ2V0IHNob3VsZCBub3QgYmUgYSB0ZXh0IG5vZGUgKCM1MDQsICMxMzE0MylcclxuXHRcdGlmICggZXZlbnQudGFyZ2V0Lm5vZGVUeXBlID09PSAzICkge1xyXG5cdFx0XHRldmVudC50YXJnZXQgPSBldmVudC50YXJnZXQucGFyZW50Tm9kZTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBTdXBwb3J0OiBJRTw5XHJcblx0XHQvLyBGb3IgbW91c2Uva2V5IGV2ZW50cywgbWV0YUtleT09ZmFsc2UgaWYgaXQncyB1bmRlZmluZWQgKCMzMzY4LCAjMTEzMjgpXHJcblx0XHRldmVudC5tZXRhS2V5ID0gISFldmVudC5tZXRhS2V5O1xyXG5cclxuXHRcdHJldHVybiBmaXhIb29rLmZpbHRlciA/IGZpeEhvb2suZmlsdGVyKCBldmVudCwgb3JpZ2luYWxFdmVudCApIDogZXZlbnQ7XHJcblx0fSxcclxuXHJcblx0Ly8gSW5jbHVkZXMgc29tZSBldmVudCBwcm9wcyBzaGFyZWQgYnkgS2V5RXZlbnQgYW5kIE1vdXNlRXZlbnRcclxuXHRwcm9wczogKCBcImFsdEtleSBidWJibGVzIGNhbmNlbGFibGUgY3RybEtleSBjdXJyZW50VGFyZ2V0IGRldGFpbCBldmVudFBoYXNlIFwiICtcclxuXHRcdFwibWV0YUtleSByZWxhdGVkVGFyZ2V0IHNoaWZ0S2V5IHRhcmdldCB0aW1lU3RhbXAgdmlldyB3aGljaFwiICkuc3BsaXQoIFwiIFwiICksXHJcblxyXG5cdGZpeEhvb2tzOiB7fSxcclxuXHJcblx0a2V5SG9va3M6IHtcclxuXHRcdHByb3BzOiBcImNoYXIgY2hhckNvZGUga2V5IGtleUNvZGVcIi5zcGxpdCggXCIgXCIgKSxcclxuXHRcdGZpbHRlcjogZnVuY3Rpb24oIGV2ZW50LCBvcmlnaW5hbCApIHtcclxuXHJcblx0XHRcdC8vIEFkZCB3aGljaCBmb3Iga2V5IGV2ZW50c1xyXG5cdFx0XHRpZiAoIGV2ZW50LndoaWNoID09IG51bGwgKSB7XHJcblx0XHRcdFx0ZXZlbnQud2hpY2ggPSBvcmlnaW5hbC5jaGFyQ29kZSAhPSBudWxsID8gb3JpZ2luYWwuY2hhckNvZGUgOiBvcmlnaW5hbC5rZXlDb2RlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm4gZXZlbnQ7XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0bW91c2VIb29rczoge1xyXG5cdFx0cHJvcHM6ICggXCJidXR0b24gYnV0dG9ucyBjbGllbnRYIGNsaWVudFkgZnJvbUVsZW1lbnQgb2Zmc2V0WCBvZmZzZXRZIFwiICtcclxuXHRcdFx0XCJwYWdlWCBwYWdlWSBzY3JlZW5YIHNjcmVlblkgdG9FbGVtZW50XCIgKS5zcGxpdCggXCIgXCIgKSxcclxuXHRcdGZpbHRlcjogZnVuY3Rpb24oIGV2ZW50LCBvcmlnaW5hbCApIHtcclxuXHRcdFx0dmFyIGJvZHksIGV2ZW50RG9jLCBkb2MsXHJcblx0XHRcdFx0YnV0dG9uID0gb3JpZ2luYWwuYnV0dG9uLFxyXG5cdFx0XHRcdGZyb21FbGVtZW50ID0gb3JpZ2luYWwuZnJvbUVsZW1lbnQ7XHJcblxyXG5cdFx0XHQvLyBDYWxjdWxhdGUgcGFnZVgvWSBpZiBtaXNzaW5nIGFuZCBjbGllbnRYL1kgYXZhaWxhYmxlXHJcblx0XHRcdGlmICggZXZlbnQucGFnZVggPT0gbnVsbCAmJiBvcmlnaW5hbC5jbGllbnRYICE9IG51bGwgKSB7XHJcblx0XHRcdFx0ZXZlbnREb2MgPSBldmVudC50YXJnZXQub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudDtcclxuXHRcdFx0XHRkb2MgPSBldmVudERvYy5kb2N1bWVudEVsZW1lbnQ7XHJcblx0XHRcdFx0Ym9keSA9IGV2ZW50RG9jLmJvZHk7XHJcblxyXG5cdFx0XHRcdGV2ZW50LnBhZ2VYID0gb3JpZ2luYWwuY2xpZW50WCArXHJcblx0XHRcdFx0XHQoIGRvYyAmJiBkb2Muc2Nyb2xsTGVmdCB8fCBib2R5ICYmIGJvZHkuc2Nyb2xsTGVmdCB8fCAwICkgLVxyXG5cdFx0XHRcdFx0KCBkb2MgJiYgZG9jLmNsaWVudExlZnQgfHwgYm9keSAmJiBib2R5LmNsaWVudExlZnQgfHwgMCApO1xyXG5cdFx0XHRcdGV2ZW50LnBhZ2VZID0gb3JpZ2luYWwuY2xpZW50WSArXHJcblx0XHRcdFx0XHQoIGRvYyAmJiBkb2Muc2Nyb2xsVG9wICB8fCBib2R5ICYmIGJvZHkuc2Nyb2xsVG9wICB8fCAwICkgLVxyXG5cdFx0XHRcdFx0KCBkb2MgJiYgZG9jLmNsaWVudFRvcCAgfHwgYm9keSAmJiBib2R5LmNsaWVudFRvcCAgfHwgMCApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBBZGQgcmVsYXRlZFRhcmdldCwgaWYgbmVjZXNzYXJ5XHJcblx0XHRcdGlmICggIWV2ZW50LnJlbGF0ZWRUYXJnZXQgJiYgZnJvbUVsZW1lbnQgKSB7XHJcblx0XHRcdFx0ZXZlbnQucmVsYXRlZFRhcmdldCA9IGZyb21FbGVtZW50ID09PSBldmVudC50YXJnZXQgP1xyXG5cdFx0XHRcdFx0b3JpZ2luYWwudG9FbGVtZW50IDpcclxuXHRcdFx0XHRcdGZyb21FbGVtZW50O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBBZGQgd2hpY2ggZm9yIGNsaWNrOiAxID09PSBsZWZ0OyAyID09PSBtaWRkbGU7IDMgPT09IHJpZ2h0XHJcblx0XHRcdC8vIE5vdGU6IGJ1dHRvbiBpcyBub3Qgbm9ybWFsaXplZCwgc28gZG9uJ3QgdXNlIGl0XHJcblx0XHRcdGlmICggIWV2ZW50LndoaWNoICYmIGJ1dHRvbiAhPT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHRcdGV2ZW50LndoaWNoID0gKCBidXR0b24gJiAxID8gMSA6ICggYnV0dG9uICYgMiA/IDMgOiAoIGJ1dHRvbiAmIDQgPyAyIDogMCApICkgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuIGV2ZW50O1xyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdHNwZWNpYWw6IHtcclxuXHRcdGxvYWQ6IHtcclxuXHJcblx0XHRcdC8vIFByZXZlbnQgdHJpZ2dlcmVkIGltYWdlLmxvYWQgZXZlbnRzIGZyb20gYnViYmxpbmcgdG8gd2luZG93LmxvYWRcclxuXHRcdFx0bm9CdWJibGU6IHRydWVcclxuXHRcdH0sXHJcblx0XHRmb2N1czoge1xyXG5cclxuXHRcdFx0Ly8gRmlyZSBuYXRpdmUgZXZlbnQgaWYgcG9zc2libGUgc28gYmx1ci9mb2N1cyBzZXF1ZW5jZSBpcyBjb3JyZWN0XHJcblx0XHRcdHRyaWdnZXI6IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGlmICggdGhpcyAhPT0gc2FmZUFjdGl2ZUVsZW1lbnQoKSAmJiB0aGlzLmZvY3VzICkge1xyXG5cdFx0XHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRcdFx0dGhpcy5mb2N1cygpO1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdFx0XHR9IGNhdGNoICggZSApIHtcclxuXHJcblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFPDlcclxuXHRcdFx0XHRcdFx0Ly8gSWYgd2UgZXJyb3Igb24gZm9jdXMgdG8gaGlkZGVuIGVsZW1lbnQgKCMxNDg2LCAjMTI1MTgpLFxyXG5cdFx0XHRcdFx0XHQvLyBsZXQgLnRyaWdnZXIoKSBydW4gdGhlIGhhbmRsZXJzXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRkZWxlZ2F0ZVR5cGU6IFwiZm9jdXNpblwiXHJcblx0XHR9LFxyXG5cdFx0Ymx1cjoge1xyXG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRpZiAoIHRoaXMgPT09IHNhZmVBY3RpdmVFbGVtZW50KCkgJiYgdGhpcy5ibHVyICkge1xyXG5cdFx0XHRcdFx0dGhpcy5ibHVyKCk7XHJcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRkZWxlZ2F0ZVR5cGU6IFwiZm9jdXNvdXRcIlxyXG5cdFx0fSxcclxuXHRcdGNsaWNrOiB7XHJcblxyXG5cdFx0XHQvLyBGb3IgY2hlY2tib3gsIGZpcmUgbmF0aXZlIGV2ZW50IHNvIGNoZWNrZWQgc3RhdGUgd2lsbCBiZSByaWdodFxyXG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRpZiAoIGpRdWVyeS5ub2RlTmFtZSggdGhpcywgXCJpbnB1dFwiICkgJiYgdGhpcy50eXBlID09PSBcImNoZWNrYm94XCIgJiYgdGhpcy5jbGljayApIHtcclxuXHRcdFx0XHRcdHRoaXMuY2xpY2soKTtcclxuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sXHJcblxyXG5cdFx0XHQvLyBGb3IgY3Jvc3MtYnJvd3NlciBjb25zaXN0ZW5jeSwgZG9uJ3QgZmlyZSBuYXRpdmUgLmNsaWNrKCkgb24gbGlua3NcclxuXHRcdFx0X2RlZmF1bHQ6IGZ1bmN0aW9uKCBldmVudCApIHtcclxuXHRcdFx0XHRyZXR1cm4galF1ZXJ5Lm5vZGVOYW1lKCBldmVudC50YXJnZXQsIFwiYVwiICk7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblxyXG5cdFx0YmVmb3JldW5sb2FkOiB7XHJcblx0XHRcdHBvc3REaXNwYXRjaDogZnVuY3Rpb24oIGV2ZW50ICkge1xyXG5cclxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDIwK1xyXG5cdFx0XHRcdC8vIEZpcmVmb3ggZG9lc24ndCBhbGVydCBpZiB0aGUgcmV0dXJuVmFsdWUgZmllbGQgaXMgbm90IHNldC5cclxuXHRcdFx0XHRpZiAoIGV2ZW50LnJlc3VsdCAhPT0gdW5kZWZpbmVkICYmIGV2ZW50Lm9yaWdpbmFsRXZlbnQgKSB7XHJcblx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlID0gZXZlbnQucmVzdWx0O1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdC8vIFBpZ2d5YmFjayBvbiBhIGRvbm9yIGV2ZW50IHRvIHNpbXVsYXRlIGEgZGlmZmVyZW50IG9uZVxyXG5cdHNpbXVsYXRlOiBmdW5jdGlvbiggdHlwZSwgZWxlbSwgZXZlbnQgKSB7XHJcblx0XHR2YXIgZSA9IGpRdWVyeS5leHRlbmQoXHJcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoKSxcclxuXHRcdFx0ZXZlbnQsXHJcblx0XHRcdHtcclxuXHRcdFx0XHR0eXBlOiB0eXBlLFxyXG5cdFx0XHRcdGlzU2ltdWxhdGVkOiB0cnVlXHJcblxyXG5cdFx0XHRcdC8vIFByZXZpb3VzbHksIGBvcmlnaW5hbEV2ZW50OiB7fWAgd2FzIHNldCBoZXJlLCBzbyBzdG9wUHJvcGFnYXRpb24gY2FsbFxyXG5cdFx0XHRcdC8vIHdvdWxkIG5vdCBiZSB0cmlnZ2VyZWQgb24gZG9ub3IgZXZlbnQsIHNpbmNlIGluIG91ciBvd25cclxuXHRcdFx0XHQvLyBqUXVlcnkuZXZlbnQuc3RvcFByb3BhZ2F0aW9uIGZ1bmN0aW9uIHdlIGhhZCBhIGNoZWNrIGZvciBleGlzdGVuY2Ugb2ZcclxuXHRcdFx0XHQvLyBvcmlnaW5hbEV2ZW50LnN0b3BQcm9wYWdhdGlvbiBtZXRob2QsIHNvLCBjb25zZXF1ZW50bHkgaXQgd291bGQgYmUgYSBub29wLlxyXG5cdFx0XHRcdC8vXHJcblx0XHRcdFx0Ly8gR3VhcmQgZm9yIHNpbXVsYXRlZCBldmVudHMgd2FzIG1vdmVkIHRvIGpRdWVyeS5ldmVudC5zdG9wUHJvcGFnYXRpb24gZnVuY3Rpb25cclxuXHRcdFx0XHQvLyBzaW5jZSBgb3JpZ2luYWxFdmVudGAgc2hvdWxkIHBvaW50IHRvIHRoZSBvcmlnaW5hbCBldmVudCBmb3IgdGhlXHJcblx0XHRcdFx0Ly8gY29uc3RhbmN5IHdpdGggb3RoZXIgZXZlbnRzIGFuZCBmb3IgbW9yZSBmb2N1c2VkIGxvZ2ljXHJcblx0XHRcdH1cclxuXHRcdCk7XHJcblxyXG5cdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIGUsIG51bGwsIGVsZW0gKTtcclxuXHJcblx0XHRpZiAoIGUuaXNEZWZhdWx0UHJldmVudGVkKCkgKSB7XHJcblx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHR9XHJcblx0fVxyXG59O1xyXG5cclxualF1ZXJ5LnJlbW92ZUV2ZW50ID0gZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciA/XHJcblx0ZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGhhbmRsZSApIHtcclxuXHJcblx0XHQvLyBUaGlzIFwiaWZcIiBpcyBuZWVkZWQgZm9yIHBsYWluIG9iamVjdHNcclxuXHRcdGlmICggZWxlbS5yZW1vdmVFdmVudExpc3RlbmVyICkge1xyXG5cdFx0XHRlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApO1xyXG5cdFx0fVxyXG5cdH0gOlxyXG5cdGZ1bmN0aW9uKCBlbGVtLCB0eXBlLCBoYW5kbGUgKSB7XHJcblx0XHR2YXIgbmFtZSA9IFwib25cIiArIHR5cGU7XHJcblxyXG5cdFx0aWYgKCBlbGVtLmRldGFjaEV2ZW50ICkge1xyXG5cclxuXHRcdFx0Ly8gIzg1NDUsICM3MDU0LCBwcmV2ZW50aW5nIG1lbW9yeSBsZWFrcyBmb3IgY3VzdG9tIGV2ZW50cyBpbiBJRTYtOFxyXG5cdFx0XHQvLyBkZXRhY2hFdmVudCBuZWVkZWQgcHJvcGVydHkgb24gZWxlbWVudCwgYnkgbmFtZSBvZiB0aGF0IGV2ZW50LFxyXG5cdFx0XHQvLyB0byBwcm9wZXJseSBleHBvc2UgaXQgdG8gR0NcclxuXHRcdFx0aWYgKCB0eXBlb2YgZWxlbVsgbmFtZSBdID09PSBcInVuZGVmaW5lZFwiICkge1xyXG5cdFx0XHRcdGVsZW1bIG5hbWUgXSA9IG51bGw7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGVsZW0uZGV0YWNoRXZlbnQoIG5hbWUsIGhhbmRsZSApO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5qUXVlcnkuRXZlbnQgPSBmdW5jdGlvbiggc3JjLCBwcm9wcyApIHtcclxuXHJcblx0Ly8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IHRoZSAnbmV3JyBrZXl3b3JkXHJcblx0aWYgKCAhKCB0aGlzIGluc3RhbmNlb2YgalF1ZXJ5LkV2ZW50ICkgKSB7XHJcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5FdmVudCggc3JjLCBwcm9wcyApO1xyXG5cdH1cclxuXHJcblx0Ly8gRXZlbnQgb2JqZWN0XHJcblx0aWYgKCBzcmMgJiYgc3JjLnR5cGUgKSB7XHJcblx0XHR0aGlzLm9yaWdpbmFsRXZlbnQgPSBzcmM7XHJcblx0XHR0aGlzLnR5cGUgPSBzcmMudHlwZTtcclxuXHJcblx0XHQvLyBFdmVudHMgYnViYmxpbmcgdXAgdGhlIGRvY3VtZW50IG1heSBoYXZlIGJlZW4gbWFya2VkIGFzIHByZXZlbnRlZFxyXG5cdFx0Ly8gYnkgYSBoYW5kbGVyIGxvd2VyIGRvd24gdGhlIHRyZWU7IHJlZmxlY3QgdGhlIGNvcnJlY3QgdmFsdWUuXHJcblx0XHR0aGlzLmlzRGVmYXVsdFByZXZlbnRlZCA9IHNyYy5kZWZhdWx0UHJldmVudGVkIHx8XHJcblx0XHRcdFx0c3JjLmRlZmF1bHRQcmV2ZW50ZWQgPT09IHVuZGVmaW5lZCAmJlxyXG5cclxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8IDksIEFuZHJvaWQgPCA0LjBcclxuXHRcdFx0XHRzcmMucmV0dXJuVmFsdWUgPT09IGZhbHNlID9cclxuXHRcdFx0cmV0dXJuVHJ1ZSA6XHJcblx0XHRcdHJldHVybkZhbHNlO1xyXG5cclxuXHQvLyBFdmVudCB0eXBlXHJcblx0fSBlbHNlIHtcclxuXHRcdHRoaXMudHlwZSA9IHNyYztcclxuXHR9XHJcblxyXG5cdC8vIFB1dCBleHBsaWNpdGx5IHByb3ZpZGVkIHByb3BlcnRpZXMgb250byB0aGUgZXZlbnQgb2JqZWN0XHJcblx0aWYgKCBwcm9wcyApIHtcclxuXHRcdGpRdWVyeS5leHRlbmQoIHRoaXMsIHByb3BzICk7XHJcblx0fVxyXG5cclxuXHQvLyBDcmVhdGUgYSB0aW1lc3RhbXAgaWYgaW5jb21pbmcgZXZlbnQgZG9lc24ndCBoYXZlIG9uZVxyXG5cdHRoaXMudGltZVN0YW1wID0gc3JjICYmIHNyYy50aW1lU3RhbXAgfHwgalF1ZXJ5Lm5vdygpO1xyXG5cclxuXHQvLyBNYXJrIGl0IGFzIGZpeGVkXHJcblx0dGhpc1sgalF1ZXJ5LmV4cGFuZG8gXSA9IHRydWU7XHJcbn07XHJcblxyXG4vLyBqUXVlcnkuRXZlbnQgaXMgYmFzZWQgb24gRE9NMyBFdmVudHMgYXMgc3BlY2lmaWVkIGJ5IHRoZSBFQ01BU2NyaXB0IExhbmd1YWdlIEJpbmRpbmdcclxuLy8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAwMy9XRC1ET00tTGV2ZWwtMy1FdmVudHMtMjAwMzAzMzEvZWNtYS1zY3JpcHQtYmluZGluZy5odG1sXHJcbmpRdWVyeS5FdmVudC5wcm90b3R5cGUgPSB7XHJcblx0Y29uc3RydWN0b3I6IGpRdWVyeS5FdmVudCxcclxuXHRpc0RlZmF1bHRQcmV2ZW50ZWQ6IHJldHVybkZhbHNlLFxyXG5cdGlzUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcclxuXHRpc0ltbWVkaWF0ZVByb3BhZ2F0aW9uU3RvcHBlZDogcmV0dXJuRmFsc2UsXHJcblxyXG5cdHByZXZlbnREZWZhdWx0OiBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xyXG5cclxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gcmV0dXJuVHJ1ZTtcclxuXHRcdGlmICggIWUgKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBJZiBwcmV2ZW50RGVmYXVsdCBleGlzdHMsIHJ1biBpdCBvbiB0aGUgb3JpZ2luYWwgZXZlbnRcclxuXHRcdGlmICggZS5wcmV2ZW50RGVmYXVsdCApIHtcclxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IElFXHJcblx0XHQvLyBPdGhlcndpc2Ugc2V0IHRoZSByZXR1cm5WYWx1ZSBwcm9wZXJ0eSBvZiB0aGUgb3JpZ2luYWwgZXZlbnQgdG8gZmFsc2VcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGUucmV0dXJuVmFsdWUgPSBmYWxzZTtcclxuXHRcdH1cclxuXHR9LFxyXG5cdHN0b3BQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcclxuXHJcblx0XHR0aGlzLmlzUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcclxuXHJcblx0XHRpZiAoICFlIHx8IHRoaXMuaXNTaW11bGF0ZWQgKSB7XHJcblx0XHRcdHJldHVybjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBJZiBzdG9wUHJvcGFnYXRpb24gZXhpc3RzLCBydW4gaXQgb24gdGhlIG9yaWdpbmFsIGV2ZW50XHJcblx0XHRpZiAoIGUuc3RvcFByb3BhZ2F0aW9uICkge1xyXG5cdFx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IElFXHJcblx0XHQvLyBTZXQgdGhlIGNhbmNlbEJ1YmJsZSBwcm9wZXJ0eSBvZiB0aGUgb3JpZ2luYWwgZXZlbnQgdG8gdHJ1ZVxyXG5cdFx0ZS5jYW5jZWxCdWJibGUgPSB0cnVlO1xyXG5cdH0sXHJcblx0c3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xyXG5cclxuXHRcdHRoaXMuaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xyXG5cclxuXHRcdGlmICggZSAmJiBlLnN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbiApIHtcclxuXHRcdFx0ZS5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTtcclxuXHRcdH1cclxuXHJcblx0XHR0aGlzLnN0b3BQcm9wYWdhdGlvbigpO1xyXG5cdH1cclxufTtcclxuXHJcbi8vIENyZWF0ZSBtb3VzZWVudGVyL2xlYXZlIGV2ZW50cyB1c2luZyBtb3VzZW92ZXIvb3V0IGFuZCBldmVudC10aW1lIGNoZWNrc1xyXG4vLyBzbyB0aGF0IGV2ZW50IGRlbGVnYXRpb24gd29ya3MgaW4galF1ZXJ5LlxyXG4vLyBEbyB0aGUgc2FtZSBmb3IgcG9pbnRlcmVudGVyL3BvaW50ZXJsZWF2ZSBhbmQgcG9pbnRlcm92ZXIvcG9pbnRlcm91dFxyXG4vL1xyXG4vLyBTdXBwb3J0OiBTYWZhcmkgNyBvbmx5XHJcbi8vIFNhZmFyaSBzZW5kcyBtb3VzZWVudGVyIHRvbyBvZnRlbjsgc2VlOlxyXG4vLyBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDcwMjU4XHJcbi8vIGZvciB0aGUgZGVzY3JpcHRpb24gb2YgdGhlIGJ1ZyAoaXQgZXhpc3RlZCBpbiBvbGRlciBDaHJvbWUgdmVyc2lvbnMgYXMgd2VsbCkuXHJcbmpRdWVyeS5lYWNoKCB7XHJcblx0bW91c2VlbnRlcjogXCJtb3VzZW92ZXJcIixcclxuXHRtb3VzZWxlYXZlOiBcIm1vdXNlb3V0XCIsXHJcblx0cG9pbnRlcmVudGVyOiBcInBvaW50ZXJvdmVyXCIsXHJcblx0cG9pbnRlcmxlYXZlOiBcInBvaW50ZXJvdXRcIlxyXG59LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xyXG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBvcmlnIF0gPSB7XHJcblx0XHRkZWxlZ2F0ZVR5cGU6IGZpeCxcclxuXHRcdGJpbmRUeXBlOiBmaXgsXHJcblxyXG5cdFx0aGFuZGxlOiBmdW5jdGlvbiggZXZlbnQgKSB7XHJcblx0XHRcdHZhciByZXQsXHJcblx0XHRcdFx0dGFyZ2V0ID0gdGhpcyxcclxuXHRcdFx0XHRyZWxhdGVkID0gZXZlbnQucmVsYXRlZFRhcmdldCxcclxuXHRcdFx0XHRoYW5kbGVPYmogPSBldmVudC5oYW5kbGVPYmo7XHJcblxyXG5cdFx0XHQvLyBGb3IgbW91c2VlbnRlci9sZWF2ZSBjYWxsIHRoZSBoYW5kbGVyIGlmIHJlbGF0ZWQgaXMgb3V0c2lkZSB0aGUgdGFyZ2V0LlxyXG5cdFx0XHQvLyBOQjogTm8gcmVsYXRlZFRhcmdldCBpZiB0aGUgbW91c2UgbGVmdC9lbnRlcmVkIHRoZSBicm93c2VyIHdpbmRvd1xyXG5cdFx0XHRpZiAoICFyZWxhdGVkIHx8ICggcmVsYXRlZCAhPT0gdGFyZ2V0ICYmICFqUXVlcnkuY29udGFpbnMoIHRhcmdldCwgcmVsYXRlZCApICkgKSB7XHJcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGhhbmRsZU9iai5vcmlnVHlwZTtcclxuXHRcdFx0XHRyZXQgPSBoYW5kbGVPYmouaGFuZGxlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XHJcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGZpeDtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gcmV0O1xyXG5cdFx0fVxyXG5cdH07XHJcbn0gKTtcclxuXHJcbi8vIElFIHN1Ym1pdCBkZWxlZ2F0aW9uXHJcbmlmICggIXN1cHBvcnQuc3VibWl0ICkge1xyXG5cclxuXHRqUXVlcnkuZXZlbnQuc3BlY2lhbC5zdWJtaXQgPSB7XHJcblx0XHRzZXR1cDogZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHQvLyBPbmx5IG5lZWQgdGhpcyBmb3IgZGVsZWdhdGVkIGZvcm0gc3VibWl0IGV2ZW50c1xyXG5cdFx0XHRpZiAoIGpRdWVyeS5ub2RlTmFtZSggdGhpcywgXCJmb3JtXCIgKSApIHtcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIExhenktYWRkIGEgc3VibWl0IGhhbmRsZXIgd2hlbiBhIGRlc2NlbmRhbnQgZm9ybSBtYXkgcG90ZW50aWFsbHkgYmUgc3VibWl0dGVkXHJcblx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIHRoaXMsIFwiY2xpY2suX3N1Ym1pdCBrZXlwcmVzcy5fc3VibWl0XCIsIGZ1bmN0aW9uKCBlICkge1xyXG5cclxuXHRcdFx0XHQvLyBOb2RlIG5hbWUgY2hlY2sgYXZvaWRzIGEgVk1MLXJlbGF0ZWQgY3Jhc2ggaW4gSUUgKCM5ODA3KVxyXG5cdFx0XHRcdHZhciBlbGVtID0gZS50YXJnZXQsXHJcblx0XHRcdFx0XHRmb3JtID0galF1ZXJ5Lm5vZGVOYW1lKCBlbGVtLCBcImlucHV0XCIgKSB8fCBqUXVlcnkubm9kZU5hbWUoIGVsZW0sIFwiYnV0dG9uXCIgKSA/XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PThcclxuXHRcdFx0XHRcdFx0Ly8gV2UgdXNlIGpRdWVyeS5wcm9wIGluc3RlYWQgb2YgZWxlbS5mb3JtXHJcblx0XHRcdFx0XHRcdC8vIHRvIGFsbG93IGZpeGluZyB0aGUgSUU4IGRlbGVnYXRlZCBzdWJtaXQgaXNzdWUgKGdoLTIzMzIpXHJcblx0XHRcdFx0XHRcdC8vIGJ5IDNyZCBwYXJ0eSBwb2x5ZmlsbHMvd29ya2Fyb3VuZHMuXHJcblx0XHRcdFx0XHRcdGpRdWVyeS5wcm9wKCBlbGVtLCBcImZvcm1cIiApIDpcclxuXHRcdFx0XHRcdFx0dW5kZWZpbmVkO1xyXG5cclxuXHRcdFx0XHRpZiAoIGZvcm0gJiYgIWpRdWVyeS5fZGF0YSggZm9ybSwgXCJzdWJtaXRcIiApICkge1xyXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZm9ybSwgXCJzdWJtaXQuX3N1Ym1pdFwiLCBmdW5jdGlvbiggZXZlbnQgKSB7XHJcblx0XHRcdFx0XHRcdGV2ZW50Ll9zdWJtaXRCdWJibGUgPSB0cnVlO1xyXG5cdFx0XHRcdFx0fSApO1xyXG5cdFx0XHRcdFx0alF1ZXJ5Ll9kYXRhKCBmb3JtLCBcInN1Ym1pdFwiLCB0cnVlICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9ICk7XHJcblxyXG5cdFx0XHQvLyByZXR1cm4gdW5kZWZpbmVkIHNpbmNlIHdlIGRvbid0IG5lZWQgYW4gZXZlbnQgbGlzdGVuZXJcclxuXHRcdH0sXHJcblxyXG5cdFx0cG9zdERpc3BhdGNoOiBmdW5jdGlvbiggZXZlbnQgKSB7XHJcblxyXG5cdFx0XHQvLyBJZiBmb3JtIHdhcyBzdWJtaXR0ZWQgYnkgdGhlIHVzZXIsIGJ1YmJsZSB0aGUgZXZlbnQgdXAgdGhlIHRyZWVcclxuXHRcdFx0aWYgKCBldmVudC5fc3VibWl0QnViYmxlICkge1xyXG5cdFx0XHRcdGRlbGV0ZSBldmVudC5fc3VibWl0QnViYmxlO1xyXG5cdFx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICYmICFldmVudC5pc1RyaWdnZXIgKSB7XHJcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQuc2ltdWxhdGUoIFwic3VibWl0XCIsIHRoaXMucGFyZW50Tm9kZSwgZXZlbnQgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblxyXG5cdFx0dGVhcmRvd246IGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdFx0Ly8gT25seSBuZWVkIHRoaXMgZm9yIGRlbGVnYXRlZCBmb3JtIHN1Ym1pdCBldmVudHNcclxuXHRcdFx0aWYgKCBqUXVlcnkubm9kZU5hbWUoIHRoaXMsIFwiZm9ybVwiICkgKSB7XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBSZW1vdmUgZGVsZWdhdGVkIGhhbmRsZXJzOyBjbGVhbkRhdGEgZXZlbnR1YWxseSByZWFwcyBzdWJtaXQgaGFuZGxlcnMgYXR0YWNoZWQgYWJvdmVcclxuXHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggdGhpcywgXCIuX3N1Ym1pdFwiICk7XHJcblx0XHR9XHJcblx0fTtcclxufVxyXG5cclxuLy8gSUUgY2hhbmdlIGRlbGVnYXRpb24gYW5kIGNoZWNrYm94L3JhZGlvIGZpeFxyXG5pZiAoICFzdXBwb3J0LmNoYW5nZSApIHtcclxuXHJcblx0alF1ZXJ5LmV2ZW50LnNwZWNpYWwuY2hhbmdlID0ge1xyXG5cclxuXHRcdHNldHVwOiBmdW5jdGlvbigpIHtcclxuXHJcblx0XHRcdGlmICggcmZvcm1FbGVtcy50ZXN0KCB0aGlzLm5vZGVOYW1lICkgKSB7XHJcblxyXG5cdFx0XHRcdC8vIElFIGRvZXNuJ3QgZmlyZSBjaGFuZ2Ugb24gYSBjaGVjay9yYWRpbyB1bnRpbCBibHVyOyB0cmlnZ2VyIGl0IG9uIGNsaWNrXHJcblx0XHRcdFx0Ly8gYWZ0ZXIgYSBwcm9wZXJ0eWNoYW5nZS4gRWF0IHRoZSBibHVyLWNoYW5nZSBpbiBzcGVjaWFsLmNoYW5nZS5oYW5kbGUuXHJcblx0XHRcdFx0Ly8gVGhpcyBzdGlsbCBmaXJlcyBvbmNoYW5nZSBhIHNlY29uZCB0aW1lIGZvciBjaGVjay9yYWRpbyBhZnRlciBibHVyLlxyXG5cdFx0XHRcdGlmICggdGhpcy50eXBlID09PSBcImNoZWNrYm94XCIgfHwgdGhpcy50eXBlID09PSBcInJhZGlvXCIgKSB7XHJcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQuYWRkKCB0aGlzLCBcInByb3BlcnR5Y2hhbmdlLl9jaGFuZ2VcIiwgZnVuY3Rpb24oIGV2ZW50ICkge1xyXG5cdFx0XHRcdFx0XHRpZiAoIGV2ZW50Lm9yaWdpbmFsRXZlbnQucHJvcGVydHlOYW1lID09PSBcImNoZWNrZWRcIiApIHtcclxuXHRcdFx0XHRcdFx0XHR0aGlzLl9qdXN0Q2hhbmdlZCA9IHRydWU7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0gKTtcclxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIHRoaXMsIFwiY2xpY2suX2NoYW5nZVwiLCBmdW5jdGlvbiggZXZlbnQgKSB7XHJcblx0XHRcdFx0XHRcdGlmICggdGhpcy5fanVzdENoYW5nZWQgJiYgIWV2ZW50LmlzVHJpZ2dlciApIHtcclxuXHRcdFx0XHRcdFx0XHR0aGlzLl9qdXN0Q2hhbmdlZCA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBBbGxvdyB0cmlnZ2VyZWQsIHNpbXVsYXRlZCBjaGFuZ2UgZXZlbnRzICgjMTE1MDApXHJcblx0XHRcdFx0XHRcdGpRdWVyeS5ldmVudC5zaW11bGF0ZSggXCJjaGFuZ2VcIiwgdGhpcywgZXZlbnQgKTtcclxuXHRcdFx0XHRcdH0gKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBEZWxlZ2F0ZWQgZXZlbnQ7IGxhenktYWRkIGEgY2hhbmdlIGhhbmRsZXIgb24gZGVzY2VuZGFudCBpbnB1dHNcclxuXHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggdGhpcywgXCJiZWZvcmVhY3RpdmF0ZS5fY2hhbmdlXCIsIGZ1bmN0aW9uKCBlICkge1xyXG5cdFx0XHRcdHZhciBlbGVtID0gZS50YXJnZXQ7XHJcblxyXG5cdFx0XHRcdGlmICggcmZvcm1FbGVtcy50ZXN0KCBlbGVtLm5vZGVOYW1lICkgJiYgIWpRdWVyeS5fZGF0YSggZWxlbSwgXCJjaGFuZ2VcIiApICkge1xyXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZWxlbSwgXCJjaGFuZ2UuX2NoYW5nZVwiLCBmdW5jdGlvbiggZXZlbnQgKSB7XHJcblx0XHRcdFx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICYmICFldmVudC5pc1NpbXVsYXRlZCAmJiAhZXZlbnQuaXNUcmlnZ2VyICkge1xyXG5cdFx0XHRcdFx0XHRcdGpRdWVyeS5ldmVudC5zaW11bGF0ZSggXCJjaGFuZ2VcIiwgdGhpcy5wYXJlbnROb2RlLCBldmVudCApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9ICk7XHJcblx0XHRcdFx0XHRqUXVlcnkuX2RhdGEoIGVsZW0sIFwiY2hhbmdlXCIsIHRydWUgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gKTtcclxuXHRcdH0sXHJcblxyXG5cdFx0aGFuZGxlOiBmdW5jdGlvbiggZXZlbnQgKSB7XHJcblx0XHRcdHZhciBlbGVtID0gZXZlbnQudGFyZ2V0O1xyXG5cclxuXHRcdFx0Ly8gU3dhbGxvdyBuYXRpdmUgY2hhbmdlIGV2ZW50cyBmcm9tIGNoZWNrYm94L3JhZGlvLCB3ZSBhbHJlYWR5IHRyaWdnZXJlZCB0aGVtIGFib3ZlXHJcblx0XHRcdGlmICggdGhpcyAhPT0gZWxlbSB8fCBldmVudC5pc1NpbXVsYXRlZCB8fCBldmVudC5pc1RyaWdnZXIgfHxcclxuXHRcdFx0XHQoIGVsZW0udHlwZSAhPT0gXCJyYWRpb1wiICYmIGVsZW0udHlwZSAhPT0gXCJjaGVja2JveFwiICkgKSB7XHJcblxyXG5cdFx0XHRcdHJldHVybiBldmVudC5oYW5kbGVPYmouaGFuZGxlci5hcHBseSggdGhpcywgYXJndW1lbnRzICk7XHJcblx0XHRcdH1cclxuXHRcdH0sXHJcblxyXG5cdFx0dGVhcmRvd246IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRqUXVlcnkuZXZlbnQucmVtb3ZlKCB0aGlzLCBcIi5fY2hhbmdlXCIgKTtcclxuXHJcblx0XHRcdHJldHVybiAhcmZvcm1FbGVtcy50ZXN0KCB0aGlzLm5vZGVOYW1lICk7XHJcblx0XHR9XHJcblx0fTtcclxufVxyXG5cclxuLy8gU3VwcG9ydDogRmlyZWZveFxyXG4vLyBGaXJlZm94IGRvZXNuJ3QgaGF2ZSBmb2N1cyhpbiB8IG91dCkgZXZlbnRzXHJcbi8vIFJlbGF0ZWQgdGlja2V0IC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9Njg3Nzg3XHJcbi8vXHJcbi8vIFN1cHBvcnQ6IENocm9tZSwgU2FmYXJpXHJcbi8vIGZvY3VzKGluIHwgb3V0KSBldmVudHMgZmlyZSBhZnRlciBmb2N1cyAmIGJsdXIgZXZlbnRzLFxyXG4vLyB3aGljaCBpcyBzcGVjIHZpb2xhdGlvbiAtIGh0dHA6Ly93d3cudzMub3JnL1RSL0RPTS1MZXZlbC0zLUV2ZW50cy8jZXZlbnRzLWZvY3VzZXZlbnQtZXZlbnQtb3JkZXJcclxuLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2NvZGUuZ29vZ2xlLmNvbS9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NDQ5ODU3XHJcbmlmICggIXN1cHBvcnQuZm9jdXNpbiApIHtcclxuXHRqUXVlcnkuZWFjaCggeyBmb2N1czogXCJmb2N1c2luXCIsIGJsdXI6IFwiZm9jdXNvdXRcIiB9LCBmdW5jdGlvbiggb3JpZywgZml4ICkge1xyXG5cclxuXHRcdC8vIEF0dGFjaCBhIHNpbmdsZSBjYXB0dXJpbmcgaGFuZGxlciBvbiB0aGUgZG9jdW1lbnQgd2hpbGUgc29tZW9uZSB3YW50cyBmb2N1c2luL2ZvY3Vzb3V0XHJcblx0XHR2YXIgaGFuZGxlciA9IGZ1bmN0aW9uKCBldmVudCApIHtcclxuXHRcdFx0alF1ZXJ5LmV2ZW50LnNpbXVsYXRlKCBmaXgsIGV2ZW50LnRhcmdldCwgalF1ZXJ5LmV2ZW50LmZpeCggZXZlbnQgKSApO1xyXG5cdFx0fTtcclxuXHJcblx0XHRqUXVlcnkuZXZlbnQuc3BlY2lhbFsgZml4IF0gPSB7XHJcblx0XHRcdHNldHVwOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHR2YXIgZG9jID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXMsXHJcblx0XHRcdFx0XHRhdHRhY2hlcyA9IGpRdWVyeS5fZGF0YSggZG9jLCBmaXggKTtcclxuXHJcblx0XHRcdFx0aWYgKCAhYXR0YWNoZXMgKSB7XHJcblx0XHRcdFx0XHRkb2MuYWRkRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRqUXVlcnkuX2RhdGEoIGRvYywgZml4LCAoIGF0dGFjaGVzIHx8IDAgKSArIDEgKTtcclxuXHRcdFx0fSxcclxuXHRcdFx0dGVhcmRvd246IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHZhciBkb2MgPSB0aGlzLm93bmVyRG9jdW1lbnQgfHwgdGhpcyxcclxuXHRcdFx0XHRcdGF0dGFjaGVzID0galF1ZXJ5Ll9kYXRhKCBkb2MsIGZpeCApIC0gMTtcclxuXHJcblx0XHRcdFx0aWYgKCAhYXR0YWNoZXMgKSB7XHJcblx0XHRcdFx0XHRkb2MucmVtb3ZlRXZlbnRMaXN0ZW5lciggb3JpZywgaGFuZGxlciwgdHJ1ZSApO1xyXG5cdFx0XHRcdFx0alF1ZXJ5Ll9yZW1vdmVEYXRhKCBkb2MsIGZpeCApO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRqUXVlcnkuX2RhdGEoIGRvYywgZml4LCBhdHRhY2hlcyApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9ICk7XHJcbn1cclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHJcblx0b246IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xyXG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XHJcblx0fSxcclxuXHRvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xyXG5cdFx0cmV0dXJuIG9uKCB0aGlzLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCAxICk7XHJcblx0fSxcclxuXHRvZmY6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGZuICkge1xyXG5cdFx0dmFyIGhhbmRsZU9iaiwgdHlwZTtcclxuXHRcdGlmICggdHlwZXMgJiYgdHlwZXMucHJldmVudERlZmF1bHQgJiYgdHlwZXMuaGFuZGxlT2JqICkge1xyXG5cclxuXHRcdFx0Ly8gKCBldmVudCApICBkaXNwYXRjaGVkIGpRdWVyeS5FdmVudFxyXG5cdFx0XHRoYW5kbGVPYmogPSB0eXBlcy5oYW5kbGVPYmo7XHJcblx0XHRcdGpRdWVyeSggdHlwZXMuZGVsZWdhdGVUYXJnZXQgKS5vZmYoXHJcblx0XHRcdFx0aGFuZGxlT2JqLm5hbWVzcGFjZSA/XHJcblx0XHRcdFx0XHRoYW5kbGVPYmoub3JpZ1R5cGUgKyBcIi5cIiArIGhhbmRsZU9iai5uYW1lc3BhY2UgOlxyXG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlLFxyXG5cdFx0XHRcdGhhbmRsZU9iai5zZWxlY3RvcixcclxuXHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlclxyXG5cdFx0XHQpO1xyXG5cdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdH1cclxuXHRcdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xyXG5cclxuXHRcdFx0Ly8gKCB0eXBlcy1vYmplY3QgWywgc2VsZWN0b3JdIClcclxuXHRcdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcclxuXHRcdFx0XHR0aGlzLm9mZiggdHlwZSwgc2VsZWN0b3IsIHR5cGVzWyB0eXBlIF0gKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdH1cclxuXHRcdGlmICggc2VsZWN0b3IgPT09IGZhbHNlIHx8IHR5cGVvZiBzZWxlY3RvciA9PT0gXCJmdW5jdGlvblwiICkge1xyXG5cclxuXHRcdFx0Ly8gKCB0eXBlcyBbLCBmbl0gKVxyXG5cdFx0XHRmbiA9IHNlbGVjdG9yO1xyXG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHRcdGlmICggZm4gPT09IGZhbHNlICkge1xyXG5cdFx0XHRmbiA9IHJldHVybkZhbHNlO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIHRoaXMsIHR5cGVzLCBmbiwgc2VsZWN0b3IgKTtcclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHR0cmlnZ2VyOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcclxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgdGhpcyApO1xyXG5cdFx0fSApO1xyXG5cdH0sXHJcblx0dHJpZ2dlckhhbmRsZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xyXG5cdFx0dmFyIGVsZW0gPSB0aGlzWyAwIF07XHJcblx0XHRpZiAoIGVsZW0gKSB7XHJcblx0XHRcdHJldHVybiBqUXVlcnkuZXZlbnQudHJpZ2dlciggdHlwZSwgZGF0YSwgZWxlbSwgdHJ1ZSApO1xyXG5cdFx0fVxyXG5cdH1cclxufSApO1xyXG5cclxuXHJcbnZhciByaW5saW5lalF1ZXJ5ID0gLyBqUXVlcnlcXGQrPVwiKD86bnVsbHxcXGQrKVwiL2csXHJcblx0cm5vc2hpbWNhY2hlID0gbmV3IFJlZ0V4cCggXCI8KD86XCIgKyBub2RlTmFtZXMgKyBcIilbXFxcXHMvPl1cIiwgXCJpXCIgKSxcclxuXHRyeGh0bWxUYWcgPSAvPCg/IWFyZWF8YnJ8Y29sfGVtYmVkfGhyfGltZ3xpbnB1dHxsaW5rfG1ldGF8cGFyYW0pKChbXFx3Oi1dKylbXj5dKilcXC8+L2dpLFxyXG5cclxuXHQvLyBTdXBwb3J0OiBJRSAxMC0xMSwgRWRnZSAxMDI0MCtcclxuXHQvLyBJbiBJRS9FZGdlIHVzaW5nIHJlZ2V4IGdyb3VwcyBoZXJlIGNhdXNlcyBzZXZlcmUgc2xvd2Rvd25zLlxyXG5cdC8vIFNlZSBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzE3MzY1MTIvXHJcblx0cm5vSW5uZXJodG1sID0gLzxzY3JpcHR8PHN0eWxlfDxsaW5rL2ksXHJcblxyXG5cdC8vIGNoZWNrZWQ9XCJjaGVja2VkXCIgb3IgY2hlY2tlZFxyXG5cdHJjaGVja2VkID0gL2NoZWNrZWRcXHMqKD86W149XXw9XFxzKi5jaGVja2VkLikvaSxcclxuXHRyc2NyaXB0VHlwZU1hc2tlZCA9IC9edHJ1ZVxcLyguKikvLFxyXG5cdHJjbGVhblNjcmlwdCA9IC9eXFxzKjwhKD86XFxbQ0RBVEFcXFt8LS0pfCg/OlxcXVxcXXwtLSk+XFxzKiQvZyxcclxuXHRzYWZlRnJhZ21lbnQgPSBjcmVhdGVTYWZlRnJhZ21lbnQoIGRvY3VtZW50ICksXHJcblx0ZnJhZ21lbnREaXYgPSBzYWZlRnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSApO1xyXG5cclxuLy8gU3VwcG9ydDogSUU8OFxyXG4vLyBNYW5pcHVsYXRpbmcgdGFibGVzIHJlcXVpcmVzIGEgdGJvZHlcclxuZnVuY3Rpb24gbWFuaXB1bGF0aW9uVGFyZ2V0KCBlbGVtLCBjb250ZW50ICkge1xyXG5cdHJldHVybiBqUXVlcnkubm9kZU5hbWUoIGVsZW0sIFwidGFibGVcIiApICYmXHJcblx0XHRqUXVlcnkubm9kZU5hbWUoIGNvbnRlbnQubm9kZVR5cGUgIT09IDExID8gY29udGVudCA6IGNvbnRlbnQuZmlyc3RDaGlsZCwgXCJ0clwiICkgP1xyXG5cclxuXHRcdGVsZW0uZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwidGJvZHlcIiApWyAwIF0gfHxcclxuXHRcdFx0ZWxlbS5hcHBlbmRDaGlsZCggZWxlbS5vd25lckRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwidGJvZHlcIiApICkgOlxyXG5cdFx0ZWxlbTtcclxufVxyXG5cclxuLy8gUmVwbGFjZS9yZXN0b3JlIHRoZSB0eXBlIGF0dHJpYnV0ZSBvZiBzY3JpcHQgZWxlbWVudHMgZm9yIHNhZmUgRE9NIG1hbmlwdWxhdGlvblxyXG5mdW5jdGlvbiBkaXNhYmxlU2NyaXB0KCBlbGVtICkge1xyXG5cdGVsZW0udHlwZSA9ICggalF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ0eXBlXCIgKSAhPT0gbnVsbCApICsgXCIvXCIgKyBlbGVtLnR5cGU7XHJcblx0cmV0dXJuIGVsZW07XHJcbn1cclxuZnVuY3Rpb24gcmVzdG9yZVNjcmlwdCggZWxlbSApIHtcclxuXHR2YXIgbWF0Y2ggPSByc2NyaXB0VHlwZU1hc2tlZC5leGVjKCBlbGVtLnR5cGUgKTtcclxuXHRpZiAoIG1hdGNoICkge1xyXG5cdFx0ZWxlbS50eXBlID0gbWF0Y2hbIDEgXTtcclxuXHR9IGVsc2Uge1xyXG5cdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIFwidHlwZVwiICk7XHJcblx0fVxyXG5cdHJldHVybiBlbGVtO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjbG9uZUNvcHlFdmVudCggc3JjLCBkZXN0ICkge1xyXG5cdGlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSB8fCAhalF1ZXJ5Lmhhc0RhdGEoIHNyYyApICkge1xyXG5cdFx0cmV0dXJuO1xyXG5cdH1cclxuXHJcblx0dmFyIHR5cGUsIGksIGwsXHJcblx0XHRvbGREYXRhID0galF1ZXJ5Ll9kYXRhKCBzcmMgKSxcclxuXHRcdGN1ckRhdGEgPSBqUXVlcnkuX2RhdGEoIGRlc3QsIG9sZERhdGEgKSxcclxuXHRcdGV2ZW50cyA9IG9sZERhdGEuZXZlbnRzO1xyXG5cclxuXHRpZiAoIGV2ZW50cyApIHtcclxuXHRcdGRlbGV0ZSBjdXJEYXRhLmhhbmRsZTtcclxuXHRcdGN1ckRhdGEuZXZlbnRzID0ge307XHJcblxyXG5cdFx0Zm9yICggdHlwZSBpbiBldmVudHMgKSB7XHJcblx0XHRcdGZvciAoIGkgPSAwLCBsID0gZXZlbnRzWyB0eXBlIF0ubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xyXG5cdFx0XHRcdGpRdWVyeS5ldmVudC5hZGQoIGRlc3QsIHR5cGUsIGV2ZW50c1sgdHlwZSBdWyBpIF0gKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0Ly8gbWFrZSB0aGUgY2xvbmVkIHB1YmxpYyBkYXRhIG9iamVjdCBhIGNvcHkgZnJvbSB0aGUgb3JpZ2luYWxcclxuXHRpZiAoIGN1ckRhdGEuZGF0YSApIHtcclxuXHRcdGN1ckRhdGEuZGF0YSA9IGpRdWVyeS5leHRlbmQoIHt9LCBjdXJEYXRhLmRhdGEgKTtcclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGZpeENsb25lTm9kZUlzc3Vlcyggc3JjLCBkZXN0ICkge1xyXG5cdHZhciBub2RlTmFtZSwgZSwgZGF0YTtcclxuXHJcblx0Ly8gV2UgZG8gbm90IG5lZWQgdG8gZG8gYW55dGhpbmcgZm9yIG5vbi1FbGVtZW50c1xyXG5cdGlmICggZGVzdC5ub2RlVHlwZSAhPT0gMSApIHtcclxuXHRcdHJldHVybjtcclxuXHR9XHJcblxyXG5cdG5vZGVOYW1lID0gZGVzdC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xyXG5cclxuXHQvLyBJRTYtOCBjb3BpZXMgZXZlbnRzIGJvdW5kIHZpYSBhdHRhY2hFdmVudCB3aGVuIHVzaW5nIGNsb25lTm9kZS5cclxuXHRpZiAoICFzdXBwb3J0Lm5vQ2xvbmVFdmVudCAmJiBkZXN0WyBqUXVlcnkuZXhwYW5kbyBdICkge1xyXG5cdFx0ZGF0YSA9IGpRdWVyeS5fZGF0YSggZGVzdCApO1xyXG5cclxuXHRcdGZvciAoIGUgaW4gZGF0YS5ldmVudHMgKSB7XHJcblx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZGVzdCwgZSwgZGF0YS5oYW5kbGUgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBFdmVudCBkYXRhIGdldHMgcmVmZXJlbmNlZCBpbnN0ZWFkIG9mIGNvcGllZCBpZiB0aGUgZXhwYW5kbyBnZXRzIGNvcGllZCB0b29cclxuXHRcdGRlc3QucmVtb3ZlQXR0cmlidXRlKCBqUXVlcnkuZXhwYW5kbyApO1xyXG5cdH1cclxuXHJcblx0Ly8gSUUgYmxhbmtzIGNvbnRlbnRzIHdoZW4gY2xvbmluZyBzY3JpcHRzLCBhbmQgdHJpZXMgdG8gZXZhbHVhdGUgbmV3bHktc2V0IHRleHRcclxuXHRpZiAoIG5vZGVOYW1lID09PSBcInNjcmlwdFwiICYmIGRlc3QudGV4dCAhPT0gc3JjLnRleHQgKSB7XHJcblx0XHRkaXNhYmxlU2NyaXB0KCBkZXN0ICkudGV4dCA9IHNyYy50ZXh0O1xyXG5cdFx0cmVzdG9yZVNjcmlwdCggZGVzdCApO1xyXG5cclxuXHQvLyBJRTYtMTAgaW1wcm9wZXJseSBjbG9uZXMgY2hpbGRyZW4gb2Ygb2JqZWN0IGVsZW1lbnRzIHVzaW5nIGNsYXNzaWQuXHJcblx0Ly8gSUUxMCB0aHJvd3MgTm9Nb2RpZmljYXRpb25BbGxvd2VkRXJyb3IgaWYgcGFyZW50IGlzIG51bGwsICMxMjEzMi5cclxuXHR9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gXCJvYmplY3RcIiApIHtcclxuXHRcdGlmICggZGVzdC5wYXJlbnROb2RlICkge1xyXG5cdFx0XHRkZXN0Lm91dGVySFRNTCA9IHNyYy5vdXRlckhUTUw7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gVGhpcyBwYXRoIGFwcGVhcnMgdW5hdm9pZGFibGUgZm9yIElFOS4gV2hlbiBjbG9uaW5nIGFuIG9iamVjdFxyXG5cdFx0Ly8gZWxlbWVudCBpbiBJRTksIHRoZSBvdXRlckhUTUwgc3RyYXRlZ3kgYWJvdmUgaXMgbm90IHN1ZmZpY2llbnQuXHJcblx0XHQvLyBJZiB0aGUgc3JjIGhhcyBpbm5lckhUTUwgYW5kIHRoZSBkZXN0aW5hdGlvbiBkb2VzIG5vdCxcclxuXHRcdC8vIGNvcHkgdGhlIHNyYy5pbm5lckhUTUwgaW50byB0aGUgZGVzdC5pbm5lckhUTUwuICMxMDMyNFxyXG5cdFx0aWYgKCBzdXBwb3J0Lmh0bWw1Q2xvbmUgJiYgKCBzcmMuaW5uZXJIVE1MICYmICFqUXVlcnkudHJpbSggZGVzdC5pbm5lckhUTUwgKSApICkge1xyXG5cdFx0XHRkZXN0LmlubmVySFRNTCA9IHNyYy5pbm5lckhUTUw7XHJcblx0XHR9XHJcblxyXG5cdH0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSBcImlucHV0XCIgJiYgcmNoZWNrYWJsZVR5cGUudGVzdCggc3JjLnR5cGUgKSApIHtcclxuXHJcblx0XHQvLyBJRTYtOCBmYWlscyB0byBwZXJzaXN0IHRoZSBjaGVja2VkIHN0YXRlIG9mIGEgY2xvbmVkIGNoZWNrYm94XHJcblx0XHQvLyBvciByYWRpbyBidXR0b24uIFdvcnNlLCBJRTYtNyBmYWlsIHRvIGdpdmUgdGhlIGNsb25lZCBlbGVtZW50XHJcblx0XHQvLyBhIGNoZWNrZWQgYXBwZWFyYW5jZSBpZiB0aGUgZGVmYXVsdENoZWNrZWQgdmFsdWUgaXNuJ3QgYWxzbyBzZXRcclxuXHJcblx0XHRkZXN0LmRlZmF1bHRDaGVja2VkID0gZGVzdC5jaGVja2VkID0gc3JjLmNoZWNrZWQ7XHJcblxyXG5cdFx0Ly8gSUU2LTcgZ2V0IGNvbmZ1c2VkIGFuZCBlbmQgdXAgc2V0dGluZyB0aGUgdmFsdWUgb2YgYSBjbG9uZWRcclxuXHRcdC8vIGNoZWNrYm94L3JhZGlvIGJ1dHRvbiB0byBhbiBlbXB0eSBzdHJpbmcgaW5zdGVhZCBvZiBcIm9uXCJcclxuXHRcdGlmICggZGVzdC52YWx1ZSAhPT0gc3JjLnZhbHVlICkge1xyXG5cdFx0XHRkZXN0LnZhbHVlID0gc3JjLnZhbHVlO1xyXG5cdFx0fVxyXG5cclxuXHQvLyBJRTYtOCBmYWlscyB0byByZXR1cm4gdGhlIHNlbGVjdGVkIG9wdGlvbiB0byB0aGUgZGVmYXVsdCBzZWxlY3RlZFxyXG5cdC8vIHN0YXRlIHdoZW4gY2xvbmluZyBvcHRpb25zXHJcblx0fSBlbHNlIGlmICggbm9kZU5hbWUgPT09IFwib3B0aW9uXCIgKSB7XHJcblx0XHRkZXN0LmRlZmF1bHRTZWxlY3RlZCA9IGRlc3Quc2VsZWN0ZWQgPSBzcmMuZGVmYXVsdFNlbGVjdGVkO1xyXG5cclxuXHQvLyBJRTYtOCBmYWlscyB0byBzZXQgdGhlIGRlZmF1bHRWYWx1ZSB0byB0aGUgY29ycmVjdCB2YWx1ZSB3aGVuXHJcblx0Ly8gY2xvbmluZyBvdGhlciB0eXBlcyBvZiBpbnB1dCBmaWVsZHNcclxuXHR9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5vZGVOYW1lID09PSBcInRleHRhcmVhXCIgKSB7XHJcblx0XHRkZXN0LmRlZmF1bHRWYWx1ZSA9IHNyYy5kZWZhdWx0VmFsdWU7XHJcblx0fVxyXG59XHJcblxyXG5mdW5jdGlvbiBkb21NYW5pcCggY29sbGVjdGlvbiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKSB7XHJcblxyXG5cdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcclxuXHRhcmdzID0gY29uY2F0LmFwcGx5KCBbXSwgYXJncyApO1xyXG5cclxuXHR2YXIgZmlyc3QsIG5vZGUsIGhhc1NjcmlwdHMsXHJcblx0XHRzY3JpcHRzLCBkb2MsIGZyYWdtZW50LFxyXG5cdFx0aSA9IDAsXHJcblx0XHRsID0gY29sbGVjdGlvbi5sZW5ndGgsXHJcblx0XHRpTm9DbG9uZSA9IGwgLSAxLFxyXG5cdFx0dmFsdWUgPSBhcmdzWyAwIF0sXHJcblx0XHRpc0Z1bmN0aW9uID0galF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICk7XHJcblxyXG5cdC8vIFdlIGNhbid0IGNsb25lTm9kZSBmcmFnbWVudHMgdGhhdCBjb250YWluIGNoZWNrZWQsIGluIFdlYktpdFxyXG5cdGlmICggaXNGdW5jdGlvbiB8fFxyXG5cdFx0XHQoIGwgPiAxICYmIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJlxyXG5cdFx0XHRcdCFzdXBwb3J0LmNoZWNrQ2xvbmUgJiYgcmNoZWNrZWQudGVzdCggdmFsdWUgKSApICkge1xyXG5cdFx0cmV0dXJuIGNvbGxlY3Rpb24uZWFjaCggZnVuY3Rpb24oIGluZGV4ICkge1xyXG5cdFx0XHR2YXIgc2VsZiA9IGNvbGxlY3Rpb24uZXEoIGluZGV4ICk7XHJcblx0XHRcdGlmICggaXNGdW5jdGlvbiApIHtcclxuXHRcdFx0XHRhcmdzWyAwIF0gPSB2YWx1ZS5jYWxsKCB0aGlzLCBpbmRleCwgc2VsZi5odG1sKCkgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRkb21NYW5pcCggc2VsZiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKTtcclxuXHRcdH0gKTtcclxuXHR9XHJcblxyXG5cdGlmICggbCApIHtcclxuXHRcdGZyYWdtZW50ID0gYnVpbGRGcmFnbWVudCggYXJncywgY29sbGVjdGlvblsgMCBdLm93bmVyRG9jdW1lbnQsIGZhbHNlLCBjb2xsZWN0aW9uLCBpZ25vcmVkICk7XHJcblx0XHRmaXJzdCA9IGZyYWdtZW50LmZpcnN0Q2hpbGQ7XHJcblxyXG5cdFx0aWYgKCBmcmFnbWVudC5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMSApIHtcclxuXHRcdFx0ZnJhZ21lbnQgPSBmaXJzdDtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBSZXF1aXJlIGVpdGhlciBuZXcgY29udGVudCBvciBhbiBpbnRlcmVzdCBpbiBpZ25vcmVkIGVsZW1lbnRzIHRvIGludm9rZSB0aGUgY2FsbGJhY2tcclxuXHRcdGlmICggZmlyc3QgfHwgaWdub3JlZCApIHtcclxuXHRcdFx0c2NyaXB0cyA9IGpRdWVyeS5tYXAoIGdldEFsbCggZnJhZ21lbnQsIFwic2NyaXB0XCIgKSwgZGlzYWJsZVNjcmlwdCApO1xyXG5cdFx0XHRoYXNTY3JpcHRzID0gc2NyaXB0cy5sZW5ndGg7XHJcblxyXG5cdFx0XHQvLyBVc2UgdGhlIG9yaWdpbmFsIGZyYWdtZW50IGZvciB0aGUgbGFzdCBpdGVtXHJcblx0XHRcdC8vIGluc3RlYWQgb2YgdGhlIGZpcnN0IGJlY2F1c2UgaXQgY2FuIGVuZCB1cFxyXG5cdFx0XHQvLyBiZWluZyBlbXB0aWVkIGluY29ycmVjdGx5IGluIGNlcnRhaW4gc2l0dWF0aW9ucyAoIzgwNzApLlxyXG5cdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XHJcblx0XHRcdFx0bm9kZSA9IGZyYWdtZW50O1xyXG5cclxuXHRcdFx0XHRpZiAoIGkgIT09IGlOb0Nsb25lICkge1xyXG5cdFx0XHRcdFx0bm9kZSA9IGpRdWVyeS5jbG9uZSggbm9kZSwgdHJ1ZSwgdHJ1ZSApO1xyXG5cclxuXHRcdFx0XHRcdC8vIEtlZXAgcmVmZXJlbmNlcyB0byBjbG9uZWQgc2NyaXB0cyBmb3IgbGF0ZXIgcmVzdG9yYXRpb25cclxuXHRcdFx0XHRcdGlmICggaGFzU2NyaXB0cyApIHtcclxuXHJcblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4xLCBQaGFudG9tSlM8MlxyXG5cdFx0XHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XHJcblx0XHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggc2NyaXB0cywgZ2V0QWxsKCBub2RlLCBcInNjcmlwdFwiICkgKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdGNhbGxiYWNrLmNhbGwoIGNvbGxlY3Rpb25bIGkgXSwgbm9kZSwgaSApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIGhhc1NjcmlwdHMgKSB7XHJcblx0XHRcdFx0ZG9jID0gc2NyaXB0c1sgc2NyaXB0cy5sZW5ndGggLSAxIF0ub3duZXJEb2N1bWVudDtcclxuXHJcblx0XHRcdFx0Ly8gUmVlbmFibGUgc2NyaXB0c1xyXG5cdFx0XHRcdGpRdWVyeS5tYXAoIHNjcmlwdHMsIHJlc3RvcmVTY3JpcHQgKTtcclxuXHJcblx0XHRcdFx0Ly8gRXZhbHVhdGUgZXhlY3V0YWJsZSBzY3JpcHRzIG9uIGZpcnN0IGRvY3VtZW50IGluc2VydGlvblxyXG5cdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgaGFzU2NyaXB0czsgaSsrICkge1xyXG5cdFx0XHRcdFx0bm9kZSA9IHNjcmlwdHNbIGkgXTtcclxuXHRcdFx0XHRcdGlmICggcnNjcmlwdFR5cGUudGVzdCggbm9kZS50eXBlIHx8IFwiXCIgKSAmJlxyXG5cdFx0XHRcdFx0XHQhalF1ZXJ5Ll9kYXRhKCBub2RlLCBcImdsb2JhbEV2YWxcIiApICYmXHJcblx0XHRcdFx0XHRcdGpRdWVyeS5jb250YWlucyggZG9jLCBub2RlICkgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRpZiAoIG5vZGUuc3JjICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBPcHRpb25hbCBBSkFYIGRlcGVuZGVuY3ksIGJ1dCB3b24ndCBydW4gc2NyaXB0cyBpZiBub3QgcHJlc2VudFxyXG5cdFx0XHRcdFx0XHRcdGlmICggalF1ZXJ5Ll9ldmFsVXJsICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5Ll9ldmFsVXJsKCBub2RlLnNyYyApO1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbChcclxuXHRcdFx0XHRcdFx0XHRcdCggbm9kZS50ZXh0IHx8IG5vZGUudGV4dENvbnRlbnQgfHwgbm9kZS5pbm5lckhUTUwgfHwgXCJcIiApXHJcblx0XHRcdFx0XHRcdFx0XHRcdC5yZXBsYWNlKCByY2xlYW5TY3JpcHQsIFwiXCIgKVxyXG5cdFx0XHRcdFx0XHRcdCk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIEZpeCAjMTE4MDk6IEF2b2lkIGxlYWtpbmcgbWVtb3J5XHJcblx0XHRcdGZyYWdtZW50ID0gZmlyc3QgPSBudWxsO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIGNvbGxlY3Rpb247XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHJlbW92ZSggZWxlbSwgc2VsZWN0b3IsIGtlZXBEYXRhICkge1xyXG5cdHZhciBub2RlLFxyXG5cdFx0ZWxlbXMgPSBzZWxlY3RvciA/IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBlbGVtICkgOiBlbGVtLFxyXG5cdFx0aSA9IDA7XHJcblxyXG5cdGZvciAoIDsgKCBub2RlID0gZWxlbXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcclxuXHJcblx0XHRpZiAoICFrZWVwRGF0YSAmJiBub2RlLm5vZGVUeXBlID09PSAxICkge1xyXG5cdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIG5vZGUgKSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggbm9kZS5wYXJlbnROb2RlICkge1xyXG5cdFx0XHRpZiAoIGtlZXBEYXRhICYmIGpRdWVyeS5jb250YWlucyggbm9kZS5vd25lckRvY3VtZW50LCBub2RlICkgKSB7XHJcblx0XHRcdFx0c2V0R2xvYmFsRXZhbCggZ2V0QWxsKCBub2RlLCBcInNjcmlwdFwiICkgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIG5vZGUgKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiBlbGVtO1xyXG59XHJcblxyXG5qUXVlcnkuZXh0ZW5kKCB7XHJcblx0aHRtbFByZWZpbHRlcjogZnVuY3Rpb24oIGh0bWwgKSB7XHJcblx0XHRyZXR1cm4gaHRtbC5yZXBsYWNlKCByeGh0bWxUYWcsIFwiPCQxPjwvJDI+XCIgKTtcclxuXHR9LFxyXG5cclxuXHRjbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xyXG5cdFx0dmFyIGRlc3RFbGVtZW50cywgbm9kZSwgY2xvbmUsIGksIHNyY0VsZW1lbnRzLFxyXG5cdFx0XHRpblBhZ2UgPSBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApO1xyXG5cclxuXHRcdGlmICggc3VwcG9ydC5odG1sNUNsb25lIHx8IGpRdWVyeS5pc1hNTERvYyggZWxlbSApIHx8XHJcblx0XHRcdCFybm9zaGltY2FjaGUudGVzdCggXCI8XCIgKyBlbGVtLm5vZGVOYW1lICsgXCI+XCIgKSApIHtcclxuXHJcblx0XHRcdGNsb25lID0gZWxlbS5jbG9uZU5vZGUoIHRydWUgKTtcclxuXHJcblx0XHQvLyBJRTw9OCBkb2VzIG5vdCBwcm9wZXJseSBjbG9uZSBkZXRhY2hlZCwgdW5rbm93biBlbGVtZW50IG5vZGVzXHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRmcmFnbWVudERpdi5pbm5lckhUTUwgPSBlbGVtLm91dGVySFRNTDtcclxuXHRcdFx0ZnJhZ21lbnREaXYucmVtb3ZlQ2hpbGQoIGNsb25lID0gZnJhZ21lbnREaXYuZmlyc3RDaGlsZCApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggKCAhc3VwcG9ydC5ub0Nsb25lRXZlbnQgfHwgIXN1cHBvcnQubm9DbG9uZUNoZWNrZWQgKSAmJlxyXG5cdFx0XHRcdCggZWxlbS5ub2RlVHlwZSA9PT0gMSB8fCBlbGVtLm5vZGVUeXBlID09PSAxMSApICYmICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcclxuXHJcblx0XHRcdC8vIFdlIGVzY2hldyBTaXp6bGUgaGVyZSBmb3IgcGVyZm9ybWFuY2UgcmVhc29uczogaHR0cDovL2pzcGVyZi5jb20vZ2V0YWxsLXZzLXNpenpsZS8yXHJcblx0XHRcdGRlc3RFbGVtZW50cyA9IGdldEFsbCggY2xvbmUgKTtcclxuXHRcdFx0c3JjRWxlbWVudHMgPSBnZXRBbGwoIGVsZW0gKTtcclxuXHJcblx0XHRcdC8vIEZpeCBhbGwgSUUgY2xvbmluZyBpc3N1ZXNcclxuXHRcdFx0Zm9yICggaSA9IDA7ICggbm9kZSA9IHNyY0VsZW1lbnRzWyBpIF0gKSAhPSBudWxsOyArK2kgKSB7XHJcblxyXG5cdFx0XHRcdC8vIEVuc3VyZSB0aGF0IHRoZSBkZXN0aW5hdGlvbiBub2RlIGlzIG5vdCBudWxsOyBGaXhlcyAjOTU4N1xyXG5cdFx0XHRcdGlmICggZGVzdEVsZW1lbnRzWyBpIF0gKSB7XHJcblx0XHRcdFx0XHRmaXhDbG9uZU5vZGVJc3N1ZXMoIG5vZGUsIGRlc3RFbGVtZW50c1sgaSBdICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQ29weSB0aGUgZXZlbnRzIGZyb20gdGhlIG9yaWdpbmFsIHRvIHRoZSBjbG9uZVxyXG5cdFx0aWYgKCBkYXRhQW5kRXZlbnRzICkge1xyXG5cdFx0XHRpZiAoIGRlZXBEYXRhQW5kRXZlbnRzICkge1xyXG5cdFx0XHRcdHNyY0VsZW1lbnRzID0gc3JjRWxlbWVudHMgfHwgZ2V0QWxsKCBlbGVtICk7XHJcblx0XHRcdFx0ZGVzdEVsZW1lbnRzID0gZGVzdEVsZW1lbnRzIHx8IGdldEFsbCggY2xvbmUgKTtcclxuXHJcblx0XHRcdFx0Zm9yICggaSA9IDA7ICggbm9kZSA9IHNyY0VsZW1lbnRzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XHJcblx0XHRcdFx0XHRjbG9uZUNvcHlFdmVudCggbm9kZSwgZGVzdEVsZW1lbnRzWyBpIF0gKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0Y2xvbmVDb3B5RXZlbnQoIGVsZW0sIGNsb25lICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XHJcblx0XHRkZXN0RWxlbWVudHMgPSBnZXRBbGwoIGNsb25lLCBcInNjcmlwdFwiICk7XHJcblx0XHRpZiAoIGRlc3RFbGVtZW50cy5sZW5ndGggPiAwICkge1xyXG5cdFx0XHRzZXRHbG9iYWxFdmFsKCBkZXN0RWxlbWVudHMsICFpblBhZ2UgJiYgZ2V0QWxsKCBlbGVtLCBcInNjcmlwdFwiICkgKTtcclxuXHRcdH1cclxuXHJcblx0XHRkZXN0RWxlbWVudHMgPSBzcmNFbGVtZW50cyA9IG5vZGUgPSBudWxsO1xyXG5cclxuXHRcdC8vIFJldHVybiB0aGUgY2xvbmVkIHNldFxyXG5cdFx0cmV0dXJuIGNsb25lO1xyXG5cdH0sXHJcblxyXG5cdGNsZWFuRGF0YTogZnVuY3Rpb24oIGVsZW1zLCAvKiBpbnRlcm5hbCAqLyBmb3JjZUFjY2VwdERhdGEgKSB7XHJcblx0XHR2YXIgZWxlbSwgdHlwZSwgaWQsIGRhdGEsXHJcblx0XHRcdGkgPSAwLFxyXG5cdFx0XHRpbnRlcm5hbEtleSA9IGpRdWVyeS5leHBhbmRvLFxyXG5cdFx0XHRjYWNoZSA9IGpRdWVyeS5jYWNoZSxcclxuXHRcdFx0YXR0cmlidXRlcyA9IHN1cHBvcnQuYXR0cmlidXRlcyxcclxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsO1xyXG5cclxuXHRcdGZvciAoIDsgKCBlbGVtID0gZWxlbXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcclxuXHRcdFx0aWYgKCBmb3JjZUFjY2VwdERhdGEgfHwgYWNjZXB0RGF0YSggZWxlbSApICkge1xyXG5cclxuXHRcdFx0XHRpZCA9IGVsZW1bIGludGVybmFsS2V5IF07XHJcblx0XHRcdFx0ZGF0YSA9IGlkICYmIGNhY2hlWyBpZCBdO1xyXG5cclxuXHRcdFx0XHRpZiAoIGRhdGEgKSB7XHJcblx0XHRcdFx0XHRpZiAoIGRhdGEuZXZlbnRzICkge1xyXG5cdFx0XHRcdFx0XHRmb3IgKCB0eXBlIGluIGRhdGEuZXZlbnRzICkge1xyXG5cdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbFsgdHlwZSBdICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSApO1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBUaGlzIGlzIGEgc2hvcnRjdXQgdG8gYXZvaWQgalF1ZXJ5LmV2ZW50LnJlbW92ZSdzIG92ZXJoZWFkXHJcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRcdGpRdWVyeS5yZW1vdmVFdmVudCggZWxlbSwgdHlwZSwgZGF0YS5oYW5kbGUgKTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHQvLyBSZW1vdmUgY2FjaGUgb25seSBpZiBpdCB3YXMgbm90IGFscmVhZHkgcmVtb3ZlZCBieSBqUXVlcnkuZXZlbnQucmVtb3ZlXHJcblx0XHRcdFx0XHRpZiAoIGNhY2hlWyBpZCBdICkge1xyXG5cclxuXHRcdFx0XHRcdFx0ZGVsZXRlIGNhY2hlWyBpZCBdO1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8OVxyXG5cdFx0XHRcdFx0XHQvLyBJRSBkb2VzIG5vdCBhbGxvdyB1cyB0byBkZWxldGUgZXhwYW5kbyBwcm9wZXJ0aWVzIGZyb20gbm9kZXNcclxuXHRcdFx0XHRcdFx0Ly8gSUUgY3JlYXRlcyBleHBhbmRvIGF0dHJpYnV0ZXMgYWxvbmcgd2l0aCB0aGUgcHJvcGVydHlcclxuXHRcdFx0XHRcdFx0Ly8gSUUgZG9lcyBub3QgaGF2ZSBhIHJlbW92ZUF0dHJpYnV0ZSBmdW5jdGlvbiBvbiBEb2N1bWVudCBub2Rlc1xyXG5cdFx0XHRcdFx0XHRpZiAoICFhdHRyaWJ1dGVzICYmIHR5cGVvZiBlbGVtLnJlbW92ZUF0dHJpYnV0ZSAhPT0gXCJ1bmRlZmluZWRcIiApIHtcclxuXHRcdFx0XHRcdFx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggaW50ZXJuYWxLZXkgKTtcclxuXHJcblx0XHRcdFx0XHRcdC8vIFdlYmtpdCAmIEJsaW5rIHBlcmZvcm1hbmNlIHN1ZmZlcnMgd2hlbiBkZWxldGluZyBwcm9wZXJ0aWVzXHJcblx0XHRcdFx0XHRcdC8vIGZyb20gRE9NIG5vZGVzLCBzbyBzZXQgdG8gdW5kZWZpbmVkIGluc3RlYWRcclxuXHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9jb2RlLmdvb2dsZS5jb20vcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTM3ODYwN1xyXG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdGVsZW1bIGludGVybmFsS2V5IF0gPSB1bmRlZmluZWQ7XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdGRlbGV0ZWRJZHMucHVzaCggaWQgKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn0gKTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHJcblx0Ly8gS2VlcCBkb21NYW5pcCBleHBvc2VkIHVudGlsIDMuMCAoZ2gtMjIyNSlcclxuXHRkb21NYW5pcDogZG9tTWFuaXAsXHJcblxyXG5cdGRldGFjaDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xyXG5cdFx0cmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IsIHRydWUgKTtcclxuXHR9LFxyXG5cclxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcclxuXHRcdHJldHVybiByZW1vdmUoIHRoaXMsIHNlbGVjdG9yICk7XHJcblx0fSxcclxuXHJcblx0dGV4dDogZnVuY3Rpb24oIHZhbHVlICkge1xyXG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xyXG5cdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XHJcblx0XHRcdFx0alF1ZXJ5LnRleHQoIHRoaXMgKSA6XHJcblx0XHRcdFx0dGhpcy5lbXB0eSgpLmFwcGVuZChcclxuXHRcdFx0XHRcdCggdGhpc1sgMCBdICYmIHRoaXNbIDAgXS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50ICkuY3JlYXRlVGV4dE5vZGUoIHZhbHVlIClcclxuXHRcdFx0XHQpO1xyXG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcclxuXHR9LFxyXG5cclxuXHRhcHBlbmQ6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcclxuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XHJcblx0XHRcdFx0dGFyZ2V0LmFwcGVuZENoaWxkKCBlbGVtICk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHRwcmVwZW5kOiBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XHJcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xyXG5cdFx0XHRcdHRhcmdldC5pbnNlcnRCZWZvcmUoIGVsZW0sIHRhcmdldC5maXJzdENoaWxkICk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHRiZWZvcmU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIGRvbU1hbmlwKCB0aGlzLCBhcmd1bWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSApIHtcclxuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzICk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHRhZnRlcjogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xyXG5cdFx0XHRcdHRoaXMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoIGVsZW0sIHRoaXMubmV4dFNpYmxpbmcgKTtcclxuXHRcdFx0fVxyXG5cdFx0fSApO1xyXG5cdH0sXHJcblxyXG5cdGVtcHR5OiBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBlbGVtLFxyXG5cdFx0XHRpID0gMDtcclxuXHJcblx0XHRmb3IgKCA7ICggZWxlbSA9IHRoaXNbIGkgXSApICE9IG51bGw7IGkrKyApIHtcclxuXHJcblx0XHRcdC8vIFJlbW92ZSBlbGVtZW50IG5vZGVzIGFuZCBwcmV2ZW50IG1lbW9yeSBsZWFrc1xyXG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XHJcblx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFJlbW92ZSBhbnkgcmVtYWluaW5nIG5vZGVzXHJcblx0XHRcdHdoaWxlICggZWxlbS5maXJzdENoaWxkICkge1xyXG5cdFx0XHRcdGVsZW0ucmVtb3ZlQ2hpbGQoIGVsZW0uZmlyc3RDaGlsZCApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBJZiB0aGlzIGlzIGEgc2VsZWN0LCBlbnN1cmUgdGhhdCBpdCBkaXNwbGF5cyBlbXB0eSAoIzEyMzM2KVxyXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTw5XHJcblx0XHRcdGlmICggZWxlbS5vcHRpb25zICYmIGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgXCJzZWxlY3RcIiApICkge1xyXG5cdFx0XHRcdGVsZW0ub3B0aW9ucy5sZW5ndGggPSAwO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIHRoaXM7XHJcblx0fSxcclxuXHJcblx0Y2xvbmU6IGZ1bmN0aW9uKCBkYXRhQW5kRXZlbnRzLCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcclxuXHRcdGRhdGFBbmRFdmVudHMgPSBkYXRhQW5kRXZlbnRzID09IG51bGwgPyBmYWxzZSA6IGRhdGFBbmRFdmVudHM7XHJcblx0XHRkZWVwRGF0YUFuZEV2ZW50cyA9IGRlZXBEYXRhQW5kRXZlbnRzID09IG51bGwgPyBkYXRhQW5kRXZlbnRzIDogZGVlcERhdGFBbmRFdmVudHM7XHJcblxyXG5cdFx0cmV0dXJuIHRoaXMubWFwKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0cmV0dXJuIGpRdWVyeS5jbG9uZSggdGhpcywgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKTtcclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHRodG1sOiBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHRcdHZhciBlbGVtID0gdGhpc1sgMCBdIHx8IHt9LFxyXG5cdFx0XHRcdGkgPSAwLFxyXG5cdFx0XHRcdGwgPSB0aGlzLmxlbmd0aDtcclxuXHJcblx0XHRcdGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0XHRyZXR1cm4gZWxlbS5ub2RlVHlwZSA9PT0gMSA/XHJcblx0XHRcdFx0XHRlbGVtLmlubmVySFRNTC5yZXBsYWNlKCByaW5saW5lalF1ZXJ5LCBcIlwiICkgOlxyXG5cdFx0XHRcdFx0dW5kZWZpbmVkO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBTZWUgaWYgd2UgY2FuIHRha2UgYSBzaG9ydGN1dCBhbmQganVzdCB1c2UgaW5uZXJIVE1MXHJcblx0XHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmICFybm9Jbm5lcmh0bWwudGVzdCggdmFsdWUgKSAmJlxyXG5cdFx0XHRcdCggc3VwcG9ydC5odG1sU2VyaWFsaXplIHx8ICFybm9zaGltY2FjaGUudGVzdCggdmFsdWUgKSAgKSAmJlxyXG5cdFx0XHRcdCggc3VwcG9ydC5sZWFkaW5nV2hpdGVzcGFjZSB8fCAhcmxlYWRpbmdXaGl0ZXNwYWNlLnRlc3QoIHZhbHVlICkgKSAmJlxyXG5cdFx0XHRcdCF3cmFwTWFwWyAoIHJ0YWdOYW1lLmV4ZWMoIHZhbHVlICkgfHwgWyBcIlwiLCBcIlwiIF0gKVsgMSBdLnRvTG93ZXJDYXNlKCkgXSApIHtcclxuXHJcblx0XHRcdFx0dmFsdWUgPSBqUXVlcnkuaHRtbFByZWZpbHRlciggdmFsdWUgKTtcclxuXHJcblx0XHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRcdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcclxuXHJcblx0XHRcdFx0XHRcdC8vIFJlbW92ZSBlbGVtZW50IG5vZGVzIGFuZCBwcmV2ZW50IG1lbW9yeSBsZWFrc1xyXG5cdFx0XHRcdFx0XHRlbGVtID0gdGhpc1sgaSBdIHx8IHt9O1xyXG5cdFx0XHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XHJcblx0XHRcdFx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XHJcblx0XHRcdFx0XHRcdFx0ZWxlbS5pbm5lckhUTUwgPSB2YWx1ZTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdGVsZW0gPSAwO1xyXG5cclxuXHRcdFx0XHQvLyBJZiB1c2luZyBpbm5lckhUTUwgdGhyb3dzIGFuIGV4Y2VwdGlvbiwgdXNlIHRoZSBmYWxsYmFjayBtZXRob2RcclxuXHRcdFx0XHR9IGNhdGNoICggZSApIHt9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmICggZWxlbSApIHtcclxuXHRcdFx0XHR0aGlzLmVtcHR5KCkuYXBwZW5kKCB2YWx1ZSApO1xyXG5cdFx0XHR9XHJcblx0XHR9LCBudWxsLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCApO1xyXG5cdH0sXHJcblxyXG5cdHJlcGxhY2VXaXRoOiBmdW5jdGlvbigpIHtcclxuXHRcdHZhciBpZ25vcmVkID0gW107XHJcblxyXG5cdFx0Ly8gTWFrZSB0aGUgY2hhbmdlcywgcmVwbGFjaW5nIGVhY2ggbm9uLWlnbm9yZWQgY29udGV4dCBlbGVtZW50IHdpdGggdGhlIG5ldyBjb250ZW50XHJcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdHZhciBwYXJlbnQgPSB0aGlzLnBhcmVudE5vZGU7XHJcblxyXG5cdFx0XHRpZiAoIGpRdWVyeS5pbkFycmF5KCB0aGlzLCBpZ25vcmVkICkgPCAwICkge1xyXG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggdGhpcyApICk7XHJcblx0XHRcdFx0aWYgKCBwYXJlbnQgKSB7XHJcblx0XHRcdFx0XHRwYXJlbnQucmVwbGFjZUNoaWxkKCBlbGVtLCB0aGlzICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0Ly8gRm9yY2UgY2FsbGJhY2sgaW52b2NhdGlvblxyXG5cdFx0fSwgaWdub3JlZCApO1xyXG5cdH1cclxufSApO1xyXG5cclxualF1ZXJ5LmVhY2goIHtcclxuXHRhcHBlbmRUbzogXCJhcHBlbmRcIixcclxuXHRwcmVwZW5kVG86IFwicHJlcGVuZFwiLFxyXG5cdGluc2VydEJlZm9yZTogXCJiZWZvcmVcIixcclxuXHRpbnNlcnRBZnRlcjogXCJhZnRlclwiLFxyXG5cdHJlcGxhY2VBbGw6IFwicmVwbGFjZVdpdGhcIlxyXG59LCBmdW5jdGlvbiggbmFtZSwgb3JpZ2luYWwgKSB7XHJcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XHJcblx0XHR2YXIgZWxlbXMsXHJcblx0XHRcdGkgPSAwLFxyXG5cdFx0XHRyZXQgPSBbXSxcclxuXHRcdFx0aW5zZXJ0ID0galF1ZXJ5KCBzZWxlY3RvciApLFxyXG5cdFx0XHRsYXN0ID0gaW5zZXJ0Lmxlbmd0aCAtIDE7XHJcblxyXG5cdFx0Zm9yICggOyBpIDw9IGxhc3Q7IGkrKyApIHtcclxuXHRcdFx0ZWxlbXMgPSBpID09PSBsYXN0ID8gdGhpcyA6IHRoaXMuY2xvbmUoIHRydWUgKTtcclxuXHRcdFx0alF1ZXJ5KCBpbnNlcnRbIGkgXSApWyBvcmlnaW5hbCBdKCBlbGVtcyApO1xyXG5cclxuXHRcdFx0Ly8gTW9kZXJuIGJyb3dzZXJzIGNhbiBhcHBseSBqUXVlcnkgY29sbGVjdGlvbnMgYXMgYXJyYXlzLCBidXQgb2xkSUUgbmVlZHMgYSAuZ2V0KClcclxuXHRcdFx0cHVzaC5hcHBseSggcmV0LCBlbGVtcy5nZXQoKSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggcmV0ICk7XHJcblx0fTtcclxufSApO1xyXG5cclxuXHJcbnZhciBpZnJhbWUsXHJcblx0ZWxlbWRpc3BsYXkgPSB7XHJcblxyXG5cdFx0Ly8gU3VwcG9ydDogRmlyZWZveFxyXG5cdFx0Ly8gV2UgaGF2ZSB0byBwcmUtZGVmaW5lIHRoZXNlIHZhbHVlcyBmb3IgRkYgKCMxMDIyNylcclxuXHRcdEhUTUw6IFwiYmxvY2tcIixcclxuXHRcdEJPRFk6IFwiYmxvY2tcIlxyXG5cdH07XHJcblxyXG4vKipcclxuICogUmV0cmlldmUgdGhlIGFjdHVhbCBkaXNwbGF5IG9mIGEgZWxlbWVudFxyXG4gKiBAcGFyYW0ge1N0cmluZ30gbmFtZSBub2RlTmFtZSBvZiB0aGUgZWxlbWVudFxyXG4gKiBAcGFyYW0ge09iamVjdH0gZG9jIERvY3VtZW50IG9iamVjdFxyXG4gKi9cclxuXHJcbi8vIENhbGxlZCBvbmx5IGZyb20gd2l0aGluIGRlZmF1bHREaXNwbGF5XHJcbmZ1bmN0aW9uIGFjdHVhbERpc3BsYXkoIG5hbWUsIGRvYyApIHtcclxuXHR2YXIgZWxlbSA9IGpRdWVyeSggZG9jLmNyZWF0ZUVsZW1lbnQoIG5hbWUgKSApLmFwcGVuZFRvKCBkb2MuYm9keSApLFxyXG5cclxuXHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtWyAwIF0sIFwiZGlzcGxheVwiICk7XHJcblxyXG5cdC8vIFdlIGRvbid0IGhhdmUgYW55IGRhdGEgc3RvcmVkIG9uIHRoZSBlbGVtZW50LFxyXG5cdC8vIHNvIHVzZSBcImRldGFjaFwiIG1ldGhvZCBhcyBmYXN0IHdheSB0byBnZXQgcmlkIG9mIHRoZSBlbGVtZW50XHJcblx0ZWxlbS5kZXRhY2goKTtcclxuXHJcblx0cmV0dXJuIGRpc3BsYXk7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBUcnkgdG8gZGV0ZXJtaW5lIHRoZSBkZWZhdWx0IGRpc3BsYXkgdmFsdWUgb2YgYW4gZWxlbWVudFxyXG4gKiBAcGFyYW0ge1N0cmluZ30gbm9kZU5hbWVcclxuICovXHJcbmZ1bmN0aW9uIGRlZmF1bHREaXNwbGF5KCBub2RlTmFtZSApIHtcclxuXHR2YXIgZG9jID0gZG9jdW1lbnQsXHJcblx0XHRkaXNwbGF5ID0gZWxlbWRpc3BsYXlbIG5vZGVOYW1lIF07XHJcblxyXG5cdGlmICggIWRpc3BsYXkgKSB7XHJcblx0XHRkaXNwbGF5ID0gYWN0dWFsRGlzcGxheSggbm9kZU5hbWUsIGRvYyApO1xyXG5cclxuXHRcdC8vIElmIHRoZSBzaW1wbGUgd2F5IGZhaWxzLCByZWFkIGZyb20gaW5zaWRlIGFuIGlmcmFtZVxyXG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcIm5vbmVcIiB8fCAhZGlzcGxheSApIHtcclxuXHJcblx0XHRcdC8vIFVzZSB0aGUgYWxyZWFkeS1jcmVhdGVkIGlmcmFtZSBpZiBwb3NzaWJsZVxyXG5cdFx0XHRpZnJhbWUgPSAoIGlmcmFtZSB8fCBqUXVlcnkoIFwiPGlmcmFtZSBmcmFtZWJvcmRlcj0nMCcgd2lkdGg9JzAnIGhlaWdodD0nMCcvPlwiICkgKVxyXG5cdFx0XHRcdC5hcHBlbmRUbyggZG9jLmRvY3VtZW50RWxlbWVudCApO1xyXG5cclxuXHRcdFx0Ly8gQWx3YXlzIHdyaXRlIGEgbmV3IEhUTUwgc2tlbGV0b24gc28gV2Via2l0IGFuZCBGaXJlZm94IGRvbid0IGNob2tlIG9uIHJldXNlXHJcblx0XHRcdGRvYyA9ICggaWZyYW1lWyAwIF0uY29udGVudFdpbmRvdyB8fCBpZnJhbWVbIDAgXS5jb250ZW50RG9jdW1lbnQgKS5kb2N1bWVudDtcclxuXHJcblx0XHRcdC8vIFN1cHBvcnQ6IElFXHJcblx0XHRcdGRvYy53cml0ZSgpO1xyXG5cdFx0XHRkb2MuY2xvc2UoKTtcclxuXHJcblx0XHRcdGRpc3BsYXkgPSBhY3R1YWxEaXNwbGF5KCBub2RlTmFtZSwgZG9jICk7XHJcblx0XHRcdGlmcmFtZS5kZXRhY2goKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBTdG9yZSB0aGUgY29ycmVjdCBkZWZhdWx0IGRpc3BsYXlcclxuXHRcdGVsZW1kaXNwbGF5WyBub2RlTmFtZSBdID0gZGlzcGxheTtcclxuXHR9XHJcblxyXG5cdHJldHVybiBkaXNwbGF5O1xyXG59XHJcbnZhciBybWFyZ2luID0gKCAvXm1hcmdpbi8gKTtcclxuXHJcbnZhciBybnVtbm9ucHggPSBuZXcgUmVnRXhwKCBcIl4oXCIgKyBwbnVtICsgXCIpKD8hcHgpW2EteiVdKyRcIiwgXCJpXCIgKTtcclxuXHJcbnZhciBzd2FwID0gZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIGNhbGxiYWNrLCBhcmdzICkge1xyXG5cdHZhciByZXQsIG5hbWUsXHJcblx0XHRvbGQgPSB7fTtcclxuXHJcblx0Ly8gUmVtZW1iZXIgdGhlIG9sZCB2YWx1ZXMsIGFuZCBpbnNlcnQgdGhlIG5ldyBvbmVzXHJcblx0Zm9yICggbmFtZSBpbiBvcHRpb25zICkge1xyXG5cdFx0b2xkWyBuYW1lIF0gPSBlbGVtLnN0eWxlWyBuYW1lIF07XHJcblx0XHRlbGVtLnN0eWxlWyBuYW1lIF0gPSBvcHRpb25zWyBuYW1lIF07XHJcblx0fVxyXG5cclxuXHRyZXQgPSBjYWxsYmFjay5hcHBseSggZWxlbSwgYXJncyB8fCBbXSApO1xyXG5cclxuXHQvLyBSZXZlcnQgdGhlIG9sZCB2YWx1ZXNcclxuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XHJcblx0XHRlbGVtLnN0eWxlWyBuYW1lIF0gPSBvbGRbIG5hbWUgXTtcclxuXHR9XHJcblxyXG5cdHJldHVybiByZXQ7XHJcbn07XHJcblxyXG5cclxudmFyIGRvY3VtZW50RWxlbWVudCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcclxuXHJcblxyXG5cclxuKCBmdW5jdGlvbigpIHtcclxuXHR2YXIgcGl4ZWxQb3NpdGlvblZhbCwgcGl4ZWxNYXJnaW5SaWdodFZhbCwgYm94U2l6aW5nUmVsaWFibGVWYWwsXHJcblx0XHRyZWxpYWJsZUhpZGRlbk9mZnNldHNWYWwsIHJlbGlhYmxlTWFyZ2luUmlnaHRWYWwsIHJlbGlhYmxlTWFyZ2luTGVmdFZhbCxcclxuXHRcdGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSxcclxuXHRcdGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKTtcclxuXHJcblx0Ly8gRmluaXNoIGVhcmx5IGluIGxpbWl0ZWQgKG5vbi1icm93c2VyKSBlbnZpcm9ubWVudHNcclxuXHRpZiAoICFkaXYuc3R5bGUgKSB7XHJcblx0XHRyZXR1cm47XHJcblx0fVxyXG5cclxuXHRkaXYuc3R5bGUuY3NzVGV4dCA9IFwiZmxvYXQ6bGVmdDtvcGFjaXR5Oi41XCI7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IElFPDlcclxuXHQvLyBNYWtlIHN1cmUgdGhhdCBlbGVtZW50IG9wYWNpdHkgZXhpc3RzIChhcyBvcHBvc2VkIHRvIGZpbHRlcilcclxuXHRzdXBwb3J0Lm9wYWNpdHkgPSBkaXYuc3R5bGUub3BhY2l0eSA9PT0gXCIwLjVcIjtcclxuXHJcblx0Ly8gVmVyaWZ5IHN0eWxlIGZsb2F0IGV4aXN0ZW5jZVxyXG5cdC8vIChJRSB1c2VzIHN0eWxlRmxvYXQgaW5zdGVhZCBvZiBjc3NGbG9hdClcclxuXHRzdXBwb3J0LmNzc0Zsb2F0ID0gISFkaXYuc3R5bGUuY3NzRmxvYXQ7XHJcblxyXG5cdGRpdi5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9IFwiY29udGVudC1ib3hcIjtcclxuXHRkaXYuY2xvbmVOb2RlKCB0cnVlICkuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcIlwiO1xyXG5cdHN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlID0gZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID09PSBcImNvbnRlbnQtYm94XCI7XHJcblxyXG5cdGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKTtcclxuXHRjb250YWluZXIuc3R5bGUuY3NzVGV4dCA9IFwiYm9yZGVyOjA7d2lkdGg6OHB4O2hlaWdodDowO3RvcDowO2xlZnQ6LTk5OTlweDtcIiArXHJcblx0XHRcInBhZGRpbmc6MDttYXJnaW4tdG9wOjFweDtwb3NpdGlvbjphYnNvbHV0ZVwiO1xyXG5cdGRpdi5pbm5lckhUTUwgPSBcIlwiO1xyXG5cdGNvbnRhaW5lci5hcHBlbmRDaGlsZCggZGl2ICk7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IEZpcmVmb3g8MjksIEFuZHJvaWQgMi4zXHJcblx0Ly8gVmVuZG9yLXByZWZpeCBib3gtc2l6aW5nXHJcblx0c3VwcG9ydC5ib3hTaXppbmcgPSBkaXYuc3R5bGUuYm94U2l6aW5nID09PSBcIlwiIHx8IGRpdi5zdHlsZS5Nb3pCb3hTaXppbmcgPT09IFwiXCIgfHxcclxuXHRcdGRpdi5zdHlsZS5XZWJraXRCb3hTaXppbmcgPT09IFwiXCI7XHJcblxyXG5cdGpRdWVyeS5leHRlbmQoIHN1cHBvcnQsIHtcclxuXHRcdHJlbGlhYmxlSGlkZGVuT2Zmc2V0czogZnVuY3Rpb24oKSB7XHJcblx0XHRcdGlmICggcGl4ZWxQb3NpdGlvblZhbCA9PSBudWxsICkge1xyXG5cdFx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHJlbGlhYmxlSGlkZGVuT2Zmc2V0c1ZhbDtcclxuXHRcdH0sXHJcblxyXG5cdFx0Ym94U2l6aW5nUmVsaWFibGU6IGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdFx0Ly8gV2UncmUgY2hlY2tpbmcgZm9yIHBpeGVsUG9zaXRpb25WYWwgaGVyZSBpbnN0ZWFkIG9mIGJveFNpemluZ1JlbGlhYmxlVmFsXHJcblx0XHRcdC8vIHNpbmNlIHRoYXQgY29tcHJlc3NlcyBiZXR0ZXIgYW5kIHRoZXkncmUgY29tcHV0ZWQgdG9nZXRoZXIgYW55d2F5LlxyXG5cdFx0XHRpZiAoIHBpeGVsUG9zaXRpb25WYWwgPT0gbnVsbCApIHtcclxuXHRcdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBib3hTaXppbmdSZWxpYWJsZVZhbDtcclxuXHRcdH0sXHJcblxyXG5cdFx0cGl4ZWxNYXJnaW5SaWdodDogZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHQvLyBTdXBwb3J0OiBBbmRyb2lkIDQuMC00LjNcclxuXHRcdFx0aWYgKCBwaXhlbFBvc2l0aW9uVmFsID09IG51bGwgKSB7XHJcblx0XHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gcGl4ZWxNYXJnaW5SaWdodFZhbDtcclxuXHRcdH0sXHJcblxyXG5cdFx0cGl4ZWxQb3NpdGlvbjogZnVuY3Rpb24oKSB7XHJcblx0XHRcdGlmICggcGl4ZWxQb3NpdGlvblZhbCA9PSBudWxsICkge1xyXG5cdFx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHBpeGVsUG9zaXRpb25WYWw7XHJcblx0XHR9LFxyXG5cclxuXHRcdHJlbGlhYmxlTWFyZ2luUmlnaHQ6IGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCAyLjNcclxuXHRcdFx0aWYgKCBwaXhlbFBvc2l0aW9uVmFsID09IG51bGwgKSB7XHJcblx0XHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gcmVsaWFibGVNYXJnaW5SaWdodFZhbDtcclxuXHRcdH0sXHJcblxyXG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0OiBmdW5jdGlvbigpIHtcclxuXHJcblx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OCBvbmx5LCBBbmRyb2lkIDQuMCAtIDQuMyBvbmx5LCBGaXJlZm94IDw9MyAtIDM3XHJcblx0XHRcdGlmICggcGl4ZWxQb3NpdGlvblZhbCA9PSBudWxsICkge1xyXG5cdFx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHJlbGlhYmxlTWFyZ2luTGVmdFZhbDtcclxuXHRcdH1cclxuXHR9ICk7XHJcblxyXG5cdGZ1bmN0aW9uIGNvbXB1dGVTdHlsZVRlc3RzKCkge1xyXG5cdFx0dmFyIGNvbnRlbnRzLCBkaXZTdHlsZSxcclxuXHRcdFx0ZG9jdW1lbnRFbGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xyXG5cclxuXHRcdC8vIFNldHVwXHJcblx0XHRkb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQoIGNvbnRhaW5lciApO1xyXG5cclxuXHRcdGRpdi5zdHlsZS5jc3NUZXh0ID1cclxuXHJcblx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zXHJcblx0XHRcdC8vIFZlbmRvci1wcmVmaXggYm94LXNpemluZ1xyXG5cdFx0XHRcIi13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JveC1zaXppbmc6Ym9yZGVyLWJveDtcIiArXHJcblx0XHRcdFwicG9zaXRpb246cmVsYXRpdmU7ZGlzcGxheTpibG9jaztcIiArXHJcblx0XHRcdFwibWFyZ2luOmF1dG87Ym9yZGVyOjFweDtwYWRkaW5nOjFweDtcIiArXHJcblx0XHRcdFwidG9wOjElO3dpZHRoOjUwJVwiO1xyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IElFPDlcclxuXHRcdC8vIEFzc3VtZSByZWFzb25hYmxlIHZhbHVlcyBpbiB0aGUgYWJzZW5jZSBvZiBnZXRDb21wdXRlZFN0eWxlXHJcblx0XHRwaXhlbFBvc2l0aW9uVmFsID0gYm94U2l6aW5nUmVsaWFibGVWYWwgPSByZWxpYWJsZU1hcmdpbkxlZnRWYWwgPSBmYWxzZTtcclxuXHRcdHBpeGVsTWFyZ2luUmlnaHRWYWwgPSByZWxpYWJsZU1hcmdpblJpZ2h0VmFsID0gdHJ1ZTtcclxuXHJcblx0XHQvLyBDaGVjayBmb3IgZ2V0Q29tcHV0ZWRTdHlsZSBzbyB0aGF0IHRoaXMgY29kZSBpcyBub3QgcnVuIGluIElFPDkuXHJcblx0XHRpZiAoIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlICkge1xyXG5cdFx0XHRkaXZTdHlsZSA9IHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKCBkaXYgKTtcclxuXHRcdFx0cGl4ZWxQb3NpdGlvblZhbCA9ICggZGl2U3R5bGUgfHwge30gKS50b3AgIT09IFwiMSVcIjtcclxuXHRcdFx0cmVsaWFibGVNYXJnaW5MZWZ0VmFsID0gKCBkaXZTdHlsZSB8fCB7fSApLm1hcmdpbkxlZnQgPT09IFwiMnB4XCI7XHJcblx0XHRcdGJveFNpemluZ1JlbGlhYmxlVmFsID0gKCBkaXZTdHlsZSB8fCB7IHdpZHRoOiBcIjRweFwiIH0gKS53aWR0aCA9PT0gXCI0cHhcIjtcclxuXHJcblx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHlcclxuXHRcdFx0Ly8gU29tZSBzdHlsZXMgY29tZSBiYWNrIHdpdGggcGVyY2VudGFnZSB2YWx1ZXMsIGV2ZW4gdGhvdWdoIHRoZXkgc2hvdWxkbid0XHJcblx0XHRcdGRpdi5zdHlsZS5tYXJnaW5SaWdodCA9IFwiNTAlXCI7XHJcblx0XHRcdHBpeGVsTWFyZ2luUmlnaHRWYWwgPSAoIGRpdlN0eWxlIHx8IHsgbWFyZ2luUmlnaHQ6IFwiNHB4XCIgfSApLm1hcmdpblJpZ2h0ID09PSBcIjRweFwiO1xyXG5cclxuXHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCAyLjMgb25seVxyXG5cdFx0XHQvLyBEaXYgd2l0aCBleHBsaWNpdCB3aWR0aCBhbmQgbm8gbWFyZ2luLXJpZ2h0IGluY29ycmVjdGx5XHJcblx0XHRcdC8vIGdldHMgY29tcHV0ZWQgbWFyZ2luLXJpZ2h0IGJhc2VkIG9uIHdpZHRoIG9mIGNvbnRhaW5lciAoIzMzMzMpXHJcblx0XHRcdC8vIFdlYktpdCBCdWcgMTMzNDMgLSBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgd3JvbmcgdmFsdWUgZm9yIG1hcmdpbi1yaWdodFxyXG5cdFx0XHRjb250ZW50cyA9IGRpdi5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XHJcblxyXG5cdFx0XHQvLyBSZXNldCBDU1M6IGJveC1zaXppbmc7IGRpc3BsYXk7IG1hcmdpbjsgYm9yZGVyOyBwYWRkaW5nXHJcblx0XHRcdGNvbnRlbnRzLnN0eWxlLmNzc1RleHQgPSBkaXYuc3R5bGUuY3NzVGV4dCA9XHJcblxyXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zXHJcblx0XHRcdFx0Ly8gVmVuZG9yLXByZWZpeCBib3gtc2l6aW5nXHJcblx0XHRcdFx0XCItd2Via2l0LWJveC1zaXppbmc6Y29udGVudC1ib3g7LW1vei1ib3gtc2l6aW5nOmNvbnRlbnQtYm94O1wiICtcclxuXHRcdFx0XHRcImJveC1zaXppbmc6Y29udGVudC1ib3g7ZGlzcGxheTpibG9jazttYXJnaW46MDtib3JkZXI6MDtwYWRkaW5nOjBcIjtcclxuXHRcdFx0Y29udGVudHMuc3R5bGUubWFyZ2luUmlnaHQgPSBjb250ZW50cy5zdHlsZS53aWR0aCA9IFwiMFwiO1xyXG5cdFx0XHRkaXYuc3R5bGUud2lkdGggPSBcIjFweFwiO1xyXG5cclxuXHRcdFx0cmVsaWFibGVNYXJnaW5SaWdodFZhbCA9XHJcblx0XHRcdFx0IXBhcnNlRmxvYXQoICggd2luZG93LmdldENvbXB1dGVkU3R5bGUoIGNvbnRlbnRzICkgfHwge30gKS5tYXJnaW5SaWdodCApO1xyXG5cclxuXHRcdFx0ZGl2LnJlbW92ZUNoaWxkKCBjb250ZW50cyApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IElFNi04XHJcblx0XHQvLyBGaXJzdCBjaGVjayB0aGF0IGdldENsaWVudFJlY3RzIHdvcmtzIGFzIGV4cGVjdGVkXHJcblx0XHQvLyBDaGVjayBpZiB0YWJsZSBjZWxscyBzdGlsbCBoYXZlIG9mZnNldFdpZHRoL0hlaWdodCB3aGVuIHRoZXkgYXJlIHNldFxyXG5cdFx0Ly8gdG8gZGlzcGxheTpub25lIGFuZCB0aGVyZSBhcmUgc3RpbGwgb3RoZXIgdmlzaWJsZSB0YWJsZSBjZWxscyBpbiBhXHJcblx0XHQvLyB0YWJsZSByb3c7IGlmIHNvLCBvZmZzZXRXaWR0aC9IZWlnaHQgYXJlIG5vdCByZWxpYWJsZSBmb3IgdXNlIHdoZW5cclxuXHRcdC8vIGRldGVybWluaW5nIGlmIGFuIGVsZW1lbnQgaGFzIGJlZW4gaGlkZGVuIGRpcmVjdGx5IHVzaW5nXHJcblx0XHQvLyBkaXNwbGF5Om5vbmUgKGl0IGlzIHN0aWxsIHNhZmUgdG8gdXNlIG9mZnNldHMgaWYgYSBwYXJlbnQgZWxlbWVudCBpc1xyXG5cdFx0Ly8gaGlkZGVuOyBkb24gc2FmZXR5IGdvZ2dsZXMgYW5kIHNlZSBidWcgIzQ1MTIgZm9yIG1vcmUgaW5mb3JtYXRpb24pLlxyXG5cdFx0ZGl2LnN0eWxlLmRpc3BsYXkgPSBcIm5vbmVcIjtcclxuXHRcdHJlbGlhYmxlSGlkZGVuT2Zmc2V0c1ZhbCA9IGRpdi5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCA9PT0gMDtcclxuXHRcdGlmICggcmVsaWFibGVIaWRkZW5PZmZzZXRzVmFsICkge1xyXG5cdFx0XHRkaXYuc3R5bGUuZGlzcGxheSA9IFwiXCI7XHJcblx0XHRcdGRpdi5pbm5lckhUTUwgPSBcIjx0YWJsZT48dHI+PHRkPjwvdGQ+PHRkPnQ8L3RkPjwvdHI+PC90YWJsZT5cIjtcclxuXHRcdFx0ZGl2LmNoaWxkTm9kZXNbIDAgXS5zdHlsZS5ib3JkZXJDb2xsYXBzZSA9IFwic2VwYXJhdGVcIjtcclxuXHRcdFx0Y29udGVudHMgPSBkaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwidGRcIiApO1xyXG5cdFx0XHRjb250ZW50c1sgMCBdLnN0eWxlLmNzc1RleHQgPSBcIm1hcmdpbjowO2JvcmRlcjowO3BhZGRpbmc6MDtkaXNwbGF5Om5vbmVcIjtcclxuXHRcdFx0cmVsaWFibGVIaWRkZW5PZmZzZXRzVmFsID0gY29udGVudHNbIDAgXS5vZmZzZXRIZWlnaHQgPT09IDA7XHJcblx0XHRcdGlmICggcmVsaWFibGVIaWRkZW5PZmZzZXRzVmFsICkge1xyXG5cdFx0XHRcdGNvbnRlbnRzWyAwIF0uc3R5bGUuZGlzcGxheSA9IFwiXCI7XHJcblx0XHRcdFx0Y29udGVudHNbIDEgXS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcblx0XHRcdFx0cmVsaWFibGVIaWRkZW5PZmZzZXRzVmFsID0gY29udGVudHNbIDAgXS5vZmZzZXRIZWlnaHQgPT09IDA7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBUZWFyZG93blxyXG5cdFx0ZG9jdW1lbnRFbGVtZW50LnJlbW92ZUNoaWxkKCBjb250YWluZXIgKTtcclxuXHR9XHJcblxyXG59ICkoKTtcclxuXHJcblxyXG52YXIgZ2V0U3R5bGVzLCBjdXJDU1MsXHJcblx0cnBvc2l0aW9uID0gL14odG9wfHJpZ2h0fGJvdHRvbXxsZWZ0KSQvO1xyXG5cclxuaWYgKCB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSApIHtcclxuXHRnZXRTdHlsZXMgPSBmdW5jdGlvbiggZWxlbSApIHtcclxuXHJcblx0XHQvLyBTdXBwb3J0OiBJRTw9MTErLCBGaXJlZm94PD0zMCsgKCMxNTA5OCwgIzE0MTUwKVxyXG5cdFx0Ly8gSUUgdGhyb3dzIG9uIGVsZW1lbnRzIGNyZWF0ZWQgaW4gcG9wdXBzXHJcblx0XHQvLyBGRiBtZWFud2hpbGUgdGhyb3dzIG9uIGZyYW1lIGVsZW1lbnRzIHRocm91Z2ggXCJkZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlXCJcclxuXHRcdHZhciB2aWV3ID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xyXG5cclxuXHRcdGlmICggIXZpZXcgfHwgIXZpZXcub3BlbmVyICkge1xyXG5cdFx0XHR2aWV3ID0gd2luZG93O1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB2aWV3LmdldENvbXB1dGVkU3R5bGUoIGVsZW0gKTtcclxuXHR9O1xyXG5cclxuXHRjdXJDU1MgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSwgY29tcHV0ZWQgKSB7XHJcblx0XHR2YXIgd2lkdGgsIG1pbldpZHRoLCBtYXhXaWR0aCwgcmV0LFxyXG5cdFx0XHRzdHlsZSA9IGVsZW0uc3R5bGU7XHJcblxyXG5cdFx0Y29tcHV0ZWQgPSBjb21wdXRlZCB8fCBnZXRTdHlsZXMoIGVsZW0gKTtcclxuXHJcblx0XHQvLyBnZXRQcm9wZXJ0eVZhbHVlIGlzIG9ubHkgbmVlZGVkIGZvciAuY3NzKCdmaWx0ZXInKSBpbiBJRTksIHNlZSAjMTI1MzdcclxuXHRcdHJldCA9IGNvbXB1dGVkID8gY29tcHV0ZWQuZ2V0UHJvcGVydHlWYWx1ZSggbmFtZSApIHx8IGNvbXB1dGVkWyBuYW1lIF0gOiB1bmRlZmluZWQ7XHJcblxyXG5cdFx0Ly8gU3VwcG9ydDogT3BlcmEgMTIuMXggb25seVxyXG5cdFx0Ly8gRmFsbCBiYWNrIHRvIHN0eWxlIGV2ZW4gd2l0aG91dCBjb21wdXRlZFxyXG5cdFx0Ly8gY29tcHV0ZWQgaXMgdW5kZWZpbmVkIGZvciBlbGVtcyBvbiBkb2N1bWVudCBmcmFnbWVudHNcclxuXHRcdGlmICggKCByZXQgPT09IFwiXCIgfHwgcmV0ID09PSB1bmRlZmluZWQgKSAmJiAhalF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKSApIHtcclxuXHRcdFx0cmV0ID0galF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lICk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBjb21wdXRlZCApIHtcclxuXHJcblx0XHRcdC8vIEEgdHJpYnV0ZSB0byB0aGUgXCJhd2Vzb21lIGhhY2sgYnkgRGVhbiBFZHdhcmRzXCJcclxuXHRcdFx0Ly8gQ2hyb21lIDwgMTcgYW5kIFNhZmFyaSA1LjAgdXNlcyBcImNvbXB1dGVkIHZhbHVlXCJcclxuXHRcdFx0Ly8gaW5zdGVhZCBvZiBcInVzZWQgdmFsdWVcIiBmb3IgbWFyZ2luLXJpZ2h0XHJcblx0XHRcdC8vIFNhZmFyaSA1LjEuNyAoYXQgbGVhc3QpIHJldHVybnMgcGVyY2VudGFnZSBmb3IgYSBsYXJnZXIgc2V0IG9mIHZhbHVlcyxcclxuXHRcdFx0Ly8gYnV0IHdpZHRoIHNlZW1zIHRvIGJlIHJlbGlhYmx5IHBpeGVsc1xyXG5cdFx0XHQvLyB0aGlzIGlzIGFnYWluc3QgdGhlIENTU09NIGRyYWZ0IHNwZWM6XHJcblx0XHRcdC8vIGh0dHA6Ly9kZXYudzMub3JnL2Nzc3dnL2Nzc29tLyNyZXNvbHZlZC12YWx1ZXNcclxuXHRcdFx0aWYgKCAhc3VwcG9ydC5waXhlbE1hcmdpblJpZ2h0KCkgJiYgcm51bW5vbnB4LnRlc3QoIHJldCApICYmIHJtYXJnaW4udGVzdCggbmFtZSApICkge1xyXG5cclxuXHRcdFx0XHQvLyBSZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzXHJcblx0XHRcdFx0d2lkdGggPSBzdHlsZS53aWR0aDtcclxuXHRcdFx0XHRtaW5XaWR0aCA9IHN0eWxlLm1pbldpZHRoO1xyXG5cdFx0XHRcdG1heFdpZHRoID0gc3R5bGUubWF4V2lkdGg7XHJcblxyXG5cdFx0XHRcdC8vIFB1dCBpbiB0aGUgbmV3IHZhbHVlcyB0byBnZXQgYSBjb21wdXRlZCB2YWx1ZSBvdXRcclxuXHRcdFx0XHRzdHlsZS5taW5XaWR0aCA9IHN0eWxlLm1heFdpZHRoID0gc3R5bGUud2lkdGggPSByZXQ7XHJcblx0XHRcdFx0cmV0ID0gY29tcHV0ZWQud2lkdGg7XHJcblxyXG5cdFx0XHRcdC8vIFJldmVydCB0aGUgY2hhbmdlZCB2YWx1ZXNcclxuXHRcdFx0XHRzdHlsZS53aWR0aCA9IHdpZHRoO1xyXG5cdFx0XHRcdHN0eWxlLm1pbldpZHRoID0gbWluV2lkdGg7XHJcblx0XHRcdFx0c3R5bGUubWF4V2lkdGggPSBtYXhXaWR0aDtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IElFXHJcblx0XHQvLyBJRSByZXR1cm5zIHpJbmRleCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLlxyXG5cdFx0cmV0dXJuIHJldCA9PT0gdW5kZWZpbmVkID9cclxuXHRcdFx0cmV0IDpcclxuXHRcdFx0cmV0ICsgXCJcIjtcclxuXHR9O1xyXG59IGVsc2UgaWYgKCBkb2N1bWVudEVsZW1lbnQuY3VycmVudFN0eWxlICkge1xyXG5cdGdldFN0eWxlcyA9IGZ1bmN0aW9uKCBlbGVtICkge1xyXG5cdFx0cmV0dXJuIGVsZW0uY3VycmVudFN0eWxlO1xyXG5cdH07XHJcblxyXG5cdGN1ckNTUyA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBjb21wdXRlZCApIHtcclxuXHRcdHZhciBsZWZ0LCBycywgcnNMZWZ0LCByZXQsXHJcblx0XHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcclxuXHJcblx0XHRjb21wdXRlZCA9IGNvbXB1dGVkIHx8IGdldFN0eWxlcyggZWxlbSApO1xyXG5cdFx0cmV0ID0gY29tcHV0ZWQgPyBjb21wdXRlZFsgbmFtZSBdIDogdW5kZWZpbmVkO1xyXG5cclxuXHRcdC8vIEF2b2lkIHNldHRpbmcgcmV0IHRvIGVtcHR5IHN0cmluZyBoZXJlXHJcblx0XHQvLyBzbyB3ZSBkb24ndCBkZWZhdWx0IHRvIGF1dG9cclxuXHRcdGlmICggcmV0ID09IG51bGwgJiYgc3R5bGUgJiYgc3R5bGVbIG5hbWUgXSApIHtcclxuXHRcdFx0cmV0ID0gc3R5bGVbIG5hbWUgXTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBGcm9tIHRoZSBhd2Vzb21lIGhhY2sgYnkgRGVhbiBFZHdhcmRzXHJcblx0XHQvLyBodHRwOi8vZXJpay5lYWUubmV0L2FyY2hpdmVzLzIwMDcvMDcvMjcvMTguNTQuMTUvI2NvbW1lbnQtMTAyMjkxXHJcblxyXG5cdFx0Ly8gSWYgd2UncmUgbm90IGRlYWxpbmcgd2l0aCBhIHJlZ3VsYXIgcGl4ZWwgbnVtYmVyXHJcblx0XHQvLyBidXQgYSBudW1iZXIgdGhhdCBoYXMgYSB3ZWlyZCBlbmRpbmcsIHdlIG5lZWQgdG8gY29udmVydCBpdCB0byBwaXhlbHNcclxuXHRcdC8vIGJ1dCBub3QgcG9zaXRpb24gY3NzIGF0dHJpYnV0ZXMsIGFzIHRob3NlIGFyZVxyXG5cdFx0Ly8gcHJvcG9ydGlvbmFsIHRvIHRoZSBwYXJlbnQgZWxlbWVudCBpbnN0ZWFkXHJcblx0XHQvLyBhbmQgd2UgY2FuJ3QgbWVhc3VyZSB0aGUgcGFyZW50IGluc3RlYWQgYmVjYXVzZSBpdFxyXG5cdFx0Ly8gbWlnaHQgdHJpZ2dlciBhIFwic3RhY2tpbmcgZG9sbHNcIiBwcm9ibGVtXHJcblx0XHRpZiAoIHJudW1ub25weC50ZXN0KCByZXQgKSAmJiAhcnBvc2l0aW9uLnRlc3QoIG5hbWUgKSApIHtcclxuXHJcblx0XHRcdC8vIFJlbWVtYmVyIHRoZSBvcmlnaW5hbCB2YWx1ZXNcclxuXHRcdFx0bGVmdCA9IHN0eWxlLmxlZnQ7XHJcblx0XHRcdHJzID0gZWxlbS5ydW50aW1lU3R5bGU7XHJcblx0XHRcdHJzTGVmdCA9IHJzICYmIHJzLmxlZnQ7XHJcblxyXG5cdFx0XHQvLyBQdXQgaW4gdGhlIG5ldyB2YWx1ZXMgdG8gZ2V0IGEgY29tcHV0ZWQgdmFsdWUgb3V0XHJcblx0XHRcdGlmICggcnNMZWZ0ICkge1xyXG5cdFx0XHRcdHJzLmxlZnQgPSBlbGVtLmN1cnJlbnRTdHlsZS5sZWZ0O1xyXG5cdFx0XHR9XHJcblx0XHRcdHN0eWxlLmxlZnQgPSBuYW1lID09PSBcImZvbnRTaXplXCIgPyBcIjFlbVwiIDogcmV0O1xyXG5cdFx0XHRyZXQgPSBzdHlsZS5waXhlbExlZnQgKyBcInB4XCI7XHJcblxyXG5cdFx0XHQvLyBSZXZlcnQgdGhlIGNoYW5nZWQgdmFsdWVzXHJcblx0XHRcdHN0eWxlLmxlZnQgPSBsZWZ0O1xyXG5cdFx0XHRpZiAoIHJzTGVmdCApIHtcclxuXHRcdFx0XHRycy5sZWZ0ID0gcnNMZWZ0O1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gU3VwcG9ydDogSUVcclxuXHRcdC8vIElFIHJldHVybnMgekluZGV4IHZhbHVlIGFzIGFuIGludGVnZXIuXHJcblx0XHRyZXR1cm4gcmV0ID09PSB1bmRlZmluZWQgP1xyXG5cdFx0XHRyZXQgOlxyXG5cdFx0XHRyZXQgKyBcIlwiIHx8IFwiYXV0b1wiO1xyXG5cdH07XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbmZ1bmN0aW9uIGFkZEdldEhvb2tJZiggY29uZGl0aW9uRm4sIGhvb2tGbiApIHtcclxuXHJcblx0Ly8gRGVmaW5lIHRoZSBob29rLCB3ZSdsbCBjaGVjayBvbiB0aGUgZmlyc3QgcnVuIGlmIGl0J3MgcmVhbGx5IG5lZWRlZC5cclxuXHRyZXR1cm4ge1xyXG5cdFx0Z2V0OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0aWYgKCBjb25kaXRpb25GbigpICkge1xyXG5cclxuXHRcdFx0XHQvLyBIb29rIG5vdCBuZWVkZWQgKG9yIGl0J3Mgbm90IHBvc3NpYmxlIHRvIHVzZSBpdCBkdWVcclxuXHRcdFx0XHQvLyB0byBtaXNzaW5nIGRlcGVuZGVuY3kpLCByZW1vdmUgaXQuXHJcblx0XHRcdFx0ZGVsZXRlIHRoaXMuZ2V0O1xyXG5cdFx0XHRcdHJldHVybjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gSG9vayBuZWVkZWQ7IHJlZGVmaW5lIGl0IHNvIHRoYXQgdGhlIHN1cHBvcnQgdGVzdCBpcyBub3QgZXhlY3V0ZWQgYWdhaW4uXHJcblx0XHRcdHJldHVybiAoIHRoaXMuZ2V0ID0gaG9va0ZuICkuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xyXG5cdFx0fVxyXG5cdH07XHJcbn1cclxuXHJcblxyXG52YXJcclxuXHJcblx0XHRyYWxwaGEgPSAvYWxwaGFcXChbXildKlxcKS9pLFxyXG5cdHJvcGFjaXR5ID0gL29wYWNpdHlcXHMqPVxccyooW14pXSopL2ksXHJcblxyXG5cdC8vIHN3YXBwYWJsZSBpZiBkaXNwbGF5IGlzIG5vbmUgb3Igc3RhcnRzIHdpdGggdGFibGUgZXhjZXB0XHJcblx0Ly8gXCJ0YWJsZVwiLCBcInRhYmxlLWNlbGxcIiwgb3IgXCJ0YWJsZS1jYXB0aW9uXCJcclxuXHQvLyBzZWUgaGVyZSBmb3IgZGlzcGxheSB2YWx1ZXM6XHJcblx0Ly8gaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9DU1MvZGlzcGxheVxyXG5cdHJkaXNwbGF5c3dhcCA9IC9eKG5vbmV8dGFibGUoPyEtY1tlYV0pLispLyxcclxuXHRybnVtc3BsaXQgPSBuZXcgUmVnRXhwKCBcIl4oXCIgKyBwbnVtICsgXCIpKC4qKSRcIiwgXCJpXCIgKSxcclxuXHJcblx0Y3NzU2hvdyA9IHsgcG9zaXRpb246IFwiYWJzb2x1dGVcIiwgdmlzaWJpbGl0eTogXCJoaWRkZW5cIiwgZGlzcGxheTogXCJibG9ja1wiIH0sXHJcblx0Y3NzTm9ybWFsVHJhbnNmb3JtID0ge1xyXG5cdFx0bGV0dGVyU3BhY2luZzogXCIwXCIsXHJcblx0XHRmb250V2VpZ2h0OiBcIjQwMFwiXHJcblx0fSxcclxuXHJcblx0Y3NzUHJlZml4ZXMgPSBbIFwiV2Via2l0XCIsIFwiT1wiLCBcIk1velwiLCBcIm1zXCIgXSxcclxuXHRlbXB0eVN0eWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApLnN0eWxlO1xyXG5cclxuXHJcbi8vIHJldHVybiBhIGNzcyBwcm9wZXJ0eSBtYXBwZWQgdG8gYSBwb3RlbnRpYWxseSB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHlcclxuZnVuY3Rpb24gdmVuZG9yUHJvcE5hbWUoIG5hbWUgKSB7XHJcblxyXG5cdC8vIHNob3J0Y3V0IGZvciBuYW1lcyB0aGF0IGFyZSBub3QgdmVuZG9yIHByZWZpeGVkXHJcblx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XHJcblx0XHRyZXR1cm4gbmFtZTtcclxuXHR9XHJcblxyXG5cdC8vIGNoZWNrIGZvciB2ZW5kb3IgcHJlZml4ZWQgbmFtZXNcclxuXHR2YXIgY2FwTmFtZSA9IG5hbWUuY2hhckF0KCAwICkudG9VcHBlckNhc2UoKSArIG5hbWUuc2xpY2UoIDEgKSxcclxuXHRcdGkgPSBjc3NQcmVmaXhlcy5sZW5ndGg7XHJcblxyXG5cdHdoaWxlICggaS0tICkge1xyXG5cdFx0bmFtZSA9IGNzc1ByZWZpeGVzWyBpIF0gKyBjYXBOYW1lO1xyXG5cdFx0aWYgKCBuYW1lIGluIGVtcHR5U3R5bGUgKSB7XHJcblx0XHRcdHJldHVybiBuYW1lO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gc2hvd0hpZGUoIGVsZW1lbnRzLCBzaG93ICkge1xyXG5cdHZhciBkaXNwbGF5LCBlbGVtLCBoaWRkZW4sXHJcblx0XHR2YWx1ZXMgPSBbXSxcclxuXHRcdGluZGV4ID0gMCxcclxuXHRcdGxlbmd0aCA9IGVsZW1lbnRzLmxlbmd0aDtcclxuXHJcblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcclxuXHRcdGVsZW0gPSBlbGVtZW50c1sgaW5kZXggXTtcclxuXHRcdGlmICggIWVsZW0uc3R5bGUgKSB7XHJcblx0XHRcdGNvbnRpbnVlO1xyXG5cdFx0fVxyXG5cclxuXHRcdHZhbHVlc1sgaW5kZXggXSA9IGpRdWVyeS5fZGF0YSggZWxlbSwgXCJvbGRkaXNwbGF5XCIgKTtcclxuXHRcdGRpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXk7XHJcblx0XHRpZiAoIHNob3cgKSB7XHJcblxyXG5cdFx0XHQvLyBSZXNldCB0aGUgaW5saW5lIGRpc3BsYXkgb2YgdGhpcyBlbGVtZW50IHRvIGxlYXJuIGlmIGl0IGlzXHJcblx0XHRcdC8vIGJlaW5nIGhpZGRlbiBieSBjYXNjYWRlZCBydWxlcyBvciBub3RcclxuXHRcdFx0aWYgKCAhdmFsdWVzWyBpbmRleCBdICYmIGRpc3BsYXkgPT09IFwibm9uZVwiICkge1xyXG5cdFx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9IFwiXCI7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFNldCBlbGVtZW50cyB3aGljaCBoYXZlIGJlZW4gb3ZlcnJpZGRlbiB3aXRoIGRpc3BsYXk6IG5vbmVcclxuXHRcdFx0Ly8gaW4gYSBzdHlsZXNoZWV0IHRvIHdoYXRldmVyIHRoZSBkZWZhdWx0IGJyb3dzZXIgc3R5bGUgaXNcclxuXHRcdFx0Ly8gZm9yIHN1Y2ggYW4gZWxlbWVudFxyXG5cdFx0XHRpZiAoIGVsZW0uc3R5bGUuZGlzcGxheSA9PT0gXCJcIiAmJiBpc0hpZGRlbiggZWxlbSApICkge1xyXG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9XHJcblx0XHRcdFx0XHRqUXVlcnkuX2RhdGEoIGVsZW0sIFwib2xkZGlzcGxheVwiLCBkZWZhdWx0RGlzcGxheSggZWxlbS5ub2RlTmFtZSApICk7XHJcblx0XHRcdH1cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGhpZGRlbiA9IGlzSGlkZGVuKCBlbGVtICk7XHJcblxyXG5cdFx0XHRpZiAoIGRpc3BsYXkgJiYgZGlzcGxheSAhPT0gXCJub25lXCIgfHwgIWhpZGRlbiApIHtcclxuXHRcdFx0XHRqUXVlcnkuX2RhdGEoXHJcblx0XHRcdFx0XHRlbGVtLFxyXG5cdFx0XHRcdFx0XCJvbGRkaXNwbGF5XCIsXHJcblx0XHRcdFx0XHRoaWRkZW4gPyBkaXNwbGF5IDogalF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKVxyXG5cdFx0XHRcdCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIFNldCB0aGUgZGlzcGxheSBvZiBtb3N0IG9mIHRoZSBlbGVtZW50cyBpbiBhIHNlY29uZCBsb29wXHJcblx0Ly8gdG8gYXZvaWQgdGhlIGNvbnN0YW50IHJlZmxvd1xyXG5cdGZvciAoIGluZGV4ID0gMDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XHJcblx0XHRlbGVtID0gZWxlbWVudHNbIGluZGV4IF07XHJcblx0XHRpZiAoICFlbGVtLnN0eWxlICkge1xyXG5cdFx0XHRjb250aW51ZTtcclxuXHRcdH1cclxuXHRcdGlmICggIXNob3cgfHwgZWxlbS5zdHlsZS5kaXNwbGF5ID09PSBcIm5vbmVcIiB8fCBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwiXCIgKSB7XHJcblx0XHRcdGVsZW0uc3R5bGUuZGlzcGxheSA9IHNob3cgPyB2YWx1ZXNbIGluZGV4IF0gfHwgXCJcIiA6IFwibm9uZVwiO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cmV0dXJuIGVsZW1lbnRzO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICkge1xyXG5cdHZhciBtYXRjaGVzID0gcm51bXNwbGl0LmV4ZWMoIHZhbHVlICk7XHJcblx0cmV0dXJuIG1hdGNoZXMgP1xyXG5cclxuXHRcdC8vIEd1YXJkIGFnYWluc3QgdW5kZWZpbmVkIFwic3VidHJhY3RcIiwgZS5nLiwgd2hlbiB1c2VkIGFzIGluIGNzc0hvb2tzXHJcblx0XHRNYXRoLm1heCggMCwgbWF0Y2hlc1sgMSBdIC0gKCBzdWJ0cmFjdCB8fCAwICkgKSArICggbWF0Y2hlc1sgMiBdIHx8IFwicHhcIiApIDpcclxuXHRcdHZhbHVlO1xyXG59XHJcblxyXG5mdW5jdGlvbiBhdWdtZW50V2lkdGhPckhlaWdodCggZWxlbSwgbmFtZSwgZXh0cmEsIGlzQm9yZGVyQm94LCBzdHlsZXMgKSB7XHJcblx0dmFyIGkgPSBleHRyYSA9PT0gKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApID9cclxuXHJcblx0XHQvLyBJZiB3ZSBhbHJlYWR5IGhhdmUgdGhlIHJpZ2h0IG1lYXN1cmVtZW50LCBhdm9pZCBhdWdtZW50YXRpb25cclxuXHRcdDQgOlxyXG5cclxuXHRcdC8vIE90aGVyd2lzZSBpbml0aWFsaXplIGZvciBob3Jpem9udGFsIG9yIHZlcnRpY2FsIHByb3BlcnRpZXNcclxuXHRcdG5hbWUgPT09IFwid2lkdGhcIiA/IDEgOiAwLFxyXG5cclxuXHRcdHZhbCA9IDA7XHJcblxyXG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiApIHtcclxuXHJcblx0XHQvLyBib3RoIGJveCBtb2RlbHMgZXhjbHVkZSBtYXJnaW4sIHNvIGFkZCBpdCBpZiB3ZSB3YW50IGl0XHJcblx0XHRpZiAoIGV4dHJhID09PSBcIm1hcmdpblwiICkge1xyXG5cdFx0XHR2YWwgKz0galF1ZXJ5LmNzcyggZWxlbSwgZXh0cmEgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBpc0JvcmRlckJveCApIHtcclxuXHJcblx0XHRcdC8vIGJvcmRlci1ib3ggaW5jbHVkZXMgcGFkZGluZywgc28gcmVtb3ZlIGl0IGlmIHdlIHdhbnQgY29udGVudFxyXG5cdFx0XHRpZiAoIGV4dHJhID09PSBcImNvbnRlbnRcIiApIHtcclxuXHRcdFx0XHR2YWwgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIGF0IHRoaXMgcG9pbnQsIGV4dHJhIGlzbid0IGJvcmRlciBub3IgbWFyZ2luLCBzbyByZW1vdmUgYm9yZGVyXHJcblx0XHRcdGlmICggZXh0cmEgIT09IFwibWFyZ2luXCIgKSB7XHJcblx0XHRcdFx0dmFsIC09IGpRdWVyeS5jc3MoIGVsZW0sIFwiYm9yZGVyXCIgKyBjc3NFeHBhbmRbIGkgXSArIFwiV2lkdGhcIiwgdHJ1ZSwgc3R5bGVzICk7XHJcblx0XHRcdH1cclxuXHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHQvLyBhdCB0aGlzIHBvaW50LCBleHRyYSBpc24ndCBjb250ZW50LCBzbyBhZGQgcGFkZGluZ1xyXG5cdFx0XHR2YWwgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XHJcblxyXG5cdFx0XHQvLyBhdCB0aGlzIHBvaW50LCBleHRyYSBpc24ndCBjb250ZW50IG5vciBwYWRkaW5nLCBzbyBhZGQgYm9yZGVyXHJcblx0XHRcdGlmICggZXh0cmEgIT09IFwicGFkZGluZ1wiICkge1xyXG5cdFx0XHRcdHZhbCArPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gdmFsO1xyXG59XHJcblxyXG5mdW5jdGlvbiBnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBuYW1lLCBleHRyYSApIHtcclxuXHJcblx0Ly8gU3RhcnQgd2l0aCBvZmZzZXQgcHJvcGVydHksIHdoaWNoIGlzIGVxdWl2YWxlbnQgdG8gdGhlIGJvcmRlci1ib3ggdmFsdWVcclxuXHR2YXIgdmFsdWVJc0JvcmRlckJveCA9IHRydWUsXHJcblx0XHR2YWwgPSBuYW1lID09PSBcIndpZHRoXCIgPyBlbGVtLm9mZnNldFdpZHRoIDogZWxlbS5vZmZzZXRIZWlnaHQsXHJcblx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKSxcclxuXHRcdGlzQm9yZGVyQm94ID0gc3VwcG9ydC5ib3hTaXppbmcgJiZcclxuXHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgXCJib3hTaXppbmdcIiwgZmFsc2UsIHN0eWxlcyApID09PSBcImJvcmRlci1ib3hcIjtcclxuXHJcblx0Ly8gc29tZSBub24taHRtbCBlbGVtZW50cyByZXR1cm4gdW5kZWZpbmVkIGZvciBvZmZzZXRXaWR0aCwgc28gY2hlY2sgZm9yIG51bGwvdW5kZWZpbmVkXHJcblx0Ly8gc3ZnIC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NjQ5Mjg1XHJcblx0Ly8gTWF0aE1MIC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9NDkxNjY4XHJcblx0aWYgKCB2YWwgPD0gMCB8fCB2YWwgPT0gbnVsbCApIHtcclxuXHJcblx0XHQvLyBGYWxsIGJhY2sgdG8gY29tcHV0ZWQgdGhlbiB1bmNvbXB1dGVkIGNzcyBpZiBuZWNlc3NhcnlcclxuXHRcdHZhbCA9IGN1ckNTUyggZWxlbSwgbmFtZSwgc3R5bGVzICk7XHJcblx0XHRpZiAoIHZhbCA8IDAgfHwgdmFsID09IG51bGwgKSB7XHJcblx0XHRcdHZhbCA9IGVsZW0uc3R5bGVbIG5hbWUgXTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBDb21wdXRlZCB1bml0IGlzIG5vdCBwaXhlbHMuIFN0b3AgaGVyZSBhbmQgcmV0dXJuLlxyXG5cdFx0aWYgKCBybnVtbm9ucHgudGVzdCggdmFsICkgKSB7XHJcblx0XHRcdHJldHVybiB2YWw7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gd2UgbmVlZCB0aGUgY2hlY2sgZm9yIHN0eWxlIGluIGNhc2UgYSBicm93c2VyIHdoaWNoIHJldHVybnMgdW5yZWxpYWJsZSB2YWx1ZXNcclxuXHRcdC8vIGZvciBnZXRDb21wdXRlZFN0eWxlIHNpbGVudGx5IGZhbGxzIGJhY2sgdG8gdGhlIHJlbGlhYmxlIGVsZW0uc3R5bGVcclxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBpc0JvcmRlckJveCAmJlxyXG5cdFx0XHQoIHN1cHBvcnQuYm94U2l6aW5nUmVsaWFibGUoKSB8fCB2YWwgPT09IGVsZW0uc3R5bGVbIG5hbWUgXSApO1xyXG5cclxuXHRcdC8vIE5vcm1hbGl6ZSBcIlwiLCBhdXRvLCBhbmQgcHJlcGFyZSBmb3IgZXh0cmFcclxuXHRcdHZhbCA9IHBhcnNlRmxvYXQoIHZhbCApIHx8IDA7XHJcblx0fVxyXG5cclxuXHQvLyB1c2UgdGhlIGFjdGl2ZSBib3gtc2l6aW5nIG1vZGVsIHRvIGFkZC9zdWJ0cmFjdCBpcnJlbGV2YW50IHN0eWxlc1xyXG5cdHJldHVybiAoIHZhbCArXHJcblx0XHRhdWdtZW50V2lkdGhPckhlaWdodChcclxuXHRcdFx0ZWxlbSxcclxuXHRcdFx0bmFtZSxcclxuXHRcdFx0ZXh0cmEgfHwgKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApLFxyXG5cdFx0XHR2YWx1ZUlzQm9yZGVyQm94LFxyXG5cdFx0XHRzdHlsZXNcclxuXHRcdClcclxuXHQpICsgXCJweFwiO1xyXG59XHJcblxyXG5qUXVlcnkuZXh0ZW5kKCB7XHJcblxyXG5cdC8vIEFkZCBpbiBzdHlsZSBwcm9wZXJ0eSBob29rcyBmb3Igb3ZlcnJpZGluZyB0aGUgZGVmYXVsdFxyXG5cdC8vIGJlaGF2aW9yIG9mIGdldHRpbmcgYW5kIHNldHRpbmcgYSBzdHlsZSBwcm9wZXJ0eVxyXG5cdGNzc0hvb2tzOiB7XHJcblx0XHRvcGFjaXR5OiB7XHJcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xyXG5cdFx0XHRcdGlmICggY29tcHV0ZWQgKSB7XHJcblxyXG5cdFx0XHRcdFx0Ly8gV2Ugc2hvdWxkIGFsd2F5cyBnZXQgYSBudW1iZXIgYmFjayBmcm9tIG9wYWNpdHlcclxuXHRcdFx0XHRcdHZhciByZXQgPSBjdXJDU1MoIGVsZW0sIFwib3BhY2l0eVwiICk7XHJcblx0XHRcdFx0XHRyZXR1cm4gcmV0ID09PSBcIlwiID8gXCIxXCIgOiByZXQ7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0Ly8gRG9uJ3QgYXV0b21hdGljYWxseSBhZGQgXCJweFwiIHRvIHRoZXNlIHBvc3NpYmx5LXVuaXRsZXNzIHByb3BlcnRpZXNcclxuXHRjc3NOdW1iZXI6IHtcclxuXHRcdFwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnRcIjogdHJ1ZSxcclxuXHRcdFwiY29sdW1uQ291bnRcIjogdHJ1ZSxcclxuXHRcdFwiZmlsbE9wYWNpdHlcIjogdHJ1ZSxcclxuXHRcdFwiZmxleEdyb3dcIjogdHJ1ZSxcclxuXHRcdFwiZmxleFNocmlua1wiOiB0cnVlLFxyXG5cdFx0XCJmb250V2VpZ2h0XCI6IHRydWUsXHJcblx0XHRcImxpbmVIZWlnaHRcIjogdHJ1ZSxcclxuXHRcdFwib3BhY2l0eVwiOiB0cnVlLFxyXG5cdFx0XCJvcmRlclwiOiB0cnVlLFxyXG5cdFx0XCJvcnBoYW5zXCI6IHRydWUsXHJcblx0XHRcIndpZG93c1wiOiB0cnVlLFxyXG5cdFx0XCJ6SW5kZXhcIjogdHJ1ZSxcclxuXHRcdFwiem9vbVwiOiB0cnVlXHJcblx0fSxcclxuXHJcblx0Ly8gQWRkIGluIHByb3BlcnRpZXMgd2hvc2UgbmFtZXMgeW91IHdpc2ggdG8gZml4IGJlZm9yZVxyXG5cdC8vIHNldHRpbmcgb3IgZ2V0dGluZyB0aGUgdmFsdWVcclxuXHRjc3NQcm9wczoge1xyXG5cclxuXHRcdC8vIG5vcm1hbGl6ZSBmbG9hdCBjc3MgcHJvcGVydHlcclxuXHRcdFwiZmxvYXRcIjogc3VwcG9ydC5jc3NGbG9hdCA/IFwiY3NzRmxvYXRcIiA6IFwic3R5bGVGbG9hdFwiXHJcblx0fSxcclxuXHJcblx0Ly8gR2V0IGFuZCBzZXQgdGhlIHN0eWxlIHByb3BlcnR5IG9uIGEgRE9NIE5vZGVcclxuXHRzdHlsZTogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIHZhbHVlLCBleHRyYSApIHtcclxuXHJcblx0XHQvLyBEb24ndCBzZXQgc3R5bGVzIG9uIHRleHQgYW5kIGNvbW1lbnQgbm9kZXNcclxuXHRcdGlmICggIWVsZW0gfHwgZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA4IHx8ICFlbGVtLnN0eWxlICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXHJcblx0XHR2YXIgcmV0LCB0eXBlLCBob29rcyxcclxuXHRcdFx0b3JpZ05hbWUgPSBqUXVlcnkuY2FtZWxDYXNlKCBuYW1lICksXHJcblx0XHRcdHN0eWxlID0gZWxlbS5zdHlsZTtcclxuXHJcblx0XHRuYW1lID0galF1ZXJ5LmNzc1Byb3BzWyBvcmlnTmFtZSBdIHx8XHJcblx0XHRcdCggalF1ZXJ5LmNzc1Byb3BzWyBvcmlnTmFtZSBdID0gdmVuZG9yUHJvcE5hbWUoIG9yaWdOYW1lICkgfHwgb3JpZ05hbWUgKTtcclxuXHJcblx0XHQvLyBnZXRzIGhvb2sgZm9yIHRoZSBwcmVmaXhlZCB2ZXJzaW9uXHJcblx0XHQvLyBmb2xsb3dlZCBieSB0aGUgdW5wcmVmaXhlZCB2ZXJzaW9uXHJcblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdIHx8IGpRdWVyeS5jc3NIb29rc1sgb3JpZ05hbWUgXTtcclxuXHJcblx0XHQvLyBDaGVjayBpZiB3ZSdyZSBzZXR0aW5nIGEgdmFsdWVcclxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0dHlwZSA9IHR5cGVvZiB2YWx1ZTtcclxuXHJcblx0XHRcdC8vIENvbnZlcnQgXCIrPVwiIG9yIFwiLT1cIiB0byByZWxhdGl2ZSBudW1iZXJzICgjNzM0NSlcclxuXHRcdFx0aWYgKCB0eXBlID09PSBcInN0cmluZ1wiICYmICggcmV0ID0gcmNzc051bS5leGVjKCB2YWx1ZSApICkgJiYgcmV0WyAxIF0gKSB7XHJcblx0XHRcdFx0dmFsdWUgPSBhZGp1c3RDU1MoIGVsZW0sIG5hbWUsIHJldCApO1xyXG5cclxuXHRcdFx0XHQvLyBGaXhlcyBidWcgIzkyMzdcclxuXHRcdFx0XHR0eXBlID0gXCJudW1iZXJcIjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gTWFrZSBzdXJlIHRoYXQgbnVsbCBhbmQgTmFOIHZhbHVlcyBhcmVuJ3Qgc2V0LiBTZWU6ICM3MTE2XHJcblx0XHRcdGlmICggdmFsdWUgPT0gbnVsbCB8fCB2YWx1ZSAhPT0gdmFsdWUgKSB7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBJZiBhIG51bWJlciB3YXMgcGFzc2VkIGluLCBhZGQgdGhlIHVuaXQgKGV4Y2VwdCBmb3IgY2VydGFpbiBDU1MgcHJvcGVydGllcylcclxuXHRcdFx0aWYgKCB0eXBlID09PSBcIm51bWJlclwiICkge1xyXG5cdFx0XHRcdHZhbHVlICs9IHJldCAmJiByZXRbIDMgXSB8fCAoIGpRdWVyeS5jc3NOdW1iZXJbIG9yaWdOYW1lIF0gPyBcIlwiIDogXCJweFwiICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIEZpeGVzICM4OTA4LCBpdCBjYW4gYmUgZG9uZSBtb3JlIGNvcnJlY3RseSBieSBzcGVjaWZpbmcgc2V0dGVycyBpbiBjc3NIb29rcyxcclxuXHRcdFx0Ly8gYnV0IGl0IHdvdWxkIG1lYW4gdG8gZGVmaW5lIGVpZ2h0XHJcblx0XHRcdC8vIChmb3IgZXZlcnkgcHJvYmxlbWF0aWMgcHJvcGVydHkpIGlkZW50aWNhbCBmdW5jdGlvbnNcclxuXHRcdFx0aWYgKCAhc3VwcG9ydC5jbGVhckNsb25lU3R5bGUgJiYgdmFsdWUgPT09IFwiXCIgJiYgbmFtZS5pbmRleE9mKCBcImJhY2tncm91bmRcIiApID09PSAwICkge1xyXG5cdFx0XHRcdHN0eWxlWyBuYW1lIF0gPSBcImluaGVyaXRcIjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCwgdXNlIHRoYXQgdmFsdWUsIG90aGVyd2lzZSBqdXN0IHNldCB0aGUgc3BlY2lmaWVkIHZhbHVlXHJcblx0XHRcdGlmICggIWhvb2tzIHx8ICEoIFwic2V0XCIgaW4gaG9va3MgKSB8fFxyXG5cdFx0XHRcdCggdmFsdWUgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcclxuXHJcblx0XHRcdFx0Ly8gU3VwcG9ydDogSUVcclxuXHRcdFx0XHQvLyBTd2FsbG93IGVycm9ycyBmcm9tICdpbnZhbGlkJyBDU1MgdmFsdWVzICgjNTUwOSlcclxuXHRcdFx0XHR0cnkge1xyXG5cdFx0XHRcdFx0c3R5bGVbIG5hbWUgXSA9IHZhbHVlO1xyXG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge31cclxuXHRcdFx0fVxyXG5cclxuXHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkIGdldCB0aGUgbm9uLWNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcclxuXHRcdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmXHJcblx0XHRcdFx0KCByZXQgPSBob29rcy5nZXQoIGVsZW0sIGZhbHNlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcclxuXHJcblx0XHRcdFx0cmV0dXJuIHJldDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gT3RoZXJ3aXNlIGp1c3QgZ2V0IHRoZSB2YWx1ZSBmcm9tIHRoZSBzdHlsZSBvYmplY3RcclxuXHRcdFx0cmV0dXJuIHN0eWxlWyBuYW1lIF07XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0Y3NzOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgZXh0cmEsIHN0eWxlcyApIHtcclxuXHRcdHZhciBudW0sIHZhbCwgaG9va3MsXHJcblx0XHRcdG9yaWdOYW1lID0galF1ZXJ5LmNhbWVsQ2FzZSggbmFtZSApO1xyXG5cclxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHdlJ3JlIHdvcmtpbmcgd2l0aCB0aGUgcmlnaHQgbmFtZVxyXG5cdFx0bmFtZSA9IGpRdWVyeS5jc3NQcm9wc1sgb3JpZ05hbWUgXSB8fFxyXG5cdFx0XHQoIGpRdWVyeS5jc3NQcm9wc1sgb3JpZ05hbWUgXSA9IHZlbmRvclByb3BOYW1lKCBvcmlnTmFtZSApIHx8IG9yaWdOYW1lICk7XHJcblxyXG5cdFx0Ly8gZ2V0cyBob29rIGZvciB0aGUgcHJlZml4ZWQgdmVyc2lvblxyXG5cdFx0Ly8gZm9sbG93ZWQgYnkgdGhlIHVucHJlZml4ZWQgdmVyc2lvblxyXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07XHJcblxyXG5cdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIGNvbXB1dGVkIHZhbHVlIGZyb20gdGhlcmVcclxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyApIHtcclxuXHRcdFx0dmFsID0gaG9va3MuZ2V0KCBlbGVtLCB0cnVlLCBleHRyYSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIE90aGVyd2lzZSwgaWYgYSB3YXkgdG8gZ2V0IHRoZSBjb21wdXRlZCB2YWx1ZSBleGlzdHMsIHVzZSB0aGF0XHJcblx0XHRpZiAoIHZhbCA9PT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIG5hbWUsIHN0eWxlcyApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vY29udmVydCBcIm5vcm1hbFwiIHRvIGNvbXB1dGVkIHZhbHVlXHJcblx0XHRpZiAoIHZhbCA9PT0gXCJub3JtYWxcIiAmJiBuYW1lIGluIGNzc05vcm1hbFRyYW5zZm9ybSApIHtcclxuXHRcdFx0dmFsID0gY3NzTm9ybWFsVHJhbnNmb3JtWyBuYW1lIF07XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gUmV0dXJuLCBjb252ZXJ0aW5nIHRvIG51bWJlciBpZiBmb3JjZWQgb3IgYSBxdWFsaWZpZXIgd2FzIHByb3ZpZGVkIGFuZCB2YWwgbG9va3MgbnVtZXJpY1xyXG5cdFx0aWYgKCBleHRyYSA9PT0gXCJcIiB8fCBleHRyYSApIHtcclxuXHRcdFx0bnVtID0gcGFyc2VGbG9hdCggdmFsICk7XHJcblx0XHRcdHJldHVybiBleHRyYSA9PT0gdHJ1ZSB8fCBpc0Zpbml0ZSggbnVtICkgPyBudW0gfHwgMCA6IHZhbDtcclxuXHRcdH1cclxuXHRcdHJldHVybiB2YWw7XHJcblx0fVxyXG59ICk7XHJcblxyXG5qUXVlcnkuZWFjaCggWyBcImhlaWdodFwiLCBcIndpZHRoXCIgXSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XHJcblx0alF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gPSB7XHJcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCwgZXh0cmEgKSB7XHJcblx0XHRcdGlmICggY29tcHV0ZWQgKSB7XHJcblxyXG5cdFx0XHRcdC8vIGNlcnRhaW4gZWxlbWVudHMgY2FuIGhhdmUgZGltZW5zaW9uIGluZm8gaWYgd2UgaW52aXNpYmx5IHNob3cgdGhlbVxyXG5cdFx0XHRcdC8vIGhvd2V2ZXIsIGl0IG11c3QgaGF2ZSBhIGN1cnJlbnQgZGlzcGxheSBzdHlsZSB0aGF0IHdvdWxkIGJlbmVmaXQgZnJvbSB0aGlzXHJcblx0XHRcdFx0cmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApICkgJiZcclxuXHRcdFx0XHRcdGVsZW0ub2Zmc2V0V2lkdGggPT09IDAgP1xyXG5cdFx0XHRcdFx0XHRzd2FwKCBlbGVtLCBjc3NTaG93LCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgbmFtZSwgZXh0cmEgKTtcclxuXHRcdFx0XHRcdFx0fSApIDpcclxuXHRcdFx0XHRcdFx0Z2V0V2lkdGhPckhlaWdodCggZWxlbSwgbmFtZSwgZXh0cmEgKTtcclxuXHRcdFx0fVxyXG5cdFx0fSxcclxuXHJcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgZXh0cmEgKSB7XHJcblx0XHRcdHZhciBzdHlsZXMgPSBleHRyYSAmJiBnZXRTdHlsZXMoIGVsZW0gKTtcclxuXHRcdFx0cmV0dXJuIHNldFBvc2l0aXZlTnVtYmVyKCBlbGVtLCB2YWx1ZSwgZXh0cmEgP1xyXG5cdFx0XHRcdGF1Z21lbnRXaWR0aE9ySGVpZ2h0KFxyXG5cdFx0XHRcdFx0ZWxlbSxcclxuXHRcdFx0XHRcdG5hbWUsXHJcblx0XHRcdFx0XHRleHRyYSxcclxuXHRcdFx0XHRcdHN1cHBvcnQuYm94U2l6aW5nICYmXHJcblx0XHRcdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIFwiYm94U2l6aW5nXCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJib3JkZXItYm94XCIsXHJcblx0XHRcdFx0XHRzdHlsZXNcclxuXHRcdFx0XHQpIDogMFxyXG5cdFx0XHQpO1xyXG5cdFx0fVxyXG5cdH07XHJcbn0gKTtcclxuXHJcbmlmICggIXN1cHBvcnQub3BhY2l0eSApIHtcclxuXHRqUXVlcnkuY3NzSG9va3Mub3BhY2l0eSA9IHtcclxuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xyXG5cclxuXHRcdFx0Ly8gSUUgdXNlcyBmaWx0ZXJzIGZvciBvcGFjaXR5XHJcblx0XHRcdHJldHVybiByb3BhY2l0eS50ZXN0KCAoIGNvbXB1dGVkICYmIGVsZW0uY3VycmVudFN0eWxlID9cclxuXHRcdFx0XHRlbGVtLmN1cnJlbnRTdHlsZS5maWx0ZXIgOlxyXG5cdFx0XHRcdGVsZW0uc3R5bGUuZmlsdGVyICkgfHwgXCJcIiApID9cclxuXHRcdFx0XHRcdCggMC4wMSAqIHBhcnNlRmxvYXQoIFJlZ0V4cC4kMSApICkgKyBcIlwiIDpcclxuXHRcdFx0XHRcdGNvbXB1dGVkID8gXCIxXCIgOiBcIlwiO1xyXG5cdFx0fSxcclxuXHJcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcclxuXHRcdFx0dmFyIHN0eWxlID0gZWxlbS5zdHlsZSxcclxuXHRcdFx0XHRjdXJyZW50U3R5bGUgPSBlbGVtLmN1cnJlbnRTdHlsZSxcclxuXHRcdFx0XHRvcGFjaXR5ID0galF1ZXJ5LmlzTnVtZXJpYyggdmFsdWUgKSA/IFwiYWxwaGEob3BhY2l0eT1cIiArIHZhbHVlICogMTAwICsgXCIpXCIgOiBcIlwiLFxyXG5cdFx0XHRcdGZpbHRlciA9IGN1cnJlbnRTdHlsZSAmJiBjdXJyZW50U3R5bGUuZmlsdGVyIHx8IHN0eWxlLmZpbHRlciB8fCBcIlwiO1xyXG5cclxuXHRcdFx0Ly8gSUUgaGFzIHRyb3VibGUgd2l0aCBvcGFjaXR5IGlmIGl0IGRvZXMgbm90IGhhdmUgbGF5b3V0XHJcblx0XHRcdC8vIEZvcmNlIGl0IGJ5IHNldHRpbmcgdGhlIHpvb20gbGV2ZWxcclxuXHRcdFx0c3R5bGUuem9vbSA9IDE7XHJcblxyXG5cdFx0XHQvLyBpZiBzZXR0aW5nIG9wYWNpdHkgdG8gMSwgYW5kIG5vIG90aGVyIGZpbHRlcnMgZXhpc3QgLVxyXG5cdFx0XHQvLyBhdHRlbXB0IHRvIHJlbW92ZSBmaWx0ZXIgYXR0cmlidXRlICM2NjUyXHJcblx0XHRcdC8vIGlmIHZhbHVlID09PSBcIlwiLCB0aGVuIHJlbW92ZSBpbmxpbmUgb3BhY2l0eSAjMTI2ODVcclxuXHRcdFx0aWYgKCAoIHZhbHVlID49IDEgfHwgdmFsdWUgPT09IFwiXCIgKSAmJlxyXG5cdFx0XHRcdFx0alF1ZXJ5LnRyaW0oIGZpbHRlci5yZXBsYWNlKCByYWxwaGEsIFwiXCIgKSApID09PSBcIlwiICYmXHJcblx0XHRcdFx0XHRzdHlsZS5yZW1vdmVBdHRyaWJ1dGUgKSB7XHJcblxyXG5cdFx0XHRcdC8vIFNldHRpbmcgc3R5bGUuZmlsdGVyIHRvIG51bGwsIFwiXCIgJiBcIiBcIiBzdGlsbCBsZWF2ZSBcImZpbHRlcjpcIiBpbiB0aGUgY3NzVGV4dFxyXG5cdFx0XHRcdC8vIGlmIFwiZmlsdGVyOlwiIGlzIHByZXNlbnQgYXQgYWxsLCBjbGVhclR5cGUgaXMgZGlzYWJsZWQsIHdlIHdhbnQgdG8gYXZvaWQgdGhpc1xyXG5cdFx0XHRcdC8vIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSBpcyBJRSBPbmx5LCBidXQgc28gYXBwYXJlbnRseSBpcyB0aGlzIGNvZGUgcGF0aC4uLlxyXG5cdFx0XHRcdHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSggXCJmaWx0ZXJcIiApO1xyXG5cclxuXHRcdFx0XHQvLyBpZiB0aGVyZSBpcyBubyBmaWx0ZXIgc3R5bGUgYXBwbGllZCBpbiBhIGNzcyBydWxlXHJcblx0XHRcdFx0Ly8gb3IgdW5zZXQgaW5saW5lIG9wYWNpdHksIHdlIGFyZSBkb25lXHJcblx0XHRcdFx0aWYgKCB2YWx1ZSA9PT0gXCJcIiB8fCBjdXJyZW50U3R5bGUgJiYgIWN1cnJlbnRTdHlsZS5maWx0ZXIgKSB7XHJcblx0XHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBvdGhlcndpc2UsIHNldCBuZXcgZmlsdGVyIHZhbHVlc1xyXG5cdFx0XHRzdHlsZS5maWx0ZXIgPSByYWxwaGEudGVzdCggZmlsdGVyICkgP1xyXG5cdFx0XHRcdGZpbHRlci5yZXBsYWNlKCByYWxwaGEsIG9wYWNpdHkgKSA6XHJcblx0XHRcdFx0ZmlsdGVyICsgXCIgXCIgKyBvcGFjaXR5O1xyXG5cdFx0fVxyXG5cdH07XHJcbn1cclxuXHJcbmpRdWVyeS5jc3NIb29rcy5tYXJnaW5SaWdodCA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5yZWxpYWJsZU1hcmdpblJpZ2h0LFxyXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcclxuXHRcdGlmICggY29tcHV0ZWQgKSB7XHJcblx0XHRcdHJldHVybiBzd2FwKCBlbGVtLCB7IFwiZGlzcGxheVwiOiBcImlubGluZS1ibG9ja1wiIH0sXHJcblx0XHRcdFx0Y3VyQ1NTLCBbIGVsZW0sIFwibWFyZ2luUmlnaHRcIiBdICk7XHJcblx0XHR9XHJcblx0fVxyXG4pO1xyXG5cclxualF1ZXJ5LmNzc0hvb2tzLm1hcmdpbkxlZnQgPSBhZGRHZXRIb29rSWYoIHN1cHBvcnQucmVsaWFibGVNYXJnaW5MZWZ0LFxyXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcclxuXHRcdGlmICggY29tcHV0ZWQgKSB7XHJcblx0XHRcdHJldHVybiAoXHJcblx0XHRcdFx0cGFyc2VGbG9hdCggY3VyQ1NTKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiApICkgfHxcclxuXHJcblx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8PTExK1xyXG5cdFx0XHRcdC8vIFJ1bm5pbmcgZ2V0Qm91bmRpbmdDbGllbnRSZWN0IG9uIGEgZGlzY29ubmVjdGVkIG5vZGUgaW4gSUUgdGhyb3dzIGFuIGVycm9yXHJcblx0XHRcdFx0Ly8gU3VwcG9ydDogSUU4IG9ubHlcclxuXHRcdFx0XHQvLyBnZXRDbGllbnRSZWN0cygpIGVycm9ycyBvbiBkaXNjb25uZWN0ZWQgZWxlbXNcclxuXHRcdFx0XHQoIGpRdWVyeS5jb250YWlucyggZWxlbS5vd25lckRvY3VtZW50LCBlbGVtICkgP1xyXG5cdFx0XHRcdFx0ZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0IC1cclxuXHRcdFx0XHRcdFx0c3dhcCggZWxlbSwgeyBtYXJnaW5MZWZ0OiAwIH0sIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdFx0XHRcdHJldHVybiBlbGVtLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQ7XHJcblx0XHRcdFx0XHRcdH0gKSA6XHJcblx0XHRcdFx0XHQwXHJcblx0XHRcdFx0KVxyXG5cdFx0XHQpICsgXCJweFwiO1xyXG5cdFx0fVxyXG5cdH1cclxuKTtcclxuXHJcbi8vIFRoZXNlIGhvb2tzIGFyZSB1c2VkIGJ5IGFuaW1hdGUgdG8gZXhwYW5kIHByb3BlcnRpZXNcclxualF1ZXJ5LmVhY2goIHtcclxuXHRtYXJnaW46IFwiXCIsXHJcblx0cGFkZGluZzogXCJcIixcclxuXHRib3JkZXI6IFwiV2lkdGhcIlxyXG59LCBmdW5jdGlvbiggcHJlZml4LCBzdWZmaXggKSB7XHJcblx0alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXSA9IHtcclxuXHRcdGV4cGFuZDogZnVuY3Rpb24oIHZhbHVlICkge1xyXG5cdFx0XHR2YXIgaSA9IDAsXHJcblx0XHRcdFx0ZXhwYW5kZWQgPSB7fSxcclxuXHJcblx0XHRcdFx0Ly8gYXNzdW1lcyBhIHNpbmdsZSBudW1iZXIgaWYgbm90IGEgc3RyaW5nXHJcblx0XHRcdFx0cGFydHMgPSB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgPyB2YWx1ZS5zcGxpdCggXCIgXCIgKSA6IFsgdmFsdWUgXTtcclxuXHJcblx0XHRcdGZvciAoIDsgaSA8IDQ7IGkrKyApIHtcclxuXHRcdFx0XHRleHBhbmRlZFsgcHJlZml4ICsgY3NzRXhwYW5kWyBpIF0gKyBzdWZmaXggXSA9XHJcblx0XHRcdFx0XHRwYXJ0c1sgaSBdIHx8IHBhcnRzWyBpIC0gMiBdIHx8IHBhcnRzWyAwIF07XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiBleHBhbmRlZDtcclxuXHRcdH1cclxuXHR9O1xyXG5cclxuXHRpZiAoICFybWFyZ2luLnRlc3QoIHByZWZpeCApICkge1xyXG5cdFx0alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXS5zZXQgPSBzZXRQb3NpdGl2ZU51bWJlcjtcclxuXHR9XHJcbn0gKTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRjc3M6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcclxuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcclxuXHRcdFx0dmFyIHN0eWxlcywgbGVuLFxyXG5cdFx0XHRcdG1hcCA9IHt9LFxyXG5cdFx0XHRcdGkgPSAwO1xyXG5cclxuXHRcdFx0aWYgKCBqUXVlcnkuaXNBcnJheSggbmFtZSApICkge1xyXG5cdFx0XHRcdHN0eWxlcyA9IGdldFN0eWxlcyggZWxlbSApO1xyXG5cdFx0XHRcdGxlbiA9IG5hbWUubGVuZ3RoO1xyXG5cclxuXHRcdFx0XHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcclxuXHRcdFx0XHRcdG1hcFsgbmFtZVsgaSBdIF0gPSBqUXVlcnkuY3NzKCBlbGVtLCBuYW1lWyBpIF0sIGZhbHNlLCBzdHlsZXMgKTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHJldHVybiBtYXA7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID9cclxuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIG5hbWUsIHZhbHVlICkgOlxyXG5cdFx0XHRcdGpRdWVyeS5jc3MoIGVsZW0sIG5hbWUgKTtcclxuXHRcdH0sIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xyXG5cdH0sXHJcblx0c2hvdzogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gc2hvd0hpZGUoIHRoaXMsIHRydWUgKTtcclxuXHR9LFxyXG5cdGhpZGU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzICk7XHJcblx0fSxcclxuXHR0b2dnbGU6IGZ1bmN0aW9uKCBzdGF0ZSApIHtcclxuXHRcdGlmICggdHlwZW9mIHN0YXRlID09PSBcImJvb2xlYW5cIiApIHtcclxuXHRcdFx0cmV0dXJuIHN0YXRlID8gdGhpcy5zaG93KCkgOiB0aGlzLmhpZGUoKTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0aWYgKCBpc0hpZGRlbiggdGhpcyApICkge1xyXG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnNob3coKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5oaWRlKCk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG5mdW5jdGlvbiBUd2VlbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcgKSB7XHJcblx0cmV0dXJuIG5ldyBUd2Vlbi5wcm90b3R5cGUuaW5pdCggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcgKTtcclxufVxyXG5qUXVlcnkuVHdlZW4gPSBUd2VlbjtcclxuXHJcblR3ZWVuLnByb3RvdHlwZSA9IHtcclxuXHRjb25zdHJ1Y3RvcjogVHdlZW4sXHJcblx0aW5pdDogZnVuY3Rpb24oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nLCB1bml0ICkge1xyXG5cdFx0dGhpcy5lbGVtID0gZWxlbTtcclxuXHRcdHRoaXMucHJvcCA9IHByb3A7XHJcblx0XHR0aGlzLmVhc2luZyA9IGVhc2luZyB8fCBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0O1xyXG5cdFx0dGhpcy5vcHRpb25zID0gb3B0aW9ucztcclxuXHRcdHRoaXMuc3RhcnQgPSB0aGlzLm5vdyA9IHRoaXMuY3VyKCk7XHJcblx0XHR0aGlzLmVuZCA9IGVuZDtcclxuXHRcdHRoaXMudW5pdCA9IHVuaXQgfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICk7XHJcblx0fSxcclxuXHRjdXI6IGZ1bmN0aW9uKCkge1xyXG5cdFx0dmFyIGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcclxuXHJcblx0XHRyZXR1cm4gaG9va3MgJiYgaG9va3MuZ2V0ID9cclxuXHRcdFx0aG9va3MuZ2V0KCB0aGlzICkgOlxyXG5cdFx0XHRUd2Vlbi5wcm9wSG9va3MuX2RlZmF1bHQuZ2V0KCB0aGlzICk7XHJcblx0fSxcclxuXHRydW46IGZ1bmN0aW9uKCBwZXJjZW50ICkge1xyXG5cdFx0dmFyIGVhc2VkLFxyXG5cdFx0XHRob29rcyA9IFR3ZWVuLnByb3BIb29rc1sgdGhpcy5wcm9wIF07XHJcblxyXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuZHVyYXRpb24gKSB7XHJcblx0XHRcdHRoaXMucG9zID0gZWFzZWQgPSBqUXVlcnkuZWFzaW5nWyB0aGlzLmVhc2luZyBdKFxyXG5cdFx0XHRcdHBlcmNlbnQsIHRoaXMub3B0aW9ucy5kdXJhdGlvbiAqIHBlcmNlbnQsIDAsIDEsIHRoaXMub3B0aW9ucy5kdXJhdGlvblxyXG5cdFx0XHQpO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IHBlcmNlbnQ7XHJcblx0XHR9XHJcblx0XHR0aGlzLm5vdyA9ICggdGhpcy5lbmQgLSB0aGlzLnN0YXJ0ICkgKiBlYXNlZCArIHRoaXMuc3RhcnQ7XHJcblxyXG5cdFx0aWYgKCB0aGlzLm9wdGlvbnMuc3RlcCApIHtcclxuXHRcdFx0dGhpcy5vcHRpb25zLnN0ZXAuY2FsbCggdGhpcy5lbGVtLCB0aGlzLm5vdywgdGhpcyApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggaG9va3MgJiYgaG9va3Muc2V0ICkge1xyXG5cdFx0XHRob29rcy5zZXQoIHRoaXMgKTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdFR3ZWVuLnByb3BIb29rcy5fZGVmYXVsdC5zZXQoIHRoaXMgKTtcclxuXHRcdH1cclxuXHRcdHJldHVybiB0aGlzO1xyXG5cdH1cclxufTtcclxuXHJcblR3ZWVuLnByb3RvdHlwZS5pbml0LnByb3RvdHlwZSA9IFR3ZWVuLnByb3RvdHlwZTtcclxuXHJcblR3ZWVuLnByb3BIb29rcyA9IHtcclxuXHRfZGVmYXVsdDoge1xyXG5cdFx0Z2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XHJcblx0XHRcdHZhciByZXN1bHQ7XHJcblxyXG5cdFx0XHQvLyBVc2UgYSBwcm9wZXJ0eSBvbiB0aGUgZWxlbWVudCBkaXJlY3RseSB3aGVuIGl0IGlzIG5vdCBhIERPTSBlbGVtZW50LFxyXG5cdFx0XHQvLyBvciB3aGVuIHRoZXJlIGlzIG5vIG1hdGNoaW5nIHN0eWxlIHByb3BlcnR5IHRoYXQgZXhpc3RzLlxyXG5cdFx0XHRpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgIT09IDEgfHxcclxuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gIT0gbnVsbCAmJiB0d2Vlbi5lbGVtLnN0eWxlWyB0d2Vlbi5wcm9wIF0gPT0gbnVsbCApIHtcclxuXHRcdFx0XHRyZXR1cm4gdHdlZW4uZWxlbVsgdHdlZW4ucHJvcCBdO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBwYXNzaW5nIGFuIGVtcHR5IHN0cmluZyBhcyBhIDNyZCBwYXJhbWV0ZXIgdG8gLmNzcyB3aWxsIGF1dG9tYXRpY2FsbHlcclxuXHRcdFx0Ly8gYXR0ZW1wdCBhIHBhcnNlRmxvYXQgYW5kIGZhbGxiYWNrIHRvIGEgc3RyaW5nIGlmIHRoZSBwYXJzZSBmYWlsc1xyXG5cdFx0XHQvLyBzbywgc2ltcGxlIHZhbHVlcyBzdWNoIGFzIFwiMTBweFwiIGFyZSBwYXJzZWQgdG8gRmxvYXQuXHJcblx0XHRcdC8vIGNvbXBsZXggdmFsdWVzIHN1Y2ggYXMgXCJyb3RhdGUoMXJhZClcIiBhcmUgcmV0dXJuZWQgYXMgaXMuXHJcblx0XHRcdHJlc3VsdCA9IGpRdWVyeS5jc3MoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIFwiXCIgKTtcclxuXHJcblx0XHRcdC8vIEVtcHR5IHN0cmluZ3MsIG51bGwsIHVuZGVmaW5lZCBhbmQgXCJhdXRvXCIgYXJlIGNvbnZlcnRlZCB0byAwLlxyXG5cdFx0XHRyZXR1cm4gIXJlc3VsdCB8fCByZXN1bHQgPT09IFwiYXV0b1wiID8gMCA6IHJlc3VsdDtcclxuXHRcdH0sXHJcblx0XHRzZXQ6IGZ1bmN0aW9uKCB0d2VlbiApIHtcclxuXHJcblx0XHRcdC8vIHVzZSBzdGVwIGhvb2sgZm9yIGJhY2sgY29tcGF0IC0gdXNlIGNzc0hvb2sgaWYgaXRzIHRoZXJlIC0gdXNlIC5zdHlsZSBpZiBpdHNcclxuXHRcdFx0Ly8gYXZhaWxhYmxlIGFuZCB1c2UgcGxhaW4gcHJvcGVydGllcyB3aGVyZSBhdmFpbGFibGVcclxuXHRcdFx0aWYgKCBqUXVlcnkuZnguc3RlcFsgdHdlZW4ucHJvcCBdICkge1xyXG5cdFx0XHRcdGpRdWVyeS5meC5zdGVwWyB0d2Vlbi5wcm9wIF0oIHR3ZWVuICk7XHJcblx0XHRcdH0gZWxzZSBpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgPT09IDEgJiZcclxuXHRcdFx0XHQoIHR3ZWVuLmVsZW0uc3R5bGVbIGpRdWVyeS5jc3NQcm9wc1sgdHdlZW4ucHJvcCBdIF0gIT0gbnVsbCB8fFxyXG5cdFx0XHRcdFx0alF1ZXJ5LmNzc0hvb2tzWyB0d2Vlbi5wcm9wIF0gKSApIHtcclxuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gPSB0d2Vlbi5ub3c7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn07XHJcblxyXG4vLyBTdXBwb3J0OiBJRSA8PTlcclxuLy8gUGFuaWMgYmFzZWQgYXBwcm9hY2ggdG8gc2V0dGluZyB0aGluZ3Mgb24gZGlzY29ubmVjdGVkIG5vZGVzXHJcblxyXG5Ud2Vlbi5wcm9wSG9va3Muc2Nyb2xsVG9wID0gVHdlZW4ucHJvcEhvb2tzLnNjcm9sbExlZnQgPSB7XHJcblx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XHJcblx0XHRpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgJiYgdHdlZW4uZWxlbS5wYXJlbnROb2RlICkge1xyXG5cdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gPSB0d2Vlbi5ub3c7XHJcblx0XHR9XHJcblx0fVxyXG59O1xyXG5cclxualF1ZXJ5LmVhc2luZyA9IHtcclxuXHRsaW5lYXI6IGZ1bmN0aW9uKCBwICkge1xyXG5cdFx0cmV0dXJuIHA7XHJcblx0fSxcclxuXHRzd2luZzogZnVuY3Rpb24oIHAgKSB7XHJcblx0XHRyZXR1cm4gMC41IC0gTWF0aC5jb3MoIHAgKiBNYXRoLlBJICkgLyAyO1xyXG5cdH0sXHJcblx0X2RlZmF1bHQ6IFwic3dpbmdcIlxyXG59O1xyXG5cclxualF1ZXJ5LmZ4ID0gVHdlZW4ucHJvdG90eXBlLmluaXQ7XHJcblxyXG4vLyBCYWNrIENvbXBhdCA8MS44IGV4dGVuc2lvbiBwb2ludFxyXG5qUXVlcnkuZnguc3RlcCA9IHt9O1xyXG5cclxuXHJcblxyXG5cclxudmFyXHJcblx0ZnhOb3csIHRpbWVySWQsXHJcblx0cmZ4dHlwZXMgPSAvXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sXHJcblx0cnJ1biA9IC9xdWV1ZUhvb2tzJC87XHJcblxyXG4vLyBBbmltYXRpb25zIGNyZWF0ZWQgc3luY2hyb25vdXNseSB3aWxsIHJ1biBzeW5jaHJvbm91c2x5XHJcbmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkge1xyXG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcclxuXHRcdGZ4Tm93ID0gdW5kZWZpbmVkO1xyXG5cdH0gKTtcclxuXHRyZXR1cm4gKCBmeE5vdyA9IGpRdWVyeS5ub3coKSApO1xyXG59XHJcblxyXG4vLyBHZW5lcmF0ZSBwYXJhbWV0ZXJzIHRvIGNyZWF0ZSBhIHN0YW5kYXJkIGFuaW1hdGlvblxyXG5mdW5jdGlvbiBnZW5GeCggdHlwZSwgaW5jbHVkZVdpZHRoICkge1xyXG5cdHZhciB3aGljaCxcclxuXHRcdGF0dHJzID0geyBoZWlnaHQ6IHR5cGUgfSxcclxuXHRcdGkgPSAwO1xyXG5cclxuXHQvLyBpZiB3ZSBpbmNsdWRlIHdpZHRoLCBzdGVwIHZhbHVlIGlzIDEgdG8gZG8gYWxsIGNzc0V4cGFuZCB2YWx1ZXMsXHJcblx0Ly8gaWYgd2UgZG9uJ3QgaW5jbHVkZSB3aWR0aCwgc3RlcCB2YWx1ZSBpcyAyIHRvIHNraXAgb3ZlciBMZWZ0IGFuZCBSaWdodFxyXG5cdGluY2x1ZGVXaWR0aCA9IGluY2x1ZGVXaWR0aCA/IDEgOiAwO1xyXG5cdGZvciAoIDsgaSA8IDQgOyBpICs9IDIgLSBpbmNsdWRlV2lkdGggKSB7XHJcblx0XHR3aGljaCA9IGNzc0V4cGFuZFsgaSBdO1xyXG5cdFx0YXR0cnNbIFwibWFyZ2luXCIgKyB3aGljaCBdID0gYXR0cnNbIFwicGFkZGluZ1wiICsgd2hpY2ggXSA9IHR5cGU7XHJcblx0fVxyXG5cclxuXHRpZiAoIGluY2x1ZGVXaWR0aCApIHtcclxuXHRcdGF0dHJzLm9wYWNpdHkgPSBhdHRycy53aWR0aCA9IHR5cGU7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4gYXR0cnM7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIGNyZWF0ZVR3ZWVuKCB2YWx1ZSwgcHJvcCwgYW5pbWF0aW9uICkge1xyXG5cdHZhciB0d2VlbixcclxuXHRcdGNvbGxlY3Rpb24gPSAoIEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdICkuY29uY2F0KCBBbmltYXRpb24udHdlZW5lcnNbIFwiKlwiIF0gKSxcclxuXHRcdGluZGV4ID0gMCxcclxuXHRcdGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xyXG5cdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XHJcblx0XHRpZiAoICggdHdlZW4gPSBjb2xsZWN0aW9uWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgcHJvcCwgdmFsdWUgKSApICkge1xyXG5cclxuXHRcdFx0Ly8gd2UncmUgZG9uZSB3aXRoIHRoaXMgcHJvcGVydHlcclxuXHRcdFx0cmV0dXJuIHR3ZWVuO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gZGVmYXVsdFByZWZpbHRlciggZWxlbSwgcHJvcHMsIG9wdHMgKSB7XHJcblx0LyoganNoaW50IHZhbGlkdGhpczogdHJ1ZSAqL1xyXG5cdHZhciBwcm9wLCB2YWx1ZSwgdG9nZ2xlLCB0d2VlbiwgaG9va3MsIG9sZGZpcmUsIGRpc3BsYXksIGNoZWNrRGlzcGxheSxcclxuXHRcdGFuaW0gPSB0aGlzLFxyXG5cdFx0b3JpZyA9IHt9LFxyXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlLFxyXG5cdFx0aGlkZGVuID0gZWxlbS5ub2RlVHlwZSAmJiBpc0hpZGRlbiggZWxlbSApLFxyXG5cdFx0ZGF0YVNob3cgPSBqUXVlcnkuX2RhdGEoIGVsZW0sIFwiZnhzaG93XCIgKTtcclxuXHJcblx0Ly8gaGFuZGxlIHF1ZXVlOiBmYWxzZSBwcm9taXNlc1xyXG5cdGlmICggIW9wdHMucXVldWUgKSB7XHJcblx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgXCJmeFwiICk7XHJcblx0XHRpZiAoIGhvb2tzLnVucXVldWVkID09IG51bGwgKSB7XHJcblx0XHRcdGhvb2tzLnVucXVldWVkID0gMDtcclxuXHRcdFx0b2xkZmlyZSA9IGhvb2tzLmVtcHR5LmZpcmU7XHJcblx0XHRcdGhvb2tzLmVtcHR5LmZpcmUgPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRpZiAoICFob29rcy51bnF1ZXVlZCApIHtcclxuXHRcdFx0XHRcdG9sZGZpcmUoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH07XHJcblx0XHR9XHJcblx0XHRob29rcy51bnF1ZXVlZCsrO1xyXG5cclxuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcclxuXHJcblx0XHRcdC8vIGRvaW5nIHRoaXMgbWFrZXMgc3VyZSB0aGF0IHRoZSBjb21wbGV0ZSBoYW5kbGVyIHdpbGwgYmUgY2FsbGVkXHJcblx0XHRcdC8vIGJlZm9yZSB0aGlzIGNvbXBsZXRlc1xyXG5cdFx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aG9va3MudW5xdWV1ZWQtLTtcclxuXHRcdFx0XHRpZiAoICFqUXVlcnkucXVldWUoIGVsZW0sIFwiZnhcIiApLmxlbmd0aCApIHtcclxuXHRcdFx0XHRcdGhvb2tzLmVtcHR5LmZpcmUoKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gKTtcclxuXHRcdH0gKTtcclxuXHR9XHJcblxyXG5cdC8vIGhlaWdodC93aWR0aCBvdmVyZmxvdyBwYXNzXHJcblx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICYmICggXCJoZWlnaHRcIiBpbiBwcm9wcyB8fCBcIndpZHRoXCIgaW4gcHJvcHMgKSApIHtcclxuXHJcblx0XHQvLyBNYWtlIHN1cmUgdGhhdCBub3RoaW5nIHNuZWFrcyBvdXRcclxuXHRcdC8vIFJlY29yZCBhbGwgMyBvdmVyZmxvdyBhdHRyaWJ1dGVzIGJlY2F1c2UgSUUgZG9lcyBub3RcclxuXHRcdC8vIGNoYW5nZSB0aGUgb3ZlcmZsb3cgYXR0cmlidXRlIHdoZW4gb3ZlcmZsb3dYIGFuZFxyXG5cdFx0Ly8gb3ZlcmZsb3dZIGFyZSBzZXQgdG8gdGhlIHNhbWUgdmFsdWVcclxuXHRcdG9wdHMub3ZlcmZsb3cgPSBbIHN0eWxlLm92ZXJmbG93LCBzdHlsZS5vdmVyZmxvd1gsIHN0eWxlLm92ZXJmbG93WSBdO1xyXG5cclxuXHRcdC8vIFNldCBkaXNwbGF5IHByb3BlcnR5IHRvIGlubGluZS1ibG9jayBmb3IgaGVpZ2h0L3dpZHRoXHJcblx0XHQvLyBhbmltYXRpb25zIG9uIGlubGluZSBlbGVtZW50cyB0aGF0IGFyZSBoYXZpbmcgd2lkdGgvaGVpZ2h0IGFuaW1hdGVkXHJcblx0XHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKTtcclxuXHJcblx0XHQvLyBUZXN0IGRlZmF1bHQgZGlzcGxheSBpZiBkaXNwbGF5IGlzIGN1cnJlbnRseSBcIm5vbmVcIlxyXG5cdFx0Y2hlY2tEaXNwbGF5ID0gZGlzcGxheSA9PT0gXCJub25lXCIgP1xyXG5cdFx0XHRqUXVlcnkuX2RhdGEoIGVsZW0sIFwib2xkZGlzcGxheVwiICkgfHwgZGVmYXVsdERpc3BsYXkoIGVsZW0ubm9kZU5hbWUgKSA6IGRpc3BsYXk7XHJcblxyXG5cdFx0aWYgKCBjaGVja0Rpc3BsYXkgPT09IFwiaW5saW5lXCIgJiYgalF1ZXJ5LmNzcyggZWxlbSwgXCJmbG9hdFwiICkgPT09IFwibm9uZVwiICkge1xyXG5cclxuXHRcdFx0Ly8gaW5saW5lLWxldmVsIGVsZW1lbnRzIGFjY2VwdCBpbmxpbmUtYmxvY2s7XHJcblx0XHRcdC8vIGJsb2NrLWxldmVsIGVsZW1lbnRzIG5lZWQgdG8gYmUgaW5saW5lIHdpdGggbGF5b3V0XHJcblx0XHRcdGlmICggIXN1cHBvcnQuaW5saW5lQmxvY2tOZWVkc0xheW91dCB8fCBkZWZhdWx0RGlzcGxheSggZWxlbS5ub2RlTmFtZSApID09PSBcImlubGluZVwiICkge1xyXG5cdFx0XHRcdHN0eWxlLmRpc3BsYXkgPSBcImlubGluZS1ibG9ja1wiO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHN0eWxlLnpvb20gPSAxO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRpZiAoIG9wdHMub3ZlcmZsb3cgKSB7XHJcblx0XHRzdHlsZS5vdmVyZmxvdyA9IFwiaGlkZGVuXCI7XHJcblx0XHRpZiAoICFzdXBwb3J0LnNocmlua1dyYXBCbG9ja3MoKSApIHtcclxuXHRcdFx0YW5pbS5hbHdheXMoIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdHN0eWxlLm92ZXJmbG93ID0gb3B0cy5vdmVyZmxvd1sgMCBdO1xyXG5cdFx0XHRcdHN0eWxlLm92ZXJmbG93WCA9IG9wdHMub3ZlcmZsb3dbIDEgXTtcclxuXHRcdFx0XHRzdHlsZS5vdmVyZmxvd1kgPSBvcHRzLm92ZXJmbG93WyAyIF07XHJcblx0XHRcdH0gKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIHNob3cvaGlkZSBwYXNzXHJcblx0Zm9yICggcHJvcCBpbiBwcm9wcyApIHtcclxuXHRcdHZhbHVlID0gcHJvcHNbIHByb3AgXTtcclxuXHRcdGlmICggcmZ4dHlwZXMuZXhlYyggdmFsdWUgKSApIHtcclxuXHRcdFx0ZGVsZXRlIHByb3BzWyBwcm9wIF07XHJcblx0XHRcdHRvZ2dsZSA9IHRvZ2dsZSB8fCB2YWx1ZSA9PT0gXCJ0b2dnbGVcIjtcclxuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gKCBoaWRkZW4gPyBcImhpZGVcIiA6IFwic2hvd1wiICkgKSB7XHJcblxyXG5cdFx0XHRcdC8vIElmIHRoZXJlIGlzIGRhdGFTaG93IGxlZnQgb3ZlciBmcm9tIGEgc3RvcHBlZCBoaWRlIG9yIHNob3dcclxuXHRcdFx0XHQvLyBhbmQgd2UgYXJlIGdvaW5nIHRvIHByb2NlZWQgd2l0aCBzaG93LCB3ZSBzaG91bGQgcHJldGVuZCB0byBiZSBoaWRkZW5cclxuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBcInNob3dcIiAmJiBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdFx0XHRoaWRkZW4gPSB0cnVlO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRjb250aW51ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0b3JpZ1sgcHJvcCBdID0gZGF0YVNob3cgJiYgZGF0YVNob3dbIHByb3AgXSB8fCBqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AgKTtcclxuXHJcblx0XHQvLyBBbnkgbm9uLWZ4IHZhbHVlIHN0b3BzIHVzIGZyb20gcmVzdG9yaW5nIHRoZSBvcmlnaW5hbCBkaXNwbGF5IHZhbHVlXHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRkaXNwbGF5ID0gdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0aWYgKCAhalF1ZXJ5LmlzRW1wdHlPYmplY3QoIG9yaWcgKSApIHtcclxuXHRcdGlmICggZGF0YVNob3cgKSB7XHJcblx0XHRcdGlmICggXCJoaWRkZW5cIiBpbiBkYXRhU2hvdyApIHtcclxuXHRcdFx0XHRoaWRkZW4gPSBkYXRhU2hvdy5oaWRkZW47XHJcblx0XHRcdH1cclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGRhdGFTaG93ID0galF1ZXJ5Ll9kYXRhKCBlbGVtLCBcImZ4c2hvd1wiLCB7fSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIHN0b3JlIHN0YXRlIGlmIGl0cyB0b2dnbGUgLSBlbmFibGVzIC5zdG9wKCkudG9nZ2xlKCkgdG8gXCJyZXZlcnNlXCJcclxuXHRcdGlmICggdG9nZ2xlICkge1xyXG5cdFx0XHRkYXRhU2hvdy5oaWRkZW4gPSAhaGlkZGVuO1xyXG5cdFx0fVxyXG5cdFx0aWYgKCBoaWRkZW4gKSB7XHJcblx0XHRcdGpRdWVyeSggZWxlbSApLnNob3coKTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGFuaW0uZG9uZSggZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0alF1ZXJ5KCBlbGVtICkuaGlkZSgpO1xyXG5cdFx0XHR9ICk7XHJcblx0XHR9XHJcblx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgcHJvcDtcclxuXHRcdFx0alF1ZXJ5Ll9yZW1vdmVEYXRhKCBlbGVtLCBcImZ4c2hvd1wiICk7XHJcblx0XHRcdGZvciAoIHByb3AgaW4gb3JpZyApIHtcclxuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIG9yaWdbIHByb3AgXSApO1xyXG5cdFx0XHR9XHJcblx0XHR9ICk7XHJcblx0XHRmb3IgKCBwcm9wIGluIG9yaWcgKSB7XHJcblx0XHRcdHR3ZWVuID0gY3JlYXRlVHdlZW4oIGhpZGRlbiA/IGRhdGFTaG93WyBwcm9wIF0gOiAwLCBwcm9wLCBhbmltICk7XHJcblxyXG5cdFx0XHRpZiAoICEoIHByb3AgaW4gZGF0YVNob3cgKSApIHtcclxuXHRcdFx0XHRkYXRhU2hvd1sgcHJvcCBdID0gdHdlZW4uc3RhcnQ7XHJcblx0XHRcdFx0aWYgKCBoaWRkZW4gKSB7XHJcblx0XHRcdFx0XHR0d2Vlbi5lbmQgPSB0d2Vlbi5zdGFydDtcclxuXHRcdFx0XHRcdHR3ZWVuLnN0YXJ0ID0gcHJvcCA9PT0gXCJ3aWR0aFwiIHx8IHByb3AgPT09IFwiaGVpZ2h0XCIgPyAxIDogMDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0Ly8gSWYgdGhpcyBpcyBhIG5vb3AgbGlrZSAuaGlkZSgpLmhpZGUoKSwgcmVzdG9yZSBhbiBvdmVyd3JpdHRlbiBkaXNwbGF5IHZhbHVlXHJcblx0fSBlbHNlIGlmICggKCBkaXNwbGF5ID09PSBcIm5vbmVcIiA/IGRlZmF1bHREaXNwbGF5KCBlbGVtLm5vZGVOYW1lICkgOiBkaXNwbGF5ICkgPT09IFwiaW5saW5lXCIgKSB7XHJcblx0XHRzdHlsZS5kaXNwbGF5ID0gZGlzcGxheTtcclxuXHR9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHByb3BGaWx0ZXIoIHByb3BzLCBzcGVjaWFsRWFzaW5nICkge1xyXG5cdHZhciBpbmRleCwgbmFtZSwgZWFzaW5nLCB2YWx1ZSwgaG9va3M7XHJcblxyXG5cdC8vIGNhbWVsQ2FzZSwgc3BlY2lhbEVhc2luZyBhbmQgZXhwYW5kIGNzc0hvb2sgcGFzc1xyXG5cdGZvciAoIGluZGV4IGluIHByb3BzICkge1xyXG5cdFx0bmFtZSA9IGpRdWVyeS5jYW1lbENhc2UoIGluZGV4ICk7XHJcblx0XHRlYXNpbmcgPSBzcGVjaWFsRWFzaW5nWyBuYW1lIF07XHJcblx0XHR2YWx1ZSA9IHByb3BzWyBpbmRleCBdO1xyXG5cdFx0aWYgKCBqUXVlcnkuaXNBcnJheSggdmFsdWUgKSApIHtcclxuXHRcdFx0ZWFzaW5nID0gdmFsdWVbIDEgXTtcclxuXHRcdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXSA9IHZhbHVlWyAwIF07XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBpbmRleCAhPT0gbmFtZSApIHtcclxuXHRcdFx0cHJvcHNbIG5hbWUgXSA9IHZhbHVlO1xyXG5cdFx0XHRkZWxldGUgcHJvcHNbIGluZGV4IF07XHJcblx0XHR9XHJcblxyXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXTtcclxuXHRcdGlmICggaG9va3MgJiYgXCJleHBhbmRcIiBpbiBob29rcyApIHtcclxuXHRcdFx0dmFsdWUgPSBob29rcy5leHBhbmQoIHZhbHVlICk7XHJcblx0XHRcdGRlbGV0ZSBwcm9wc1sgbmFtZSBdO1xyXG5cclxuXHRcdFx0Ly8gbm90IHF1aXRlICQuZXh0ZW5kLCB0aGlzIHdvbnQgb3ZlcndyaXRlIGtleXMgYWxyZWFkeSBwcmVzZW50LlxyXG5cdFx0XHQvLyBhbHNvIC0gcmV1c2luZyAnaW5kZXgnIGZyb20gYWJvdmUgYmVjYXVzZSB3ZSBoYXZlIHRoZSBjb3JyZWN0IFwibmFtZVwiXHJcblx0XHRcdGZvciAoIGluZGV4IGluIHZhbHVlICkge1xyXG5cdFx0XHRcdGlmICggISggaW5kZXggaW4gcHJvcHMgKSApIHtcclxuXHRcdFx0XHRcdHByb3BzWyBpbmRleCBdID0gdmFsdWVbIGluZGV4IF07XHJcblx0XHRcdFx0XHRzcGVjaWFsRWFzaW5nWyBpbmRleCBdID0gZWFzaW5nO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0c3BlY2lhbEVhc2luZ1sgbmFtZSBdID0gZWFzaW5nO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG5cclxuZnVuY3Rpb24gQW5pbWF0aW9uKCBlbGVtLCBwcm9wZXJ0aWVzLCBvcHRpb25zICkge1xyXG5cdHZhciByZXN1bHQsXHJcblx0XHRzdG9wcGVkLFxyXG5cdFx0aW5kZXggPSAwLFxyXG5cdFx0bGVuZ3RoID0gQW5pbWF0aW9uLnByZWZpbHRlcnMubGVuZ3RoLFxyXG5cdFx0ZGVmZXJyZWQgPSBqUXVlcnkuRGVmZXJyZWQoKS5hbHdheXMoIGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdFx0Ly8gZG9uJ3QgbWF0Y2ggZWxlbSBpbiB0aGUgOmFuaW1hdGVkIHNlbGVjdG9yXHJcblx0XHRcdGRlbGV0ZSB0aWNrLmVsZW07XHJcblx0XHR9ICksXHJcblx0XHR0aWNrID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdGlmICggc3RvcHBlZCApIHtcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XHJcblx0XHRcdH1cclxuXHRcdFx0dmFyIGN1cnJlbnRUaW1lID0gZnhOb3cgfHwgY3JlYXRlRnhOb3coKSxcclxuXHRcdFx0XHRyZW1haW5pbmcgPSBNYXRoLm1heCggMCwgYW5pbWF0aW9uLnN0YXJ0VGltZSArIGFuaW1hdGlvbi5kdXJhdGlvbiAtIGN1cnJlbnRUaW1lICksXHJcblxyXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zXHJcblx0XHRcdFx0Ly8gQXJjaGFpYyBjcmFzaCBidWcgd29uJ3QgYWxsb3cgdXMgdG8gdXNlIGAxIC0gKCAwLjUgfHwgMCApYCAoIzEyNDk3KVxyXG5cdFx0XHRcdHRlbXAgPSByZW1haW5pbmcgLyBhbmltYXRpb24uZHVyYXRpb24gfHwgMCxcclxuXHRcdFx0XHRwZXJjZW50ID0gMSAtIHRlbXAsXHJcblx0XHRcdFx0aW5kZXggPSAwLFxyXG5cdFx0XHRcdGxlbmd0aCA9IGFuaW1hdGlvbi50d2VlbnMubGVuZ3RoO1xyXG5cclxuXHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aCA7IGluZGV4KysgKSB7XHJcblx0XHRcdFx0YW5pbWF0aW9uLnR3ZWVuc1sgaW5kZXggXS5ydW4oIHBlcmNlbnQgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0ZGVmZXJyZWQubm90aWZ5V2l0aCggZWxlbSwgWyBhbmltYXRpb24sIHBlcmNlbnQsIHJlbWFpbmluZyBdICk7XHJcblxyXG5cdFx0XHRpZiAoIHBlcmNlbnQgPCAxICYmIGxlbmd0aCApIHtcclxuXHRcdFx0XHRyZXR1cm4gcmVtYWluaW5nO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGRlZmVycmVkLnJlc29sdmVXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiBdICk7XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0YW5pbWF0aW9uID0gZGVmZXJyZWQucHJvbWlzZSgge1xyXG5cdFx0XHRlbGVtOiBlbGVtLFxyXG5cdFx0XHRwcm9wczogalF1ZXJ5LmV4dGVuZCgge30sIHByb3BlcnRpZXMgKSxcclxuXHRcdFx0b3B0czogalF1ZXJ5LmV4dGVuZCggdHJ1ZSwge1xyXG5cdFx0XHRcdHNwZWNpYWxFYXNpbmc6IHt9LFxyXG5cdFx0XHRcdGVhc2luZzogalF1ZXJ5LmVhc2luZy5fZGVmYXVsdFxyXG5cdFx0XHR9LCBvcHRpb25zICksXHJcblx0XHRcdG9yaWdpbmFsUHJvcGVydGllczogcHJvcGVydGllcyxcclxuXHRcdFx0b3JpZ2luYWxPcHRpb25zOiBvcHRpb25zLFxyXG5cdFx0XHRzdGFydFRpbWU6IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXHJcblx0XHRcdGR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLFxyXG5cdFx0XHR0d2VlbnM6IFtdLFxyXG5cdFx0XHRjcmVhdGVUd2VlbjogZnVuY3Rpb24oIHByb3AsIGVuZCApIHtcclxuXHRcdFx0XHR2YXIgdHdlZW4gPSBqUXVlcnkuVHdlZW4oIGVsZW0sIGFuaW1hdGlvbi5vcHRzLCBwcm9wLCBlbmQsXHJcblx0XHRcdFx0XHRcdGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmdbIHByb3AgXSB8fCBhbmltYXRpb24ub3B0cy5lYXNpbmcgKTtcclxuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zLnB1c2goIHR3ZWVuICk7XHJcblx0XHRcdFx0cmV0dXJuIHR3ZWVuO1xyXG5cdFx0XHR9LFxyXG5cdFx0XHRzdG9wOiBmdW5jdGlvbiggZ290b0VuZCApIHtcclxuXHRcdFx0XHR2YXIgaW5kZXggPSAwLFxyXG5cclxuXHRcdFx0XHRcdC8vIGlmIHdlIGFyZSBnb2luZyB0byB0aGUgZW5kLCB3ZSB3YW50IHRvIHJ1biBhbGwgdGhlIHR3ZWVuc1xyXG5cdFx0XHRcdFx0Ly8gb3RoZXJ3aXNlIHdlIHNraXAgdGhpcyBwYXJ0XHJcblx0XHRcdFx0XHRsZW5ndGggPSBnb3RvRW5kID8gYW5pbWF0aW9uLnR3ZWVucy5sZW5ndGggOiAwO1xyXG5cdFx0XHRcdGlmICggc3RvcHBlZCApIHtcclxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRzdG9wcGVkID0gdHJ1ZTtcclxuXHRcdFx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoIDsgaW5kZXgrKyApIHtcclxuXHRcdFx0XHRcdGFuaW1hdGlvbi50d2VlbnNbIGluZGV4IF0ucnVuKCAxICk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyByZXNvbHZlIHdoZW4gd2UgcGxheWVkIHRoZSBsYXN0IGZyYW1lXHJcblx0XHRcdFx0Ly8gb3RoZXJ3aXNlLCByZWplY3RcclxuXHRcdFx0XHRpZiAoIGdvdG9FbmQgKSB7XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgMSwgMCBdICk7XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgZ290b0VuZCBdICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHR9XHJcblx0XHR9ICksXHJcblx0XHRwcm9wcyA9IGFuaW1hdGlvbi5wcm9wcztcclxuXHJcblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcclxuXHJcblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aCA7IGluZGV4KysgKSB7XHJcblx0XHRyZXN1bHQgPSBBbmltYXRpb24ucHJlZmlsdGVyc1sgaW5kZXggXS5jYWxsKCBhbmltYXRpb24sIGVsZW0sIHByb3BzLCBhbmltYXRpb24ub3B0cyApO1xyXG5cdFx0aWYgKCByZXN1bHQgKSB7XHJcblx0XHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHJlc3VsdC5zdG9wICkgKSB7XHJcblx0XHRcdFx0alF1ZXJ5Ll9xdWV1ZUhvb2tzKCBhbmltYXRpb24uZWxlbSwgYW5pbWF0aW9uLm9wdHMucXVldWUgKS5zdG9wID1cclxuXHRcdFx0XHRcdGpRdWVyeS5wcm94eSggcmVzdWx0LnN0b3AsIHJlc3VsdCApO1xyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiByZXN1bHQ7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRqUXVlcnkubWFwKCBwcm9wcywgY3JlYXRlVHdlZW4sIGFuaW1hdGlvbiApO1xyXG5cclxuXHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBhbmltYXRpb24ub3B0cy5zdGFydCApICkge1xyXG5cdFx0YW5pbWF0aW9uLm9wdHMuc3RhcnQuY2FsbCggZWxlbSwgYW5pbWF0aW9uICk7XHJcblx0fVxyXG5cclxuXHRqUXVlcnkuZngudGltZXIoXHJcblx0XHRqUXVlcnkuZXh0ZW5kKCB0aWNrLCB7XHJcblx0XHRcdGVsZW06IGVsZW0sXHJcblx0XHRcdGFuaW06IGFuaW1hdGlvbixcclxuXHRcdFx0cXVldWU6IGFuaW1hdGlvbi5vcHRzLnF1ZXVlXHJcblx0XHR9IClcclxuXHQpO1xyXG5cclxuXHQvLyBhdHRhY2ggY2FsbGJhY2tzIGZyb20gb3B0aW9uc1xyXG5cdHJldHVybiBhbmltYXRpb24ucHJvZ3Jlc3MoIGFuaW1hdGlvbi5vcHRzLnByb2dyZXNzIClcclxuXHRcdC5kb25lKCBhbmltYXRpb24ub3B0cy5kb25lLCBhbmltYXRpb24ub3B0cy5jb21wbGV0ZSApXHJcblx0XHQuZmFpbCggYW5pbWF0aW9uLm9wdHMuZmFpbCApXHJcblx0XHQuYWx3YXlzKCBhbmltYXRpb24ub3B0cy5hbHdheXMgKTtcclxufVxyXG5cclxualF1ZXJ5LkFuaW1hdGlvbiA9IGpRdWVyeS5leHRlbmQoIEFuaW1hdGlvbiwge1xyXG5cclxuXHR0d2VlbmVyczoge1xyXG5cdFx0XCIqXCI6IFsgZnVuY3Rpb24oIHByb3AsIHZhbHVlICkge1xyXG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLmNyZWF0ZVR3ZWVuKCBwcm9wLCB2YWx1ZSApO1xyXG5cdFx0XHRhZGp1c3RDU1MoIHR3ZWVuLmVsZW0sIHByb3AsIHJjc3NOdW0uZXhlYyggdmFsdWUgKSwgdHdlZW4gKTtcclxuXHRcdFx0cmV0dXJuIHR3ZWVuO1xyXG5cdFx0fSBdXHJcblx0fSxcclxuXHJcblx0dHdlZW5lcjogZnVuY3Rpb24oIHByb3BzLCBjYWxsYmFjayApIHtcclxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHByb3BzICkgKSB7XHJcblx0XHRcdGNhbGxiYWNrID0gcHJvcHM7XHJcblx0XHRcdHByb3BzID0gWyBcIipcIiBdO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0cHJvcHMgPSBwcm9wcy5tYXRjaCggcm5vdHdoaXRlICk7XHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIHByb3AsXHJcblx0XHRcdGluZGV4ID0gMCxcclxuXHRcdFx0bGVuZ3RoID0gcHJvcHMubGVuZ3RoO1xyXG5cclxuXHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGggOyBpbmRleCsrICkge1xyXG5cdFx0XHRwcm9wID0gcHJvcHNbIGluZGV4IF07XHJcblx0XHRcdEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdID0gQW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0gfHwgW107XHJcblx0XHRcdEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdLnVuc2hpZnQoIGNhbGxiYWNrICk7XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0cHJlZmlsdGVyczogWyBkZWZhdWx0UHJlZmlsdGVyIF0sXHJcblxyXG5cdHByZWZpbHRlcjogZnVuY3Rpb24oIGNhbGxiYWNrLCBwcmVwZW5kICkge1xyXG5cdFx0aWYgKCBwcmVwZW5kICkge1xyXG5cdFx0XHRBbmltYXRpb24ucHJlZmlsdGVycy51bnNoaWZ0KCBjYWxsYmFjayApO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMucHVzaCggY2FsbGJhY2sgKTtcclxuXHRcdH1cclxuXHR9XHJcbn0gKTtcclxuXHJcbmpRdWVyeS5zcGVlZCA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBmbiApIHtcclxuXHR2YXIgb3B0ID0gc3BlZWQgJiYgdHlwZW9mIHNwZWVkID09PSBcIm9iamVjdFwiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7XHJcblx0XHRjb21wbGV0ZTogZm4gfHwgIWZuICYmIGVhc2luZyB8fFxyXG5cdFx0XHRqUXVlcnkuaXNGdW5jdGlvbiggc3BlZWQgKSAmJiBzcGVlZCxcclxuXHRcdGR1cmF0aW9uOiBzcGVlZCxcclxuXHRcdGVhc2luZzogZm4gJiYgZWFzaW5nIHx8IGVhc2luZyAmJiAhalF1ZXJ5LmlzRnVuY3Rpb24oIGVhc2luZyApICYmIGVhc2luZ1xyXG5cdH07XHJcblxyXG5cdG9wdC5kdXJhdGlvbiA9IGpRdWVyeS5meC5vZmYgPyAwIDogdHlwZW9mIG9wdC5kdXJhdGlvbiA9PT0gXCJudW1iZXJcIiA/IG9wdC5kdXJhdGlvbiA6XHJcblx0XHRvcHQuZHVyYXRpb24gaW4galF1ZXJ5LmZ4LnNwZWVkcyA/XHJcblx0XHRcdGpRdWVyeS5meC5zcGVlZHNbIG9wdC5kdXJhdGlvbiBdIDogalF1ZXJ5LmZ4LnNwZWVkcy5fZGVmYXVsdDtcclxuXHJcblx0Ly8gbm9ybWFsaXplIG9wdC5xdWV1ZSAtIHRydWUvdW5kZWZpbmVkL251bGwgLT4gXCJmeFwiXHJcblx0aWYgKCBvcHQucXVldWUgPT0gbnVsbCB8fCBvcHQucXVldWUgPT09IHRydWUgKSB7XHJcblx0XHRvcHQucXVldWUgPSBcImZ4XCI7XHJcblx0fVxyXG5cclxuXHQvLyBRdWV1ZWluZ1xyXG5cdG9wdC5vbGQgPSBvcHQuY29tcGxldGU7XHJcblxyXG5cdG9wdC5jb21wbGV0ZSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggb3B0Lm9sZCApICkge1xyXG5cdFx0XHRvcHQub2xkLmNhbGwoIHRoaXMgKTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoIG9wdC5xdWV1ZSApIHtcclxuXHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIG9wdC5xdWV1ZSApO1xyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdHJldHVybiBvcHQ7XHJcbn07XHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblx0ZmFkZVRvOiBmdW5jdGlvbiggc3BlZWQsIHRvLCBlYXNpbmcsIGNhbGxiYWNrICkge1xyXG5cclxuXHRcdC8vIHNob3cgYW55IGhpZGRlbiBlbGVtZW50cyBhZnRlciBzZXR0aW5nIG9wYWNpdHkgdG8gMFxyXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBpc0hpZGRlbiApLmNzcyggXCJvcGFjaXR5XCIsIDAgKS5zaG93KClcclxuXHJcblx0XHRcdC8vIGFuaW1hdGUgdG8gdGhlIHZhbHVlIHNwZWNpZmllZFxyXG5cdFx0XHQuZW5kKCkuYW5pbWF0ZSggeyBvcGFjaXR5OiB0byB9LCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApO1xyXG5cdH0sXHJcblx0YW5pbWF0ZTogZnVuY3Rpb24oIHByb3AsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xyXG5cdFx0dmFyIGVtcHR5ID0galF1ZXJ5LmlzRW1wdHlPYmplY3QoIHByb3AgKSxcclxuXHRcdFx0b3B0YWxsID0galF1ZXJ5LnNwZWVkKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApLFxyXG5cdFx0XHRkb0FuaW1hdGlvbiA9IGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdFx0XHQvLyBPcGVyYXRlIG9uIGEgY29weSBvZiBwcm9wIHNvIHBlci1wcm9wZXJ0eSBlYXNpbmcgd29uJ3QgYmUgbG9zdFxyXG5cdFx0XHRcdHZhciBhbmltID0gQW5pbWF0aW9uKCB0aGlzLCBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcCApLCBvcHRhbGwgKTtcclxuXHJcblx0XHRcdFx0Ly8gRW1wdHkgYW5pbWF0aW9ucywgb3IgZmluaXNoaW5nIHJlc29sdmVzIGltbWVkaWF0ZWx5XHJcblx0XHRcdFx0aWYgKCBlbXB0eSB8fCBqUXVlcnkuX2RhdGEoIHRoaXMsIFwiZmluaXNoXCIgKSApIHtcclxuXHRcdFx0XHRcdGFuaW0uc3RvcCggdHJ1ZSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHRcdFx0ZG9BbmltYXRpb24uZmluaXNoID0gZG9BbmltYXRpb247XHJcblxyXG5cdFx0cmV0dXJuIGVtcHR5IHx8IG9wdGFsbC5xdWV1ZSA9PT0gZmFsc2UgP1xyXG5cdFx0XHR0aGlzLmVhY2goIGRvQW5pbWF0aW9uICkgOlxyXG5cdFx0XHR0aGlzLnF1ZXVlKCBvcHRhbGwucXVldWUsIGRvQW5pbWF0aW9uICk7XHJcblx0fSxcclxuXHRzdG9wOiBmdW5jdGlvbiggdHlwZSwgY2xlYXJRdWV1ZSwgZ290b0VuZCApIHtcclxuXHRcdHZhciBzdG9wUXVldWUgPSBmdW5jdGlvbiggaG9va3MgKSB7XHJcblx0XHRcdHZhciBzdG9wID0gaG9va3Muc3RvcDtcclxuXHRcdFx0ZGVsZXRlIGhvb2tzLnN0b3A7XHJcblx0XHRcdHN0b3AoIGdvdG9FbmQgKTtcclxuXHRcdH07XHJcblxyXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdFx0Z290b0VuZCA9IGNsZWFyUXVldWU7XHJcblx0XHRcdGNsZWFyUXVldWUgPSB0eXBlO1xyXG5cdFx0XHR0eXBlID0gdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cdFx0aWYgKCBjbGVhclF1ZXVlICYmIHR5cGUgIT09IGZhbHNlICkge1xyXG5cdFx0XHR0aGlzLnF1ZXVlKCB0eXBlIHx8IFwiZnhcIiwgW10gKTtcclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0dmFyIGRlcXVldWUgPSB0cnVlLFxyXG5cdFx0XHRcdGluZGV4ID0gdHlwZSAhPSBudWxsICYmIHR5cGUgKyBcInF1ZXVlSG9va3NcIixcclxuXHRcdFx0XHR0aW1lcnMgPSBqUXVlcnkudGltZXJzLFxyXG5cdFx0XHRcdGRhdGEgPSBqUXVlcnkuX2RhdGEoIHRoaXMgKTtcclxuXHJcblx0XHRcdGlmICggaW5kZXggKSB7XHJcblx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCApIHtcclxuXHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRmb3IgKCBpbmRleCBpbiBkYXRhICkge1xyXG5cdFx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCAmJiBycnVuLnRlc3QoIGluZGV4ICkgKSB7XHJcblx0XHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Zm9yICggaW5kZXggPSB0aW1lcnMubGVuZ3RoOyBpbmRleC0tOyApIHtcclxuXHRcdFx0XHRpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmXHJcblx0XHRcdFx0XHQoIHR5cGUgPT0gbnVsbCB8fCB0aW1lcnNbIGluZGV4IF0ucXVldWUgPT09IHR5cGUgKSApIHtcclxuXHJcblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCBnb3RvRW5kICk7XHJcblx0XHRcdFx0XHRkZXF1ZXVlID0gZmFsc2U7XHJcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gc3RhcnQgdGhlIG5leHQgaW4gdGhlIHF1ZXVlIGlmIHRoZSBsYXN0IHN0ZXAgd2Fzbid0IGZvcmNlZFxyXG5cdFx0XHQvLyB0aW1lcnMgY3VycmVudGx5IHdpbGwgY2FsbCB0aGVpciBjb21wbGV0ZSBjYWxsYmFja3MsIHdoaWNoIHdpbGwgZGVxdWV1ZVxyXG5cdFx0XHQvLyBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZFxyXG5cdFx0XHRpZiAoIGRlcXVldWUgfHwgIWdvdG9FbmQgKSB7XHJcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcclxuXHRcdFx0fVxyXG5cdFx0fSApO1xyXG5cdH0sXHJcblx0ZmluaXNoOiBmdW5jdGlvbiggdHlwZSApIHtcclxuXHRcdGlmICggdHlwZSAhPT0gZmFsc2UgKSB7XHJcblx0XHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcclxuXHRcdH1cclxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgaW5kZXgsXHJcblx0XHRcdFx0ZGF0YSA9IGpRdWVyeS5fZGF0YSggdGhpcyApLFxyXG5cdFx0XHRcdHF1ZXVlID0gZGF0YVsgdHlwZSArIFwicXVldWVcIiBdLFxyXG5cdFx0XHRcdGhvb2tzID0gZGF0YVsgdHlwZSArIFwicXVldWVIb29rc1wiIF0sXHJcblx0XHRcdFx0dGltZXJzID0galF1ZXJ5LnRpbWVycyxcclxuXHRcdFx0XHRsZW5ndGggPSBxdWV1ZSA/IHF1ZXVlLmxlbmd0aCA6IDA7XHJcblxyXG5cdFx0XHQvLyBlbmFibGUgZmluaXNoaW5nIGZsYWcgb24gcHJpdmF0ZSBkYXRhXHJcblx0XHRcdGRhdGEuZmluaXNoID0gdHJ1ZTtcclxuXHJcblx0XHRcdC8vIGVtcHR5IHRoZSBxdWV1ZSBmaXJzdFxyXG5cdFx0XHRqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIFtdICk7XHJcblxyXG5cdFx0XHRpZiAoIGhvb2tzICYmIGhvb2tzLnN0b3AgKSB7XHJcblx0XHRcdFx0aG9va3Muc3RvcC5jYWxsKCB0aGlzLCB0cnVlICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIGxvb2sgZm9yIGFueSBhY3RpdmUgYW5pbWF0aW9ucywgYW5kIGZpbmlzaCB0aGVtXHJcblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XHJcblx0XHRcdFx0aWYgKCB0aW1lcnNbIGluZGV4IF0uZWxlbSA9PT0gdGhpcyAmJiB0aW1lcnNbIGluZGV4IF0ucXVldWUgPT09IHR5cGUgKSB7XHJcblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCB0cnVlICk7XHJcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gbG9vayBmb3IgYW55IGFuaW1hdGlvbnMgaW4gdGhlIG9sZCBxdWV1ZSBhbmQgZmluaXNoIHRoZW1cclxuXHRcdFx0Zm9yICggaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcclxuXHRcdFx0XHRpZiAoIHF1ZXVlWyBpbmRleCBdICYmIHF1ZXVlWyBpbmRleCBdLmZpbmlzaCApIHtcclxuXHRcdFx0XHRcdHF1ZXVlWyBpbmRleCBdLmZpbmlzaC5jYWxsKCB0aGlzICk7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyB0dXJuIG9mZiBmaW5pc2hpbmcgZmxhZ1xyXG5cdFx0XHRkZWxldGUgZGF0YS5maW5pc2g7XHJcblx0XHR9ICk7XHJcblx0fVxyXG59ICk7XHJcblxyXG5qUXVlcnkuZWFjaCggWyBcInRvZ2dsZVwiLCBcInNob3dcIiwgXCJoaWRlXCIgXSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XHJcblx0dmFyIGNzc0ZuID0galF1ZXJ5LmZuWyBuYW1lIF07XHJcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XHJcblx0XHRyZXR1cm4gc3BlZWQgPT0gbnVsbCB8fCB0eXBlb2Ygc3BlZWQgPT09IFwiYm9vbGVhblwiID9cclxuXHRcdFx0Y3NzRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApIDpcclxuXHRcdFx0dGhpcy5hbmltYXRlKCBnZW5GeCggbmFtZSwgdHJ1ZSApLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApO1xyXG5cdH07XHJcbn0gKTtcclxuXHJcbi8vIEdlbmVyYXRlIHNob3J0Y3V0cyBmb3IgY3VzdG9tIGFuaW1hdGlvbnNcclxualF1ZXJ5LmVhY2goIHtcclxuXHRzbGlkZURvd246IGdlbkZ4KCBcInNob3dcIiApLFxyXG5cdHNsaWRlVXA6IGdlbkZ4KCBcImhpZGVcIiApLFxyXG5cdHNsaWRlVG9nZ2xlOiBnZW5GeCggXCJ0b2dnbGVcIiApLFxyXG5cdGZhZGVJbjogeyBvcGFjaXR5OiBcInNob3dcIiB9LFxyXG5cdGZhZGVPdXQ6IHsgb3BhY2l0eTogXCJoaWRlXCIgfSxcclxuXHRmYWRlVG9nZ2xlOiB7IG9wYWNpdHk6IFwidG9nZ2xlXCIgfVxyXG59LCBmdW5jdGlvbiggbmFtZSwgcHJvcHMgKSB7XHJcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5hbmltYXRlKCBwcm9wcywgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcclxuXHR9O1xyXG59ICk7XHJcblxyXG5qUXVlcnkudGltZXJzID0gW107XHJcbmpRdWVyeS5meC50aWNrID0gZnVuY3Rpb24oKSB7XHJcblx0dmFyIHRpbWVyLFxyXG5cdFx0dGltZXJzID0galF1ZXJ5LnRpbWVycyxcclxuXHRcdGkgPSAwO1xyXG5cclxuXHRmeE5vdyA9IGpRdWVyeS5ub3coKTtcclxuXHJcblx0Zm9yICggOyBpIDwgdGltZXJzLmxlbmd0aDsgaSsrICkge1xyXG5cdFx0dGltZXIgPSB0aW1lcnNbIGkgXTtcclxuXHJcblx0XHQvLyBDaGVja3MgdGhlIHRpbWVyIGhhcyBub3QgYWxyZWFkeSBiZWVuIHJlbW92ZWRcclxuXHRcdGlmICggIXRpbWVyKCkgJiYgdGltZXJzWyBpIF0gPT09IHRpbWVyICkge1xyXG5cdFx0XHR0aW1lcnMuc3BsaWNlKCBpLS0sIDEgKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdGlmICggIXRpbWVycy5sZW5ndGggKSB7XHJcblx0XHRqUXVlcnkuZnguc3RvcCgpO1xyXG5cdH1cclxuXHRmeE5vdyA9IHVuZGVmaW5lZDtcclxufTtcclxuXHJcbmpRdWVyeS5meC50aW1lciA9IGZ1bmN0aW9uKCB0aW1lciApIHtcclxuXHRqUXVlcnkudGltZXJzLnB1c2goIHRpbWVyICk7XHJcblx0aWYgKCB0aW1lcigpICkge1xyXG5cdFx0alF1ZXJ5LmZ4LnN0YXJ0KCk7XHJcblx0fSBlbHNlIHtcclxuXHRcdGpRdWVyeS50aW1lcnMucG9wKCk7XHJcblx0fVxyXG59O1xyXG5cclxualF1ZXJ5LmZ4LmludGVydmFsID0gMTM7XHJcblxyXG5qUXVlcnkuZnguc3RhcnQgPSBmdW5jdGlvbigpIHtcclxuXHRpZiAoICF0aW1lcklkICkge1xyXG5cdFx0dGltZXJJZCA9IHdpbmRvdy5zZXRJbnRlcnZhbCggalF1ZXJ5LmZ4LnRpY2ssIGpRdWVyeS5meC5pbnRlcnZhbCApO1xyXG5cdH1cclxufTtcclxuXHJcbmpRdWVyeS5meC5zdG9wID0gZnVuY3Rpb24oKSB7XHJcblx0d2luZG93LmNsZWFySW50ZXJ2YWwoIHRpbWVySWQgKTtcclxuXHR0aW1lcklkID0gbnVsbDtcclxufTtcclxuXHJcbmpRdWVyeS5meC5zcGVlZHMgPSB7XHJcblx0c2xvdzogNjAwLFxyXG5cdGZhc3Q6IDIwMCxcclxuXHJcblx0Ly8gRGVmYXVsdCBzcGVlZFxyXG5cdF9kZWZhdWx0OiA0MDBcclxufTtcclxuXHJcblxyXG4vLyBCYXNlZCBvZmYgb2YgdGhlIHBsdWdpbiBieSBDbGludCBIZWxmZXJzLCB3aXRoIHBlcm1pc3Npb24uXHJcbi8vIGh0dHA6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTAwMzI0MDE0NzQ3L2h0dHA6Ly9ibGluZHNpZ25hbHMuY29tL2luZGV4LnBocC8yMDA5LzA3L2pxdWVyeS1kZWxheS9cclxualF1ZXJ5LmZuLmRlbGF5ID0gZnVuY3Rpb24oIHRpbWUsIHR5cGUgKSB7XHJcblx0dGltZSA9IGpRdWVyeS5meCA/IGpRdWVyeS5meC5zcGVlZHNbIHRpbWUgXSB8fCB0aW1lIDogdGltZTtcclxuXHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XHJcblxyXG5cdHJldHVybiB0aGlzLnF1ZXVlKCB0eXBlLCBmdW5jdGlvbiggbmV4dCwgaG9va3MgKSB7XHJcblx0XHR2YXIgdGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCBuZXh0LCB0aW1lICk7XHJcblx0XHRob29rcy5zdG9wID0gZnVuY3Rpb24oKSB7XHJcblx0XHRcdHdpbmRvdy5jbGVhclRpbWVvdXQoIHRpbWVvdXQgKTtcclxuXHRcdH07XHJcblx0fSApO1xyXG59O1xyXG5cclxuXHJcbiggZnVuY3Rpb24oKSB7XHJcblx0dmFyIGEsXHJcblx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApLFxyXG5cdFx0ZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApLFxyXG5cdFx0c2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJzZWxlY3RcIiApLFxyXG5cdFx0b3B0ID0gc2VsZWN0LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcIm9wdGlvblwiICkgKTtcclxuXHJcblx0Ly8gU2V0dXBcclxuXHRkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XHJcblx0ZGl2LnNldEF0dHJpYnV0ZSggXCJjbGFzc05hbWVcIiwgXCJ0XCIgKTtcclxuXHRkaXYuaW5uZXJIVE1MID0gXCIgIDxsaW5rLz48dGFibGU+PC90YWJsZT48YSBocmVmPScvYSc+YTwvYT48aW5wdXQgdHlwZT0nY2hlY2tib3gnLz5cIjtcclxuXHRhID0gZGl2LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcImFcIiApWyAwIF07XHJcblxyXG5cdC8vIFN1cHBvcnQ6IFdpbmRvd3MgV2ViIEFwcHMgKFdXQSlcclxuXHQvLyBgdHlwZWAgbXVzdCB1c2UgLnNldEF0dHJpYnV0ZSBmb3IgV1dBICgjMTQ5MDEpXHJcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJjaGVja2JveFwiICk7XHJcblx0ZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApO1xyXG5cclxuXHRhID0gZGl2LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBcImFcIiApWyAwIF07XHJcblxyXG5cdC8vIEZpcnN0IGJhdGNoIG9mIHRlc3RzLlxyXG5cdGEuc3R5bGUuY3NzVGV4dCA9IFwidG9wOjFweFwiO1xyXG5cclxuXHQvLyBUZXN0IHNldEF0dHJpYnV0ZSBvbiBjYW1lbENhc2UgY2xhc3MuXHJcblx0Ly8gSWYgaXQgd29ya3MsIHdlIG5lZWQgYXR0ckZpeGVzIHdoZW4gZG9pbmcgZ2V0L3NldEF0dHJpYnV0ZSAoaWU2LzcpXHJcblx0c3VwcG9ydC5nZXRTZXRBdHRyaWJ1dGUgPSBkaXYuY2xhc3NOYW1lICE9PSBcInRcIjtcclxuXHJcblx0Ly8gR2V0IHRoZSBzdHlsZSBpbmZvcm1hdGlvbiBmcm9tIGdldEF0dHJpYnV0ZVxyXG5cdC8vIChJRSB1c2VzIC5jc3NUZXh0IGluc3RlYWQpXHJcblx0c3VwcG9ydC5zdHlsZSA9IC90b3AvLnRlc3QoIGEuZ2V0QXR0cmlidXRlKCBcInN0eWxlXCIgKSApO1xyXG5cclxuXHQvLyBNYWtlIHN1cmUgdGhhdCBVUkxzIGFyZW4ndCBtYW5pcHVsYXRlZFxyXG5cdC8vIChJRSBub3JtYWxpemVzIGl0IGJ5IGRlZmF1bHQpXHJcblx0c3VwcG9ydC5ocmVmTm9ybWFsaXplZCA9IGEuZ2V0QXR0cmlidXRlKCBcImhyZWZcIiApID09PSBcIi9hXCI7XHJcblxyXG5cdC8vIENoZWNrIHRoZSBkZWZhdWx0IGNoZWNrYm94L3JhZGlvIHZhbHVlIChcIlwiIG9uIFdlYktpdDsgXCJvblwiIGVsc2V3aGVyZSlcclxuXHRzdXBwb3J0LmNoZWNrT24gPSAhIWlucHV0LnZhbHVlO1xyXG5cclxuXHQvLyBNYWtlIHN1cmUgdGhhdCBhIHNlbGVjdGVkLWJ5LWRlZmF1bHQgb3B0aW9uIGhhcyBhIHdvcmtpbmcgc2VsZWN0ZWQgcHJvcGVydHkuXHJcblx0Ly8gKFdlYktpdCBkZWZhdWx0cyB0byBmYWxzZSBpbnN0ZWFkIG9mIHRydWUsIElFIHRvbywgaWYgaXQncyBpbiBhbiBvcHRncm91cClcclxuXHRzdXBwb3J0Lm9wdFNlbGVjdGVkID0gb3B0LnNlbGVjdGVkO1xyXG5cclxuXHQvLyBUZXN0cyBmb3IgZW5jdHlwZSBzdXBwb3J0IG9uIGEgZm9ybSAoIzY3NDMpXHJcblx0c3VwcG9ydC5lbmN0eXBlID0gISFkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImZvcm1cIiApLmVuY3R5cGU7XHJcblxyXG5cdC8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBvcHRpb25zIGluc2lkZSBkaXNhYmxlZCBzZWxlY3RzIGFyZW4ndCBtYXJrZWQgYXMgZGlzYWJsZWRcclxuXHQvLyAoV2ViS2l0IG1hcmtzIHRoZW0gYXMgZGlzYWJsZWQpXHJcblx0c2VsZWN0LmRpc2FibGVkID0gdHJ1ZTtcclxuXHRzdXBwb3J0Lm9wdERpc2FibGVkID0gIW9wdC5kaXNhYmxlZDtcclxuXHJcblx0Ly8gU3VwcG9ydDogSUU4IG9ubHlcclxuXHQvLyBDaGVjayBpZiB3ZSBjYW4gdHJ1c3QgZ2V0QXR0cmlidXRlKFwidmFsdWVcIilcclxuXHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xyXG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiLCBcIlwiICk7XHJcblx0c3VwcG9ydC5pbnB1dCA9IGlucHV0LmdldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiICkgPT09IFwiXCI7XHJcblxyXG5cdC8vIENoZWNrIGlmIGFuIGlucHV0IG1haW50YWlucyBpdHMgdmFsdWUgYWZ0ZXIgYmVjb21pbmcgYSByYWRpb1xyXG5cdGlucHV0LnZhbHVlID0gXCJ0XCI7XHJcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJyYWRpb1wiICk7XHJcblx0c3VwcG9ydC5yYWRpb1ZhbHVlID0gaW5wdXQudmFsdWUgPT09IFwidFwiO1xyXG59ICkoKTtcclxuXHJcblxyXG52YXIgcnJldHVybiA9IC9cXHIvZyxcclxuXHRyc3BhY2VzID0gL1tcXHgyMFxcdFxcclxcblxcZl0rL2c7XHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblx0dmFsOiBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHR2YXIgaG9va3MsIHJldCwgaXNGdW5jdGlvbixcclxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXTtcclxuXHJcblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xyXG5cdFx0XHRpZiAoIGVsZW0gKSB7XHJcblx0XHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIGVsZW0udHlwZSBdIHx8XHJcblx0XHRcdFx0XHRqUXVlcnkudmFsSG9va3NbIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSBdO1xyXG5cclxuXHRcdFx0XHRpZiAoXHJcblx0XHRcdFx0XHRob29rcyAmJlxyXG5cdFx0XHRcdFx0XCJnZXRcIiBpbiBob29rcyAmJlxyXG5cdFx0XHRcdFx0KCByZXQgPSBob29rcy5nZXQoIGVsZW0sIFwidmFsdWVcIiApICkgIT09IHVuZGVmaW5lZFxyXG5cdFx0XHRcdCkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHJldDtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHJldCA9IGVsZW0udmFsdWU7XHJcblxyXG5cdFx0XHRcdHJldHVybiB0eXBlb2YgcmV0ID09PSBcInN0cmluZ1wiID9cclxuXHJcblx0XHRcdFx0XHQvLyBoYW5kbGUgbW9zdCBjb21tb24gc3RyaW5nIGNhc2VzXHJcblx0XHRcdFx0XHRyZXQucmVwbGFjZSggcnJldHVybiwgXCJcIiApIDpcclxuXHJcblx0XHRcdFx0XHQvLyBoYW5kbGUgY2FzZXMgd2hlcmUgdmFsdWUgaXMgbnVsbC91bmRlZiBvciBudW1iZXJcclxuXHRcdFx0XHRcdHJldCA9PSBudWxsID8gXCJcIiA6IHJldDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlzRnVuY3Rpb24gPSBqUXVlcnkuaXNGdW5jdGlvbiggdmFsdWUgKTtcclxuXHJcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcclxuXHRcdFx0dmFyIHZhbDtcclxuXHJcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSAhPT0gMSApIHtcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmICggaXNGdW5jdGlvbiApIHtcclxuXHRcdFx0XHR2YWwgPSB2YWx1ZS5jYWxsKCB0aGlzLCBpLCBqUXVlcnkoIHRoaXMgKS52YWwoKSApO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHZhbCA9IHZhbHVlO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBUcmVhdCBudWxsL3VuZGVmaW5lZCBhcyBcIlwiOyBjb252ZXJ0IG51bWJlcnMgdG8gc3RyaW5nXHJcblx0XHRcdGlmICggdmFsID09IG51bGwgKSB7XHJcblx0XHRcdFx0dmFsID0gXCJcIjtcclxuXHRcdFx0fSBlbHNlIGlmICggdHlwZW9mIHZhbCA9PT0gXCJudW1iZXJcIiApIHtcclxuXHRcdFx0XHR2YWwgKz0gXCJcIjtcclxuXHRcdFx0fSBlbHNlIGlmICggalF1ZXJ5LmlzQXJyYXkoIHZhbCApICkge1xyXG5cdFx0XHRcdHZhbCA9IGpRdWVyeS5tYXAoIHZhbCwgZnVuY3Rpb24oIHZhbHVlICkge1xyXG5cdFx0XHRcdFx0cmV0dXJuIHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKyBcIlwiO1xyXG5cdFx0XHRcdH0gKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0aG9va3MgPSBqUXVlcnkudmFsSG9va3NbIHRoaXMudHlwZSBdIHx8IGpRdWVyeS52YWxIb29rc1sgdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpIF07XHJcblxyXG5cdFx0XHQvLyBJZiBzZXQgcmV0dXJucyB1bmRlZmluZWQsIGZhbGwgYmFjayB0byBub3JtYWwgc2V0dGluZ1xyXG5cdFx0XHRpZiAoICFob29rcyB8fCAhKCBcInNldFwiIGluIGhvb2tzICkgfHwgaG9va3Muc2V0KCB0aGlzLCB2YWwsIFwidmFsdWVcIiApID09PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdFx0dGhpcy52YWx1ZSA9IHZhbDtcclxuXHRcdFx0fVxyXG5cdFx0fSApO1xyXG5cdH1cclxufSApO1xyXG5cclxualF1ZXJ5LmV4dGVuZCgge1xyXG5cdHZhbEhvb2tzOiB7XHJcblx0XHRvcHRpb246IHtcclxuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0XHR2YXIgdmFsID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgXCJ2YWx1ZVwiICk7XHJcblx0XHRcdFx0cmV0dXJuIHZhbCAhPSBudWxsID9cclxuXHRcdFx0XHRcdHZhbCA6XHJcblxyXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUxMC0xMStcclxuXHRcdFx0XHRcdC8vIG9wdGlvbi50ZXh0IHRocm93cyBleGNlcHRpb25zICgjMTQ2ODYsICMxNDg1OClcclxuXHRcdFx0XHRcdC8vIFN0cmlwIGFuZCBjb2xsYXBzZSB3aGl0ZXNwYWNlXHJcblx0XHRcdFx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2Utd2hpdGVzcGFjZVxyXG5cdFx0XHRcdFx0alF1ZXJ5LnRyaW0oIGpRdWVyeS50ZXh0KCBlbGVtICkgKS5yZXBsYWNlKCByc3BhY2VzLCBcIiBcIiApO1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0c2VsZWN0OiB7XHJcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0XHRcdFx0dmFyIHZhbHVlLCBvcHRpb24sXHJcblx0XHRcdFx0XHRvcHRpb25zID0gZWxlbS5vcHRpb25zLFxyXG5cdFx0XHRcdFx0aW5kZXggPSBlbGVtLnNlbGVjdGVkSW5kZXgsXHJcblx0XHRcdFx0XHRvbmUgPSBlbGVtLnR5cGUgPT09IFwic2VsZWN0LW9uZVwiIHx8IGluZGV4IDwgMCxcclxuXHRcdFx0XHRcdHZhbHVlcyA9IG9uZSA/IG51bGwgOiBbXSxcclxuXHRcdFx0XHRcdG1heCA9IG9uZSA/IGluZGV4ICsgMSA6IG9wdGlvbnMubGVuZ3RoLFxyXG5cdFx0XHRcdFx0aSA9IGluZGV4IDwgMCA/XHJcblx0XHRcdFx0XHRcdG1heCA6XHJcblx0XHRcdFx0XHRcdG9uZSA/IGluZGV4IDogMDtcclxuXHJcblx0XHRcdFx0Ly8gTG9vcCB0aHJvdWdoIGFsbCB0aGUgc2VsZWN0ZWQgb3B0aW9uc1xyXG5cdFx0XHRcdGZvciAoIDsgaSA8IG1heDsgaSsrICkge1xyXG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xyXG5cclxuXHRcdFx0XHRcdC8vIG9sZElFIGRvZXNuJ3QgdXBkYXRlIHNlbGVjdGVkIGFmdGVyIGZvcm0gcmVzZXQgKCMyNTUxKVxyXG5cdFx0XHRcdFx0aWYgKCAoIG9wdGlvbi5zZWxlY3RlZCB8fCBpID09PSBpbmRleCApICYmXHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIERvbid0IHJldHVybiBvcHRpb25zIHRoYXQgYXJlIGRpc2FibGVkIG9yIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXBcclxuXHRcdFx0XHRcdFx0XHQoIHN1cHBvcnQub3B0RGlzYWJsZWQgP1xyXG5cdFx0XHRcdFx0XHRcdFx0IW9wdGlvbi5kaXNhYmxlZCA6XHJcblx0XHRcdFx0XHRcdFx0XHRvcHRpb24uZ2V0QXR0cmlidXRlKCBcImRpc2FibGVkXCIgKSA9PT0gbnVsbCApICYmXHJcblx0XHRcdFx0XHRcdFx0KCAhb3B0aW9uLnBhcmVudE5vZGUuZGlzYWJsZWQgfHxcclxuXHRcdFx0XHRcdFx0XHRcdCFqUXVlcnkubm9kZU5hbWUoIG9wdGlvbi5wYXJlbnROb2RlLCBcIm9wdGdyb3VwXCIgKSApICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gR2V0IHRoZSBzcGVjaWZpYyB2YWx1ZSBmb3IgdGhlIG9wdGlvblxyXG5cdFx0XHRcdFx0XHR2YWx1ZSA9IGpRdWVyeSggb3B0aW9uICkudmFsKCk7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBXZSBkb24ndCBuZWVkIGFuIGFycmF5IGZvciBvbmUgc2VsZWN0c1xyXG5cdFx0XHRcdFx0XHRpZiAoIG9uZSApIHtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdmFsdWU7XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdC8vIE11bHRpLVNlbGVjdHMgcmV0dXJuIGFuIGFycmF5XHJcblx0XHRcdFx0XHRcdHZhbHVlcy5wdXNoKCB2YWx1ZSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcclxuXHRcdFx0fSxcclxuXHJcblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xyXG5cdFx0XHRcdHZhciBvcHRpb25TZXQsIG9wdGlvbixcclxuXHRcdFx0XHRcdG9wdGlvbnMgPSBlbGVtLm9wdGlvbnMsXHJcblx0XHRcdFx0XHR2YWx1ZXMgPSBqUXVlcnkubWFrZUFycmF5KCB2YWx1ZSApLFxyXG5cdFx0XHRcdFx0aSA9IG9wdGlvbnMubGVuZ3RoO1xyXG5cclxuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcclxuXHRcdFx0XHRcdG9wdGlvbiA9IG9wdGlvbnNbIGkgXTtcclxuXHJcblx0XHRcdFx0XHRpZiAoIGpRdWVyeS5pbkFycmF5KCBqUXVlcnkudmFsSG9va3Mub3B0aW9uLmdldCggb3B0aW9uICksIHZhbHVlcyApID4gLTEgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRTZcclxuXHRcdFx0XHRcdFx0Ly8gV2hlbiBuZXcgb3B0aW9uIGVsZW1lbnQgaXMgYWRkZWQgdG8gc2VsZWN0IGJveCB3ZSBuZWVkIHRvXHJcblx0XHRcdFx0XHRcdC8vIGZvcmNlIHJlZmxvdyBvZiBuZXdseSBhZGRlZCBub2RlIGluIG9yZGVyIHRvIHdvcmthcm91bmQgZGVsYXlcclxuXHRcdFx0XHRcdFx0Ly8gb2YgaW5pdGlhbGl6YXRpb24gcHJvcGVydGllc1xyXG5cdFx0XHRcdFx0XHR0cnkge1xyXG5cdFx0XHRcdFx0XHRcdG9wdGlvbi5zZWxlY3RlZCA9IG9wdGlvblNldCA9IHRydWU7XHJcblxyXG5cdFx0XHRcdFx0XHR9IGNhdGNoICggXyApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gV2lsbCBiZSBleGVjdXRlZCBvbmx5IGluIElFNlxyXG5cdFx0XHRcdFx0XHRcdG9wdGlvbi5zY3JvbGxIZWlnaHQ7XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRvcHRpb24uc2VsZWN0ZWQgPSBmYWxzZTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIEZvcmNlIGJyb3dzZXJzIHRvIGJlaGF2ZSBjb25zaXN0ZW50bHkgd2hlbiBub24tbWF0Y2hpbmcgdmFsdWUgaXMgc2V0XHJcblx0XHRcdFx0aWYgKCAhb3B0aW9uU2V0ICkge1xyXG5cdFx0XHRcdFx0ZWxlbS5zZWxlY3RlZEluZGV4ID0gLTE7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRyZXR1cm4gb3B0aW9ucztcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH1cclxufSApO1xyXG5cclxuLy8gUmFkaW9zIGFuZCBjaGVja2JveGVzIGdldHRlci9zZXR0ZXJcclxualF1ZXJ5LmVhY2goIFsgXCJyYWRpb1wiLCBcImNoZWNrYm94XCIgXSwgZnVuY3Rpb24oKSB7XHJcblx0alF1ZXJ5LnZhbEhvb2tzWyB0aGlzIF0gPSB7XHJcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcclxuXHRcdFx0aWYgKCBqUXVlcnkuaXNBcnJheSggdmFsdWUgKSApIHtcclxuXHRcdFx0XHRyZXR1cm4gKCBlbGVtLmNoZWNrZWQgPSBqUXVlcnkuaW5BcnJheSggalF1ZXJ5KCBlbGVtICkudmFsKCksIHZhbHVlICkgPiAtMSApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fTtcclxuXHRpZiAoICFzdXBwb3J0LmNoZWNrT24gKSB7XHJcblx0XHRqUXVlcnkudmFsSG9va3NbIHRoaXMgXS5nZXQgPSBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCBcInZhbHVlXCIgKSA9PT0gbnVsbCA/IFwib25cIiA6IGVsZW0udmFsdWU7XHJcblx0XHR9O1xyXG5cdH1cclxufSApO1xyXG5cclxuXHJcblxyXG5cclxudmFyIG5vZGVIb29rLCBib29sSG9vayxcclxuXHRhdHRySGFuZGxlID0galF1ZXJ5LmV4cHIuYXR0ckhhbmRsZSxcclxuXHRydXNlRGVmYXVsdCA9IC9eKD86Y2hlY2tlZHxzZWxlY3RlZCkkL2ksXHJcblx0Z2V0U2V0QXR0cmlidXRlID0gc3VwcG9ydC5nZXRTZXRBdHRyaWJ1dGUsXHJcblx0Z2V0U2V0SW5wdXQgPSBzdXBwb3J0LmlucHV0O1xyXG5cclxualF1ZXJ5LmZuLmV4dGVuZCgge1xyXG5cdGF0dHI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcclxuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGpRdWVyeS5hdHRyLCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcclxuXHR9LFxyXG5cclxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggbmFtZSApIHtcclxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggdGhpcywgbmFtZSApO1xyXG5cdFx0fSApO1xyXG5cdH1cclxufSApO1xyXG5cclxualF1ZXJ5LmV4dGVuZCgge1xyXG5cdGF0dHI6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcclxuXHRcdHZhciByZXQsIGhvb2tzLFxyXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XHJcblxyXG5cdFx0Ly8gRG9uJ3QgZ2V0L3NldCBhdHRyaWJ1dGVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xyXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEZhbGxiYWNrIHRvIHByb3Agd2hlbiBhdHRyaWJ1dGVzIGFyZSBub3Qgc3VwcG9ydGVkXHJcblx0XHRpZiAoIHR5cGVvZiBlbGVtLmdldEF0dHJpYnV0ZSA9PT0gXCJ1bmRlZmluZWRcIiApIHtcclxuXHRcdFx0cmV0dXJuIGpRdWVyeS5wcm9wKCBlbGVtLCBuYW1lLCB2YWx1ZSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEFsbCBhdHRyaWJ1dGVzIGFyZSBsb3dlcmNhc2VcclxuXHRcdC8vIEdyYWIgbmVjZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRlZmluZWRcclxuXHRcdGlmICggblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xyXG5cdFx0XHRuYW1lID0gbmFtZS50b0xvd2VyQ2FzZSgpO1xyXG5cdFx0XHRob29rcyA9IGpRdWVyeS5hdHRySG9va3NbIG5hbWUgXSB8fFxyXG5cdFx0XHRcdCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC50ZXN0KCBuYW1lICkgPyBib29sSG9vayA6IG5vZGVIb29rICk7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xyXG5cdFx0XHRpZiAoIHZhbHVlID09PSBudWxsICkge1xyXG5cdFx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XHJcblx0XHRcdFx0cmV0dXJuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcclxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSApICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdFx0cmV0dXJuIHJldDtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIHZhbHVlICsgXCJcIiApO1xyXG5cdFx0XHRyZXR1cm4gdmFsdWU7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcclxuXHRcdFx0cmV0dXJuIHJldDtcclxuXHRcdH1cclxuXHJcblx0XHRyZXQgPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBuYW1lICk7XHJcblxyXG5cdFx0Ly8gTm9uLWV4aXN0ZW50IGF0dHJpYnV0ZXMgcmV0dXJuIG51bGwsIHdlIG5vcm1hbGl6ZSB0byB1bmRlZmluZWRcclxuXHRcdHJldHVybiByZXQgPT0gbnVsbCA/IHVuZGVmaW5lZCA6IHJldDtcclxuXHR9LFxyXG5cclxuXHRhdHRySG9va3M6IHtcclxuXHRcdHR5cGU6IHtcclxuXHRcdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XHJcblx0XHRcdFx0aWYgKCAhc3VwcG9ydC5yYWRpb1ZhbHVlICYmIHZhbHVlID09PSBcInJhZGlvXCIgJiZcclxuXHRcdFx0XHRcdGpRdWVyeS5ub2RlTmFtZSggZWxlbSwgXCJpbnB1dFwiICkgKSB7XHJcblxyXG5cdFx0XHRcdFx0Ly8gU2V0dGluZyB0aGUgdHlwZSBvbiBhIHJhZGlvIGJ1dHRvbiBhZnRlciB0aGUgdmFsdWUgcmVzZXRzIHRoZSB2YWx1ZSBpbiBJRTgtOVxyXG5cdFx0XHRcdFx0Ly8gUmVzZXQgdmFsdWUgdG8gZGVmYXVsdCBpbiBjYXNlIHR5cGUgaXMgc2V0IGFmdGVyIHZhbHVlIGR1cmluZyBjcmVhdGlvblxyXG5cdFx0XHRcdFx0dmFyIHZhbCA9IGVsZW0udmFsdWU7XHJcblx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJ0eXBlXCIsIHZhbHVlICk7XHJcblx0XHRcdFx0XHRpZiAoIHZhbCApIHtcclxuXHRcdFx0XHRcdFx0ZWxlbS52YWx1ZSA9IHZhbDtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9LFxyXG5cclxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XHJcblx0XHR2YXIgbmFtZSwgcHJvcE5hbWUsXHJcblx0XHRcdGkgPSAwLFxyXG5cdFx0XHRhdHRyTmFtZXMgPSB2YWx1ZSAmJiB2YWx1ZS5tYXRjaCggcm5vdHdoaXRlICk7XHJcblxyXG5cdFx0aWYgKCBhdHRyTmFtZXMgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcclxuXHRcdFx0d2hpbGUgKCAoIG5hbWUgPSBhdHRyTmFtZXNbIGkrKyBdICkgKSB7XHJcblx0XHRcdFx0cHJvcE5hbWUgPSBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWU7XHJcblxyXG5cdFx0XHRcdC8vIEJvb2xlYW4gYXR0cmlidXRlcyBnZXQgc3BlY2lhbCB0cmVhdG1lbnQgKCMxMDg3MClcclxuXHRcdFx0XHRpZiAoIGpRdWVyeS5leHByLm1hdGNoLmJvb2wudGVzdCggbmFtZSApICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIFNldCBjb3JyZXNwb25kaW5nIHByb3BlcnR5IHRvIGZhbHNlXHJcblx0XHRcdFx0XHRpZiAoIGdldFNldElucHV0ICYmIGdldFNldEF0dHJpYnV0ZSB8fCAhcnVzZURlZmF1bHQudGVzdCggbmFtZSApICkge1xyXG5cdFx0XHRcdFx0XHRlbGVtWyBwcm9wTmFtZSBdID0gZmFsc2U7XHJcblxyXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8OVxyXG5cdFx0XHRcdFx0Ly8gQWxzbyBjbGVhciBkZWZhdWx0Q2hlY2tlZC9kZWZhdWx0U2VsZWN0ZWQgKGlmIGFwcHJvcHJpYXRlKVxyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0ZWxlbVsgalF1ZXJ5LmNhbWVsQ2FzZSggXCJkZWZhdWx0LVwiICsgbmFtZSApIF0gPVxyXG5cdFx0XHRcdFx0XHRcdGVsZW1bIHByb3BOYW1lIF0gPSBmYWxzZTtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gU2VlICM5Njk5IGZvciBleHBsYW5hdGlvbiBvZiB0aGlzIGFwcHJvYWNoIChzZXR0aW5nIGZpcnN0LCB0aGVuIHJlbW92YWwpXHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdGpRdWVyeS5hdHRyKCBlbGVtLCBuYW1lLCBcIlwiICk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggZ2V0U2V0QXR0cmlidXRlID8gbmFtZSA6IHByb3BOYW1lICk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcbn0gKTtcclxuXHJcbi8vIEhvb2tzIGZvciBib29sZWFuIGF0dHJpYnV0ZXNcclxuYm9vbEhvb2sgPSB7XHJcblx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XHJcblx0XHRpZiAoIHZhbHVlID09PSBmYWxzZSApIHtcclxuXHJcblx0XHRcdC8vIFJlbW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2VcclxuXHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcclxuXHRcdH0gZWxzZSBpZiAoIGdldFNldElucHV0ICYmIGdldFNldEF0dHJpYnV0ZSB8fCAhcnVzZURlZmF1bHQudGVzdCggbmFtZSApICkge1xyXG5cclxuXHRcdFx0Ly8gSUU8OCBuZWVkcyB0aGUgKnByb3BlcnR5KiBuYW1lXHJcblx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCAhZ2V0U2V0QXR0cmlidXRlICYmIGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZSwgbmFtZSApO1xyXG5cclxuXHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHQvLyBTdXBwb3J0OiBJRTw5XHJcblx0XHRcdC8vIFVzZSBkZWZhdWx0Q2hlY2tlZCBhbmQgZGVmYXVsdFNlbGVjdGVkIGZvciBvbGRJRVxyXG5cdFx0XHRlbGVtWyBqUXVlcnkuY2FtZWxDYXNlKCBcImRlZmF1bHQtXCIgKyBuYW1lICkgXSA9IGVsZW1bIG5hbWUgXSA9IHRydWU7XHJcblx0XHR9XHJcblx0XHRyZXR1cm4gbmFtZTtcclxuXHR9XHJcbn07XHJcblxyXG5qUXVlcnkuZWFjaCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goIC9cXHcrL2cgKSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XHJcblx0dmFyIGdldHRlciA9IGF0dHJIYW5kbGVbIG5hbWUgXSB8fCBqUXVlcnkuZmluZC5hdHRyO1xyXG5cclxuXHRpZiAoIGdldFNldElucHV0ICYmIGdldFNldEF0dHJpYnV0ZSB8fCAhcnVzZURlZmF1bHQudGVzdCggbmFtZSApICkge1xyXG5cdFx0YXR0ckhhbmRsZVsgbmFtZSBdID0gZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xyXG5cdFx0XHR2YXIgcmV0LCBoYW5kbGU7XHJcblx0XHRcdGlmICggIWlzWE1MICkge1xyXG5cclxuXHRcdFx0XHQvLyBBdm9pZCBhbiBpbmZpbml0ZSBsb29wIGJ5IHRlbXBvcmFyaWx5IHJlbW92aW5nIHRoaXMgZnVuY3Rpb24gZnJvbSB0aGUgZ2V0dGVyXHJcblx0XHRcdFx0aGFuZGxlID0gYXR0ckhhbmRsZVsgbmFtZSBdO1xyXG5cdFx0XHRcdGF0dHJIYW5kbGVbIG5hbWUgXSA9IHJldDtcclxuXHRcdFx0XHRyZXQgPSBnZXR0ZXIoIGVsZW0sIG5hbWUsIGlzWE1MICkgIT0gbnVsbCA/XHJcblx0XHRcdFx0XHRuYW1lLnRvTG93ZXJDYXNlKCkgOlxyXG5cdFx0XHRcdFx0bnVsbDtcclxuXHRcdFx0XHRhdHRySGFuZGxlWyBuYW1lIF0gPSBoYW5kbGU7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHJldDtcclxuXHRcdH07XHJcblx0fSBlbHNlIHtcclxuXHRcdGF0dHJIYW5kbGVbIG5hbWUgXSA9IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBpc1hNTCApIHtcclxuXHRcdFx0aWYgKCAhaXNYTUwgKSB7XHJcblx0XHRcdFx0cmV0dXJuIGVsZW1bIGpRdWVyeS5jYW1lbENhc2UoIFwiZGVmYXVsdC1cIiArIG5hbWUgKSBdID9cclxuXHRcdFx0XHRcdG5hbWUudG9Mb3dlckNhc2UoKSA6XHJcblx0XHRcdFx0XHRudWxsO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH1cclxufSApO1xyXG5cclxuLy8gZml4IG9sZElFIGF0dHJvcGVydGllc1xyXG5pZiAoICFnZXRTZXRJbnB1dCB8fCAhZ2V0U2V0QXR0cmlidXRlICkge1xyXG5cdGpRdWVyeS5hdHRySG9va3MudmFsdWUgPSB7XHJcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSwgbmFtZSApIHtcclxuXHRcdFx0aWYgKCBqUXVlcnkubm9kZU5hbWUoIGVsZW0sIFwiaW5wdXRcIiApICkge1xyXG5cclxuXHRcdFx0XHQvLyBEb2VzIG5vdCByZXR1cm4gc28gdGhhdCBzZXRBdHRyaWJ1dGUgaXMgYWxzbyB1c2VkXHJcblx0XHRcdFx0ZWxlbS5kZWZhdWx0VmFsdWUgPSB2YWx1ZTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHJcblx0XHRcdFx0Ly8gVXNlIG5vZGVIb29rIGlmIGRlZmluZWQgKCMxOTU0KTsgb3RoZXJ3aXNlIHNldEF0dHJpYnV0ZSBpcyBmaW5lXHJcblx0XHRcdFx0cmV0dXJuIG5vZGVIb29rICYmIG5vZGVIb29rLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcbn1cclxuXHJcbi8vIElFNi83IGRvIG5vdCBzdXBwb3J0IGdldHRpbmcvc2V0dGluZyBzb21lIGF0dHJpYnV0ZXMgd2l0aCBnZXQvc2V0QXR0cmlidXRlXHJcbmlmICggIWdldFNldEF0dHJpYnV0ZSApIHtcclxuXHJcblx0Ly8gVXNlIHRoaXMgZm9yIGFueSBhdHRyaWJ1dGUgaW4gSUU2LzdcclxuXHQvLyBUaGlzIGZpeGVzIGFsbW9zdCBldmVyeSBJRTYvNyBpc3N1ZVxyXG5cdG5vZGVIb29rID0ge1xyXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XHJcblxyXG5cdFx0XHQvLyBTZXQgdGhlIGV4aXN0aW5nIG9yIGNyZWF0ZSBhIG5ldyBhdHRyaWJ1dGUgbm9kZVxyXG5cdFx0XHR2YXIgcmV0ID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICk7XHJcblx0XHRcdGlmICggIXJldCApIHtcclxuXHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZU5vZGUoXHJcblx0XHRcdFx0XHQoIHJldCA9IGVsZW0ub3duZXJEb2N1bWVudC5jcmVhdGVBdHRyaWJ1dGUoIG5hbWUgKSApXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0cmV0LnZhbHVlID0gdmFsdWUgKz0gXCJcIjtcclxuXHJcblx0XHRcdC8vIEJyZWFrIGFzc29jaWF0aW9uIHdpdGggY2xvbmVkIGVsZW1lbnRzIGJ5IGFsc28gdXNpbmcgc2V0QXR0cmlidXRlICgjOTY0NilcclxuXHRcdFx0aWYgKCBuYW1lID09PSBcInZhbHVlXCIgfHwgdmFsdWUgPT09IGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICkgKSB7XHJcblx0XHRcdFx0cmV0dXJuIHZhbHVlO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0Ly8gU29tZSBhdHRyaWJ1dGVzIGFyZSBjb25zdHJ1Y3RlZCB3aXRoIGVtcHR5LXN0cmluZyB2YWx1ZXMgd2hlbiBub3QgZGVmaW5lZFxyXG5cdGF0dHJIYW5kbGUuaWQgPSBhdHRySGFuZGxlLm5hbWUgPSBhdHRySGFuZGxlLmNvb3JkcyA9XHJcblx0XHRmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XHJcblx0XHRcdHZhciByZXQ7XHJcblx0XHRcdGlmICggIWlzWE1MICkge1xyXG5cdFx0XHRcdHJldHVybiAoIHJldCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZSggbmFtZSApICkgJiYgcmV0LnZhbHVlICE9PSBcIlwiID9cclxuXHRcdFx0XHRcdHJldC52YWx1ZSA6XHJcblx0XHRcdFx0XHRudWxsO1xyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cclxuXHQvLyBGaXhpbmcgdmFsdWUgcmV0cmlldmFsIG9uIGEgYnV0dG9uIHJlcXVpcmVzIHRoaXMgbW9kdWxlXHJcblx0alF1ZXJ5LnZhbEhvb2tzLmJ1dHRvbiA9IHtcclxuXHRcdGdldDogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XHJcblx0XHRcdHZhciByZXQgPSBlbGVtLmdldEF0dHJpYnV0ZU5vZGUoIG5hbWUgKTtcclxuXHRcdFx0aWYgKCByZXQgJiYgcmV0LnNwZWNpZmllZCApIHtcclxuXHRcdFx0XHRyZXR1cm4gcmV0LnZhbHVlO1xyXG5cdFx0XHR9XHJcblx0XHR9LFxyXG5cdFx0c2V0OiBub2RlSG9vay5zZXRcclxuXHR9O1xyXG5cclxuXHQvLyBTZXQgY29udGVudGVkaXRhYmxlIHRvIGZhbHNlIG9uIHJlbW92YWxzKCMxMDQyOSlcclxuXHQvLyBTZXR0aW5nIHRvIGVtcHR5IHN0cmluZyB0aHJvd3MgYW4gZXJyb3IgYXMgYW4gaW52YWxpZCB2YWx1ZVxyXG5cdGpRdWVyeS5hdHRySG9va3MuY29udGVudGVkaXRhYmxlID0ge1xyXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XHJcblx0XHRcdG5vZGVIb29rLnNldCggZWxlbSwgdmFsdWUgPT09IFwiXCIgPyBmYWxzZSA6IHZhbHVlLCBuYW1lICk7XHJcblx0XHR9XHJcblx0fTtcclxuXHJcblx0Ly8gU2V0IHdpZHRoIGFuZCBoZWlnaHQgdG8gYXV0byBpbnN0ZWFkIG9mIDAgb24gZW1wdHkgc3RyaW5nKCBCdWcgIzgxNTAgKVxyXG5cdC8vIFRoaXMgaXMgZm9yIHJlbW92YWxzXHJcblx0alF1ZXJ5LmVhY2goIFsgXCJ3aWR0aFwiLCBcImhlaWdodFwiIF0sIGZ1bmN0aW9uKCBpLCBuYW1lICkge1xyXG5cdFx0alF1ZXJ5LmF0dHJIb29rc1sgbmFtZSBdID0ge1xyXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcclxuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBcIlwiICkge1xyXG5cdFx0XHRcdFx0ZWxlbS5zZXRBdHRyaWJ1dGUoIG5hbWUsIFwiYXV0b1wiICk7XHJcblx0XHRcdFx0XHRyZXR1cm4gdmFsdWU7XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdH0gKTtcclxufVxyXG5cclxuaWYgKCAhc3VwcG9ydC5zdHlsZSApIHtcclxuXHRqUXVlcnkuYXR0ckhvb2tzLnN0eWxlID0ge1xyXG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHJcblx0XHRcdC8vIFJldHVybiB1bmRlZmluZWQgaW4gdGhlIGNhc2Ugb2YgZW1wdHkgc3RyaW5nXHJcblx0XHRcdC8vIE5vdGU6IElFIHVwcGVyY2FzZXMgY3NzIHByb3BlcnR5IG5hbWVzLCBidXQgaWYgd2Ugd2VyZSB0byAudG9Mb3dlckNhc2UoKVxyXG5cdFx0XHQvLyAuY3NzVGV4dCwgdGhhdCB3b3VsZCBkZXN0cm95IGNhc2Ugc2Vuc2l0aXZpdHkgaW4gVVJMJ3MsIGxpa2UgaW4gXCJiYWNrZ3JvdW5kXCJcclxuXHRcdFx0cmV0dXJuIGVsZW0uc3R5bGUuY3NzVGV4dCB8fCB1bmRlZmluZWQ7XHJcblx0XHR9LFxyXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XHJcblx0XHRcdHJldHVybiAoIGVsZW0uc3R5bGUuY3NzVGV4dCA9IHZhbHVlICsgXCJcIiApO1xyXG5cdFx0fVxyXG5cdH07XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbnZhciByZm9jdXNhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9ufG9iamVjdCkkL2ksXHJcblx0cmNsaWNrYWJsZSA9IC9eKD86YXxhcmVhKSQvaTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRwcm9wOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XHJcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkucHJvcCwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XHJcblx0fSxcclxuXHJcblx0cmVtb3ZlUHJvcDogZnVuY3Rpb24oIG5hbWUgKSB7XHJcblx0XHRuYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lO1xyXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XHJcblxyXG5cdFx0XHQvLyB0cnkvY2F0Y2ggaGFuZGxlcyBjYXNlcyB3aGVyZSBJRSBiYWxrcyAoc3VjaCBhcyByZW1vdmluZyBhIHByb3BlcnR5IG9uIHdpbmRvdylcclxuXHRcdFx0dHJ5IHtcclxuXHRcdFx0XHR0aGlzWyBuYW1lIF0gPSB1bmRlZmluZWQ7XHJcblx0XHRcdFx0ZGVsZXRlIHRoaXNbIG5hbWUgXTtcclxuXHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxyXG5cdFx0fSApO1xyXG5cdH1cclxufSApO1xyXG5cclxualF1ZXJ5LmV4dGVuZCgge1xyXG5cdHByb3A6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcclxuXHRcdHZhciByZXQsIGhvb2tzLFxyXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XHJcblxyXG5cdFx0Ly8gRG9uJ3QgZ2V0L3NldCBwcm9wZXJ0aWVzIG9uIHRleHQsIGNvbW1lbnQgYW5kIGF0dHJpYnV0ZSBub2Rlc1xyXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggblR5cGUgIT09IDEgfHwgIWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xyXG5cclxuXHRcdFx0Ly8gRml4IG5hbWUgYW5kIGF0dGFjaCBob29rc1xyXG5cdFx0XHRuYW1lID0galF1ZXJ5LnByb3BGaXhbIG5hbWUgXSB8fCBuYW1lO1xyXG5cdFx0XHRob29rcyA9IGpRdWVyeS5wcm9wSG9va3NbIG5hbWUgXTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAoIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdGlmICggaG9va3MgJiYgXCJzZXRcIiBpbiBob29rcyAmJlxyXG5cdFx0XHRcdCggcmV0ID0gaG9va3Muc2V0KCBlbGVtLCB2YWx1ZSwgbmFtZSApICkgIT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0XHRyZXR1cm4gcmV0O1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRyZXR1cm4gKCBlbGVtWyBuYW1lIF0gPSB2YWx1ZSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyAmJiAoIHJldCA9IGhvb2tzLmdldCggZWxlbSwgbmFtZSApICkgIT09IG51bGwgKSB7XHJcblx0XHRcdHJldHVybiByZXQ7XHJcblx0XHR9XHJcblxyXG5cdFx0cmV0dXJuIGVsZW1bIG5hbWUgXTtcclxuXHR9LFxyXG5cclxuXHRwcm9wSG9va3M6IHtcclxuXHRcdHRhYkluZGV4OiB7XHJcblx0XHRcdGdldDogZnVuY3Rpb24oIGVsZW0gKSB7XHJcblxyXG5cdFx0XHRcdC8vIGVsZW0udGFiSW5kZXggZG9lc24ndCBhbHdheXMgcmV0dXJuIHRoZVxyXG5cdFx0XHRcdC8vIGNvcnJlY3QgdmFsdWUgd2hlbiBpdCBoYXNuJ3QgYmVlbiBleHBsaWNpdGx5IHNldFxyXG5cdFx0XHRcdC8vIGh0dHA6Ly9mbHVpZHByb2plY3Qub3JnL2Jsb2cvMjAwOC8wMS8wOS9nZXR0aW5nLXNldHRpbmctYW5kLXJlbW92aW5nLXRhYmluZGV4LXZhbHVlcy13aXRoLWphdmFzY3JpcHQvXHJcblx0XHRcdFx0Ly8gVXNlIHByb3BlciBhdHRyaWJ1dGUgcmV0cmlldmFsKCMxMjA3MilcclxuXHRcdFx0XHR2YXIgdGFiaW5kZXggPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBcInRhYmluZGV4XCIgKTtcclxuXHJcblx0XHRcdFx0cmV0dXJuIHRhYmluZGV4ID9cclxuXHRcdFx0XHRcdHBhcnNlSW50KCB0YWJpbmRleCwgMTAgKSA6XHJcblx0XHRcdFx0XHRyZm9jdXNhYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSB8fFxyXG5cdFx0XHRcdFx0XHRyY2xpY2thYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSAmJiBlbGVtLmhyZWYgP1xyXG5cdFx0XHRcdFx0XHRcdDAgOlxyXG5cdFx0XHRcdFx0XHRcdC0xO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fSxcclxuXHJcblx0cHJvcEZpeDoge1xyXG5cdFx0XCJmb3JcIjogXCJodG1sRm9yXCIsXHJcblx0XHRcImNsYXNzXCI6IFwiY2xhc3NOYW1lXCJcclxuXHR9XHJcbn0gKTtcclxuXHJcbi8vIFNvbWUgYXR0cmlidXRlcyByZXF1aXJlIGEgc3BlY2lhbCBjYWxsIG9uIElFXHJcbi8vIGh0dHA6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9tczUzNjQyOSUyOFZTLjg1JTI5LmFzcHhcclxuaWYgKCAhc3VwcG9ydC5ocmVmTm9ybWFsaXplZCApIHtcclxuXHJcblx0Ly8gaHJlZi9zcmMgcHJvcGVydHkgc2hvdWxkIGdldCB0aGUgZnVsbCBub3JtYWxpemVkIFVSTCAoIzEwMjk5LyMxMjkxNSlcclxuXHRqUXVlcnkuZWFjaCggWyBcImhyZWZcIiwgXCJzcmNcIiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHtcclxuXHRcdGpRdWVyeS5wcm9wSG9va3NbIG5hbWUgXSA9IHtcclxuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0XHRyZXR1cm4gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUsIDQgKTtcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHR9ICk7XHJcbn1cclxuXHJcbi8vIFN1cHBvcnQ6IFNhZmFyaSwgSUU5K1xyXG4vLyBBY2Nlc3NpbmcgdGhlIHNlbGVjdGVkSW5kZXggcHJvcGVydHlcclxuLy8gZm9yY2VzIHRoZSBicm93c2VyIHRvIHJlc3BlY3Qgc2V0dGluZyBzZWxlY3RlZFxyXG4vLyBvbiB0aGUgb3B0aW9uXHJcbi8vIFRoZSBnZXR0ZXIgZW5zdXJlcyBhIGRlZmF1bHQgb3B0aW9uIGlzIHNlbGVjdGVkXHJcbi8vIHdoZW4gaW4gYW4gb3B0Z3JvdXBcclxuaWYgKCAhc3VwcG9ydC5vcHRTZWxlY3RlZCApIHtcclxuXHRqUXVlcnkucHJvcEhvb2tzLnNlbGVjdGVkID0ge1xyXG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcclxuXHJcblx0XHRcdGlmICggcGFyZW50ICkge1xyXG5cdFx0XHRcdHBhcmVudC5zZWxlY3RlZEluZGV4O1xyXG5cclxuXHRcdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCBpdCBhbHNvIHdvcmtzIHdpdGggb3B0Z3JvdXBzLCBzZWUgIzU3MDFcclxuXHRcdFx0XHRpZiAoIHBhcmVudC5wYXJlbnROb2RlICkge1xyXG5cdFx0XHRcdFx0cGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIG51bGw7XHJcblx0XHR9LFxyXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRcdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcclxuXHRcdFx0aWYgKCBwYXJlbnQgKSB7XHJcblx0XHRcdFx0cGFyZW50LnNlbGVjdGVkSW5kZXg7XHJcblxyXG5cdFx0XHRcdGlmICggcGFyZW50LnBhcmVudE5vZGUgKSB7XHJcblx0XHRcdFx0XHRwYXJlbnQucGFyZW50Tm9kZS5zZWxlY3RlZEluZGV4O1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcbn1cclxuXHJcbmpRdWVyeS5lYWNoKCBbXHJcblx0XCJ0YWJJbmRleFwiLFxyXG5cdFwicmVhZE9ubHlcIixcclxuXHRcIm1heExlbmd0aFwiLFxyXG5cdFwiY2VsbFNwYWNpbmdcIixcclxuXHRcImNlbGxQYWRkaW5nXCIsXHJcblx0XCJyb3dTcGFuXCIsXHJcblx0XCJjb2xTcGFuXCIsXHJcblx0XCJ1c2VNYXBcIixcclxuXHRcImZyYW1lQm9yZGVyXCIsXHJcblx0XCJjb250ZW50RWRpdGFibGVcIlxyXG5dLCBmdW5jdGlvbigpIHtcclxuXHRqUXVlcnkucHJvcEZpeFsgdGhpcy50b0xvd2VyQ2FzZSgpIF0gPSB0aGlzO1xyXG59ICk7XHJcblxyXG4vLyBJRTYvNyBjYWxsIGVuY3R5cGUgZW5jb2RpbmdcclxuaWYgKCAhc3VwcG9ydC5lbmN0eXBlICkge1xyXG5cdGpRdWVyeS5wcm9wRml4LmVuY3R5cGUgPSBcImVuY29kaW5nXCI7XHJcbn1cclxuXHJcblxyXG5cclxuXHJcbnZhciByY2xhc3MgPSAvW1xcdFxcclxcblxcZl0vZztcclxuXHJcbmZ1bmN0aW9uIGdldENsYXNzKCBlbGVtICkge1xyXG5cdHJldHVybiBqUXVlcnkuYXR0ciggZWxlbSwgXCJjbGFzc1wiICkgfHwgXCJcIjtcclxufVxyXG5cclxualF1ZXJ5LmZuLmV4dGVuZCgge1xyXG5cdGFkZENsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHR2YXIgY2xhc3NlcywgZWxlbSwgY3VyLCBjdXJWYWx1ZSwgY2xhenosIGosIGZpbmFsVmFsdWUsXHJcblx0XHRcdGkgPSAwO1xyXG5cclxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xyXG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLmFkZENsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcclxuXHRcdFx0fSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmIHZhbHVlICkge1xyXG5cdFx0XHRjbGFzc2VzID0gdmFsdWUubWF0Y2goIHJub3R3aGl0ZSApIHx8IFtdO1xyXG5cclxuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xyXG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcclxuXHRcdFx0XHRjdXIgPSBlbGVtLm5vZGVUeXBlID09PSAxICYmXHJcblx0XHRcdFx0XHQoIFwiIFwiICsgY3VyVmFsdWUgKyBcIiBcIiApLnJlcGxhY2UoIHJjbGFzcywgXCIgXCIgKTtcclxuXHJcblx0XHRcdFx0aWYgKCBjdXIgKSB7XHJcblx0XHRcdFx0XHRqID0gMDtcclxuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XHJcblx0XHRcdFx0XHRcdGlmICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApIDwgMCApIHtcclxuXHRcdFx0XHRcdFx0XHRjdXIgKz0gY2xhenogKyBcIiBcIjtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdC8vIG9ubHkgYXNzaWduIGlmIGRpZmZlcmVudCB0byBhdm9pZCB1bm5lZWRlZCByZW5kZXJpbmcuXHJcblx0XHRcdFx0XHRmaW5hbFZhbHVlID0galF1ZXJ5LnRyaW0oIGN1ciApO1xyXG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcclxuXHRcdFx0XHRcdFx0alF1ZXJ5LmF0dHIoIGVsZW0sIFwiY2xhc3NcIiwgZmluYWxWYWx1ZSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzO1xyXG5cdH0sXHJcblxyXG5cdHJlbW92ZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUgKSB7XHJcblx0XHR2YXIgY2xhc3NlcywgZWxlbSwgY3VyLCBjdXJWYWx1ZSwgY2xhenosIGosIGZpbmFsVmFsdWUsXHJcblx0XHRcdGkgPSAwO1xyXG5cclxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xyXG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnJlbW92ZUNsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcclxuXHRcdFx0fSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggIWFyZ3VtZW50cy5sZW5ndGggKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmF0dHIoIFwiY2xhc3NcIiwgXCJcIiApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICYmIHZhbHVlICkge1xyXG5cdFx0XHRjbGFzc2VzID0gdmFsdWUubWF0Y2goIHJub3R3aGl0ZSApIHx8IFtdO1xyXG5cclxuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xyXG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcclxuXHJcblx0XHRcdFx0Ly8gVGhpcyBleHByZXNzaW9uIGlzIGhlcmUgZm9yIGJldHRlciBjb21wcmVzc2liaWxpdHkgKHNlZSBhZGRDbGFzcylcclxuXHRcdFx0XHRjdXIgPSBlbGVtLm5vZGVUeXBlID09PSAxICYmXHJcblx0XHRcdFx0XHQoIFwiIFwiICsgY3VyVmFsdWUgKyBcIiBcIiApLnJlcGxhY2UoIHJjbGFzcywgXCIgXCIgKTtcclxuXHJcblx0XHRcdFx0aWYgKCBjdXIgKSB7XHJcblx0XHRcdFx0XHRqID0gMDtcclxuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBSZW1vdmUgKmFsbCogaW5zdGFuY2VzXHJcblx0XHRcdFx0XHRcdHdoaWxlICggY3VyLmluZGV4T2YoIFwiIFwiICsgY2xhenogKyBcIiBcIiApID4gLTEgKSB7XHJcblx0XHRcdFx0XHRcdFx0Y3VyID0gY3VyLnJlcGxhY2UoIFwiIFwiICsgY2xhenogKyBcIiBcIiwgXCIgXCIgKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdC8vIE9ubHkgYXNzaWduIGlmIGRpZmZlcmVudCB0byBhdm9pZCB1bm5lZWRlZCByZW5kZXJpbmcuXHJcblx0XHRcdFx0XHRmaW5hbFZhbHVlID0galF1ZXJ5LnRyaW0oIGN1ciApO1xyXG5cdFx0XHRcdFx0aWYgKCBjdXJWYWx1ZSAhPT0gZmluYWxWYWx1ZSApIHtcclxuXHRcdFx0XHRcdFx0alF1ZXJ5LmF0dHIoIGVsZW0sIFwiY2xhc3NcIiwgZmluYWxWYWx1ZSApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzO1xyXG5cdH0sXHJcblxyXG5cdHRvZ2dsZUNsYXNzOiBmdW5jdGlvbiggdmFsdWUsIHN0YXRlVmFsICkge1xyXG5cdFx0dmFyIHR5cGUgPSB0eXBlb2YgdmFsdWU7XHJcblxyXG5cdFx0aWYgKCB0eXBlb2Ygc3RhdGVWYWwgPT09IFwiYm9vbGVhblwiICYmIHR5cGUgPT09IFwic3RyaW5nXCIgKSB7XHJcblx0XHRcdHJldHVybiBzdGF0ZVZhbCA/IHRoaXMuYWRkQ2xhc3MoIHZhbHVlICkgOiB0aGlzLnJlbW92ZUNsYXNzKCB2YWx1ZSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHZhbHVlICkgKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xyXG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnRvZ2dsZUNsYXNzKFxyXG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggdGhpcywgaSwgZ2V0Q2xhc3MoIHRoaXMgKSwgc3RhdGVWYWwgKSxcclxuXHRcdFx0XHRcdHN0YXRlVmFsXHJcblx0XHRcdFx0KTtcclxuXHRcdFx0fSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgY2xhc3NOYW1lLCBpLCBzZWxmLCBjbGFzc05hbWVzO1xyXG5cclxuXHRcdFx0aWYgKCB0eXBlID09PSBcInN0cmluZ1wiICkge1xyXG5cclxuXHRcdFx0XHQvLyBUb2dnbGUgaW5kaXZpZHVhbCBjbGFzcyBuYW1lc1xyXG5cdFx0XHRcdGkgPSAwO1xyXG5cdFx0XHRcdHNlbGYgPSBqUXVlcnkoIHRoaXMgKTtcclxuXHRcdFx0XHRjbGFzc05hbWVzID0gdmFsdWUubWF0Y2goIHJub3R3aGl0ZSApIHx8IFtdO1xyXG5cclxuXHRcdFx0XHR3aGlsZSAoICggY2xhc3NOYW1lID0gY2xhc3NOYW1lc1sgaSsrIF0gKSApIHtcclxuXHJcblx0XHRcdFx0XHQvLyBDaGVjayBlYWNoIGNsYXNzTmFtZSBnaXZlbiwgc3BhY2Ugc2VwYXJhdGVkIGxpc3RcclxuXHRcdFx0XHRcdGlmICggc2VsZi5oYXNDbGFzcyggY2xhc3NOYW1lICkgKSB7XHJcblx0XHRcdFx0XHRcdHNlbGYucmVtb3ZlQ2xhc3MoIGNsYXNzTmFtZSApO1xyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0c2VsZi5hZGRDbGFzcyggY2xhc3NOYW1lICk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gVG9nZ2xlIHdob2xlIGNsYXNzIG5hbWVcclxuXHRcdFx0fSBlbHNlIGlmICggdmFsdWUgPT09IHVuZGVmaW5lZCB8fCB0eXBlID09PSBcImJvb2xlYW5cIiApIHtcclxuXHRcdFx0XHRjbGFzc05hbWUgPSBnZXRDbGFzcyggdGhpcyApO1xyXG5cdFx0XHRcdGlmICggY2xhc3NOYW1lICkge1xyXG5cclxuXHRcdFx0XHRcdC8vIHN0b3JlIGNsYXNzTmFtZSBpZiBzZXRcclxuXHRcdFx0XHRcdGpRdWVyeS5fZGF0YSggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIsIGNsYXNzTmFtZSApO1xyXG5cdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0Ly8gSWYgdGhlIGVsZW1lbnQgaGFzIGEgY2xhc3MgbmFtZSBvciBpZiB3ZSdyZSBwYXNzZWQgXCJmYWxzZVwiLFxyXG5cdFx0XHRcdC8vIHRoZW4gcmVtb3ZlIHRoZSB3aG9sZSBjbGFzc25hbWUgKGlmIHRoZXJlIHdhcyBvbmUsIHRoZSBhYm92ZSBzYXZlZCBpdCkuXHJcblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGJyaW5nIGJhY2sgd2hhdGV2ZXIgd2FzIHByZXZpb3VzbHkgc2F2ZWQgKGlmIGFueXRoaW5nKSxcclxuXHRcdFx0XHQvLyBmYWxsaW5nIGJhY2sgdG8gdGhlIGVtcHR5IHN0cmluZyBpZiBub3RoaW5nIHdhcyBzdG9yZWQuXHJcblx0XHRcdFx0alF1ZXJ5LmF0dHIoIHRoaXMsIFwiY2xhc3NcIixcclxuXHRcdFx0XHRcdGNsYXNzTmFtZSB8fCB2YWx1ZSA9PT0gZmFsc2UgP1xyXG5cdFx0XHRcdFx0XCJcIiA6XHJcblx0XHRcdFx0XHRqUXVlcnkuX2RhdGEoIHRoaXMsIFwiX19jbGFzc05hbWVfX1wiICkgfHwgXCJcIlxyXG5cdFx0XHRcdCk7XHJcblx0XHRcdH1cclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHRoYXNDbGFzczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xyXG5cdFx0dmFyIGNsYXNzTmFtZSwgZWxlbSxcclxuXHRcdFx0aSA9IDA7XHJcblxyXG5cdFx0Y2xhc3NOYW1lID0gXCIgXCIgKyBzZWxlY3RvciArIFwiIFwiO1xyXG5cdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xyXG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiZcclxuXHRcdFx0XHQoIFwiIFwiICsgZ2V0Q2xhc3MoIGVsZW0gKSArIFwiIFwiICkucmVwbGFjZSggcmNsYXNzLCBcIiBcIiApXHJcblx0XHRcdFx0XHQuaW5kZXhPZiggY2xhc3NOYW1lICkgPiAtMVxyXG5cdFx0XHQpIHtcclxuXHRcdFx0XHRyZXR1cm4gdHJ1ZTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiBmYWxzZTtcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG5cclxuXHJcbi8vIFJldHVybiBqUXVlcnkgZm9yIGF0dHJpYnV0ZXMtb25seSBpbmNsdXNpb25cclxuXHJcblxyXG5qUXVlcnkuZWFjaCggKCBcImJsdXIgZm9jdXMgZm9jdXNpbiBmb2N1c291dCBsb2FkIHJlc2l6ZSBzY3JvbGwgdW5sb2FkIGNsaWNrIGRibGNsaWNrIFwiICtcclxuXHRcIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIFwiICtcclxuXHRcImNoYW5nZSBzZWxlY3Qgc3VibWl0IGtleWRvd24ga2V5cHJlc3Mga2V5dXAgZXJyb3IgY29udGV4dG1lbnVcIiApLnNwbGl0KCBcIiBcIiApLFxyXG5cdGZ1bmN0aW9uKCBpLCBuYW1lICkge1xyXG5cclxuXHQvLyBIYW5kbGUgZXZlbnQgYmluZGluZ1xyXG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIGRhdGEsIGZuICkge1xyXG5cdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cclxuXHRcdFx0dGhpcy5vbiggbmFtZSwgbnVsbCwgZGF0YSwgZm4gKSA6XHJcblx0XHRcdHRoaXMudHJpZ2dlciggbmFtZSApO1xyXG5cdH07XHJcbn0gKTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRob3ZlcjogZnVuY3Rpb24oIGZuT3ZlciwgZm5PdXQgKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5tb3VzZWVudGVyKCBmbk92ZXIgKS5tb3VzZWxlYXZlKCBmbk91dCB8fCBmbk92ZXIgKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG52YXIgbG9jYXRpb24gPSB3aW5kb3cubG9jYXRpb247XHJcblxyXG52YXIgbm9uY2UgPSBqUXVlcnkubm93KCk7XHJcblxyXG52YXIgcnF1ZXJ5ID0gKCAvXFw/LyApO1xyXG5cclxuXHJcblxyXG52YXIgcnZhbGlkdG9rZW5zID0gLygsKXwoXFxbfHspfCh9fF0pfFwiKD86W15cIlxcXFxcXHJcXG5dfFxcXFxbXCJcXFxcXFwvYmZucnRdfFxcXFx1W1xcZGEtZkEtRl17NH0pKlwiXFxzKjo/fHRydWV8ZmFsc2V8bnVsbHwtPyg/ITBcXGQpXFxkKyg/OlxcLlxcZCt8KSg/OltlRV1bKy1dP1xcZCt8KS9nO1xyXG5cclxualF1ZXJ5LnBhcnNlSlNPTiA9IGZ1bmN0aW9uKCBkYXRhICkge1xyXG5cclxuXHQvLyBBdHRlbXB0IHRvIHBhcnNlIHVzaW5nIHRoZSBuYXRpdmUgSlNPTiBwYXJzZXIgZmlyc3RcclxuXHRpZiAoIHdpbmRvdy5KU09OICYmIHdpbmRvdy5KU09OLnBhcnNlICkge1xyXG5cclxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgMi4zXHJcblx0XHQvLyBXb3JrYXJvdW5kIGZhaWx1cmUgdG8gc3RyaW5nLWNhc3QgbnVsbCBpbnB1dFxyXG5cdFx0cmV0dXJuIHdpbmRvdy5KU09OLnBhcnNlKCBkYXRhICsgXCJcIiApO1xyXG5cdH1cclxuXHJcblx0dmFyIHJlcXVpcmVOb25Db21tYSxcclxuXHRcdGRlcHRoID0gbnVsbCxcclxuXHRcdHN0ciA9IGpRdWVyeS50cmltKCBkYXRhICsgXCJcIiApO1xyXG5cclxuXHQvLyBHdWFyZCBhZ2FpbnN0IGludmFsaWQgKGFuZCBwb3NzaWJseSBkYW5nZXJvdXMpIGlucHV0IGJ5IGVuc3VyaW5nIHRoYXQgbm90aGluZyByZW1haW5zXHJcblx0Ly8gYWZ0ZXIgcmVtb3ZpbmcgdmFsaWQgdG9rZW5zXHJcblx0cmV0dXJuIHN0ciAmJiAhalF1ZXJ5LnRyaW0oIHN0ci5yZXBsYWNlKCBydmFsaWR0b2tlbnMsIGZ1bmN0aW9uKCB0b2tlbiwgY29tbWEsIG9wZW4sIGNsb3NlICkge1xyXG5cclxuXHRcdC8vIEZvcmNlIHRlcm1pbmF0aW9uIGlmIHdlIHNlZSBhIG1pc3BsYWNlZCBjb21tYVxyXG5cdFx0aWYgKCByZXF1aXJlTm9uQ29tbWEgJiYgY29tbWEgKSB7XHJcblx0XHRcdGRlcHRoID0gMDtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBQZXJmb3JtIG5vIG1vcmUgcmVwbGFjZW1lbnRzIGFmdGVyIHJldHVybmluZyB0byBvdXRlcm1vc3QgZGVwdGhcclxuXHRcdGlmICggZGVwdGggPT09IDAgKSB7XHJcblx0XHRcdHJldHVybiB0b2tlbjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBDb21tYXMgbXVzdCBub3QgZm9sbG93IFwiW1wiLCBcIntcIiwgb3IgXCIsXCJcclxuXHRcdHJlcXVpcmVOb25Db21tYSA9IG9wZW4gfHwgY29tbWE7XHJcblxyXG5cdFx0Ly8gRGV0ZXJtaW5lIG5ldyBkZXB0aFxyXG5cdFx0Ly8gYXJyYXkvb2JqZWN0IG9wZW4gKFwiW1wiIG9yIFwie1wiKTogZGVwdGggKz0gdHJ1ZSAtIGZhbHNlIChpbmNyZW1lbnQpXHJcblx0XHQvLyBhcnJheS9vYmplY3QgY2xvc2UgKFwiXVwiIG9yIFwifVwiKTogZGVwdGggKz0gZmFsc2UgLSB0cnVlIChkZWNyZW1lbnQpXHJcblx0XHQvLyBvdGhlciBjYXNlcyAoXCIsXCIgb3IgcHJpbWl0aXZlKTogZGVwdGggKz0gdHJ1ZSAtIHRydWUgKG51bWVyaWMgY2FzdClcclxuXHRcdGRlcHRoICs9ICFjbG9zZSAtICFvcGVuO1xyXG5cclxuXHRcdC8vIFJlbW92ZSB0aGlzIHRva2VuXHJcblx0XHRyZXR1cm4gXCJcIjtcclxuXHR9ICkgKSA/XHJcblx0XHQoIEZ1bmN0aW9uKCBcInJldHVybiBcIiArIHN0ciApICkoKSA6XHJcblx0XHRqUXVlcnkuZXJyb3IoIFwiSW52YWxpZCBKU09OOiBcIiArIGRhdGEgKTtcclxufTtcclxuXHJcblxyXG4vLyBDcm9zcy1icm93c2VyIHhtbCBwYXJzaW5nXHJcbmpRdWVyeS5wYXJzZVhNTCA9IGZ1bmN0aW9uKCBkYXRhICkge1xyXG5cdHZhciB4bWwsIHRtcDtcclxuXHRpZiAoICFkYXRhIHx8IHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xyXG5cdFx0cmV0dXJuIG51bGw7XHJcblx0fVxyXG5cdHRyeSB7XHJcblx0XHRpZiAoIHdpbmRvdy5ET01QYXJzZXIgKSB7IC8vIFN0YW5kYXJkXHJcblx0XHRcdHRtcCA9IG5ldyB3aW5kb3cuRE9NUGFyc2VyKCk7XHJcblx0XHRcdHhtbCA9IHRtcC5wYXJzZUZyb21TdHJpbmcoIGRhdGEsIFwidGV4dC94bWxcIiApO1xyXG5cdFx0fSBlbHNlIHsgLy8gSUVcclxuXHRcdFx0eG1sID0gbmV3IHdpbmRvdy5BY3RpdmVYT2JqZWN0KCBcIk1pY3Jvc29mdC5YTUxET01cIiApO1xyXG5cdFx0XHR4bWwuYXN5bmMgPSBcImZhbHNlXCI7XHJcblx0XHRcdHhtbC5sb2FkWE1MKCBkYXRhICk7XHJcblx0XHR9XHJcblx0fSBjYXRjaCAoIGUgKSB7XHJcblx0XHR4bWwgPSB1bmRlZmluZWQ7XHJcblx0fVxyXG5cdGlmICggIXhtbCB8fCAheG1sLmRvY3VtZW50RWxlbWVudCB8fCB4bWwuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIFwicGFyc2VyZXJyb3JcIiApLmxlbmd0aCApIHtcclxuXHRcdGpRdWVyeS5lcnJvciggXCJJbnZhbGlkIFhNTDogXCIgKyBkYXRhICk7XHJcblx0fVxyXG5cdHJldHVybiB4bWw7XHJcbn07XHJcblxyXG5cclxudmFyXHJcblx0cmhhc2ggPSAvIy4qJC8sXHJcblx0cnRzID0gLyhbPyZdKV89W14mXSovLFxyXG5cclxuXHQvLyBJRSBsZWF2ZXMgYW4gXFxyIGNoYXJhY3RlciBhdCBFT0xcclxuXHRyaGVhZGVycyA9IC9eKC4qPyk6WyBcXHRdKihbXlxcclxcbl0qKVxccj8kL21nLFxyXG5cclxuXHQvLyAjNzY1MywgIzgxMjUsICM4MTUyOiBsb2NhbCBwcm90b2NvbCBkZXRlY3Rpb25cclxuXHRybG9jYWxQcm90b2NvbCA9IC9eKD86YWJvdXR8YXBwfGFwcC1zdG9yYWdlfC4rLWV4dGVuc2lvbnxmaWxlfHJlc3x3aWRnZXQpOiQvLFxyXG5cdHJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLFxyXG5cdHJwcm90b2NvbCA9IC9eXFwvXFwvLyxcclxuXHRydXJsID0gL14oW1xcdy4rLV0rOikoPzpcXC9cXC8oPzpbXlxcLz8jXSpAfCkoW15cXC8/IzpdKikoPzo6KFxcZCspfCl8KS8sXHJcblxyXG5cdC8qIFByZWZpbHRlcnNcclxuXHQgKiAxKSBUaGV5IGFyZSB1c2VmdWwgdG8gaW50cm9kdWNlIGN1c3RvbSBkYXRhVHlwZXMgKHNlZSBhamF4L2pzb25wLmpzIGZvciBhbiBleGFtcGxlKVxyXG5cdCAqIDIpIFRoZXNlIGFyZSBjYWxsZWQ6XHJcblx0ICogICAgLSBCRUZPUkUgYXNraW5nIGZvciBhIHRyYW5zcG9ydFxyXG5cdCAqICAgIC0gQUZURVIgcGFyYW0gc2VyaWFsaXphdGlvbiAocy5kYXRhIGlzIGEgc3RyaW5nIGlmIHMucHJvY2Vzc0RhdGEgaXMgdHJ1ZSlcclxuXHQgKiAzKSBrZXkgaXMgdGhlIGRhdGFUeXBlXHJcblx0ICogNCkgdGhlIGNhdGNoYWxsIHN5bWJvbCBcIipcIiBjYW4gYmUgdXNlZFxyXG5cdCAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gXCIqXCIgaWYgbmVlZGVkXHJcblx0ICovXHJcblx0cHJlZmlsdGVycyA9IHt9LFxyXG5cclxuXHQvKiBUcmFuc3BvcnRzIGJpbmRpbmdzXHJcblx0ICogMSkga2V5IGlzIHRoZSBkYXRhVHlwZVxyXG5cdCAqIDIpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcclxuXHQgKiAzKSBzZWxlY3Rpb24gd2lsbCBzdGFydCB3aXRoIHRyYW5zcG9ydCBkYXRhVHlwZSBhbmQgVEhFTiBnbyB0byBcIipcIiBpZiBuZWVkZWRcclxuXHQgKi9cclxuXHR0cmFuc3BvcnRzID0ge30sXHJcblxyXG5cdC8vIEF2b2lkIGNvbW1lbnQtcHJvbG9nIGNoYXIgc2VxdWVuY2UgKCMxMDA5OCk7IG11c3QgYXBwZWFzZSBsaW50IGFuZCBldmFkZSBjb21wcmVzc2lvblxyXG5cdGFsbFR5cGVzID0gXCIqL1wiLmNvbmNhdCggXCIqXCIgKSxcclxuXHJcblx0Ly8gRG9jdW1lbnQgbG9jYXRpb25cclxuXHRhamF4TG9jYXRpb24gPSBsb2NhdGlvbi5ocmVmLFxyXG5cclxuXHQvLyBTZWdtZW50IGxvY2F0aW9uIGludG8gcGFydHNcclxuXHRhamF4TG9jUGFydHMgPSBydXJsLmV4ZWMoIGFqYXhMb2NhdGlvbi50b0xvd2VyQ2FzZSgpICkgfHwgW107XHJcblxyXG4vLyBCYXNlIFwiY29uc3RydWN0b3JcIiBmb3IgalF1ZXJ5LmFqYXhQcmVmaWx0ZXIgYW5kIGpRdWVyeS5hamF4VHJhbnNwb3J0XHJcbmZ1bmN0aW9uIGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggc3RydWN0dXJlICkge1xyXG5cclxuXHQvLyBkYXRhVHlwZUV4cHJlc3Npb24gaXMgb3B0aW9uYWwgYW5kIGRlZmF1bHRzIHRvIFwiKlwiXHJcblx0cmV0dXJuIGZ1bmN0aW9uKCBkYXRhVHlwZUV4cHJlc3Npb24sIGZ1bmMgKSB7XHJcblxyXG5cdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVFeHByZXNzaW9uICE9PSBcInN0cmluZ1wiICkge1xyXG5cdFx0XHRmdW5jID0gZGF0YVR5cGVFeHByZXNzaW9uO1xyXG5cdFx0XHRkYXRhVHlwZUV4cHJlc3Npb24gPSBcIipcIjtcclxuXHRcdH1cclxuXHJcblx0XHR2YXIgZGF0YVR5cGUsXHJcblx0XHRcdGkgPSAwLFxyXG5cdFx0XHRkYXRhVHlwZXMgPSBkYXRhVHlwZUV4cHJlc3Npb24udG9Mb3dlckNhc2UoKS5tYXRjaCggcm5vdHdoaXRlICkgfHwgW107XHJcblxyXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggZnVuYyApICkge1xyXG5cclxuXHRcdFx0Ly8gRm9yIGVhY2ggZGF0YVR5cGUgaW4gdGhlIGRhdGFUeXBlRXhwcmVzc2lvblxyXG5cdFx0XHR3aGlsZSAoICggZGF0YVR5cGUgPSBkYXRhVHlwZXNbIGkrKyBdICkgKSB7XHJcblxyXG5cdFx0XHRcdC8vIFByZXBlbmQgaWYgcmVxdWVzdGVkXHJcblx0XHRcdFx0aWYgKCBkYXRhVHlwZS5jaGFyQXQoIDAgKSA9PT0gXCIrXCIgKSB7XHJcblx0XHRcdFx0XHRkYXRhVHlwZSA9IGRhdGFUeXBlLnNsaWNlKCAxICkgfHwgXCIqXCI7XHJcblx0XHRcdFx0XHQoIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSApLnVuc2hpZnQoIGZ1bmMgKTtcclxuXHJcblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZFxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHQoIHN0cnVjdHVyZVsgZGF0YVR5cGUgXSA9IHN0cnVjdHVyZVsgZGF0YVR5cGUgXSB8fCBbXSApLnB1c2goIGZ1bmMgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG59XHJcblxyXG4vLyBCYXNlIGluc3BlY3Rpb24gZnVuY3Rpb24gZm9yIHByZWZpbHRlcnMgYW5kIHRyYW5zcG9ydHNcclxuZnVuY3Rpb24gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSwgb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApIHtcclxuXHJcblx0dmFyIGluc3BlY3RlZCA9IHt9LFxyXG5cdFx0c2Vla2luZ1RyYW5zcG9ydCA9ICggc3RydWN0dXJlID09PSB0cmFuc3BvcnRzICk7XHJcblxyXG5cdGZ1bmN0aW9uIGluc3BlY3QoIGRhdGFUeXBlICkge1xyXG5cdFx0dmFyIHNlbGVjdGVkO1xyXG5cdFx0aW5zcGVjdGVkWyBkYXRhVHlwZSBdID0gdHJ1ZTtcclxuXHRcdGpRdWVyeS5lYWNoKCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10sIGZ1bmN0aW9uKCBfLCBwcmVmaWx0ZXJPckZhY3RvcnkgKSB7XHJcblx0XHRcdHZhciBkYXRhVHlwZU9yVHJhbnNwb3J0ID0gcHJlZmlsdGVyT3JGYWN0b3J5KCBvcHRpb25zLCBvcmlnaW5hbE9wdGlvbnMsIGpxWEhSICk7XHJcblx0XHRcdGlmICggdHlwZW9mIGRhdGFUeXBlT3JUcmFuc3BvcnQgPT09IFwic3RyaW5nXCIgJiZcclxuXHRcdFx0XHQhc2Vla2luZ1RyYW5zcG9ydCAmJiAhaW5zcGVjdGVkWyBkYXRhVHlwZU9yVHJhbnNwb3J0IF0gKSB7XHJcblxyXG5cdFx0XHRcdG9wdGlvbnMuZGF0YVR5cGVzLnVuc2hpZnQoIGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcclxuXHRcdFx0XHRpbnNwZWN0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlO1xyXG5cdFx0XHR9IGVsc2UgaWYgKCBzZWVraW5nVHJhbnNwb3J0ICkge1xyXG5cdFx0XHRcdHJldHVybiAhKCBzZWxlY3RlZCA9IGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcclxuXHRcdFx0fVxyXG5cdFx0fSApO1xyXG5cdFx0cmV0dXJuIHNlbGVjdGVkO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIGluc3BlY3QoIG9wdGlvbnMuZGF0YVR5cGVzWyAwIF0gKSB8fCAhaW5zcGVjdGVkWyBcIipcIiBdICYmIGluc3BlY3QoIFwiKlwiICk7XHJcbn1cclxuXHJcbi8vIEEgc3BlY2lhbCBleHRlbmQgZm9yIGFqYXggb3B0aW9uc1xyXG4vLyB0aGF0IHRha2VzIFwiZmxhdFwiIG9wdGlvbnMgKG5vdCB0byBiZSBkZWVwIGV4dGVuZGVkKVxyXG4vLyBGaXhlcyAjOTg4N1xyXG5mdW5jdGlvbiBhamF4RXh0ZW5kKCB0YXJnZXQsIHNyYyApIHtcclxuXHR2YXIgZGVlcCwga2V5LFxyXG5cdFx0ZmxhdE9wdGlvbnMgPSBqUXVlcnkuYWpheFNldHRpbmdzLmZsYXRPcHRpb25zIHx8IHt9O1xyXG5cclxuXHRmb3IgKCBrZXkgaW4gc3JjICkge1xyXG5cdFx0aWYgKCBzcmNbIGtleSBdICE9PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdCggZmxhdE9wdGlvbnNbIGtleSBdID8gdGFyZ2V0IDogKCBkZWVwIHx8ICggZGVlcCA9IHt9ICkgKSApWyBrZXkgXSA9IHNyY1sga2V5IF07XHJcblx0XHR9XHJcblx0fVxyXG5cdGlmICggZGVlcCApIHtcclxuXHRcdGpRdWVyeS5leHRlbmQoIHRydWUsIHRhcmdldCwgZGVlcCApO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIHRhcmdldDtcclxufVxyXG5cclxuLyogSGFuZGxlcyByZXNwb25zZXMgdG8gYW4gYWpheCByZXF1ZXN0OlxyXG4gKiAtIGZpbmRzIHRoZSByaWdodCBkYXRhVHlwZSAobWVkaWF0ZXMgYmV0d2VlbiBjb250ZW50LXR5cGUgYW5kIGV4cGVjdGVkIGRhdGFUeXBlKVxyXG4gKiAtIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2VcclxuICovXHJcbmZ1bmN0aW9uIGFqYXhIYW5kbGVSZXNwb25zZXMoIHMsIGpxWEhSLCByZXNwb25zZXMgKSB7XHJcblx0dmFyIGZpcnN0RGF0YVR5cGUsIGN0LCBmaW5hbERhdGFUeXBlLCB0eXBlLFxyXG5cdFx0Y29udGVudHMgPSBzLmNvbnRlbnRzLFxyXG5cdFx0ZGF0YVR5cGVzID0gcy5kYXRhVHlwZXM7XHJcblxyXG5cdC8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzXHJcblx0d2hpbGUgKCBkYXRhVHlwZXNbIDAgXSA9PT0gXCIqXCIgKSB7XHJcblx0XHRkYXRhVHlwZXMuc2hpZnQoKTtcclxuXHRcdGlmICggY3QgPT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0Y3QgPSBzLm1pbWVUeXBlIHx8IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkNvbnRlbnQtVHlwZVwiICk7XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBDaGVjayBpZiB3ZSdyZSBkZWFsaW5nIHdpdGggYSBrbm93biBjb250ZW50LXR5cGVcclxuXHRpZiAoIGN0ICkge1xyXG5cdFx0Zm9yICggdHlwZSBpbiBjb250ZW50cyApIHtcclxuXHRcdFx0aWYgKCBjb250ZW50c1sgdHlwZSBdICYmIGNvbnRlbnRzWyB0eXBlIF0udGVzdCggY3QgKSApIHtcclxuXHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdHlwZSApO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHQvLyBDaGVjayB0byBzZWUgaWYgd2UgaGF2ZSBhIHJlc3BvbnNlIGZvciB0aGUgZXhwZWN0ZWQgZGF0YVR5cGVcclxuXHRpZiAoIGRhdGFUeXBlc1sgMCBdIGluIHJlc3BvbnNlcyApIHtcclxuXHRcdGZpbmFsRGF0YVR5cGUgPSBkYXRhVHlwZXNbIDAgXTtcclxuXHR9IGVsc2Uge1xyXG5cclxuXHRcdC8vIFRyeSBjb252ZXJ0aWJsZSBkYXRhVHlwZXNcclxuXHRcdGZvciAoIHR5cGUgaW4gcmVzcG9uc2VzICkge1xyXG5cdFx0XHRpZiAoICFkYXRhVHlwZXNbIDAgXSB8fCBzLmNvbnZlcnRlcnNbIHR5cGUgKyBcIiBcIiArIGRhdGFUeXBlc1sgMCBdIF0gKSB7XHJcblx0XHRcdFx0ZmluYWxEYXRhVHlwZSA9IHR5cGU7XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdH1cclxuXHRcdFx0aWYgKCAhZmlyc3REYXRhVHlwZSApIHtcclxuXHRcdFx0XHRmaXJzdERhdGFUeXBlID0gdHlwZTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cclxuXHRcdC8vIE9yIGp1c3QgdXNlIGZpcnN0IG9uZVxyXG5cdFx0ZmluYWxEYXRhVHlwZSA9IGZpbmFsRGF0YVR5cGUgfHwgZmlyc3REYXRhVHlwZTtcclxuXHR9XHJcblxyXG5cdC8vIElmIHdlIGZvdW5kIGEgZGF0YVR5cGVcclxuXHQvLyBXZSBhZGQgdGhlIGRhdGFUeXBlIHRvIHRoZSBsaXN0IGlmIG5lZWRlZFxyXG5cdC8vIGFuZCByZXR1cm4gdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2VcclxuXHRpZiAoIGZpbmFsRGF0YVR5cGUgKSB7XHJcblx0XHRpZiAoIGZpbmFsRGF0YVR5cGUgIT09IGRhdGFUeXBlc1sgMCBdICkge1xyXG5cdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggZmluYWxEYXRhVHlwZSApO1xyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3BvbnNlc1sgZmluYWxEYXRhVHlwZSBdO1xyXG5cdH1cclxufVxyXG5cclxuLyogQ2hhaW4gY29udmVyc2lvbnMgZ2l2ZW4gdGhlIHJlcXVlc3QgYW5kIHRoZSBvcmlnaW5hbCByZXNwb25zZVxyXG4gKiBBbHNvIHNldHMgdGhlIHJlc3BvbnNlWFhYIGZpZWxkcyBvbiB0aGUganFYSFIgaW5zdGFuY2VcclxuICovXHJcbmZ1bmN0aW9uIGFqYXhDb252ZXJ0KCBzLCByZXNwb25zZSwganFYSFIsIGlzU3VjY2VzcyApIHtcclxuXHR2YXIgY29udjIsIGN1cnJlbnQsIGNvbnYsIHRtcCwgcHJldixcclxuXHRcdGNvbnZlcnRlcnMgPSB7fSxcclxuXHJcblx0XHQvLyBXb3JrIHdpdGggYSBjb3B5IG9mIGRhdGFUeXBlcyBpbiBjYXNlIHdlIG5lZWQgdG8gbW9kaWZ5IGl0IGZvciBjb252ZXJzaW9uXHJcblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcy5zbGljZSgpO1xyXG5cclxuXHQvLyBDcmVhdGUgY29udmVydGVycyBtYXAgd2l0aCBsb3dlcmNhc2VkIGtleXNcclxuXHRpZiAoIGRhdGFUeXBlc1sgMSBdICkge1xyXG5cdFx0Zm9yICggY29udiBpbiBzLmNvbnZlcnRlcnMgKSB7XHJcblx0XHRcdGNvbnZlcnRlcnNbIGNvbnYudG9Mb3dlckNhc2UoKSBdID0gcy5jb252ZXJ0ZXJzWyBjb252IF07XHJcblx0XHR9XHJcblx0fVxyXG5cclxuXHRjdXJyZW50ID0gZGF0YVR5cGVzLnNoaWZ0KCk7XHJcblxyXG5cdC8vIENvbnZlcnQgdG8gZWFjaCBzZXF1ZW50aWFsIGRhdGFUeXBlXHJcblx0d2hpbGUgKCBjdXJyZW50ICkge1xyXG5cclxuXHRcdGlmICggcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdICkge1xyXG5cdFx0XHRqcVhIUlsgcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdIF0gPSByZXNwb25zZTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBBcHBseSB0aGUgZGF0YUZpbHRlciBpZiBwcm92aWRlZFxyXG5cdFx0aWYgKCAhcHJldiAmJiBpc1N1Y2Nlc3MgJiYgcy5kYXRhRmlsdGVyICkge1xyXG5cdFx0XHRyZXNwb25zZSA9IHMuZGF0YUZpbHRlciggcmVzcG9uc2UsIHMuZGF0YVR5cGUgKTtcclxuXHRcdH1cclxuXHJcblx0XHRwcmV2ID0gY3VycmVudDtcclxuXHRcdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcclxuXHJcblx0XHRpZiAoIGN1cnJlbnQgKSB7XHJcblxyXG5cdFx0XHQvLyBUaGVyZSdzIG9ubHkgd29yayB0byBkbyBpZiBjdXJyZW50IGRhdGFUeXBlIGlzIG5vbi1hdXRvXHJcblx0XHRcdGlmICggY3VycmVudCA9PT0gXCIqXCIgKSB7XHJcblxyXG5cdFx0XHRcdGN1cnJlbnQgPSBwcmV2O1xyXG5cclxuXHRcdFx0Ly8gQ29udmVydCByZXNwb25zZSBpZiBwcmV2IGRhdGFUeXBlIGlzIG5vbi1hdXRvIGFuZCBkaWZmZXJzIGZyb20gY3VycmVudFxyXG5cdFx0XHR9IGVsc2UgaWYgKCBwcmV2ICE9PSBcIipcIiAmJiBwcmV2ICE9PSBjdXJyZW50ICkge1xyXG5cclxuXHRcdFx0XHQvLyBTZWVrIGEgZGlyZWN0IGNvbnZlcnRlclxyXG5cdFx0XHRcdGNvbnYgPSBjb252ZXJ0ZXJzWyBwcmV2ICsgXCIgXCIgKyBjdXJyZW50IF0gfHwgY29udmVydGVyc1sgXCIqIFwiICsgY3VycmVudCBdO1xyXG5cclxuXHRcdFx0XHQvLyBJZiBub25lIGZvdW5kLCBzZWVrIGEgcGFpclxyXG5cdFx0XHRcdGlmICggIWNvbnYgKSB7XHJcblx0XHRcdFx0XHRmb3IgKCBjb252MiBpbiBjb252ZXJ0ZXJzICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gSWYgY29udjIgb3V0cHV0cyBjdXJyZW50XHJcblx0XHRcdFx0XHRcdHRtcCA9IGNvbnYyLnNwbGl0KCBcIiBcIiApO1xyXG5cdFx0XHRcdFx0XHRpZiAoIHRtcFsgMSBdID09PSBjdXJyZW50ICkge1xyXG5cclxuXHRcdFx0XHRcdFx0XHQvLyBJZiBwcmV2IGNhbiBiZSBjb252ZXJ0ZWQgdG8gYWNjZXB0ZWQgaW5wdXRcclxuXHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgdG1wWyAwIF0gXSB8fFxyXG5cdFx0XHRcdFx0XHRcdFx0Y29udmVydGVyc1sgXCIqIFwiICsgdG1wWyAwIF0gXTtcclxuXHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gQ29uZGVuc2UgZXF1aXZhbGVuY2UgY29udmVydGVyc1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCBjb252ID09PSB0cnVlICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgY29udjIgXTtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHQvLyBPdGhlcndpc2UsIGluc2VydCB0aGUgaW50ZXJtZWRpYXRlIGRhdGFUeXBlXHJcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBjb252ZXJ0ZXJzWyBjb252MiBdICE9PSB0cnVlICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRjdXJyZW50ID0gdG1wWyAwIF07XHJcblx0XHRcdFx0XHRcdFx0XHRcdGRhdGFUeXBlcy51bnNoaWZ0KCB0bXBbIDEgXSApO1xyXG5cdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBBcHBseSBjb252ZXJ0ZXIgKGlmIG5vdCBhbiBlcXVpdmFsZW5jZSlcclxuXHRcdFx0XHRpZiAoIGNvbnYgIT09IHRydWUgKSB7XHJcblxyXG5cdFx0XHRcdFx0Ly8gVW5sZXNzIGVycm9ycyBhcmUgYWxsb3dlZCB0byBidWJibGUsIGNhdGNoIGFuZCByZXR1cm4gdGhlbVxyXG5cdFx0XHRcdFx0aWYgKCBjb252ICYmIHNbIFwidGhyb3dzXCIgXSApIHsgLy8ganNjczppZ25vcmUgcmVxdWlyZURvdE5vdGF0aW9uXHJcblx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcclxuXHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdHRyeSB7XHJcblx0XHRcdFx0XHRcdFx0cmVzcG9uc2UgPSBjb252KCByZXNwb25zZSApO1xyXG5cdFx0XHRcdFx0XHR9IGNhdGNoICggZSApIHtcclxuXHRcdFx0XHRcdFx0XHRyZXR1cm4ge1xyXG5cdFx0XHRcdFx0XHRcdFx0c3RhdGU6IFwicGFyc2VyZXJyb3JcIixcclxuXHRcdFx0XHRcdFx0XHRcdGVycm9yOiBjb252ID8gZSA6IFwiTm8gY29udmVyc2lvbiBmcm9tIFwiICsgcHJldiArIFwiIHRvIFwiICsgY3VycmVudFxyXG5cdFx0XHRcdFx0XHRcdH07XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdHJldHVybiB7IHN0YXRlOiBcInN1Y2Nlc3NcIiwgZGF0YTogcmVzcG9uc2UgfTtcclxufVxyXG5cclxualF1ZXJ5LmV4dGVuZCgge1xyXG5cclxuXHQvLyBDb3VudGVyIGZvciBob2xkaW5nIHRoZSBudW1iZXIgb2YgYWN0aXZlIHF1ZXJpZXNcclxuXHRhY3RpdmU6IDAsXHJcblxyXG5cdC8vIExhc3QtTW9kaWZpZWQgaGVhZGVyIGNhY2hlIGZvciBuZXh0IHJlcXVlc3RcclxuXHRsYXN0TW9kaWZpZWQ6IHt9LFxyXG5cdGV0YWc6IHt9LFxyXG5cclxuXHRhamF4U2V0dGluZ3M6IHtcclxuXHRcdHVybDogYWpheExvY2F0aW9uLFxyXG5cdFx0dHlwZTogXCJHRVRcIixcclxuXHRcdGlzTG9jYWw6IHJsb2NhbFByb3RvY29sLnRlc3QoIGFqYXhMb2NQYXJ0c1sgMSBdICksXHJcblx0XHRnbG9iYWw6IHRydWUsXHJcblx0XHRwcm9jZXNzRGF0YTogdHJ1ZSxcclxuXHRcdGFzeW5jOiB0cnVlLFxyXG5cdFx0Y29udGVudFR5cGU6IFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04XCIsXHJcblx0XHQvKlxyXG5cdFx0dGltZW91dDogMCxcclxuXHRcdGRhdGE6IG51bGwsXHJcblx0XHRkYXRhVHlwZTogbnVsbCxcclxuXHRcdHVzZXJuYW1lOiBudWxsLFxyXG5cdFx0cGFzc3dvcmQ6IG51bGwsXHJcblx0XHRjYWNoZTogbnVsbCxcclxuXHRcdHRocm93czogZmFsc2UsXHJcblx0XHR0cmFkaXRpb25hbDogZmFsc2UsXHJcblx0XHRoZWFkZXJzOiB7fSxcclxuXHRcdCovXHJcblxyXG5cdFx0YWNjZXB0czoge1xyXG5cdFx0XHRcIipcIjogYWxsVHlwZXMsXHJcblx0XHRcdHRleHQ6IFwidGV4dC9wbGFpblwiLFxyXG5cdFx0XHRodG1sOiBcInRleHQvaHRtbFwiLFxyXG5cdFx0XHR4bWw6IFwiYXBwbGljYXRpb24veG1sLCB0ZXh0L3htbFwiLFxyXG5cdFx0XHRqc29uOiBcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdFwiXHJcblx0XHR9LFxyXG5cclxuXHRcdGNvbnRlbnRzOiB7XHJcblx0XHRcdHhtbDogL1xcYnhtbFxcYi8sXHJcblx0XHRcdGh0bWw6IC9cXGJodG1sLyxcclxuXHRcdFx0anNvbjogL1xcYmpzb25cXGIvXHJcblx0XHR9LFxyXG5cclxuXHRcdHJlc3BvbnNlRmllbGRzOiB7XHJcblx0XHRcdHhtbDogXCJyZXNwb25zZVhNTFwiLFxyXG5cdFx0XHR0ZXh0OiBcInJlc3BvbnNlVGV4dFwiLFxyXG5cdFx0XHRqc29uOiBcInJlc3BvbnNlSlNPTlwiXHJcblx0XHR9LFxyXG5cclxuXHRcdC8vIERhdGEgY29udmVydGVyc1xyXG5cdFx0Ly8gS2V5cyBzZXBhcmF0ZSBzb3VyY2UgKG9yIGNhdGNoYWxsIFwiKlwiKSBhbmQgZGVzdGluYXRpb24gdHlwZXMgd2l0aCBhIHNpbmdsZSBzcGFjZVxyXG5cdFx0Y29udmVydGVyczoge1xyXG5cclxuXHRcdFx0Ly8gQ29udmVydCBhbnl0aGluZyB0byB0ZXh0XHJcblx0XHRcdFwiKiB0ZXh0XCI6IFN0cmluZyxcclxuXHJcblx0XHRcdC8vIFRleHQgdG8gaHRtbCAodHJ1ZSA9IG5vIHRyYW5zZm9ybWF0aW9uKVxyXG5cdFx0XHRcInRleHQgaHRtbFwiOiB0cnVlLFxyXG5cclxuXHRcdFx0Ly8gRXZhbHVhdGUgdGV4dCBhcyBhIGpzb24gZXhwcmVzc2lvblxyXG5cdFx0XHRcInRleHQganNvblwiOiBqUXVlcnkucGFyc2VKU09OLFxyXG5cclxuXHRcdFx0Ly8gUGFyc2UgdGV4dCBhcyB4bWxcclxuXHRcdFx0XCJ0ZXh0IHhtbFwiOiBqUXVlcnkucGFyc2VYTUxcclxuXHRcdH0sXHJcblxyXG5cdFx0Ly8gRm9yIG9wdGlvbnMgdGhhdCBzaG91bGRuJ3QgYmUgZGVlcCBleHRlbmRlZDpcclxuXHRcdC8vIHlvdSBjYW4gYWRkIHlvdXIgb3duIGN1c3RvbSBvcHRpb25zIGhlcmUgaWZcclxuXHRcdC8vIGFuZCB3aGVuIHlvdSBjcmVhdGUgb25lIHRoYXQgc2hvdWxkbid0IGJlXHJcblx0XHQvLyBkZWVwIGV4dGVuZGVkIChzZWUgYWpheEV4dGVuZClcclxuXHRcdGZsYXRPcHRpb25zOiB7XHJcblx0XHRcdHVybDogdHJ1ZSxcclxuXHRcdFx0Y29udGV4dDogdHJ1ZVxyXG5cdFx0fVxyXG5cdH0sXHJcblxyXG5cdC8vIENyZWF0ZXMgYSBmdWxsIGZsZWRnZWQgc2V0dGluZ3Mgb2JqZWN0IGludG8gdGFyZ2V0XHJcblx0Ly8gd2l0aCBib3RoIGFqYXhTZXR0aW5ncyBhbmQgc2V0dGluZ3MgZmllbGRzLlxyXG5cdC8vIElmIHRhcmdldCBpcyBvbWl0dGVkLCB3cml0ZXMgaW50byBhamF4U2V0dGluZ3MuXHJcblx0YWpheFNldHVwOiBmdW5jdGlvbiggdGFyZ2V0LCBzZXR0aW5ncyApIHtcclxuXHRcdHJldHVybiBzZXR0aW5ncyA/XHJcblxyXG5cdFx0XHQvLyBCdWlsZGluZyBhIHNldHRpbmdzIG9iamVjdFxyXG5cdFx0XHRhamF4RXh0ZW5kKCBhamF4RXh0ZW5kKCB0YXJnZXQsIGpRdWVyeS5hamF4U2V0dGluZ3MgKSwgc2V0dGluZ3MgKSA6XHJcblxyXG5cdFx0XHQvLyBFeHRlbmRpbmcgYWpheFNldHRpbmdzXHJcblx0XHRcdGFqYXhFeHRlbmQoIGpRdWVyeS5hamF4U2V0dGluZ3MsIHRhcmdldCApO1xyXG5cdH0sXHJcblxyXG5cdGFqYXhQcmVmaWx0ZXI6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggcHJlZmlsdGVycyApLFxyXG5cdGFqYXhUcmFuc3BvcnQ6IGFkZFRvUHJlZmlsdGVyc09yVHJhbnNwb3J0cyggdHJhbnNwb3J0cyApLFxyXG5cclxuXHQvLyBNYWluIG1ldGhvZFxyXG5cdGFqYXg6IGZ1bmN0aW9uKCB1cmwsIG9wdGlvbnMgKSB7XHJcblxyXG5cdFx0Ly8gSWYgdXJsIGlzIGFuIG9iamVjdCwgc2ltdWxhdGUgcHJlLTEuNSBzaWduYXR1cmVcclxuXHRcdGlmICggdHlwZW9mIHVybCA9PT0gXCJvYmplY3RcIiApIHtcclxuXHRcdFx0b3B0aW9ucyA9IHVybDtcclxuXHRcdFx0dXJsID0gdW5kZWZpbmVkO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEZvcmNlIG9wdGlvbnMgdG8gYmUgYW4gb2JqZWN0XHJcblx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcclxuXHJcblx0XHR2YXJcclxuXHJcblx0XHRcdC8vIENyb3NzLWRvbWFpbiBkZXRlY3Rpb24gdmFyc1xyXG5cdFx0XHRwYXJ0cyxcclxuXHJcblx0XHRcdC8vIExvb3AgdmFyaWFibGVcclxuXHRcdFx0aSxcclxuXHJcblx0XHRcdC8vIFVSTCB3aXRob3V0IGFudGktY2FjaGUgcGFyYW1cclxuXHRcdFx0Y2FjaGVVUkwsXHJcblxyXG5cdFx0XHQvLyBSZXNwb25zZSBoZWFkZXJzIGFzIHN0cmluZ1xyXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcsXHJcblxyXG5cdFx0XHQvLyB0aW1lb3V0IGhhbmRsZVxyXG5cdFx0XHR0aW1lb3V0VGltZXIsXHJcblxyXG5cdFx0XHQvLyBUbyBrbm93IGlmIGdsb2JhbCBldmVudHMgYXJlIHRvIGJlIGRpc3BhdGNoZWRcclxuXHRcdFx0ZmlyZUdsb2JhbHMsXHJcblxyXG5cdFx0XHR0cmFuc3BvcnQsXHJcblxyXG5cdFx0XHQvLyBSZXNwb25zZSBoZWFkZXJzXHJcblx0XHRcdHJlc3BvbnNlSGVhZGVycyxcclxuXHJcblx0XHRcdC8vIENyZWF0ZSB0aGUgZmluYWwgb3B0aW9ucyBvYmplY3RcclxuXHRcdFx0cyA9IGpRdWVyeS5hamF4U2V0dXAoIHt9LCBvcHRpb25zICksXHJcblxyXG5cdFx0XHQvLyBDYWxsYmFja3MgY29udGV4dFxyXG5cdFx0XHRjYWxsYmFja0NvbnRleHQgPSBzLmNvbnRleHQgfHwgcyxcclxuXHJcblx0XHRcdC8vIENvbnRleHQgZm9yIGdsb2JhbCBldmVudHMgaXMgY2FsbGJhY2tDb250ZXh0IGlmIGl0IGlzIGEgRE9NIG5vZGUgb3IgalF1ZXJ5IGNvbGxlY3Rpb25cclxuXHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0ID0gcy5jb250ZXh0ICYmXHJcblx0XHRcdFx0KCBjYWxsYmFja0NvbnRleHQubm9kZVR5cGUgfHwgY2FsbGJhY2tDb250ZXh0LmpxdWVyeSApID9cclxuXHRcdFx0XHRcdGpRdWVyeSggY2FsbGJhY2tDb250ZXh0ICkgOlxyXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LFxyXG5cclxuXHRcdFx0Ly8gRGVmZXJyZWRzXHJcblx0XHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXHJcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQgPSBqUXVlcnkuQ2FsbGJhY2tzKCBcIm9uY2UgbWVtb3J5XCIgKSxcclxuXHJcblx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXHJcblx0XHRcdHN0YXR1c0NvZGUgPSBzLnN0YXR1c0NvZGUgfHwge30sXHJcblxyXG5cdFx0XHQvLyBIZWFkZXJzICh0aGV5IGFyZSBzZW50IGFsbCBhdCBvbmNlKVxyXG5cdFx0XHRyZXF1ZXN0SGVhZGVycyA9IHt9LFxyXG5cdFx0XHRyZXF1ZXN0SGVhZGVyc05hbWVzID0ge30sXHJcblxyXG5cdFx0XHQvLyBUaGUganFYSFIgc3RhdGVcclxuXHRcdFx0c3RhdGUgPSAwLFxyXG5cclxuXHRcdFx0Ly8gRGVmYXVsdCBhYm9ydCBtZXNzYWdlXHJcblx0XHRcdHN0ckFib3J0ID0gXCJjYW5jZWxlZFwiLFxyXG5cclxuXHRcdFx0Ly8gRmFrZSB4aHJcclxuXHRcdFx0anFYSFIgPSB7XHJcblx0XHRcdFx0cmVhZHlTdGF0ZTogMCxcclxuXHJcblx0XHRcdFx0Ly8gQnVpbGRzIGhlYWRlcnMgaGFzaHRhYmxlIGlmIG5lZWRlZFxyXG5cdFx0XHRcdGdldFJlc3BvbnNlSGVhZGVyOiBmdW5jdGlvbigga2V5ICkge1xyXG5cdFx0XHRcdFx0dmFyIG1hdGNoO1xyXG5cdFx0XHRcdFx0aWYgKCBzdGF0ZSA9PT0gMiApIHtcclxuXHRcdFx0XHRcdFx0aWYgKCAhcmVzcG9uc2VIZWFkZXJzICkge1xyXG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlSGVhZGVycyA9IHt9O1xyXG5cdFx0XHRcdFx0XHRcdHdoaWxlICggKCBtYXRjaCA9IHJoZWFkZXJzLmV4ZWMoIHJlc3BvbnNlSGVhZGVyc1N0cmluZyApICkgKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnNbIG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKSBdID0gbWF0Y2hbIDIgXTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0bWF0Y2ggPSByZXNwb25zZUhlYWRlcnNbIGtleS50b0xvd2VyQ2FzZSgpIF07XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRyZXR1cm4gbWF0Y2ggPT0gbnVsbCA/IG51bGwgOiBtYXRjaDtcclxuXHRcdFx0XHR9LFxyXG5cclxuXHRcdFx0XHQvLyBSYXcgc3RyaW5nXHJcblx0XHRcdFx0Z2V0QWxsUmVzcG9uc2VIZWFkZXJzOiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdHJldHVybiBzdGF0ZSA9PT0gMiA/IHJlc3BvbnNlSGVhZGVyc1N0cmluZyA6IG51bGw7XHJcblx0XHRcdFx0fSxcclxuXHJcblx0XHRcdFx0Ly8gQ2FjaGVzIHRoZSBoZWFkZXJcclxuXHRcdFx0XHRzZXRSZXF1ZXN0SGVhZGVyOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XHJcblx0XHRcdFx0XHR2YXIgbG5hbWUgPSBuYW1lLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRcdFx0XHRpZiAoICFzdGF0ZSApIHtcclxuXHRcdFx0XHRcdFx0bmFtZSA9IHJlcXVlc3RIZWFkZXJzTmFtZXNbIGxuYW1lIF0gPSByZXF1ZXN0SGVhZGVyc05hbWVzWyBsbmFtZSBdIHx8IG5hbWU7XHJcblx0XHRcdFx0XHRcdHJlcXVlc3RIZWFkZXJzWyBuYW1lIF0gPSB2YWx1ZTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xyXG5cdFx0XHRcdH0sXHJcblxyXG5cdFx0XHRcdC8vIE92ZXJyaWRlcyByZXNwb25zZSBjb250ZW50LXR5cGUgaGVhZGVyXHJcblx0XHRcdFx0b3ZlcnJpZGVNaW1lVHlwZTogZnVuY3Rpb24oIHR5cGUgKSB7XHJcblx0XHRcdFx0XHRpZiAoICFzdGF0ZSApIHtcclxuXHRcdFx0XHRcdFx0cy5taW1lVHlwZSA9IHR5cGU7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdFx0XHR9LFxyXG5cclxuXHRcdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xyXG5cdFx0XHRcdHN0YXR1c0NvZGU6IGZ1bmN0aW9uKCBtYXAgKSB7XHJcblx0XHRcdFx0XHR2YXIgY29kZTtcclxuXHRcdFx0XHRcdGlmICggbWFwICkge1xyXG5cdFx0XHRcdFx0XHRpZiAoIHN0YXRlIDwgMiApIHtcclxuXHRcdFx0XHRcdFx0XHRmb3IgKCBjb2RlIGluIG1hcCApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0XHQvLyBMYXp5LWFkZCB0aGUgbmV3IGNhbGxiYWNrIGluIGEgd2F5IHRoYXQgcHJlc2VydmVzIG9sZCBvbmVzXHJcblx0XHRcdFx0XHRcdFx0XHRzdGF0dXNDb2RlWyBjb2RlIF0gPSBbIHN0YXR1c0NvZGVbIGNvZGUgXSwgbWFwWyBjb2RlIF0gXTtcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdC8vIEV4ZWN1dGUgdGhlIGFwcHJvcHJpYXRlIGNhbGxiYWNrc1xyXG5cdFx0XHRcdFx0XHRcdGpxWEhSLmFsd2F5cyggbWFwWyBqcVhIUi5zdGF0dXMgXSApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdFx0XHR9LFxyXG5cclxuXHRcdFx0XHQvLyBDYW5jZWwgdGhlIHJlcXVlc3RcclxuXHRcdFx0XHRhYm9ydDogZnVuY3Rpb24oIHN0YXR1c1RleHQgKSB7XHJcblx0XHRcdFx0XHR2YXIgZmluYWxUZXh0ID0gc3RhdHVzVGV4dCB8fCBzdHJBYm9ydDtcclxuXHRcdFx0XHRcdGlmICggdHJhbnNwb3J0ICkge1xyXG5cdFx0XHRcdFx0XHR0cmFuc3BvcnQuYWJvcnQoIGZpbmFsVGV4dCApO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0ZG9uZSggMCwgZmluYWxUZXh0ICk7XHJcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcclxuXHRcdFx0XHR9XHJcblx0XHRcdH07XHJcblxyXG5cdFx0Ly8gQXR0YWNoIGRlZmVycmVkc1xyXG5cdFx0ZGVmZXJyZWQucHJvbWlzZSgganFYSFIgKS5jb21wbGV0ZSA9IGNvbXBsZXRlRGVmZXJyZWQuYWRkO1xyXG5cdFx0anFYSFIuc3VjY2VzcyA9IGpxWEhSLmRvbmU7XHJcblx0XHRqcVhIUi5lcnJvciA9IGpxWEhSLmZhaWw7XHJcblxyXG5cdFx0Ly8gUmVtb3ZlIGhhc2ggY2hhcmFjdGVyICgjNzUzMTogYW5kIHN0cmluZyBwcm9tb3Rpb24pXHJcblx0XHQvLyBBZGQgcHJvdG9jb2wgaWYgbm90IHByb3ZpZGVkICgjNTg2NjogSUU3IGlzc3VlIHdpdGggcHJvdG9jb2wtbGVzcyB1cmxzKVxyXG5cdFx0Ly8gSGFuZGxlIGZhbHN5IHVybCBpbiB0aGUgc2V0dGluZ3Mgb2JqZWN0ICgjMTAwOTM6IGNvbnNpc3RlbmN5IHdpdGggb2xkIHNpZ25hdHVyZSlcclxuXHRcdC8vIFdlIGFsc28gdXNlIHRoZSB1cmwgcGFyYW1ldGVyIGlmIGF2YWlsYWJsZVxyXG5cdFx0cy51cmwgPSAoICggdXJsIHx8IHMudXJsIHx8IGFqYXhMb2NhdGlvbiApICsgXCJcIiApXHJcblx0XHRcdC5yZXBsYWNlKCByaGFzaCwgXCJcIiApXHJcblx0XHRcdC5yZXBsYWNlKCBycHJvdG9jb2wsIGFqYXhMb2NQYXJ0c1sgMSBdICsgXCIvL1wiICk7XHJcblxyXG5cdFx0Ly8gQWxpYXMgbWV0aG9kIG9wdGlvbiB0byB0eXBlIGFzIHBlciB0aWNrZXQgIzEyMDA0XHJcblx0XHRzLnR5cGUgPSBvcHRpb25zLm1ldGhvZCB8fCBvcHRpb25zLnR5cGUgfHwgcy5tZXRob2QgfHwgcy50eXBlO1xyXG5cclxuXHRcdC8vIEV4dHJhY3QgZGF0YVR5cGVzIGxpc3RcclxuXHRcdHMuZGF0YVR5cGVzID0galF1ZXJ5LnRyaW0oIHMuZGF0YVR5cGUgfHwgXCIqXCIgKS50b0xvd2VyQ2FzZSgpLm1hdGNoKCBybm90d2hpdGUgKSB8fCBbIFwiXCIgXTtcclxuXHJcblx0XHQvLyBBIGNyb3NzLWRvbWFpbiByZXF1ZXN0IGlzIGluIG9yZGVyIHdoZW4gd2UgaGF2ZSBhIHByb3RvY29sOmhvc3Q6cG9ydCBtaXNtYXRjaFxyXG5cdFx0aWYgKCBzLmNyb3NzRG9tYWluID09IG51bGwgKSB7XHJcblx0XHRcdHBhcnRzID0gcnVybC5leGVjKCBzLnVybC50b0xvd2VyQ2FzZSgpICk7XHJcblx0XHRcdHMuY3Jvc3NEb21haW4gPSAhISggcGFydHMgJiZcclxuXHRcdFx0XHQoIHBhcnRzWyAxIF0gIT09IGFqYXhMb2NQYXJ0c1sgMSBdIHx8IHBhcnRzWyAyIF0gIT09IGFqYXhMb2NQYXJ0c1sgMiBdIHx8XHJcblx0XHRcdFx0XHQoIHBhcnRzWyAzIF0gfHwgKCBwYXJ0c1sgMSBdID09PSBcImh0dHA6XCIgPyBcIjgwXCIgOiBcIjQ0M1wiICkgKSAhPT1cclxuXHRcdFx0XHRcdFx0KCBhamF4TG9jUGFydHNbIDMgXSB8fCAoIGFqYXhMb2NQYXJ0c1sgMSBdID09PSBcImh0dHA6XCIgPyBcIjgwXCIgOiBcIjQ0M1wiICkgKSApXHJcblx0XHRcdCk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQ29udmVydCBkYXRhIGlmIG5vdCBhbHJlYWR5IGEgc3RyaW5nXHJcblx0XHRpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmIHR5cGVvZiBzLmRhdGEgIT09IFwic3RyaW5nXCIgKSB7XHJcblx0XHRcdHMuZGF0YSA9IGpRdWVyeS5wYXJhbSggcy5kYXRhLCBzLnRyYWRpdGlvbmFsICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQXBwbHkgcHJlZmlsdGVyc1xyXG5cdFx0aW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XHJcblxyXG5cdFx0Ly8gSWYgcmVxdWVzdCB3YXMgYWJvcnRlZCBpbnNpZGUgYSBwcmVmaWx0ZXIsIHN0b3AgdGhlcmVcclxuXHRcdGlmICggc3RhdGUgPT09IDIgKSB7XHJcblx0XHRcdHJldHVybiBqcVhIUjtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBXZSBjYW4gZmlyZSBnbG9iYWwgZXZlbnRzIGFzIG9mIG5vdyBpZiBhc2tlZCB0b1xyXG5cdFx0Ly8gRG9uJ3QgZmlyZSBldmVudHMgaWYgalF1ZXJ5LmV2ZW50IGlzIHVuZGVmaW5lZCBpbiBhbiBBTUQtdXNhZ2Ugc2NlbmFyaW8gKCMxNTExOClcclxuXHRcdGZpcmVHbG9iYWxzID0galF1ZXJ5LmV2ZW50ICYmIHMuZ2xvYmFsO1xyXG5cclxuXHRcdC8vIFdhdGNoIGZvciBhIG5ldyBzZXQgb2YgcmVxdWVzdHNcclxuXHRcdGlmICggZmlyZUdsb2JhbHMgJiYgalF1ZXJ5LmFjdGl2ZSsrID09PSAwICkge1xyXG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RhcnRcIiApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFVwcGVyY2FzZSB0aGUgdHlwZVxyXG5cdFx0cy50eXBlID0gcy50eXBlLnRvVXBwZXJDYXNlKCk7XHJcblxyXG5cdFx0Ly8gRGV0ZXJtaW5lIGlmIHJlcXVlc3QgaGFzIGNvbnRlbnRcclxuXHRcdHMuaGFzQ29udGVudCA9ICFybm9Db250ZW50LnRlc3QoIHMudHlwZSApO1xyXG5cclxuXHRcdC8vIFNhdmUgdGhlIFVSTCBpbiBjYXNlIHdlJ3JlIHRveWluZyB3aXRoIHRoZSBJZi1Nb2RpZmllZC1TaW5jZVxyXG5cdFx0Ly8gYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyIGxhdGVyIG9uXHJcblx0XHRjYWNoZVVSTCA9IHMudXJsO1xyXG5cclxuXHRcdC8vIE1vcmUgb3B0aW9ucyBoYW5kbGluZyBmb3IgcmVxdWVzdHMgd2l0aCBubyBjb250ZW50XHJcblx0XHRpZiAoICFzLmhhc0NvbnRlbnQgKSB7XHJcblxyXG5cdFx0XHQvLyBJZiBkYXRhIGlzIGF2YWlsYWJsZSwgYXBwZW5kIGRhdGEgdG8gdXJsXHJcblx0XHRcdGlmICggcy5kYXRhICkge1xyXG5cdFx0XHRcdGNhY2hlVVJMID0gKCBzLnVybCArPSAoIHJxdWVyeS50ZXN0KCBjYWNoZVVSTCApID8gXCImXCIgOiBcIj9cIiApICsgcy5kYXRhICk7XHJcblxyXG5cdFx0XHRcdC8vICM5NjgyOiByZW1vdmUgZGF0YSBzbyB0aGF0IGl0J3Mgbm90IHVzZWQgaW4gYW4gZXZlbnR1YWwgcmV0cnlcclxuXHRcdFx0XHRkZWxldGUgcy5kYXRhO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBBZGQgYW50aS1jYWNoZSBpbiB1cmwgaWYgbmVlZGVkXHJcblx0XHRcdGlmICggcy5jYWNoZSA9PT0gZmFsc2UgKSB7XHJcblx0XHRcdFx0cy51cmwgPSBydHMudGVzdCggY2FjaGVVUkwgKSA/XHJcblxyXG5cdFx0XHRcdFx0Ly8gSWYgdGhlcmUgaXMgYWxyZWFkeSBhICdfJyBwYXJhbWV0ZXIsIHNldCBpdHMgdmFsdWVcclxuXHRcdFx0XHRcdGNhY2hlVVJMLnJlcGxhY2UoIHJ0cywgXCIkMV89XCIgKyBub25jZSsrICkgOlxyXG5cclxuXHRcdFx0XHRcdC8vIE90aGVyd2lzZSBhZGQgb25lIHRvIHRoZSBlbmRcclxuXHRcdFx0XHRcdGNhY2hlVVJMICsgKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/IFwiJlwiIDogXCI/XCIgKSArIFwiXz1cIiArIG5vbmNlKys7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxyXG5cdFx0aWYgKCBzLmlmTW9kaWZpZWQgKSB7XHJcblx0XHRcdGlmICggalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApIHtcclxuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU1vZGlmaWVkLVNpbmNlXCIsIGpRdWVyeS5sYXN0TW9kaWZpZWRbIGNhY2hlVVJMIF0gKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICkge1xyXG5cdFx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiSWYtTm9uZS1NYXRjaFwiLCBqUXVlcnkuZXRhZ1sgY2FjaGVVUkwgXSApO1xyXG5cdFx0XHR9XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gU2V0IHRoZSBjb3JyZWN0IGhlYWRlciwgaWYgZGF0YSBpcyBiZWluZyBzZW50XHJcblx0XHRpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHtcclxuXHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJDb250ZW50LVR5cGVcIiwgcy5jb250ZW50VHlwZSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIFNldCB0aGUgQWNjZXB0cyBoZWFkZXIgZm9yIHRoZSBzZXJ2ZXIsIGRlcGVuZGluZyBvbiB0aGUgZGF0YVR5cGVcclxuXHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoXHJcblx0XHRcdFwiQWNjZXB0XCIsXHJcblx0XHRcdHMuZGF0YVR5cGVzWyAwIF0gJiYgcy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gP1xyXG5cdFx0XHRcdHMuYWNjZXB0c1sgcy5kYXRhVHlwZXNbIDAgXSBdICtcclxuXHRcdFx0XHRcdCggcy5kYXRhVHlwZXNbIDAgXSAhPT0gXCIqXCIgPyBcIiwgXCIgKyBhbGxUeXBlcyArIFwiOyBxPTAuMDFcIiA6IFwiXCIgKSA6XHJcblx0XHRcdFx0cy5hY2NlcHRzWyBcIipcIiBdXHJcblx0XHQpO1xyXG5cclxuXHRcdC8vIENoZWNrIGZvciBoZWFkZXJzIG9wdGlvblxyXG5cdFx0Zm9yICggaSBpbiBzLmhlYWRlcnMgKSB7XHJcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIGksIHMuaGVhZGVyc1sgaSBdICk7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydFxyXG5cdFx0aWYgKCBzLmJlZm9yZVNlbmQgJiZcclxuXHRcdFx0KCBzLmJlZm9yZVNlbmQuY2FsbCggY2FsbGJhY2tDb250ZXh0LCBqcVhIUiwgcyApID09PSBmYWxzZSB8fCBzdGF0ZSA9PT0gMiApICkge1xyXG5cclxuXHRcdFx0Ly8gQWJvcnQgaWYgbm90IGRvbmUgYWxyZWFkeSBhbmQgcmV0dXJuXHJcblx0XHRcdHJldHVybiBqcVhIUi5hYm9ydCgpO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIGFib3J0aW5nIGlzIG5vIGxvbmdlciBhIGNhbmNlbGxhdGlvblxyXG5cdFx0c3RyQWJvcnQgPSBcImFib3J0XCI7XHJcblxyXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzXHJcblx0XHRmb3IgKCBpIGluIHsgc3VjY2VzczogMSwgZXJyb3I6IDEsIGNvbXBsZXRlOiAxIH0gKSB7XHJcblx0XHRcdGpxWEhSWyBpIF0oIHNbIGkgXSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIEdldCB0cmFuc3BvcnRcclxuXHRcdHRyYW5zcG9ydCA9IGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRzLCBzLCBvcHRpb25zLCBqcVhIUiApO1xyXG5cclxuXHRcdC8vIElmIG5vIHRyYW5zcG9ydCwgd2UgYXV0by1hYm9ydFxyXG5cdFx0aWYgKCAhdHJhbnNwb3J0ICkge1xyXG5cdFx0XHRkb25lKCAtMSwgXCJObyBUcmFuc3BvcnRcIiApO1xyXG5cdFx0fSBlbHNlIHtcclxuXHRcdFx0anFYSFIucmVhZHlTdGF0ZSA9IDE7XHJcblxyXG5cdFx0XHQvLyBTZW5kIGdsb2JhbCBldmVudFxyXG5cdFx0XHRpZiAoIGZpcmVHbG9iYWxzICkge1xyXG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhTZW5kXCIsIFsganFYSFIsIHMgXSApO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhamF4U2VuZCwgc3RvcCB0aGVyZVxyXG5cdFx0XHRpZiAoIHN0YXRlID09PSAyICkge1xyXG5cdFx0XHRcdHJldHVybiBqcVhIUjtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gVGltZW91dFxyXG5cdFx0XHRpZiAoIHMuYXN5bmMgJiYgcy50aW1lb3V0ID4gMCApIHtcclxuXHRcdFx0XHR0aW1lb3V0VGltZXIgPSB3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0XHRqcVhIUi5hYm9ydCggXCJ0aW1lb3V0XCIgKTtcclxuXHRcdFx0XHR9LCBzLnRpbWVvdXQgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRzdGF0ZSA9IDE7XHJcblx0XHRcdFx0dHJhbnNwb3J0LnNlbmQoIHJlcXVlc3RIZWFkZXJzLCBkb25lICk7XHJcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xyXG5cclxuXHRcdFx0XHQvLyBQcm9wYWdhdGUgZXhjZXB0aW9uIGFzIGVycm9yIGlmIG5vdCBkb25lXHJcblx0XHRcdFx0aWYgKCBzdGF0ZSA8IDIgKSB7XHJcblx0XHRcdFx0XHRkb25lKCAtMSwgZSApO1xyXG5cclxuXHRcdFx0XHQvLyBTaW1wbHkgcmV0aHJvdyBvdGhlcndpc2VcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0dGhyb3cgZTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHQvLyBDYWxsYmFjayBmb3Igd2hlbiBldmVyeXRoaW5nIGlzIGRvbmVcclxuXHRcdGZ1bmN0aW9uIGRvbmUoIHN0YXR1cywgbmF0aXZlU3RhdHVzVGV4dCwgcmVzcG9uc2VzLCBoZWFkZXJzICkge1xyXG5cdFx0XHR2YXIgaXNTdWNjZXNzLCBzdWNjZXNzLCBlcnJvciwgcmVzcG9uc2UsIG1vZGlmaWVkLFxyXG5cdFx0XHRcdHN0YXR1c1RleHQgPSBuYXRpdmVTdGF0dXNUZXh0O1xyXG5cclxuXHRcdFx0Ly8gQ2FsbGVkIG9uY2VcclxuXHRcdFx0aWYgKCBzdGF0ZSA9PT0gMiApIHtcclxuXHRcdFx0XHRyZXR1cm47XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFN0YXRlIGlzIFwiZG9uZVwiIG5vd1xyXG5cdFx0XHRzdGF0ZSA9IDI7XHJcblxyXG5cdFx0XHQvLyBDbGVhciB0aW1lb3V0IGlmIGl0IGV4aXN0c1xyXG5cdFx0XHRpZiAoIHRpbWVvdXRUaW1lciApIHtcclxuXHRcdFx0XHR3aW5kb3cuY2xlYXJUaW1lb3V0KCB0aW1lb3V0VGltZXIgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gRGVyZWZlcmVuY2UgdHJhbnNwb3J0IGZvciBlYXJseSBnYXJiYWdlIGNvbGxlY3Rpb25cclxuXHRcdFx0Ly8gKG5vIG1hdHRlciBob3cgbG9uZyB0aGUganFYSFIgb2JqZWN0IHdpbGwgYmUgdXNlZClcclxuXHRcdFx0dHJhbnNwb3J0ID0gdW5kZWZpbmVkO1xyXG5cclxuXHRcdFx0Ly8gQ2FjaGUgcmVzcG9uc2UgaGVhZGVyc1xyXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8IFwiXCI7XHJcblxyXG5cdFx0XHQvLyBTZXQgcmVhZHlTdGF0ZVxyXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gc3RhdHVzID4gMCA/IDQgOiAwO1xyXG5cclxuXHRcdFx0Ly8gRGV0ZXJtaW5lIGlmIHN1Y2Nlc3NmdWxcclxuXHRcdFx0aXNTdWNjZXNzID0gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQ7XHJcblxyXG5cdFx0XHQvLyBHZXQgcmVzcG9uc2UgZGF0YVxyXG5cdFx0XHRpZiAoIHJlc3BvbnNlcyApIHtcclxuXHRcdFx0XHRyZXNwb25zZSA9IGFqYXhIYW5kbGVSZXNwb25zZXMoIHMsIGpxWEhSLCByZXNwb25zZXMgKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gQ29udmVydCBubyBtYXR0ZXIgd2hhdCAodGhhdCB3YXkgcmVzcG9uc2VYWFggZmllbGRzIGFyZSBhbHdheXMgc2V0KVxyXG5cdFx0XHRyZXNwb25zZSA9IGFqYXhDb252ZXJ0KCBzLCByZXNwb25zZSwganFYSFIsIGlzU3VjY2VzcyApO1xyXG5cclxuXHRcdFx0Ly8gSWYgc3VjY2Vzc2Z1bCwgaGFuZGxlIHR5cGUgY2hhaW5pbmdcclxuXHRcdFx0aWYgKCBpc1N1Y2Nlc3MgKSB7XHJcblxyXG5cdFx0XHRcdC8vIFNldCB0aGUgSWYtTW9kaWZpZWQtU2luY2UgYW5kL29yIElmLU5vbmUtTWF0Y2ggaGVhZGVyLCBpZiBpbiBpZk1vZGlmaWVkIG1vZGUuXHJcblx0XHRcdFx0aWYgKCBzLmlmTW9kaWZpZWQgKSB7XHJcblx0XHRcdFx0XHRtb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkxhc3QtTW9kaWZpZWRcIiApO1xyXG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcclxuXHRcdFx0XHRcdFx0alF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSA9IG1vZGlmaWVkO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0bW9kaWZpZWQgPSBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJldGFnXCIgKTtcclxuXHRcdFx0XHRcdGlmICggbW9kaWZpZWQgKSB7XHJcblx0XHRcdFx0XHRcdGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQvLyBpZiBubyBjb250ZW50XHJcblx0XHRcdFx0aWYgKCBzdGF0dXMgPT09IDIwNCB8fCBzLnR5cGUgPT09IFwiSEVBRFwiICkge1xyXG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm9jb250ZW50XCI7XHJcblxyXG5cdFx0XHRcdC8vIGlmIG5vdCBtb2RpZmllZFxyXG5cdFx0XHRcdH0gZWxzZSBpZiAoIHN0YXR1cyA9PT0gMzA0ICkge1xyXG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm90bW9kaWZpZWRcIjtcclxuXHJcblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBkYXRhLCBsZXQncyBjb252ZXJ0IGl0XHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSByZXNwb25zZS5zdGF0ZTtcclxuXHRcdFx0XHRcdHN1Y2Nlc3MgPSByZXNwb25zZS5kYXRhO1xyXG5cdFx0XHRcdFx0ZXJyb3IgPSByZXNwb25zZS5lcnJvcjtcclxuXHRcdFx0XHRcdGlzU3VjY2VzcyA9ICFlcnJvcjtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHRcdC8vIFdlIGV4dHJhY3QgZXJyb3IgZnJvbSBzdGF0dXNUZXh0XHJcblx0XHRcdFx0Ly8gdGhlbiBub3JtYWxpemUgc3RhdHVzVGV4dCBhbmQgc3RhdHVzIGZvciBub24tYWJvcnRzXHJcblx0XHRcdFx0ZXJyb3IgPSBzdGF0dXNUZXh0O1xyXG5cdFx0XHRcdGlmICggc3RhdHVzIHx8ICFzdGF0dXNUZXh0ICkge1xyXG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwiZXJyb3JcIjtcclxuXHRcdFx0XHRcdGlmICggc3RhdHVzIDwgMCApIHtcclxuXHRcdFx0XHRcdFx0c3RhdHVzID0gMDtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIFNldCBkYXRhIGZvciB0aGUgZmFrZSB4aHIgb2JqZWN0XHJcblx0XHRcdGpxWEhSLnN0YXR1cyA9IHN0YXR1cztcclxuXHRcdFx0anFYSFIuc3RhdHVzVGV4dCA9ICggbmF0aXZlU3RhdHVzVGV4dCB8fCBzdGF0dXNUZXh0ICkgKyBcIlwiO1xyXG5cclxuXHRcdFx0Ly8gU3VjY2Vzcy9FcnJvclxyXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcclxuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIHN1Y2Nlc3MsIHN0YXR1c1RleHQsIGpxWEhSIF0gKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCBjYWxsYmFja0NvbnRleHQsIFsganFYSFIsIHN0YXR1c1RleHQsIGVycm9yIF0gKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3NcclxuXHRcdFx0anFYSFIuc3RhdHVzQ29kZSggc3RhdHVzQ29kZSApO1xyXG5cdFx0XHRzdGF0dXNDb2RlID0gdW5kZWZpbmVkO1xyXG5cclxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcclxuXHRcdFx0XHRnbG9iYWxFdmVudENvbnRleHQudHJpZ2dlciggaXNTdWNjZXNzID8gXCJhamF4U3VjY2Vzc1wiIDogXCJhamF4RXJyb3JcIixcclxuXHRcdFx0XHRcdFsganFYSFIsIHMsIGlzU3VjY2VzcyA/IHN1Y2Nlc3MgOiBlcnJvciBdICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIENvbXBsZXRlXHJcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7XHJcblxyXG5cdFx0XHRpZiAoIGZpcmVHbG9iYWxzICkge1xyXG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhDb21wbGV0ZVwiLCBbIGpxWEhSLCBzIF0gKTtcclxuXHJcblx0XHRcdFx0Ly8gSGFuZGxlIHRoZSBnbG9iYWwgQUpBWCBjb3VudGVyXHJcblx0XHRcdFx0aWYgKCAhKCAtLWpRdWVyeS5hY3RpdmUgKSApIHtcclxuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC50cmlnZ2VyKCBcImFqYXhTdG9wXCIgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4ganFYSFI7XHJcblx0fSxcclxuXHJcblx0Z2V0SlNPTjogZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2sgKSB7XHJcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCBkYXRhLCBjYWxsYmFjaywgXCJqc29uXCIgKTtcclxuXHR9LFxyXG5cclxuXHRnZXRTY3JpcHQ6IGZ1bmN0aW9uKCB1cmwsIGNhbGxiYWNrICkge1xyXG5cdFx0cmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgdW5kZWZpbmVkLCBjYWxsYmFjaywgXCJzY3JpcHRcIiApO1xyXG5cdH1cclxufSApO1xyXG5cclxualF1ZXJ5LmVhY2goIFsgXCJnZXRcIiwgXCJwb3N0XCIgXSwgZnVuY3Rpb24oIGksIG1ldGhvZCApIHtcclxuXHRqUXVlcnlbIG1ldGhvZCBdID0gZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2ssIHR5cGUgKSB7XHJcblxyXG5cdFx0Ly8gc2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWRcclxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGRhdGEgKSApIHtcclxuXHRcdFx0dHlwZSA9IHR5cGUgfHwgY2FsbGJhY2s7XHJcblx0XHRcdGNhbGxiYWNrID0gZGF0YTtcclxuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBUaGUgdXJsIGNhbiBiZSBhbiBvcHRpb25zIG9iamVjdCAod2hpY2ggdGhlbiBtdXN0IGhhdmUgLnVybClcclxuXHRcdHJldHVybiBqUXVlcnkuYWpheCggalF1ZXJ5LmV4dGVuZCgge1xyXG5cdFx0XHR1cmw6IHVybCxcclxuXHRcdFx0dHlwZTogbWV0aG9kLFxyXG5cdFx0XHRkYXRhVHlwZTogdHlwZSxcclxuXHRcdFx0ZGF0YTogZGF0YSxcclxuXHRcdFx0c3VjY2VzczogY2FsbGJhY2tcclxuXHRcdH0sIGpRdWVyeS5pc1BsYWluT2JqZWN0KCB1cmwgKSAmJiB1cmwgKSApO1xyXG5cdH07XHJcbn0gKTtcclxuXHJcblxyXG5qUXVlcnkuX2V2YWxVcmwgPSBmdW5jdGlvbiggdXJsICkge1xyXG5cdHJldHVybiBqUXVlcnkuYWpheCgge1xyXG5cdFx0dXJsOiB1cmwsXHJcblxyXG5cdFx0Ly8gTWFrZSB0aGlzIGV4cGxpY2l0LCBzaW5jZSB1c2VyIGNhbiBvdmVycmlkZSB0aGlzIHRocm91Z2ggYWpheFNldHVwICgjMTEyNjQpXHJcblx0XHR0eXBlOiBcIkdFVFwiLFxyXG5cdFx0ZGF0YVR5cGU6IFwic2NyaXB0XCIsXHJcblx0XHRjYWNoZTogdHJ1ZSxcclxuXHRcdGFzeW5jOiBmYWxzZSxcclxuXHRcdGdsb2JhbDogZmFsc2UsXHJcblx0XHRcInRocm93c1wiOiB0cnVlXHJcblx0fSApO1xyXG59O1xyXG5cclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHR3cmFwQWxsOiBmdW5jdGlvbiggaHRtbCApIHtcclxuXHRcdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIGh0bWwgKSApIHtcclxuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XHJcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcEFsbCggaHRtbC5jYWxsKCB0aGlzLCBpICkgKTtcclxuXHRcdFx0fSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggdGhpc1sgMCBdICkge1xyXG5cclxuXHRcdFx0Ly8gVGhlIGVsZW1lbnRzIHRvIHdyYXAgdGhlIHRhcmdldCBhcm91bmRcclxuXHRcdFx0dmFyIHdyYXAgPSBqUXVlcnkoIGh0bWwsIHRoaXNbIDAgXS5vd25lckRvY3VtZW50ICkuZXEoIDAgKS5jbG9uZSggdHJ1ZSApO1xyXG5cclxuXHRcdFx0aWYgKCB0aGlzWyAwIF0ucGFyZW50Tm9kZSApIHtcclxuXHRcdFx0XHR3cmFwLmluc2VydEJlZm9yZSggdGhpc1sgMCBdICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHdyYXAubWFwKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHR2YXIgZWxlbSA9IHRoaXM7XHJcblxyXG5cdFx0XHRcdHdoaWxlICggZWxlbS5maXJzdENoaWxkICYmIGVsZW0uZmlyc3RDaGlsZC5ub2RlVHlwZSA9PT0gMSApIHtcclxuXHRcdFx0XHRcdGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRyZXR1cm4gZWxlbTtcclxuXHRcdFx0fSApLmFwcGVuZCggdGhpcyApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzO1xyXG5cdH0sXHJcblxyXG5cdHdyYXBJbm5lcjogZnVuY3Rpb24oIGh0bWwgKSB7XHJcblx0XHRpZiAoIGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICkgKSB7XHJcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xyXG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBJbm5lciggaHRtbC5jYWxsKCB0aGlzLCBpICkgKTtcclxuXHRcdFx0fSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHR2YXIgc2VsZiA9IGpRdWVyeSggdGhpcyApLFxyXG5cdFx0XHRcdGNvbnRlbnRzID0gc2VsZi5jb250ZW50cygpO1xyXG5cclxuXHRcdFx0aWYgKCBjb250ZW50cy5sZW5ndGggKSB7XHJcblx0XHRcdFx0Y29udGVudHMud3JhcEFsbCggaHRtbCApO1xyXG5cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRzZWxmLmFwcGVuZCggaHRtbCApO1xyXG5cdFx0XHR9XHJcblx0XHR9ICk7XHJcblx0fSxcclxuXHJcblx0d3JhcDogZnVuY3Rpb24oIGh0bWwgKSB7XHJcblx0XHR2YXIgaXNGdW5jdGlvbiA9IGpRdWVyeS5pc0Z1bmN0aW9uKCBodG1sICk7XHJcblxyXG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XHJcblx0XHRcdGpRdWVyeSggdGhpcyApLndyYXBBbGwoIGlzRnVuY3Rpb24gPyBodG1sLmNhbGwoIHRoaXMsIGkgKSA6IGh0bWwgKTtcclxuXHRcdH0gKTtcclxuXHR9LFxyXG5cclxuXHR1bndyYXA6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIHRoaXMucGFyZW50KCkuZWFjaCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdGlmICggIWpRdWVyeS5ub2RlTmFtZSggdGhpcywgXCJib2R5XCIgKSApIHtcclxuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5yZXBsYWNlV2l0aCggdGhpcy5jaGlsZE5vZGVzICk7XHJcblx0XHRcdH1cclxuXHRcdH0gKS5lbmQoKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG5mdW5jdGlvbiBnZXREaXNwbGF5KCBlbGVtICkge1xyXG5cdHJldHVybiBlbGVtLnN0eWxlICYmIGVsZW0uc3R5bGUuZGlzcGxheSB8fCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xyXG59XHJcblxyXG5mdW5jdGlvbiBmaWx0ZXJIaWRkZW4oIGVsZW0gKSB7XHJcblxyXG5cdC8vIERpc2Nvbm5lY3RlZCBlbGVtZW50cyBhcmUgY29uc2lkZXJlZCBoaWRkZW5cclxuXHRpZiAoICFqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudCwgZWxlbSApICkge1xyXG5cdFx0cmV0dXJuIHRydWU7XHJcblx0fVxyXG5cdHdoaWxlICggZWxlbSAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xyXG5cdFx0aWYgKCBnZXREaXNwbGF5KCBlbGVtICkgPT09IFwibm9uZVwiIHx8IGVsZW0udHlwZSA9PT0gXCJoaWRkZW5cIiApIHtcclxuXHRcdFx0cmV0dXJuIHRydWU7XHJcblx0XHR9XHJcblx0XHRlbGVtID0gZWxlbS5wYXJlbnROb2RlO1xyXG5cdH1cclxuXHRyZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcbmpRdWVyeS5leHByLmZpbHRlcnMuaGlkZGVuID0gZnVuY3Rpb24oIGVsZW0gKSB7XHJcblxyXG5cdC8vIFN1cHBvcnQ6IE9wZXJhIDw9IDEyLjEyXHJcblx0Ly8gT3BlcmEgcmVwb3J0cyBvZmZzZXRXaWR0aHMgYW5kIG9mZnNldEhlaWdodHMgbGVzcyB0aGFuIHplcm8gb24gc29tZSBlbGVtZW50c1xyXG5cdHJldHVybiBzdXBwb3J0LnJlbGlhYmxlSGlkZGVuT2Zmc2V0cygpID9cclxuXHRcdCggZWxlbS5vZmZzZXRXaWR0aCA8PSAwICYmIGVsZW0ub2Zmc2V0SGVpZ2h0IDw9IDAgJiZcclxuXHRcdFx0IWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggKSA6XHJcblx0XHRcdGZpbHRlckhpZGRlbiggZWxlbSApO1xyXG59O1xyXG5cclxualF1ZXJ5LmV4cHIuZmlsdGVycy52aXNpYmxlID0gZnVuY3Rpb24oIGVsZW0gKSB7XHJcblx0cmV0dXJuICFqUXVlcnkuZXhwci5maWx0ZXJzLmhpZGRlbiggZWxlbSApO1xyXG59O1xyXG5cclxuXHJcblxyXG5cclxudmFyIHIyMCA9IC8lMjAvZyxcclxuXHRyYnJhY2tldCA9IC9cXFtcXF0kLyxcclxuXHRyQ1JMRiA9IC9cXHI/XFxuL2csXHJcblx0cnN1Ym1pdHRlclR5cGVzID0gL14oPzpzdWJtaXR8YnV0dG9ufGltYWdlfHJlc2V0fGZpbGUpJC9pLFxyXG5cdHJzdWJtaXR0YWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGtleWdlbikvaTtcclxuXHJcbmZ1bmN0aW9uIGJ1aWxkUGFyYW1zKCBwcmVmaXgsIG9iaiwgdHJhZGl0aW9uYWwsIGFkZCApIHtcclxuXHR2YXIgbmFtZTtcclxuXHJcblx0aWYgKCBqUXVlcnkuaXNBcnJheSggb2JqICkgKSB7XHJcblxyXG5cdFx0Ly8gU2VyaWFsaXplIGFycmF5IGl0ZW0uXHJcblx0XHRqUXVlcnkuZWFjaCggb2JqLCBmdW5jdGlvbiggaSwgdiApIHtcclxuXHRcdFx0aWYgKCB0cmFkaXRpb25hbCB8fCByYnJhY2tldC50ZXN0KCBwcmVmaXggKSApIHtcclxuXHJcblx0XHRcdFx0Ly8gVHJlYXQgZWFjaCBhcnJheSBpdGVtIGFzIGEgc2NhbGFyLlxyXG5cdFx0XHRcdGFkZCggcHJlZml4LCB2ICk7XHJcblxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cclxuXHRcdFx0XHQvLyBJdGVtIGlzIG5vbi1zY2FsYXIgKGFycmF5IG9yIG9iamVjdCksIGVuY29kZSBpdHMgbnVtZXJpYyBpbmRleC5cclxuXHRcdFx0XHRidWlsZFBhcmFtcyhcclxuXHRcdFx0XHRcdHByZWZpeCArIFwiW1wiICsgKCB0eXBlb2YgdiA9PT0gXCJvYmplY3RcIiAmJiB2ICE9IG51bGwgPyBpIDogXCJcIiApICsgXCJdXCIsXHJcblx0XHRcdFx0XHR2LFxyXG5cdFx0XHRcdFx0dHJhZGl0aW9uYWwsXHJcblx0XHRcdFx0XHRhZGRcclxuXHRcdFx0XHQpO1xyXG5cdFx0XHR9XHJcblx0XHR9ICk7XHJcblxyXG5cdH0gZWxzZSBpZiAoICF0cmFkaXRpb25hbCAmJiBqUXVlcnkudHlwZSggb2JqICkgPT09IFwib2JqZWN0XCIgKSB7XHJcblxyXG5cdFx0Ly8gU2VyaWFsaXplIG9iamVjdCBpdGVtLlxyXG5cdFx0Zm9yICggbmFtZSBpbiBvYmogKSB7XHJcblx0XHRcdGJ1aWxkUGFyYW1zKCBwcmVmaXggKyBcIltcIiArIG5hbWUgKyBcIl1cIiwgb2JqWyBuYW1lIF0sIHRyYWRpdGlvbmFsLCBhZGQgKTtcclxuXHRcdH1cclxuXHJcblx0fSBlbHNlIHtcclxuXHJcblx0XHQvLyBTZXJpYWxpemUgc2NhbGFyIGl0ZW0uXHJcblx0XHRhZGQoIHByZWZpeCwgb2JqICk7XHJcblx0fVxyXG59XHJcblxyXG4vLyBTZXJpYWxpemUgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cyBvciBhIHNldCBvZlxyXG4vLyBrZXkvdmFsdWVzIGludG8gYSBxdWVyeSBzdHJpbmdcclxualF1ZXJ5LnBhcmFtID0gZnVuY3Rpb24oIGEsIHRyYWRpdGlvbmFsICkge1xyXG5cdHZhciBwcmVmaXgsXHJcblx0XHRzID0gW10sXHJcblx0XHRhZGQgPSBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcclxuXHJcblx0XHRcdC8vIElmIHZhbHVlIGlzIGEgZnVuY3Rpb24sIGludm9rZSBpdCBhbmQgcmV0dXJuIGl0cyB2YWx1ZVxyXG5cdFx0XHR2YWx1ZSA9IGpRdWVyeS5pc0Z1bmN0aW9uKCB2YWx1ZSApID8gdmFsdWUoKSA6ICggdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSApO1xyXG5cdFx0XHRzWyBzLmxlbmd0aCBdID0gZW5jb2RlVVJJQ29tcG9uZW50KCBrZXkgKSArIFwiPVwiICsgZW5jb2RlVVJJQ29tcG9uZW50KCB2YWx1ZSApO1xyXG5cdFx0fTtcclxuXHJcblx0Ly8gU2V0IHRyYWRpdGlvbmFsIHRvIHRydWUgZm9yIGpRdWVyeSA8PSAxLjMuMiBiZWhhdmlvci5cclxuXHRpZiAoIHRyYWRpdGlvbmFsID09PSB1bmRlZmluZWQgKSB7XHJcblx0XHR0cmFkaXRpb25hbCA9IGpRdWVyeS5hamF4U2V0dGluZ3MgJiYgalF1ZXJ5LmFqYXhTZXR0aW5ncy50cmFkaXRpb25hbDtcclxuXHR9XHJcblxyXG5cdC8vIElmIGFuIGFycmF5IHdhcyBwYXNzZWQgaW4sIGFzc3VtZSB0aGF0IGl0IGlzIGFuIGFycmF5IG9mIGZvcm0gZWxlbWVudHMuXHJcblx0aWYgKCBqUXVlcnkuaXNBcnJheSggYSApIHx8ICggYS5qcXVlcnkgJiYgIWpRdWVyeS5pc1BsYWluT2JqZWN0KCBhICkgKSApIHtcclxuXHJcblx0XHQvLyBTZXJpYWxpemUgdGhlIGZvcm0gZWxlbWVudHNcclxuXHRcdGpRdWVyeS5lYWNoKCBhLCBmdW5jdGlvbigpIHtcclxuXHRcdFx0YWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTtcclxuXHRcdH0gKTtcclxuXHJcblx0fSBlbHNlIHtcclxuXHJcblx0XHQvLyBJZiB0cmFkaXRpb25hbCwgZW5jb2RlIHRoZSBcIm9sZFwiIHdheSAodGhlIHdheSAxLjMuMiBvciBvbGRlclxyXG5cdFx0Ly8gZGlkIGl0KSwgb3RoZXJ3aXNlIGVuY29kZSBwYXJhbXMgcmVjdXJzaXZlbHkuXHJcblx0XHRmb3IgKCBwcmVmaXggaW4gYSApIHtcclxuXHRcdFx0YnVpbGRQYXJhbXMoIHByZWZpeCwgYVsgcHJlZml4IF0sIHRyYWRpdGlvbmFsLCBhZGQgKTtcclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdC8vIFJldHVybiB0aGUgcmVzdWx0aW5nIHNlcmlhbGl6YXRpb25cclxuXHRyZXR1cm4gcy5qb2luKCBcIiZcIiApLnJlcGxhY2UoIHIyMCwgXCIrXCIgKTtcclxufTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRzZXJpYWxpemU6IGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIGpRdWVyeS5wYXJhbSggdGhpcy5zZXJpYWxpemVBcnJheSgpICk7XHJcblx0fSxcclxuXHRzZXJpYWxpemVBcnJheTogZnVuY3Rpb24oKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdFx0Ly8gQ2FuIGFkZCBwcm9wSG9vayBmb3IgXCJlbGVtZW50c1wiIHRvIGZpbHRlciBvciBhZGQgZm9ybSBlbGVtZW50c1xyXG5cdFx0XHR2YXIgZWxlbWVudHMgPSBqUXVlcnkucHJvcCggdGhpcywgXCJlbGVtZW50c1wiICk7XHJcblx0XHRcdHJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzO1xyXG5cdFx0fSApXHJcblx0XHQuZmlsdGVyKCBmdW5jdGlvbigpIHtcclxuXHRcdFx0dmFyIHR5cGUgPSB0aGlzLnR5cGU7XHJcblxyXG5cdFx0XHQvLyBVc2UgLmlzKFwiOmRpc2FibGVkXCIpIHNvIHRoYXQgZmllbGRzZXRbZGlzYWJsZWRdIHdvcmtzXHJcblx0XHRcdHJldHVybiB0aGlzLm5hbWUgJiYgIWpRdWVyeSggdGhpcyApLmlzKCBcIjpkaXNhYmxlZFwiICkgJiZcclxuXHRcdFx0XHRyc3VibWl0dGFibGUudGVzdCggdGhpcy5ub2RlTmFtZSApICYmICFyc3VibWl0dGVyVHlwZXMudGVzdCggdHlwZSApICYmXHJcblx0XHRcdFx0KCB0aGlzLmNoZWNrZWQgfHwgIXJjaGVja2FibGVUeXBlLnRlc3QoIHR5cGUgKSApO1xyXG5cdFx0fSApXHJcblx0XHQubWFwKCBmdW5jdGlvbiggaSwgZWxlbSApIHtcclxuXHRcdFx0dmFyIHZhbCA9IGpRdWVyeSggdGhpcyApLnZhbCgpO1xyXG5cclxuXHRcdFx0cmV0dXJuIHZhbCA9PSBudWxsID9cclxuXHRcdFx0XHRudWxsIDpcclxuXHRcdFx0XHRqUXVlcnkuaXNBcnJheSggdmFsICkgP1xyXG5cdFx0XHRcdFx0alF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsICkge1xyXG5cdFx0XHRcdFx0XHRyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsIFwiXFxyXFxuXCIgKSB9O1xyXG5cdFx0XHRcdFx0fSApIDpcclxuXHRcdFx0XHRcdHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcclxuXHRcdH0gKS5nZXQoKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG4vLyBDcmVhdGUgdGhlIHJlcXVlc3Qgb2JqZWN0XHJcbi8vIChUaGlzIGlzIHN0aWxsIGF0dGFjaGVkIHRvIGFqYXhTZXR0aW5ncyBmb3IgYmFja3dhcmQgY29tcGF0aWJpbGl0eSlcclxualF1ZXJ5LmFqYXhTZXR0aW5ncy54aHIgPSB3aW5kb3cuQWN0aXZlWE9iamVjdCAhPT0gdW5kZWZpbmVkID9cclxuXHJcblx0Ly8gU3VwcG9ydDogSUU2LUlFOFxyXG5cdGZ1bmN0aW9uKCkge1xyXG5cclxuXHRcdC8vIFhIUiBjYW5ub3QgYWNjZXNzIGxvY2FsIGZpbGVzLCBhbHdheXMgdXNlIEFjdGl2ZVggZm9yIHRoYXQgY2FzZVxyXG5cdFx0aWYgKCB0aGlzLmlzTG9jYWwgKSB7XHJcblx0XHRcdHJldHVybiBjcmVhdGVBY3RpdmVYSFIoKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBTdXBwb3J0OiBJRSA5LTExXHJcblx0XHQvLyBJRSBzZWVtcyB0byBlcnJvciBvbiBjcm9zcy1kb21haW4gUEFUQ0ggcmVxdWVzdHMgd2hlbiBBY3RpdmVYIFhIUlxyXG5cdFx0Ly8gaXMgdXNlZC4gSW4gSUUgOSsgYWx3YXlzIHVzZSB0aGUgbmF0aXZlIFhIUi5cclxuXHRcdC8vIE5vdGU6IHRoaXMgY29uZGl0aW9uIHdvbid0IGNhdGNoIEVkZ2UgYXMgaXQgZG9lc24ndCBkZWZpbmVcclxuXHRcdC8vIGRvY3VtZW50LmRvY3VtZW50TW9kZSBidXQgaXQgYWxzbyBkb2Vzbid0IHN1cHBvcnQgQWN0aXZlWCBzbyBpdCB3b24ndFxyXG5cdFx0Ly8gcmVhY2ggdGhpcyBjb2RlLlxyXG5cdFx0aWYgKCBkb2N1bWVudC5kb2N1bWVudE1vZGUgPiA4ICkge1xyXG5cdFx0XHRyZXR1cm4gY3JlYXRlU3RhbmRhcmRYSFIoKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBTdXBwb3J0OiBJRTw5XHJcblx0XHQvLyBvbGRJRSBYSFIgZG9lcyBub3Qgc3VwcG9ydCBub24tUkZDMjYxNiBtZXRob2RzICgjMTMyNDApXHJcblx0XHQvLyBTZWUgaHR0cDovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL21zNTM2NjQ4KHY9dnMuODUpLmFzcHhcclxuXHRcdC8vIGFuZCBodHRwOi8vd3d3LnczLm9yZy9Qcm90b2NvbHMvcmZjMjYxNi9yZmMyNjE2LXNlYzkuaHRtbCNzZWM5XHJcblx0XHQvLyBBbHRob3VnaCB0aGlzIGNoZWNrIGZvciBzaXggbWV0aG9kcyBpbnN0ZWFkIG9mIGVpZ2h0XHJcblx0XHQvLyBzaW5jZSBJRSBhbHNvIGRvZXMgbm90IHN1cHBvcnQgXCJ0cmFjZVwiIGFuZCBcImNvbm5lY3RcIlxyXG5cdFx0cmV0dXJuIC9eKGdldHxwb3N0fGhlYWR8cHV0fGRlbGV0ZXxvcHRpb25zKSQvaS50ZXN0KCB0aGlzLnR5cGUgKSAmJlxyXG5cdFx0XHRjcmVhdGVTdGFuZGFyZFhIUigpIHx8IGNyZWF0ZUFjdGl2ZVhIUigpO1xyXG5cdH0gOlxyXG5cclxuXHQvLyBGb3IgYWxsIG90aGVyIGJyb3dzZXJzLCB1c2UgdGhlIHN0YW5kYXJkIFhNTEh0dHBSZXF1ZXN0IG9iamVjdFxyXG5cdGNyZWF0ZVN0YW5kYXJkWEhSO1xyXG5cclxudmFyIHhocklkID0gMCxcclxuXHR4aHJDYWxsYmFja3MgPSB7fSxcclxuXHR4aHJTdXBwb3J0ZWQgPSBqUXVlcnkuYWpheFNldHRpbmdzLnhocigpO1xyXG5cclxuLy8gU3VwcG9ydDogSUU8MTBcclxuLy8gT3BlbiByZXF1ZXN0cyBtdXN0IGJlIG1hbnVhbGx5IGFib3J0ZWQgb24gdW5sb2FkICgjNTI4MClcclxuLy8gU2VlIGh0dHBzOi8vc3VwcG9ydC5taWNyb3NvZnQuY29tL2tiLzI4NTY3NDYgZm9yIG1vcmUgaW5mb1xyXG5pZiAoIHdpbmRvdy5hdHRhY2hFdmVudCApIHtcclxuXHR3aW5kb3cuYXR0YWNoRXZlbnQoIFwib251bmxvYWRcIiwgZnVuY3Rpb24oKSB7XHJcblx0XHRmb3IgKCB2YXIga2V5IGluIHhockNhbGxiYWNrcyApIHtcclxuXHRcdFx0eGhyQ2FsbGJhY2tzWyBrZXkgXSggdW5kZWZpbmVkLCB0cnVlICk7XHJcblx0XHR9XHJcblx0fSApO1xyXG59XHJcblxyXG4vLyBEZXRlcm1pbmUgc3VwcG9ydCBwcm9wZXJ0aWVzXHJcbnN1cHBvcnQuY29ycyA9ICEheGhyU3VwcG9ydGVkICYmICggXCJ3aXRoQ3JlZGVudGlhbHNcIiBpbiB4aHJTdXBwb3J0ZWQgKTtcclxueGhyU3VwcG9ydGVkID0gc3VwcG9ydC5hamF4ID0gISF4aHJTdXBwb3J0ZWQ7XHJcblxyXG4vLyBDcmVhdGUgdHJhbnNwb3J0IGlmIHRoZSBicm93c2VyIGNhbiBwcm92aWRlIGFuIHhoclxyXG5pZiAoIHhoclN1cHBvcnRlZCApIHtcclxuXHJcblx0alF1ZXJ5LmFqYXhUcmFuc3BvcnQoIGZ1bmN0aW9uKCBvcHRpb25zICkge1xyXG5cclxuXHRcdC8vIENyb3NzIGRvbWFpbiBvbmx5IGFsbG93ZWQgaWYgc3VwcG9ydGVkIHRocm91Z2ggWE1MSHR0cFJlcXVlc3RcclxuXHRcdGlmICggIW9wdGlvbnMuY3Jvc3NEb21haW4gfHwgc3VwcG9ydC5jb3JzICkge1xyXG5cclxuXHRcdFx0dmFyIGNhbGxiYWNrO1xyXG5cclxuXHRcdFx0cmV0dXJuIHtcclxuXHRcdFx0XHRzZW5kOiBmdW5jdGlvbiggaGVhZGVycywgY29tcGxldGUgKSB7XHJcblx0XHRcdFx0XHR2YXIgaSxcclxuXHRcdFx0XHRcdFx0eGhyID0gb3B0aW9ucy54aHIoKSxcclxuXHRcdFx0XHRcdFx0aWQgPSArK3hocklkO1xyXG5cclxuXHRcdFx0XHRcdC8vIE9wZW4gdGhlIHNvY2tldFxyXG5cdFx0XHRcdFx0eGhyLm9wZW4oXHJcblx0XHRcdFx0XHRcdG9wdGlvbnMudHlwZSxcclxuXHRcdFx0XHRcdFx0b3B0aW9ucy51cmwsXHJcblx0XHRcdFx0XHRcdG9wdGlvbnMuYXN5bmMsXHJcblx0XHRcdFx0XHRcdG9wdGlvbnMudXNlcm5hbWUsXHJcblx0XHRcdFx0XHRcdG9wdGlvbnMucGFzc3dvcmRcclxuXHRcdFx0XHRcdCk7XHJcblxyXG5cdFx0XHRcdFx0Ly8gQXBwbHkgY3VzdG9tIGZpZWxkcyBpZiBwcm92aWRlZFxyXG5cdFx0XHRcdFx0aWYgKCBvcHRpb25zLnhockZpZWxkcyApIHtcclxuXHRcdFx0XHRcdFx0Zm9yICggaSBpbiBvcHRpb25zLnhockZpZWxkcyApIHtcclxuXHRcdFx0XHRcdFx0XHR4aHJbIGkgXSA9IG9wdGlvbnMueGhyRmllbGRzWyBpIF07XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHQvLyBPdmVycmlkZSBtaW1lIHR5cGUgaWYgbmVlZGVkXHJcblx0XHRcdFx0XHRpZiAoIG9wdGlvbnMubWltZVR5cGUgJiYgeGhyLm92ZXJyaWRlTWltZVR5cGUgKSB7XHJcblx0XHRcdFx0XHRcdHhoci5vdmVycmlkZU1pbWVUeXBlKCBvcHRpb25zLm1pbWVUeXBlICk7XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0Ly8gWC1SZXF1ZXN0ZWQtV2l0aCBoZWFkZXJcclxuXHRcdFx0XHRcdC8vIEZvciBjcm9zcy1kb21haW4gcmVxdWVzdHMsIHNlZWluZyBhcyBjb25kaXRpb25zIGZvciBhIHByZWZsaWdodCBhcmVcclxuXHRcdFx0XHRcdC8vIGFraW4gdG8gYSBqaWdzYXcgcHV6emxlLCB3ZSBzaW1wbHkgbmV2ZXIgc2V0IGl0IHRvIGJlIHN1cmUuXHJcblx0XHRcdFx0XHQvLyAoaXQgY2FuIGFsd2F5cyBiZSBzZXQgb24gYSBwZXItcmVxdWVzdCBiYXNpcyBvciBldmVuIHVzaW5nIGFqYXhTZXR1cClcclxuXHRcdFx0XHRcdC8vIEZvciBzYW1lLWRvbWFpbiByZXF1ZXN0cywgd29uJ3QgY2hhbmdlIGhlYWRlciBpZiBhbHJlYWR5IHByb3ZpZGVkLlxyXG5cdFx0XHRcdFx0aWYgKCAhb3B0aW9ucy5jcm9zc0RvbWFpbiAmJiAhaGVhZGVyc1sgXCJYLVJlcXVlc3RlZC1XaXRoXCIgXSApIHtcclxuXHRcdFx0XHRcdFx0aGVhZGVyc1sgXCJYLVJlcXVlc3RlZC1XaXRoXCIgXSA9IFwiWE1MSHR0cFJlcXVlc3RcIjtcclxuXHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHQvLyBTZXQgaGVhZGVyc1xyXG5cdFx0XHRcdFx0Zm9yICggaSBpbiBoZWFkZXJzICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8OVxyXG5cdFx0XHRcdFx0XHQvLyBJRSdzIEFjdGl2ZVhPYmplY3QgdGhyb3dzIGEgJ1R5cGUgTWlzbWF0Y2gnIGV4Y2VwdGlvbiB3aGVuIHNldHRpbmdcclxuXHRcdFx0XHRcdFx0Ly8gcmVxdWVzdCBoZWFkZXIgdG8gYSBudWxsLXZhbHVlLlxyXG5cdFx0XHRcdFx0XHQvL1xyXG5cdFx0XHRcdFx0XHQvLyBUbyBrZWVwIGNvbnNpc3RlbnQgd2l0aCBvdGhlciBYSFIgaW1wbGVtZW50YXRpb25zLCBjYXN0IHRoZSB2YWx1ZVxyXG5cdFx0XHRcdFx0XHQvLyB0byBzdHJpbmcgYW5kIGlnbm9yZSBgdW5kZWZpbmVkYC5cclxuXHRcdFx0XHRcdFx0aWYgKCBoZWFkZXJzWyBpIF0gIT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0XHRcdFx0XHR4aHIuc2V0UmVxdWVzdEhlYWRlciggaSwgaGVhZGVyc1sgaSBdICsgXCJcIiApO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0Ly8gRG8gc2VuZCB0aGUgcmVxdWVzdFxyXG5cdFx0XHRcdFx0Ly8gVGhpcyBtYXkgcmFpc2UgYW4gZXhjZXB0aW9uIHdoaWNoIGlzIGFjdHVhbGx5XHJcblx0XHRcdFx0XHQvLyBoYW5kbGVkIGluIGpRdWVyeS5hamF4IChzbyBubyB0cnkvY2F0Y2ggaGVyZSlcclxuXHRcdFx0XHRcdHhoci5zZW5kKCAoIG9wdGlvbnMuaGFzQ29udGVudCAmJiBvcHRpb25zLmRhdGEgKSB8fCBudWxsICk7XHJcblxyXG5cdFx0XHRcdFx0Ly8gTGlzdGVuZXJcclxuXHRcdFx0XHRcdGNhbGxiYWNrID0gZnVuY3Rpb24oIF8sIGlzQWJvcnQgKSB7XHJcblx0XHRcdFx0XHRcdHZhciBzdGF0dXMsIHN0YXR1c1RleHQsIHJlc3BvbnNlcztcclxuXHJcblx0XHRcdFx0XHRcdC8vIFdhcyBuZXZlciBjYWxsZWQgYW5kIGlzIGFib3J0ZWQgb3IgY29tcGxldGVcclxuXHRcdFx0XHRcdFx0aWYgKCBjYWxsYmFjayAmJiAoIGlzQWJvcnQgfHwgeGhyLnJlYWR5U3RhdGUgPT09IDQgKSApIHtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gQ2xlYW4gdXBcclxuXHRcdFx0XHRcdFx0XHRkZWxldGUgeGhyQ2FsbGJhY2tzWyBpZCBdO1xyXG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrID0gdW5kZWZpbmVkO1xyXG5cdFx0XHRcdFx0XHRcdHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBqUXVlcnkubm9vcDtcclxuXHJcblx0XHRcdFx0XHRcdFx0Ly8gQWJvcnQgbWFudWFsbHkgaWYgbmVlZGVkXHJcblx0XHRcdFx0XHRcdFx0aWYgKCBpc0Fib3J0ICkge1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCB4aHIucmVhZHlTdGF0ZSAhPT0gNCApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0eGhyLmFib3J0KCk7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRcdHJlc3BvbnNlcyA9IHt9O1xyXG5cdFx0XHRcdFx0XHRcdFx0c3RhdHVzID0geGhyLnN0YXR1cztcclxuXHJcblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRTwxMFxyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gQWNjZXNzaW5nIGJpbmFyeS1kYXRhIHJlc3BvbnNlVGV4dCB0aHJvd3MgYW4gZXhjZXB0aW9uXHJcblx0XHRcdFx0XHRcdFx0XHQvLyAoIzExNDI2KVxyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCB0eXBlb2YgeGhyLnJlc3BvbnNlVGV4dCA9PT0gXCJzdHJpbmdcIiApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0cmVzcG9uc2VzLnRleHQgPSB4aHIucmVzcG9uc2VUZXh0O1xyXG5cdFx0XHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0XHRcdC8vIEZpcmVmb3ggdGhyb3dzIGFuIGV4Y2VwdGlvbiB3aGVuIGFjY2Vzc2luZ1xyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gc3RhdHVzVGV4dCBmb3IgZmF1bHR5IGNyb3NzLWRvbWFpbiByZXF1ZXN0c1xyXG5cdFx0XHRcdFx0XHRcdFx0dHJ5IHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0c3RhdHVzVGV4dCA9IHhoci5zdGF0dXNUZXh0O1xyXG5cdFx0XHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBXZSBub3JtYWxpemUgd2l0aCBXZWJraXQgZ2l2aW5nIGFuIGVtcHR5IHN0YXR1c1RleHRcclxuXHRcdFx0XHRcdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwiXCI7XHJcblx0XHRcdFx0XHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gRmlsdGVyIHN0YXR1cyBmb3Igbm9uIHN0YW5kYXJkIGJlaGF2aW9yc1xyXG5cclxuXHRcdFx0XHRcdFx0XHRcdC8vIElmIHRoZSByZXF1ZXN0IGlzIGxvY2FsIGFuZCB3ZSBoYXZlIGRhdGE6IGFzc3VtZSBhIHN1Y2Nlc3NcclxuXHRcdFx0XHRcdFx0XHRcdC8vIChzdWNjZXNzIHdpdGggbm8gZGF0YSB3b24ndCBnZXQgbm90aWZpZWQsIHRoYXQncyB0aGUgYmVzdCB3ZVxyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gY2FuIGRvIGdpdmVuIGN1cnJlbnQgaW1wbGVtZW50YXRpb25zKVxyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKCAhc3RhdHVzICYmIG9wdGlvbnMuaXNMb2NhbCAmJiAhb3B0aW9ucy5jcm9zc0RvbWFpbiApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0c3RhdHVzID0gcmVzcG9uc2VzLnRleHQgPyAyMDAgOiA0MDQ7XHJcblxyXG5cdFx0XHRcdFx0XHRcdFx0Ly8gSUUgLSAjMTQ1MDogc29tZXRpbWVzIHJldHVybnMgMTIyMyB3aGVuIGl0IHNob3VsZCBiZSAyMDRcclxuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSBpZiAoIHN0YXR1cyA9PT0gMTIyMyApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0c3RhdHVzID0gMjA0O1xyXG5cdFx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRcdFx0Ly8gQ2FsbCBjb21wbGV0ZSBpZiBuZWVkZWRcclxuXHRcdFx0XHRcdFx0aWYgKCByZXNwb25zZXMgKSB7XHJcblx0XHRcdFx0XHRcdFx0Y29tcGxldGUoIHN0YXR1cywgc3RhdHVzVGV4dCwgcmVzcG9uc2VzLCB4aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKCkgKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fTtcclxuXHJcblx0XHRcdFx0XHQvLyBEbyBzZW5kIHRoZSByZXF1ZXN0XHJcblx0XHRcdFx0XHQvLyBgeGhyLnNlbmRgIG1heSByYWlzZSBhbiBleGNlcHRpb24sIGJ1dCBpdCB3aWxsIGJlXHJcblx0XHRcdFx0XHQvLyBoYW5kbGVkIGluIGpRdWVyeS5hamF4IChzbyBubyB0cnkvY2F0Y2ggaGVyZSlcclxuXHRcdFx0XHRcdGlmICggIW9wdGlvbnMuYXN5bmMgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBJZiB3ZSdyZSBpbiBzeW5jIG1vZGUgd2UgZmlyZSB0aGUgY2FsbGJhY2tcclxuXHRcdFx0XHRcdFx0Y2FsbGJhY2soKTtcclxuXHRcdFx0XHRcdH0gZWxzZSBpZiAoIHhoci5yZWFkeVN0YXRlID09PSA0ICkge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gKElFNiAmIElFNykgaWYgaXQncyBpbiBjYWNoZSBhbmQgaGFzIGJlZW5cclxuXHRcdFx0XHRcdFx0Ly8gcmV0cmlldmVkIGRpcmVjdGx5IHdlIG5lZWQgdG8gZmlyZSB0aGUgY2FsbGJhY2tcclxuXHRcdFx0XHRcdFx0d2luZG93LnNldFRpbWVvdXQoIGNhbGxiYWNrICk7XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gUmVnaXN0ZXIgdGhlIGNhbGxiYWNrLCBidXQgZGVsYXkgaXQgaW4gY2FzZSBgeGhyLnNlbmRgIHRocm93c1xyXG5cdFx0XHRcdFx0XHQvLyBBZGQgdG8gdGhlIGxpc3Qgb2YgYWN0aXZlIHhociBjYWxsYmFja3NcclxuXHRcdFx0XHRcdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IHhockNhbGxiYWNrc1sgaWQgXSA9IGNhbGxiYWNrO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0sXHJcblxyXG5cdFx0XHRcdGFib3J0OiBmdW5jdGlvbigpIHtcclxuXHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XHJcblx0XHRcdFx0XHRcdGNhbGxiYWNrKCB1bmRlZmluZWQsIHRydWUgKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH07XHJcblx0XHR9XHJcblx0fSApO1xyXG59XHJcblxyXG4vLyBGdW5jdGlvbnMgdG8gY3JlYXRlIHhocnNcclxuZnVuY3Rpb24gY3JlYXRlU3RhbmRhcmRYSFIoKSB7XHJcblx0dHJ5IHtcclxuXHRcdHJldHVybiBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0KCk7XHJcblx0fSBjYXRjaCAoIGUgKSB7fVxyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVBY3RpdmVYSFIoKSB7XHJcblx0dHJ5IHtcclxuXHRcdHJldHVybiBuZXcgd2luZG93LkFjdGl2ZVhPYmplY3QoIFwiTWljcm9zb2Z0LlhNTEhUVFBcIiApO1xyXG5cdH0gY2F0Y2ggKCBlICkge31cclxufVxyXG5cclxuXHJcblxyXG5cclxuLy8gSW5zdGFsbCBzY3JpcHQgZGF0YVR5cGVcclxualF1ZXJ5LmFqYXhTZXR1cCgge1xyXG5cdGFjY2VwdHM6IHtcclxuXHRcdHNjcmlwdDogXCJ0ZXh0L2phdmFzY3JpcHQsIGFwcGxpY2F0aW9uL2phdmFzY3JpcHQsIFwiICtcclxuXHRcdFx0XCJhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHRcIlxyXG5cdH0sXHJcblx0Y29udGVudHM6IHtcclxuXHRcdHNjcmlwdDogL1xcYig/OmphdmF8ZWNtYSlzY3JpcHRcXGIvXHJcblx0fSxcclxuXHRjb252ZXJ0ZXJzOiB7XHJcblx0XHRcInRleHQgc2NyaXB0XCI6IGZ1bmN0aW9uKCB0ZXh0ICkge1xyXG5cdFx0XHRqUXVlcnkuZ2xvYmFsRXZhbCggdGV4dCApO1xyXG5cdFx0XHRyZXR1cm4gdGV4dDtcclxuXHRcdH1cclxuXHR9XHJcbn0gKTtcclxuXHJcbi8vIEhhbmRsZSBjYWNoZSdzIHNwZWNpYWwgY2FzZSBhbmQgZ2xvYmFsXHJcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcclxuXHRpZiAoIHMuY2FjaGUgPT09IHVuZGVmaW5lZCApIHtcclxuXHRcdHMuY2FjaGUgPSBmYWxzZTtcclxuXHR9XHJcblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xyXG5cdFx0cy50eXBlID0gXCJHRVRcIjtcclxuXHRcdHMuZ2xvYmFsID0gZmFsc2U7XHJcblx0fVxyXG59ICk7XHJcblxyXG4vLyBCaW5kIHNjcmlwdCB0YWcgaGFjayB0cmFuc3BvcnRcclxualF1ZXJ5LmFqYXhUcmFuc3BvcnQoIFwic2NyaXB0XCIsIGZ1bmN0aW9uKCBzICkge1xyXG5cclxuXHQvLyBUaGlzIHRyYW5zcG9ydCBvbmx5IGRlYWxzIHdpdGggY3Jvc3MgZG9tYWluIHJlcXVlc3RzXHJcblx0aWYgKCBzLmNyb3NzRG9tYWluICkge1xyXG5cclxuXHRcdHZhciBzY3JpcHQsXHJcblx0XHRcdGhlYWQgPSBkb2N1bWVudC5oZWFkIHx8IGpRdWVyeSggXCJoZWFkXCIgKVsgMCBdIHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudDtcclxuXHJcblx0XHRyZXR1cm4ge1xyXG5cclxuXHRcdFx0c2VuZDogZnVuY3Rpb24oIF8sIGNhbGxiYWNrICkge1xyXG5cclxuXHRcdFx0XHRzY3JpcHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcInNjcmlwdFwiICk7XHJcblxyXG5cdFx0XHRcdHNjcmlwdC5hc3luYyA9IHRydWU7XHJcblxyXG5cdFx0XHRcdGlmICggcy5zY3JpcHRDaGFyc2V0ICkge1xyXG5cdFx0XHRcdFx0c2NyaXB0LmNoYXJzZXQgPSBzLnNjcmlwdENoYXJzZXQ7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHRzY3JpcHQuc3JjID0gcy51cmw7XHJcblxyXG5cdFx0XHRcdC8vIEF0dGFjaCBoYW5kbGVycyBmb3IgYWxsIGJyb3dzZXJzXHJcblx0XHRcdFx0c2NyaXB0Lm9ubG9hZCA9IHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBmdW5jdGlvbiggXywgaXNBYm9ydCApIHtcclxuXHJcblx0XHRcdFx0XHRpZiAoIGlzQWJvcnQgfHwgIXNjcmlwdC5yZWFkeVN0YXRlIHx8IC9sb2FkZWR8Y29tcGxldGUvLnRlc3QoIHNjcmlwdC5yZWFkeVN0YXRlICkgKSB7XHJcblxyXG5cdFx0XHRcdFx0XHQvLyBIYW5kbGUgbWVtb3J5IGxlYWsgaW4gSUVcclxuXHRcdFx0XHRcdFx0c2NyaXB0Lm9ubG9hZCA9IHNjcmlwdC5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xyXG5cclxuXHRcdFx0XHRcdFx0Ly8gUmVtb3ZlIHRoZSBzY3JpcHRcclxuXHRcdFx0XHRcdFx0aWYgKCBzY3JpcHQucGFyZW50Tm9kZSApIHtcclxuXHRcdFx0XHRcdFx0XHRzY3JpcHQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHJcblx0XHRcdFx0XHRcdC8vIERlcmVmZXJlbmNlIHRoZSBzY3JpcHRcclxuXHRcdFx0XHRcdFx0c2NyaXB0ID0gbnVsbDtcclxuXHJcblx0XHRcdFx0XHRcdC8vIENhbGxiYWNrIGlmIG5vdCBhYm9ydFxyXG5cdFx0XHRcdFx0XHRpZiAoICFpc0Fib3J0ICkge1xyXG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrKCAyMDAsIFwic3VjY2Vzc1wiICk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9O1xyXG5cclxuXHRcdFx0XHQvLyBDaXJjdW12ZW50IElFNiBidWdzIHdpdGggYmFzZSBlbGVtZW50cyAoIzI3MDkgYW5kICM0Mzc4KSBieSBwcmVwZW5kaW5nXHJcblx0XHRcdFx0Ly8gVXNlIG5hdGl2ZSBET00gbWFuaXB1bGF0aW9uIHRvIGF2b2lkIG91ciBkb21NYW5pcCBBSkFYIHRyaWNrZXJ5XHJcblx0XHRcdFx0aGVhZC5pbnNlcnRCZWZvcmUoIHNjcmlwdCwgaGVhZC5maXJzdENoaWxkICk7XHJcblx0XHRcdH0sXHJcblxyXG5cdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XHJcblx0XHRcdFx0aWYgKCBzY3JpcHQgKSB7XHJcblx0XHRcdFx0XHRzY3JpcHQub25sb2FkKCB1bmRlZmluZWQsIHRydWUgKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0fVxyXG59ICk7XHJcblxyXG5cclxuXHJcblxyXG52YXIgb2xkQ2FsbGJhY2tzID0gW10sXHJcblx0cmpzb25wID0gLyg9KVxcPyg/PSZ8JCl8XFw/XFw/LztcclxuXHJcbi8vIERlZmF1bHQganNvbnAgc2V0dGluZ3NcclxualF1ZXJ5LmFqYXhTZXR1cCgge1xyXG5cdGpzb25wOiBcImNhbGxiYWNrXCIsXHJcblx0anNvbnBDYWxsYmFjazogZnVuY3Rpb24oKSB7XHJcblx0XHR2YXIgY2FsbGJhY2sgPSBvbGRDYWxsYmFja3MucG9wKCkgfHwgKCBqUXVlcnkuZXhwYW5kbyArIFwiX1wiICsgKCBub25jZSsrICkgKTtcclxuXHRcdHRoaXNbIGNhbGxiYWNrIF0gPSB0cnVlO1xyXG5cdFx0cmV0dXJuIGNhbGxiYWNrO1xyXG5cdH1cclxufSApO1xyXG5cclxuLy8gRGV0ZWN0LCBub3JtYWxpemUgb3B0aW9ucyBhbmQgaW5zdGFsbCBjYWxsYmFja3MgZm9yIGpzb25wIHJlcXVlc3RzXHJcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcImpzb24ganNvbnBcIiwgZnVuY3Rpb24oIHMsIG9yaWdpbmFsU2V0dGluZ3MsIGpxWEhSICkge1xyXG5cclxuXHR2YXIgY2FsbGJhY2tOYW1lLCBvdmVyd3JpdHRlbiwgcmVzcG9uc2VDb250YWluZXIsXHJcblx0XHRqc29uUHJvcCA9IHMuanNvbnAgIT09IGZhbHNlICYmICggcmpzb25wLnRlc3QoIHMudXJsICkgP1xyXG5cdFx0XHRcInVybFwiIDpcclxuXHRcdFx0dHlwZW9mIHMuZGF0YSA9PT0gXCJzdHJpbmdcIiAmJlxyXG5cdFx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiIClcclxuXHRcdFx0XHRcdC5pbmRleE9mKCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiICkgPT09IDAgJiZcclxuXHRcdFx0XHRyanNvbnAudGVzdCggcy5kYXRhICkgJiYgXCJkYXRhXCJcclxuXHRcdCk7XHJcblxyXG5cdC8vIEhhbmRsZSBpZmYgdGhlIGV4cGVjdGVkIGRhdGEgdHlwZSBpcyBcImpzb25wXCIgb3Igd2UgaGF2ZSBhIHBhcmFtZXRlciB0byBzZXRcclxuXHRpZiAoIGpzb25Qcm9wIHx8IHMuZGF0YVR5cGVzWyAwIF0gPT09IFwianNvbnBcIiApIHtcclxuXHJcblx0XHQvLyBHZXQgY2FsbGJhY2sgbmFtZSwgcmVtZW1iZXJpbmcgcHJlZXhpc3RpbmcgdmFsdWUgYXNzb2NpYXRlZCB3aXRoIGl0XHJcblx0XHRjYWxsYmFja05hbWUgPSBzLmpzb25wQ2FsbGJhY2sgPSBqUXVlcnkuaXNGdW5jdGlvbiggcy5qc29ucENhbGxiYWNrICkgP1xyXG5cdFx0XHRzLmpzb25wQ2FsbGJhY2soKSA6XHJcblx0XHRcdHMuanNvbnBDYWxsYmFjaztcclxuXHJcblx0XHQvLyBJbnNlcnQgY2FsbGJhY2sgaW50byB1cmwgb3IgZm9ybSBkYXRhXHJcblx0XHRpZiAoIGpzb25Qcm9wICkge1xyXG5cdFx0XHRzWyBqc29uUHJvcCBdID0gc1sganNvblByb3AgXS5yZXBsYWNlKCByanNvbnAsIFwiJDFcIiArIGNhbGxiYWNrTmFtZSApO1xyXG5cdFx0fSBlbHNlIGlmICggcy5qc29ucCAhPT0gZmFsc2UgKSB7XHJcblx0XHRcdHMudXJsICs9ICggcnF1ZXJ5LnRlc3QoIHMudXJsICkgPyBcIiZcIiA6IFwiP1wiICkgKyBzLmpzb25wICsgXCI9XCIgKyBjYWxsYmFja05hbWU7XHJcblx0XHR9XHJcblxyXG5cdFx0Ly8gVXNlIGRhdGEgY29udmVydGVyIHRvIHJldHJpZXZlIGpzb24gYWZ0ZXIgc2NyaXB0IGV4ZWN1dGlvblxyXG5cdFx0cy5jb252ZXJ0ZXJzWyBcInNjcmlwdCBqc29uXCIgXSA9IGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRpZiAoICFyZXNwb25zZUNvbnRhaW5lciApIHtcclxuXHRcdFx0XHRqUXVlcnkuZXJyb3IoIGNhbGxiYWNrTmFtZSArIFwiIHdhcyBub3QgY2FsbGVkXCIgKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gcmVzcG9uc2VDb250YWluZXJbIDAgXTtcclxuXHRcdH07XHJcblxyXG5cdFx0Ly8gZm9yY2UganNvbiBkYXRhVHlwZVxyXG5cdFx0cy5kYXRhVHlwZXNbIDAgXSA9IFwianNvblwiO1xyXG5cclxuXHRcdC8vIEluc3RhbGwgY2FsbGJhY2tcclxuXHRcdG92ZXJ3cml0dGVuID0gd2luZG93WyBjYWxsYmFja05hbWUgXTtcclxuXHRcdHdpbmRvd1sgY2FsbGJhY2tOYW1lIF0gPSBmdW5jdGlvbigpIHtcclxuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBhcmd1bWVudHM7XHJcblx0XHR9O1xyXG5cclxuXHRcdC8vIENsZWFuLXVwIGZ1bmN0aW9uIChmaXJlcyBhZnRlciBjb252ZXJ0ZXJzKVxyXG5cdFx0anFYSFIuYWx3YXlzKCBmdW5jdGlvbigpIHtcclxuXHJcblx0XHRcdC8vIElmIHByZXZpb3VzIHZhbHVlIGRpZG4ndCBleGlzdCAtIHJlbW92ZSBpdFxyXG5cdFx0XHRpZiAoIG92ZXJ3cml0dGVuID09PSB1bmRlZmluZWQgKSB7XHJcblx0XHRcdFx0alF1ZXJ5KCB3aW5kb3cgKS5yZW1vdmVQcm9wKCBjYWxsYmFja05hbWUgKTtcclxuXHJcblx0XHRcdC8vIE90aGVyd2lzZSByZXN0b3JlIHByZWV4aXN0aW5nIHZhbHVlXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IG92ZXJ3cml0dGVuO1xyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHQvLyBTYXZlIGJhY2sgYXMgZnJlZVxyXG5cdFx0XHRpZiAoIHNbIGNhbGxiYWNrTmFtZSBdICkge1xyXG5cclxuXHRcdFx0XHQvLyBtYWtlIHN1cmUgdGhhdCByZS11c2luZyB0aGUgb3B0aW9ucyBkb2Vzbid0IHNjcmV3IHRoaW5ncyBhcm91bmRcclxuXHRcdFx0XHRzLmpzb25wQ2FsbGJhY2sgPSBvcmlnaW5hbFNldHRpbmdzLmpzb25wQ2FsbGJhY2s7XHJcblxyXG5cdFx0XHRcdC8vIHNhdmUgdGhlIGNhbGxiYWNrIG5hbWUgZm9yIGZ1dHVyZSB1c2VcclxuXHRcdFx0XHRvbGRDYWxsYmFja3MucHVzaCggY2FsbGJhY2tOYW1lICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdC8vIENhbGwgaWYgaXQgd2FzIGEgZnVuY3Rpb24gYW5kIHdlIGhhdmUgYSByZXNwb25zZVxyXG5cdFx0XHRpZiAoIHJlc3BvbnNlQ29udGFpbmVyICYmIGpRdWVyeS5pc0Z1bmN0aW9uKCBvdmVyd3JpdHRlbiApICkge1xyXG5cdFx0XHRcdG92ZXJ3cml0dGVuKCByZXNwb25zZUNvbnRhaW5lclsgMCBdICk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdHJlc3BvbnNlQ29udGFpbmVyID0gb3ZlcndyaXR0ZW4gPSB1bmRlZmluZWQ7XHJcblx0XHR9ICk7XHJcblxyXG5cdFx0Ly8gRGVsZWdhdGUgdG8gc2NyaXB0XHJcblx0XHRyZXR1cm4gXCJzY3JpcHRcIjtcclxuXHR9XHJcbn0gKTtcclxuXHJcblxyXG5cclxuXHJcbi8vIGRhdGE6IHN0cmluZyBvZiBodG1sXHJcbi8vIGNvbnRleHQgKG9wdGlvbmFsKTogSWYgc3BlY2lmaWVkLCB0aGUgZnJhZ21lbnQgd2lsbCBiZSBjcmVhdGVkIGluIHRoaXMgY29udGV4dCxcclxuLy8gZGVmYXVsdHMgdG8gZG9jdW1lbnRcclxuLy8ga2VlcFNjcmlwdHMgKG9wdGlvbmFsKTogSWYgdHJ1ZSwgd2lsbCBpbmNsdWRlIHNjcmlwdHMgcGFzc2VkIGluIHRoZSBodG1sIHN0cmluZ1xyXG5qUXVlcnkucGFyc2VIVE1MID0gZnVuY3Rpb24oIGRhdGEsIGNvbnRleHQsIGtlZXBTY3JpcHRzICkge1xyXG5cdGlmICggIWRhdGEgfHwgdHlwZW9mIGRhdGEgIT09IFwic3RyaW5nXCIgKSB7XHJcblx0XHRyZXR1cm4gbnVsbDtcclxuXHR9XHJcblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJib29sZWFuXCIgKSB7XHJcblx0XHRrZWVwU2NyaXB0cyA9IGNvbnRleHQ7XHJcblx0XHRjb250ZXh0ID0gZmFsc2U7XHJcblx0fVxyXG5cdGNvbnRleHQgPSBjb250ZXh0IHx8IGRvY3VtZW50O1xyXG5cclxuXHR2YXIgcGFyc2VkID0gcnNpbmdsZVRhZy5leGVjKCBkYXRhICksXHJcblx0XHRzY3JpcHRzID0gIWtlZXBTY3JpcHRzICYmIFtdO1xyXG5cclxuXHQvLyBTaW5nbGUgdGFnXHJcblx0aWYgKCBwYXJzZWQgKSB7XHJcblx0XHRyZXR1cm4gWyBjb250ZXh0LmNyZWF0ZUVsZW1lbnQoIHBhcnNlZFsgMSBdICkgXTtcclxuXHR9XHJcblxyXG5cdHBhcnNlZCA9IGJ1aWxkRnJhZ21lbnQoIFsgZGF0YSBdLCBjb250ZXh0LCBzY3JpcHRzICk7XHJcblxyXG5cdGlmICggc2NyaXB0cyAmJiBzY3JpcHRzLmxlbmd0aCApIHtcclxuXHRcdGpRdWVyeSggc2NyaXB0cyApLnJlbW92ZSgpO1xyXG5cdH1cclxuXHJcblx0cmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIHBhcnNlZC5jaGlsZE5vZGVzICk7XHJcbn07XHJcblxyXG5cclxuLy8gS2VlcCBhIGNvcHkgb2YgdGhlIG9sZCBsb2FkIG1ldGhvZFxyXG52YXIgX2xvYWQgPSBqUXVlcnkuZm4ubG9hZDtcclxuXHJcbi8qKlxyXG4gKiBMb2FkIGEgdXJsIGludG8gYSBwYWdlXHJcbiAqL1xyXG5qUXVlcnkuZm4ubG9hZCA9IGZ1bmN0aW9uKCB1cmwsIHBhcmFtcywgY2FsbGJhY2sgKSB7XHJcblx0aWYgKCB0eXBlb2YgdXJsICE9PSBcInN0cmluZ1wiICYmIF9sb2FkICkge1xyXG5cdFx0cmV0dXJuIF9sb2FkLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcclxuXHR9XHJcblxyXG5cdHZhciBzZWxlY3RvciwgdHlwZSwgcmVzcG9uc2UsXHJcblx0XHRzZWxmID0gdGhpcyxcclxuXHRcdG9mZiA9IHVybC5pbmRleE9mKCBcIiBcIiApO1xyXG5cclxuXHRpZiAoIG9mZiA+IC0xICkge1xyXG5cdFx0c2VsZWN0b3IgPSBqUXVlcnkudHJpbSggdXJsLnNsaWNlKCBvZmYsIHVybC5sZW5ndGggKSApO1xyXG5cdFx0dXJsID0gdXJsLnNsaWNlKCAwLCBvZmYgKTtcclxuXHR9XHJcblxyXG5cdC8vIElmIGl0J3MgYSBmdW5jdGlvblxyXG5cdGlmICggalF1ZXJ5LmlzRnVuY3Rpb24oIHBhcmFtcyApICkge1xyXG5cclxuXHRcdC8vIFdlIGFzc3VtZSB0aGF0IGl0J3MgdGhlIGNhbGxiYWNrXHJcblx0XHRjYWxsYmFjayA9IHBhcmFtcztcclxuXHRcdHBhcmFtcyA9IHVuZGVmaW5lZDtcclxuXHJcblx0Ly8gT3RoZXJ3aXNlLCBidWlsZCBhIHBhcmFtIHN0cmluZ1xyXG5cdH0gZWxzZSBpZiAoIHBhcmFtcyAmJiB0eXBlb2YgcGFyYW1zID09PSBcIm9iamVjdFwiICkge1xyXG5cdFx0dHlwZSA9IFwiUE9TVFwiO1xyXG5cdH1cclxuXHJcblx0Ly8gSWYgd2UgaGF2ZSBlbGVtZW50cyB0byBtb2RpZnksIG1ha2UgdGhlIHJlcXVlc3RcclxuXHRpZiAoIHNlbGYubGVuZ3RoID4gMCApIHtcclxuXHRcdGpRdWVyeS5hamF4KCB7XHJcblx0XHRcdHVybDogdXJsLFxyXG5cclxuXHRcdFx0Ly8gSWYgXCJ0eXBlXCIgdmFyaWFibGUgaXMgdW5kZWZpbmVkLCB0aGVuIFwiR0VUXCIgbWV0aG9kIHdpbGwgYmUgdXNlZC5cclxuXHRcdFx0Ly8gTWFrZSB2YWx1ZSBvZiB0aGlzIGZpZWxkIGV4cGxpY2l0IHNpbmNlXHJcblx0XHRcdC8vIHVzZXIgY2FuIG92ZXJyaWRlIGl0IHRocm91Z2ggYWpheFNldHVwIG1ldGhvZFxyXG5cdFx0XHR0eXBlOiB0eXBlIHx8IFwiR0VUXCIsXHJcblx0XHRcdGRhdGFUeXBlOiBcImh0bWxcIixcclxuXHRcdFx0ZGF0YTogcGFyYW1zXHJcblx0XHR9ICkuZG9uZSggZnVuY3Rpb24oIHJlc3BvbnNlVGV4dCApIHtcclxuXHJcblx0XHRcdC8vIFNhdmUgcmVzcG9uc2UgZm9yIHVzZSBpbiBjb21wbGV0ZSBjYWxsYmFja1xyXG5cdFx0XHRyZXNwb25zZSA9IGFyZ3VtZW50cztcclxuXHJcblx0XHRcdHNlbGYuaHRtbCggc2VsZWN0b3IgP1xyXG5cclxuXHRcdFx0XHQvLyBJZiBhIHNlbGVjdG9yIHdhcyBzcGVjaWZpZWQsIGxvY2F0ZSB0aGUgcmlnaHQgZWxlbWVudHMgaW4gYSBkdW1teSBkaXZcclxuXHRcdFx0XHQvLyBFeGNsdWRlIHNjcmlwdHMgdG8gYXZvaWQgSUUgJ1Blcm1pc3Npb24gRGVuaWVkJyBlcnJvcnNcclxuXHRcdFx0XHRqUXVlcnkoIFwiPGRpdj5cIiApLmFwcGVuZCggalF1ZXJ5LnBhcnNlSFRNTCggcmVzcG9uc2VUZXh0ICkgKS5maW5kKCBzZWxlY3RvciApIDpcclxuXHJcblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIHVzZSB0aGUgZnVsbCByZXN1bHRcclxuXHRcdFx0XHRyZXNwb25zZVRleHQgKTtcclxuXHJcblx0XHQvLyBJZiB0aGUgcmVxdWVzdCBzdWNjZWVkcywgdGhpcyBmdW5jdGlvbiBnZXRzIFwiZGF0YVwiLCBcInN0YXR1c1wiLCBcImpxWEhSXCJcclxuXHRcdC8vIGJ1dCB0aGV5IGFyZSBpZ25vcmVkIGJlY2F1c2UgcmVzcG9uc2Ugd2FzIHNldCBhYm92ZS5cclxuXHRcdC8vIElmIGl0IGZhaWxzLCB0aGlzIGZ1bmN0aW9uIGdldHMgXCJqcVhIUlwiLCBcInN0YXR1c1wiLCBcImVycm9yXCJcclxuXHRcdH0gKS5hbHdheXMoIGNhbGxiYWNrICYmIGZ1bmN0aW9uKCBqcVhIUiwgc3RhdHVzICkge1xyXG5cdFx0XHRzZWxmLmVhY2goIGZ1bmN0aW9uKCkge1xyXG5cdFx0XHRcdGNhbGxiYWNrLmFwcGx5KCB0aGlzLCByZXNwb25zZSB8fCBbIGpxWEhSLnJlc3BvbnNlVGV4dCwgc3RhdHVzLCBqcVhIUiBdICk7XHJcblx0XHRcdH0gKTtcclxuXHRcdH0gKTtcclxuXHR9XHJcblxyXG5cdHJldHVybiB0aGlzO1xyXG59O1xyXG5cclxuXHJcblxyXG5cclxuLy8gQXR0YWNoIGEgYnVuY2ggb2YgZnVuY3Rpb25zIGZvciBoYW5kbGluZyBjb21tb24gQUpBWCBldmVudHNcclxualF1ZXJ5LmVhY2goIFtcclxuXHRcImFqYXhTdGFydFwiLFxyXG5cdFwiYWpheFN0b3BcIixcclxuXHRcImFqYXhDb21wbGV0ZVwiLFxyXG5cdFwiYWpheEVycm9yXCIsXHJcblx0XCJhamF4U3VjY2Vzc1wiLFxyXG5cdFwiYWpheFNlbmRcIlxyXG5dLCBmdW5jdGlvbiggaSwgdHlwZSApIHtcclxuXHRqUXVlcnkuZm5bIHR5cGUgXSA9IGZ1bmN0aW9uKCBmbiApIHtcclxuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlLCBmbiApO1xyXG5cdH07XHJcbn0gKTtcclxuXHJcblxyXG5cclxuXHJcbmpRdWVyeS5leHByLmZpbHRlcnMuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcclxuXHRyZXR1cm4galF1ZXJ5LmdyZXAoIGpRdWVyeS50aW1lcnMsIGZ1bmN0aW9uKCBmbiApIHtcclxuXHRcdHJldHVybiBlbGVtID09PSBmbi5lbGVtO1xyXG5cdH0gKS5sZW5ndGg7XHJcbn07XHJcblxyXG5cclxuXHJcblxyXG5cclxuLyoqXHJcbiAqIEdldHMgYSB3aW5kb3cgZnJvbSBhbiBlbGVtZW50XHJcbiAqL1xyXG5mdW5jdGlvbiBnZXRXaW5kb3coIGVsZW0gKSB7XHJcblx0cmV0dXJuIGpRdWVyeS5pc1dpbmRvdyggZWxlbSApID9cclxuXHRcdGVsZW0gOlxyXG5cdFx0ZWxlbS5ub2RlVHlwZSA9PT0gOSA/XHJcblx0XHRcdGVsZW0uZGVmYXVsdFZpZXcgfHwgZWxlbS5wYXJlbnRXaW5kb3cgOlxyXG5cdFx0XHRmYWxzZTtcclxufVxyXG5cclxualF1ZXJ5Lm9mZnNldCA9IHtcclxuXHRzZXRPZmZzZXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBpICkge1xyXG5cdFx0dmFyIGN1clBvc2l0aW9uLCBjdXJMZWZ0LCBjdXJDU1NUb3AsIGN1clRvcCwgY3VyT2Zmc2V0LCBjdXJDU1NMZWZ0LCBjYWxjdWxhdGVQb3NpdGlvbixcclxuXHRcdFx0cG9zaXRpb24gPSBqUXVlcnkuY3NzKCBlbGVtLCBcInBvc2l0aW9uXCIgKSxcclxuXHRcdFx0Y3VyRWxlbSA9IGpRdWVyeSggZWxlbSApLFxyXG5cdFx0XHRwcm9wcyA9IHt9O1xyXG5cclxuXHRcdC8vIHNldCBwb3NpdGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3RhdGljIGVsZW1cclxuXHRcdGlmICggcG9zaXRpb24gPT09IFwic3RhdGljXCIgKSB7XHJcblx0XHRcdGVsZW0uc3R5bGUucG9zaXRpb24gPSBcInJlbGF0aXZlXCI7XHJcblx0XHR9XHJcblxyXG5cdFx0Y3VyT2Zmc2V0ID0gY3VyRWxlbS5vZmZzZXQoKTtcclxuXHRcdGN1ckNTU1RvcCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwidG9wXCIgKTtcclxuXHRcdGN1ckNTU0xlZnQgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImxlZnRcIiApO1xyXG5cdFx0Y2FsY3VsYXRlUG9zaXRpb24gPSAoIHBvc2l0aW9uID09PSBcImFic29sdXRlXCIgfHwgcG9zaXRpb24gPT09IFwiZml4ZWRcIiApICYmXHJcblx0XHRcdGpRdWVyeS5pbkFycmF5KCBcImF1dG9cIiwgWyBjdXJDU1NUb3AsIGN1ckNTU0xlZnQgXSApID4gLTE7XHJcblxyXG5cdFx0Ly8gbmVlZCB0byBiZSBhYmxlIHRvIGNhbGN1bGF0ZSBwb3NpdGlvbiBpZiBlaXRoZXIgdG9wIG9yIGxlZnRcclxuXHRcdC8vIGlzIGF1dG8gYW5kIHBvc2l0aW9uIGlzIGVpdGhlciBhYnNvbHV0ZSBvciBmaXhlZFxyXG5cdFx0aWYgKCBjYWxjdWxhdGVQb3NpdGlvbiApIHtcclxuXHRcdFx0Y3VyUG9zaXRpb24gPSBjdXJFbGVtLnBvc2l0aW9uKCk7XHJcblx0XHRcdGN1clRvcCA9IGN1clBvc2l0aW9uLnRvcDtcclxuXHRcdFx0Y3VyTGVmdCA9IGN1clBvc2l0aW9uLmxlZnQ7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHRjdXJUb3AgPSBwYXJzZUZsb2F0KCBjdXJDU1NUb3AgKSB8fCAwO1xyXG5cdFx0XHRjdXJMZWZ0ID0gcGFyc2VGbG9hdCggY3VyQ1NTTGVmdCApIHx8IDA7XHJcblx0XHR9XHJcblxyXG5cdFx0aWYgKCBqUXVlcnkuaXNGdW5jdGlvbiggb3B0aW9ucyApICkge1xyXG5cclxuXHRcdFx0Ly8gVXNlIGpRdWVyeS5leHRlbmQgaGVyZSB0byBhbGxvdyBtb2RpZmljYXRpb24gb2YgY29vcmRpbmF0ZXMgYXJndW1lbnQgKGdoLTE4NDgpXHJcblx0XHRcdG9wdGlvbnMgPSBvcHRpb25zLmNhbGwoIGVsZW0sIGksIGpRdWVyeS5leHRlbmQoIHt9LCBjdXJPZmZzZXQgKSApO1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggb3B0aW9ucy50b3AgIT0gbnVsbCApIHtcclxuXHRcdFx0cHJvcHMudG9wID0gKCBvcHRpb25zLnRvcCAtIGN1ck9mZnNldC50b3AgKSArIGN1clRvcDtcclxuXHRcdH1cclxuXHRcdGlmICggb3B0aW9ucy5sZWZ0ICE9IG51bGwgKSB7XHJcblx0XHRcdHByb3BzLmxlZnQgPSAoIG9wdGlvbnMubGVmdCAtIGN1ck9mZnNldC5sZWZ0ICkgKyBjdXJMZWZ0O1xyXG5cdFx0fVxyXG5cclxuXHRcdGlmICggXCJ1c2luZ1wiIGluIG9wdGlvbnMgKSB7XHJcblx0XHRcdG9wdGlvbnMudXNpbmcuY2FsbCggZWxlbSwgcHJvcHMgKTtcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdGN1ckVsZW0uY3NzKCBwcm9wcyApO1xyXG5cdFx0fVxyXG5cdH1cclxufTtcclxuXHJcbmpRdWVyeS5mbi5leHRlbmQoIHtcclxuXHRvZmZzZXQ6IGZ1bmN0aW9uKCBvcHRpb25zICkge1xyXG5cdFx0aWYgKCBhcmd1bWVudHMubGVuZ3RoICkge1xyXG5cdFx0XHRyZXR1cm4gb3B0aW9ucyA9PT0gdW5kZWZpbmVkID9cclxuXHRcdFx0XHR0aGlzIDpcclxuXHRcdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xyXG5cdFx0XHRcdFx0alF1ZXJ5Lm9mZnNldC5zZXRPZmZzZXQoIHRoaXMsIG9wdGlvbnMsIGkgKTtcclxuXHRcdFx0XHR9ICk7XHJcblx0XHR9XHJcblxyXG5cdFx0dmFyIGRvY0VsZW0sIHdpbixcclxuXHRcdFx0Ym94ID0geyB0b3A6IDAsIGxlZnQ6IDAgfSxcclxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcclxuXHRcdFx0ZG9jID0gZWxlbSAmJiBlbGVtLm93bmVyRG9jdW1lbnQ7XHJcblxyXG5cdFx0aWYgKCAhZG9jICkge1xyXG5cdFx0XHRyZXR1cm47XHJcblx0XHR9XHJcblxyXG5cdFx0ZG9jRWxlbSA9IGRvYy5kb2N1bWVudEVsZW1lbnQ7XHJcblxyXG5cdFx0Ly8gTWFrZSBzdXJlIGl0J3Mgbm90IGEgZGlzY29ubmVjdGVkIERPTSBub2RlXHJcblx0XHRpZiAoICFqUXVlcnkuY29udGFpbnMoIGRvY0VsZW0sIGVsZW0gKSApIHtcclxuXHRcdFx0cmV0dXJuIGJveDtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBJZiB3ZSBkb24ndCBoYXZlIGdCQ1IsIGp1c3QgdXNlIDAsMCByYXRoZXIgdGhhbiBlcnJvclxyXG5cdFx0Ly8gQmxhY2tCZXJyeSA1LCBpT1MgMyAob3JpZ2luYWwgaVBob25lKVxyXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QgIT09IFwidW5kZWZpbmVkXCIgKSB7XHJcblx0XHRcdGJveCA9IGVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcblx0XHR9XHJcblx0XHR3aW4gPSBnZXRXaW5kb3coIGRvYyApO1xyXG5cdFx0cmV0dXJuIHtcclxuXHRcdFx0dG9wOiBib3gudG9wICArICggd2luLnBhZ2VZT2Zmc2V0IHx8IGRvY0VsZW0uc2Nyb2xsVG9wICkgIC0gKCBkb2NFbGVtLmNsaWVudFRvcCAgfHwgMCApLFxyXG5cdFx0XHRsZWZ0OiBib3gubGVmdCArICggd2luLnBhZ2VYT2Zmc2V0IHx8IGRvY0VsZW0uc2Nyb2xsTGVmdCApIC0gKCBkb2NFbGVtLmNsaWVudExlZnQgfHwgMCApXHJcblx0XHR9O1xyXG5cdH0sXHJcblxyXG5cdHBvc2l0aW9uOiBmdW5jdGlvbigpIHtcclxuXHRcdGlmICggIXRoaXNbIDAgXSApIHtcclxuXHRcdFx0cmV0dXJuO1xyXG5cdFx0fVxyXG5cclxuXHRcdHZhciBvZmZzZXRQYXJlbnQsIG9mZnNldCxcclxuXHRcdFx0cGFyZW50T2Zmc2V0ID0geyB0b3A6IDAsIGxlZnQ6IDAgfSxcclxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXTtcclxuXHJcblx0XHQvLyBGaXhlZCBlbGVtZW50cyBhcmUgb2Zmc2V0IGZyb20gd2luZG93IChwYXJlbnRPZmZzZXQgPSB7dG9wOjAsIGxlZnQ6IDB9LFxyXG5cdFx0Ly8gYmVjYXVzZSBpdCBpcyBpdHMgb25seSBvZmZzZXQgcGFyZW50XHJcblx0XHRpZiAoIGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApID09PSBcImZpeGVkXCIgKSB7XHJcblxyXG5cdFx0XHQvLyB3ZSBhc3N1bWUgdGhhdCBnZXRCb3VuZGluZ0NsaWVudFJlY3QgaXMgYXZhaWxhYmxlIHdoZW4gY29tcHV0ZWQgcG9zaXRpb24gaXMgZml4ZWRcclxuXHRcdFx0b2Zmc2V0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuXHRcdH0gZWxzZSB7XHJcblxyXG5cdFx0XHQvLyBHZXQgKnJlYWwqIG9mZnNldFBhcmVudFxyXG5cdFx0XHRvZmZzZXRQYXJlbnQgPSB0aGlzLm9mZnNldFBhcmVudCgpO1xyXG5cclxuXHRcdFx0Ly8gR2V0IGNvcnJlY3Qgb2Zmc2V0c1xyXG5cdFx0XHRvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xyXG5cdFx0XHRpZiAoICFqUXVlcnkubm9kZU5hbWUoIG9mZnNldFBhcmVudFsgMCBdLCBcImh0bWxcIiApICkge1xyXG5cdFx0XHRcdHBhcmVudE9mZnNldCA9IG9mZnNldFBhcmVudC5vZmZzZXQoKTtcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0Ly8gQWRkIG9mZnNldFBhcmVudCBib3JkZXJzXHJcblx0XHRcdHBhcmVudE9mZnNldC50b3AgICs9IGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudFsgMCBdLCBcImJvcmRlclRvcFdpZHRoXCIsIHRydWUgKTtcclxuXHRcdFx0cGFyZW50T2Zmc2V0LmxlZnQgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50WyAwIF0sIFwiYm9yZGVyTGVmdFdpZHRoXCIsIHRydWUgKTtcclxuXHRcdH1cclxuXHJcblx0XHQvLyBTdWJ0cmFjdCBwYXJlbnQgb2Zmc2V0cyBhbmQgZWxlbWVudCBtYXJnaW5zXHJcblx0XHQvLyBub3RlOiB3aGVuIGFuIGVsZW1lbnQgaGFzIG1hcmdpbjogYXV0byB0aGUgb2Zmc2V0TGVmdCBhbmQgbWFyZ2luTGVmdFxyXG5cdFx0Ly8gYXJlIHRoZSBzYW1lIGluIFNhZmFyaSBjYXVzaW5nIG9mZnNldC5sZWZ0IHRvIGluY29ycmVjdGx5IGJlIDBcclxuXHRcdHJldHVybiB7XHJcblx0XHRcdHRvcDogIG9mZnNldC50b3AgIC0gcGFyZW50T2Zmc2V0LnRvcCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luVG9wXCIsIHRydWUgKSxcclxuXHRcdFx0bGVmdDogb2Zmc2V0LmxlZnQgLSBwYXJlbnRPZmZzZXQubGVmdCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luTGVmdFwiLCB0cnVlIClcclxuXHRcdH07XHJcblx0fSxcclxuXHJcblx0b2Zmc2V0UGFyZW50OiBmdW5jdGlvbigpIHtcclxuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XHJcblx0XHRcdHZhciBvZmZzZXRQYXJlbnQgPSB0aGlzLm9mZnNldFBhcmVudDtcclxuXHJcblx0XHRcdHdoaWxlICggb2Zmc2V0UGFyZW50ICYmICggIWpRdWVyeS5ub2RlTmFtZSggb2Zmc2V0UGFyZW50LCBcImh0bWxcIiApICYmXHJcblx0XHRcdFx0alF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcInBvc2l0aW9uXCIgKSA9PT0gXCJzdGF0aWNcIiApICkge1xyXG5cdFx0XHRcdG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudC5vZmZzZXRQYXJlbnQ7XHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIG9mZnNldFBhcmVudCB8fCBkb2N1bWVudEVsZW1lbnQ7XHJcblx0XHR9ICk7XHJcblx0fVxyXG59ICk7XHJcblxyXG4vLyBDcmVhdGUgc2Nyb2xsTGVmdCBhbmQgc2Nyb2xsVG9wIG1ldGhvZHNcclxualF1ZXJ5LmVhY2goIHsgc2Nyb2xsTGVmdDogXCJwYWdlWE9mZnNldFwiLCBzY3JvbGxUb3A6IFwicGFnZVlPZmZzZXRcIiB9LCBmdW5jdGlvbiggbWV0aG9kLCBwcm9wICkge1xyXG5cdHZhciB0b3AgPSAvWS8udGVzdCggcHJvcCApO1xyXG5cclxuXHRqUXVlcnkuZm5bIG1ldGhvZCBdID0gZnVuY3Rpb24oIHZhbCApIHtcclxuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBtZXRob2QsIHZhbCApIHtcclxuXHRcdFx0dmFyIHdpbiA9IGdldFdpbmRvdyggZWxlbSApO1xyXG5cclxuXHRcdFx0aWYgKCB2YWwgPT09IHVuZGVmaW5lZCApIHtcclxuXHRcdFx0XHRyZXR1cm4gd2luID8gKCBwcm9wIGluIHdpbiApID8gd2luWyBwcm9wIF0gOlxyXG5cdFx0XHRcdFx0d2luLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFsgbWV0aG9kIF0gOlxyXG5cdFx0XHRcdFx0ZWxlbVsgbWV0aG9kIF07XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmICggd2luICkge1xyXG5cdFx0XHRcdHdpbi5zY3JvbGxUbyhcclxuXHRcdFx0XHRcdCF0b3AgPyB2YWwgOiBqUXVlcnkoIHdpbiApLnNjcm9sbExlZnQoKSxcclxuXHRcdFx0XHRcdHRvcCA/IHZhbCA6IGpRdWVyeSggd2luICkuc2Nyb2xsVG9wKClcclxuXHRcdFx0XHQpO1xyXG5cclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRlbGVtWyBtZXRob2QgXSA9IHZhbDtcclxuXHRcdFx0fVxyXG5cdFx0fSwgbWV0aG9kLCB2YWwsIGFyZ3VtZW50cy5sZW5ndGgsIG51bGwgKTtcclxuXHR9O1xyXG59ICk7XHJcblxyXG4vLyBTdXBwb3J0OiBTYWZhcmk8Ny04KywgQ2hyb21lPDM3LTQ0K1xyXG4vLyBBZGQgdGhlIHRvcC9sZWZ0IGNzc0hvb2tzIHVzaW5nIGpRdWVyeS5mbi5wb3NpdGlvblxyXG4vLyBXZWJraXQgYnVnOiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjkwODRcclxuLy8gZ2V0Q29tcHV0ZWRTdHlsZSByZXR1cm5zIHBlcmNlbnQgd2hlbiBzcGVjaWZpZWQgZm9yIHRvcC9sZWZ0L2JvdHRvbS9yaWdodFxyXG4vLyByYXRoZXIgdGhhbiBtYWtlIHRoZSBjc3MgbW9kdWxlIGRlcGVuZCBvbiB0aGUgb2Zmc2V0IG1vZHVsZSwgd2UganVzdCBjaGVjayBmb3IgaXQgaGVyZVxyXG5qUXVlcnkuZWFjaCggWyBcInRvcFwiLCBcImxlZnRcIiBdLCBmdW5jdGlvbiggaSwgcHJvcCApIHtcclxuXHRqUXVlcnkuY3NzSG9va3NbIHByb3AgXSA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5waXhlbFBvc2l0aW9uLFxyXG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbXB1dGVkICkge1xyXG5cdFx0XHRpZiAoIGNvbXB1dGVkICkge1xyXG5cdFx0XHRcdGNvbXB1dGVkID0gY3VyQ1NTKCBlbGVtLCBwcm9wICk7XHJcblxyXG5cdFx0XHRcdC8vIGlmIGN1ckNTUyByZXR1cm5zIHBlcmNlbnRhZ2UsIGZhbGxiYWNrIHRvIG9mZnNldFxyXG5cdFx0XHRcdHJldHVybiBybnVtbm9ucHgudGVzdCggY29tcHV0ZWQgKSA/XHJcblx0XHRcdFx0XHRqUXVlcnkoIGVsZW0gKS5wb3NpdGlvbigpWyBwcm9wIF0gKyBcInB4XCIgOlxyXG5cdFx0XHRcdFx0Y29tcHV0ZWQ7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHQpO1xyXG59ICk7XHJcblxyXG5cclxuLy8gQ3JlYXRlIGlubmVySGVpZ2h0LCBpbm5lcldpZHRoLCBoZWlnaHQsIHdpZHRoLCBvdXRlckhlaWdodCBhbmQgb3V0ZXJXaWR0aCBtZXRob2RzXHJcbmpRdWVyeS5lYWNoKCB7IEhlaWdodDogXCJoZWlnaHRcIiwgV2lkdGg6IFwid2lkdGhcIiB9LCBmdW5jdGlvbiggbmFtZSwgdHlwZSApIHtcclxuXHRqUXVlcnkuZWFjaCggeyBwYWRkaW5nOiBcImlubmVyXCIgKyBuYW1lLCBjb250ZW50OiB0eXBlLCBcIlwiOiBcIm91dGVyXCIgKyBuYW1lIH0sXHJcblx0ZnVuY3Rpb24oIGRlZmF1bHRFeHRyYSwgZnVuY05hbWUgKSB7XHJcblxyXG5cdFx0Ly8gbWFyZ2luIGlzIG9ubHkgZm9yIG91dGVySGVpZ2h0LCBvdXRlcldpZHRoXHJcblx0XHRqUXVlcnkuZm5bIGZ1bmNOYW1lIF0gPSBmdW5jdGlvbiggbWFyZ2luLCB2YWx1ZSApIHtcclxuXHRcdFx0dmFyIGNoYWluYWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggJiYgKCBkZWZhdWx0RXh0cmEgfHwgdHlwZW9mIG1hcmdpbiAhPT0gXCJib29sZWFuXCIgKSxcclxuXHRcdFx0XHRleHRyYSA9IGRlZmF1bHRFeHRyYSB8fCAoIG1hcmdpbiA9PT0gdHJ1ZSB8fCB2YWx1ZSA9PT0gdHJ1ZSA/IFwibWFyZ2luXCIgOiBcImJvcmRlclwiICk7XHJcblxyXG5cdFx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgdHlwZSwgdmFsdWUgKSB7XHJcblx0XHRcdFx0dmFyIGRvYztcclxuXHJcblx0XHRcdFx0aWYgKCBqUXVlcnkuaXNXaW5kb3coIGVsZW0gKSApIHtcclxuXHJcblx0XHRcdFx0XHQvLyBBcyBvZiA1LzgvMjAxMiB0aGlzIHdpbGwgeWllbGQgaW5jb3JyZWN0IHJlc3VsdHMgZm9yIE1vYmlsZSBTYWZhcmksIGJ1dCB0aGVyZVxyXG5cdFx0XHRcdFx0Ly8gaXNuJ3QgYSB3aG9sZSBsb3Qgd2UgY2FuIGRvLiBTZWUgcHVsbCByZXF1ZXN0IGF0IHRoaXMgVVJMIGZvciBkaXNjdXNzaW9uOlxyXG5cdFx0XHRcdFx0Ly8gaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9qcXVlcnkvcHVsbC83NjRcclxuXHRcdFx0XHRcdHJldHVybiBlbGVtLmRvY3VtZW50LmRvY3VtZW50RWxlbWVudFsgXCJjbGllbnRcIiArIG5hbWUgXTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdC8vIEdldCBkb2N1bWVudCB3aWR0aCBvciBoZWlnaHRcclxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XHJcblx0XHRcdFx0XHRkb2MgPSBlbGVtLmRvY3VtZW50RWxlbWVudDtcclxuXHJcblx0XHRcdFx0XHQvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sXHJcblx0XHRcdFx0XHQvLyB3aGljaGV2ZXIgaXMgZ3JlYXRlc3RcclxuXHRcdFx0XHRcdC8vIHVuZm9ydHVuYXRlbHksIHRoaXMgY2F1c2VzIGJ1ZyAjMzgzOCBpbiBJRTYvOCBvbmx5LFxyXG5cdFx0XHRcdFx0Ly8gYnV0IHRoZXJlIGlzIGN1cnJlbnRseSBubyBnb29kLCBzbWFsbCB3YXkgdG8gZml4IGl0LlxyXG5cdFx0XHRcdFx0cmV0dXJuIE1hdGgubWF4KFxyXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwic2Nyb2xsXCIgKyBuYW1lIF0sIGRvY1sgXCJzY3JvbGxcIiArIG5hbWUgXSxcclxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcIm9mZnNldFwiICsgbmFtZSBdLCBkb2NbIFwib2Zmc2V0XCIgKyBuYW1lIF0sXHJcblx0XHRcdFx0XHRcdGRvY1sgXCJjbGllbnRcIiArIG5hbWUgXVxyXG5cdFx0XHRcdFx0KTtcclxuXHRcdFx0XHR9XHJcblxyXG5cdFx0XHRcdHJldHVybiB2YWx1ZSA9PT0gdW5kZWZpbmVkID9cclxuXHJcblx0XHRcdFx0XHQvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0XHJcblx0XHRcdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCB0eXBlLCBleHRyYSApIDpcclxuXHJcblx0XHRcdFx0XHQvLyBTZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50XHJcblx0XHRcdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHR5cGUsIHZhbHVlLCBleHRyYSApO1xyXG5cdFx0XHR9LCB0eXBlLCBjaGFpbmFibGUgPyBtYXJnaW4gOiB1bmRlZmluZWQsIGNoYWluYWJsZSwgbnVsbCApO1xyXG5cdFx0fTtcclxuXHR9ICk7XHJcbn0gKTtcclxuXHJcblxyXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XHJcblxyXG5cdGJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZGF0YSwgZm4gKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5vbiggdHlwZXMsIG51bGwsIGRhdGEsIGZuICk7XHJcblx0fSxcclxuXHR1bmJpbmQ6IGZ1bmN0aW9uKCB0eXBlcywgZm4gKSB7XHJcblx0XHRyZXR1cm4gdGhpcy5vZmYoIHR5cGVzLCBudWxsLCBmbiApO1xyXG5cdH0sXHJcblxyXG5cdGRlbGVnYXRlOiBmdW5jdGlvbiggc2VsZWN0b3IsIHR5cGVzLCBkYXRhLCBmbiApIHtcclxuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XHJcblx0fSxcclxuXHR1bmRlbGVnYXRlOiBmdW5jdGlvbiggc2VsZWN0b3IsIHR5cGVzLCBmbiApIHtcclxuXHJcblx0XHQvLyAoIG5hbWVzcGFjZSApIG9yICggc2VsZWN0b3IsIHR5cGVzIFssIGZuXSApXHJcblx0XHRyZXR1cm4gYXJndW1lbnRzLmxlbmd0aCA9PT0gMSA/XHJcblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxyXG5cdFx0XHR0aGlzLm9mZiggdHlwZXMsIHNlbGVjdG9yIHx8IFwiKipcIiwgZm4gKTtcclxuXHR9XHJcbn0gKTtcclxuXHJcbi8vIFRoZSBudW1iZXIgb2YgZWxlbWVudHMgY29udGFpbmVkIGluIHRoZSBtYXRjaGVkIGVsZW1lbnQgc2V0XHJcbmpRdWVyeS5mbi5zaXplID0gZnVuY3Rpb24oKSB7XHJcblx0cmV0dXJuIHRoaXMubGVuZ3RoO1xyXG59O1xyXG5cclxualF1ZXJ5LmZuLmFuZFNlbGYgPSBqUXVlcnkuZm4uYWRkQmFjaztcclxuXHJcblxyXG5cclxuXHJcbi8vIFJlZ2lzdGVyIGFzIGEgbmFtZWQgQU1EIG1vZHVsZSwgc2luY2UgalF1ZXJ5IGNhbiBiZSBjb25jYXRlbmF0ZWQgd2l0aCBvdGhlclxyXG4vLyBmaWxlcyB0aGF0IG1heSB1c2UgZGVmaW5lLCBidXQgbm90IHZpYSBhIHByb3BlciBjb25jYXRlbmF0aW9uIHNjcmlwdCB0aGF0XHJcbi8vIHVuZGVyc3RhbmRzIGFub255bW91cyBBTUQgbW9kdWxlcy4gQSBuYW1lZCBBTUQgaXMgc2FmZXN0IGFuZCBtb3N0IHJvYnVzdFxyXG4vLyB3YXkgdG8gcmVnaXN0ZXIuIExvd2VyY2FzZSBqcXVlcnkgaXMgdXNlZCBiZWNhdXNlIEFNRCBtb2R1bGUgbmFtZXMgYXJlXHJcbi8vIGRlcml2ZWQgZnJvbSBmaWxlIG5hbWVzLCBhbmQgalF1ZXJ5IGlzIG5vcm1hbGx5IGRlbGl2ZXJlZCBpbiBhIGxvd2VyY2FzZVxyXG4vLyBmaWxlIG5hbWUuIERvIHRoaXMgYWZ0ZXIgY3JlYXRpbmcgdGhlIGdsb2JhbCBzbyB0aGF0IGlmIGFuIEFNRCBtb2R1bGUgd2FudHNcclxuLy8gdG8gY2FsbCBub0NvbmZsaWN0IHRvIGhpZGUgdGhpcyB2ZXJzaW9uIG9mIGpRdWVyeSwgaXQgd2lsbCB3b3JrLlxyXG5cclxuLy8gTm90ZSB0aGF0IGZvciBtYXhpbXVtIHBvcnRhYmlsaXR5LCBsaWJyYXJpZXMgdGhhdCBhcmUgbm90IGpRdWVyeSBzaG91bGRcclxuLy8gZGVjbGFyZSB0aGVtc2VsdmVzIGFzIGFub255bW91cyBtb2R1bGVzLCBhbmQgYXZvaWQgc2V0dGluZyBhIGdsb2JhbCBpZiBhblxyXG4vLyBBTUQgbG9hZGVyIGlzIHByZXNlbnQuIGpRdWVyeSBpcyBhIHNwZWNpYWwgY2FzZS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZVxyXG4vLyBodHRwczovL2dpdGh1Yi5jb20vanJidXJrZS9yZXF1aXJlanMvd2lraS9VcGRhdGluZy1leGlzdGluZy1saWJyYXJpZXMjd2lraS1hbm9uXHJcblxyXG5pZiAoIHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kICkge1xyXG5cdGRlZmluZSggXCJqcXVlcnlcIiwgW10sIGZ1bmN0aW9uKCkge1xyXG5cdFx0cmV0dXJuIGpRdWVyeTtcclxuXHR9ICk7XHJcbn1cclxuXHJcblxyXG5cclxudmFyXHJcblxyXG5cdC8vIE1hcCBvdmVyIGpRdWVyeSBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxyXG5cdF9qUXVlcnkgPSB3aW5kb3cualF1ZXJ5LFxyXG5cclxuXHQvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxyXG5cdF8kID0gd2luZG93LiQ7XHJcblxyXG5qUXVlcnkubm9Db25mbGljdCA9IGZ1bmN0aW9uKCBkZWVwICkge1xyXG5cdGlmICggd2luZG93LiQgPT09IGpRdWVyeSApIHtcclxuXHRcdHdpbmRvdy4kID0gXyQ7XHJcblx0fVxyXG5cclxuXHRpZiAoIGRlZXAgJiYgd2luZG93LmpRdWVyeSA9PT0galF1ZXJ5ICkge1xyXG5cdFx0d2luZG93LmpRdWVyeSA9IF9qUXVlcnk7XHJcblx0fVxyXG5cclxuXHRyZXR1cm4galF1ZXJ5O1xyXG59O1xyXG5cclxuLy8gRXhwb3NlIGpRdWVyeSBhbmQgJCBpZGVudGlmaWVycywgZXZlbiBpblxyXG4vLyBBTUQgKCM3MTAyI2NvbW1lbnQ6MTAsIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5L3B1bGwvNTU3KVxyXG4vLyBhbmQgQ29tbW9uSlMgZm9yIGJyb3dzZXIgZW11bGF0b3JzICgjMTM1NjYpXHJcbmlmICggIW5vR2xvYmFsICkge1xyXG5cdHdpbmRvdy5qUXVlcnkgPSB3aW5kb3cuJCA9IGpRdWVyeTtcclxufVxyXG5cclxucmV0dXJuIGpRdWVyeTtcclxufSkpO1xyXG5cclxuXHJcbi8qXHJcbiogQ3VzdG9tXHJcbiovXHJcbmZ1bmN0aW9uIGdldERhdGUoKSB7XHJcblx0dmFyIGRheUFycmF5PW5ldyBBcnJheShcItC90LXQtNGW0LvRj1wiLFwi0L/QvtC90LXQtNGW0LvQvtC6XCIsXCLQstGW0LLRgtC+0YDQvtC6XCIsXCLRgdC10YDQtdC00LBcIixcItGH0LXRgtCy0LXRgFwiLFwi0L/Rj9GC0L3QuNGG0Y9cIixcItGB0YPQsdC+0YLQsFwiKTtcclxuXHR2YXIgbW9udGhBcnJheT1uZXcgQXJyYXkoXCLRgdGW0YfQvdGPXCIsXCLQu9GO0YLQvtCz0L5cIixcItCx0LXRgNC10LfQvdGPXCIsXCLQutCy0ZbRgtC90Y9cIixcItGC0YDQsNCy0L3Rj1wiLFwi0YfQtdGA0LLQvdGPXCIsXCLQu9C40L/QvdGPXCIsXCLRgdC10YDQv9C90Y9cIixcItCy0LXRgNC10YHQvdGPXCIsXCLQttC+0LLRgtC90Y9cIixcItC70LjRgdGC0L7Qv9CwXCIsXCLQs9GA0YPQtNC90Y9cIik7XHJcblxyXG5cdHZhciBuZGF0YT1uZXcgRGF0ZSgpO1xyXG5cdHZhciBkYXk9ZGF5QXJyYXlbbmRhdGEuZ2V0RGF5KCldO1xyXG5cdHZhciBtb250aD1tb250aEFycmF5W25kYXRhLmdldE1vbnRoKCldO1xyXG5cdHZhciBkYXRlPW5kYXRhLmdldERhdGUoKTtcclxuXHR2YXIgeWVhcj1uZGF0YS5nZXRGdWxsWWVhcigpO1xyXG5cdHZhciBob3VycyA9IG5kYXRhLmdldEhvdXJzKCk7XHJcblx0dmFyIG1pbnMgPSBuZGF0YS5nZXRNaW51dGVzKCk7XHJcblx0dmFyIHNlY3MgPSBuZGF0YS5nZXRTZWNvbmRzKCk7XHJcblx0dmFyIGdyZWV0aW5nO1xyXG5cclxuXHQvL9Cf0L4g0L3QsNC00L7QsdC90L7RgdGC0Lgg0YPRgdC70L7QstC40LUg0L3QuNC20LUg0L/QvtCy0YLQvtGA0LjRgtGMINGBIG1pbnV0ZXMg0LggaG91cnNcclxuXHJcblx0aWYgKGhvdXJzIDwgMTApIHtob3VycyA9IFwiMFwiICsgaG91cnMgfTtcclxuXHRpZiAobWlucyA8IDEwKSB7bWlucyA9IFwiMFwiICsgbWlucyB9O1xyXG5cdGlmIChzZWNzIDwgMTApIHtzZWNzID0gXCIwXCIgKyBzZWNzIH07XHJcblxyXG5cdGlmIChob3Vycz49NSAmJiBob3VyczwxMikgZ3JlZXRpbmcgPSBcItCU0L7QsdGA0L7Qs9C+INGA0LDQvdC60YMgISBcIjtlbHNlIHtpZiAoaG91cnM+PTEyICYmIGhvdXJzPDE4KSBncmVldGluZyA9IFwi0JTQvtCx0YDQvtCz0L4g0LTQvdGPICEgXCI7ZWxzZSB7aWYgKGhvdXJzPj0xOCAmJiBob3VyczwyNCkgZ3JlZXRpbmcgPSBcItCU0L7QsdGA0L7Qs9C+INCy0LXRh9C+0YDQsCAhIFwiO2Vsc2Uge2lmIChob3Vycz49MCAmJiBob3Vyczw1KSBncmVldGluZyA9IFwi0JTQvtCx0YDQvtGXINC90L7Rh9GWICEgXCJ9fX07XHJcblxyXG5cdGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdkYXlkaXNwbGF5JykuaW5uZXJIVE1MID0oZ3JlZXRpbmcrJyZuYnNwOycrJyAmbmJzcDs8c3BhbiBjbGFzcz1cImZhIGZhLWNhbGVuZGFyXCI+PC9zcGFuPiAmbmJzcDvQodGM0L7Qs9C+0LTQvdGWICZuYnNwOzombmJzcDsnICsgZGF5ICsgJyZuYnNwOycgKyBkYXRlICsgJyZuYnNwOycgKyBtb250aCArICcmbmJzcDsnICsgeWVhciArICcmbmJzcDsg0YDQvtC60YMnKTtcclxuXHRkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGltZWRpc3BsYXknKS5pbm5lckhUTUwgPSgnPHNwYW4gY2xhc3M9XCJmYSBmYS1jbG9jay1vXCI+PC9zcGFuPicrJyZuYnNwOyZuYnNwOycraG91cnMgKyAnOicgKyBtaW5zICsgJzonICsgc2Vjcyk7XHJcbn1cclxuc2V0SW50ZXJ2YWwoZ2V0RGF0ZSwgMCk7XHJcbi8qKiBBbWF6aW5nIENhcm91c2VsIC0gUmVzcG9uc2l2ZSBqUXVlcnkgQ2Fyb3VzZWwgYW5kIEltYWdlIFNjcm9sbGVyXHJcbiAqIENvcHlyaWdodCAyMDE0IE1hZ2ljIEhpbGxzIFB0eSBMdGQgQWxsIFJpZ2h0cyBSZXNlcnZlZFxyXG4gKiBXZWJzaXRlOiBodHRwOi8vYW1hemluZ2Nhcm91c2VsLmNvbVxyXG4gKiBWZXJzaW9uIDMuOFxyXG4gKi9cclxuKGZ1bmN0aW9uICgkKSB7XHJcblx0JC5mbi5odG1sNWxpZ2h0Ym94ID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcclxuXHRcdHZhciBpbnN0ID0gdGhpcztcclxuXHRcdGluc3Qub3B0aW9ucyA9ICQuZXh0ZW5kKHtcclxuXHRcdFx0ZnJlZWxpbms6IFwiaHR0cDovL2h0bWw1Ym94LmNvbS9cIixcclxuXHRcdFx0ZGVmYXVsdHZpZGVvdm9sdW1lOiAxLFxyXG5cdFx0XHRhdXRvcGxheTogdHJ1ZSxcclxuXHRcdFx0aHRtbDVwbGF5ZXI6IHRydWUsXHJcblx0XHRcdHJlc3BvbnNpdmU6IHRydWUsXHJcblx0XHRcdG5hdGl2ZWh0bWw1Y29udHJvbHM6IGZhbHNlLFxyXG5cdFx0XHR2aWRlb2hpZGVjb250cm9sczogZmFsc2UsXHJcblx0XHRcdHVzZWZsYXNob25pZTk6IHRydWUsXHJcblx0XHRcdHVzZWZsYXNob25pZTEwOiBmYWxzZSxcclxuXHRcdFx0dXNlZmxhc2hvbmllMTE6IGZhbHNlLFxyXG5cdFx0XHRnb29nbGVhbmFseXRpY3NhY2NvdW50OiBcIlwiLFxyXG5cdFx0XHRhcnJvd2xvb3A6IHRydWUsXHJcblx0XHRcdHNob3duYXZpZ2F0aW9uOiB0cnVlLFxyXG5cdFx0XHR0aHVtYndpZHRoOiA5NixcclxuXHRcdFx0dGh1bWJoZWlnaHQ6IDcyLFxyXG5cdFx0XHR0aHVtYmdhcDogNCxcclxuXHRcdFx0dGh1bWJ0b3BtYXJnaW46IDEyLFxyXG5cdFx0XHR0aHVtYmJvdHRvbW1hcmdpbjogMTIsXHJcblx0XHRcdHRodW1iYm9yZGVyOiAxLFxyXG5cdFx0XHR0aHVtYmJvcmRlcmNvbG9yOiBcInRyYW5zcGFyZW50XCIsXHJcblx0XHRcdHRodW1iaGlnaGxpZ2h0Ym9yZGVyY29sb3I6IFwiI2ZmZlwiLFxyXG5cdFx0XHR0aHVtYm9wYWNpdHk6IDEsXHJcblx0XHRcdG5hdmJ1dHRvbndpZHRoOiAzMixcclxuXHRcdFx0b3ZlcmxheWJnY29sb3I6IFwiIzAwMFwiLFxyXG5cdFx0XHRvdmVybGF5b3BhY2l0eTogMC45LFxyXG5cdFx0XHRiZ2NvbG9yOiBcIiNmZmZcIixcclxuXHRcdFx0Ym9yZGVyc2l6ZTogOCxcclxuXHRcdFx0Ym9yZGVycmFkaXVzOiAwLFxyXG5cdFx0XHRib3JkZXJtYXJnaW46IDE2LFxyXG5cdFx0XHRib3JkZXJ0b3BtYXJnaW46IDE2LFxyXG5cdFx0XHRib3JkZXJ0b3BtYXJnaW5zbWFsbDogNDgsXHJcblx0XHRcdGJhcmF1dG9oZWlnaHQ6IHRydWUsXHJcblx0XHRcdGJhcmhlaWdodDogNjQsXHJcblx0XHRcdGxvYWRpbmd3aWR0aDogNjQsXHJcblx0XHRcdGxvYWRpbmdoZWlnaHQ6IDY0LFxyXG5cdFx0XHRyZXNpemVzcGVlZDogNDAwLFxyXG5cdFx0XHRmYWRlc3BlZWQ6IDQwMCxcclxuXHRcdFx0anNmb2xkZXI6IFwiXCIsXHJcblx0XHRcdHNraW5zZm9sZGVybmFtZTogXCJza2luc1wiLFxyXG5cdFx0XHRsb2FkaW5naW1hZ2U6IFwiaW1nL2xpZ2h0Ym94LWxvYWRpbmcuZ2lmXCIsXHJcblx0XHRcdG5leHRpbWFnZTogXCJpbWcvbGlnaHRib3gtbmV4dC5wbmdcIixcclxuXHRcdFx0cHJldmltYWdlOiBcImltZy9saWdodGJveC1wcmV2LnBuZ1wiLFxyXG5cdFx0XHRjbG9zZWltYWdlOiBcImltZy9saWdodGJveC1jbG9zZS5wbmdcIixcclxuXHRcdFx0cGxheXZpZGVvaW1hZ2U6IFwiaW1nL2xpZ2h0Ym94LXBsYXl2aWRlby5wbmdcIixcclxuXHRcdFx0dGl0bGViZ2ltYWdlOiBcImltZy9saWdodGJveC10aXRsZWJnLnBuZ1wiLFxyXG5cdFx0XHRuYXZhcnJvd3NwcmV2aW1hZ2U6IFwiaW1nL2xpZ2h0Ym94LW5hdnByZXYucG5nXCIsXHJcblx0XHRcdG5hdmFycm93c25leHRpbWFnZTogXCJpbWcvbGlnaHRib3gtbmF2bmV4dC5wbmdcIixcclxuXHRcdFx0bmF2YXJyb3dzYWx3YXlzc2hvd29udG91Y2g6IHRydWUsXHJcblx0XHRcdG5hdmFycm93c2JvdHRvbXNjcmVlbndpZHRoOiA0NzksXHJcblx0XHRcdGNsb3Nlb25vdmVybGF5OiB0cnVlLFxyXG5cdFx0XHRhbHdheXNzaG93bmF2YXJyb3dzOiBmYWxzZSxcclxuXHRcdFx0c2hvd3BsYXlidXR0b246IHRydWUsXHJcblx0XHRcdHBsYXlpbWFnZTogXCJpbWcvbGlnaHRib3gtcGxheS5wbmdcIixcclxuXHRcdFx0cGF1c2VpbWFnZTogXCJpbWcvbGlnaHRib3gtcGF1c2UucG5nXCIsXHJcblx0XHRcdGZ1bGxzY3JlZW5tb2RlOiBmYWxzZSxcclxuXHRcdFx0ZnVsbHNjcmVlbmNsb3NlaW1hZ2U6IFwiaW1nL2xpZ2h0Ym94LWNsb3NlLWZ1bGxzY3JlZW4ucG5nXCIsXHJcblx0XHRcdGZ1bGxzY3JlZW5uZXh0aW1hZ2U6IFwiaW1nL2xpZ2h0Ym94LW5leHQtZnVsbHNjcmVlbi5wbmdcIixcclxuXHRcdFx0ZnVsbHNjcmVlbnByZXZpbWFnZTogXCJpbWcvbGlnaHRib3gtcHJldi1mdWxsc2NyZWVuLnBuZ1wiLFxyXG5cdFx0XHR2aWRlb2JnY29sb3I6IFwiI2ZmZlwiLFxyXG5cdFx0XHRzaG93dGl0bGU6IHRydWUsXHJcblx0XHRcdHRpdGxlc3R5bGU6IFwiYm90dG9tXCIsXHJcblx0XHRcdHRpdGxlaW5zaWRlY3NzOiBcImNvbG9yOiNmZmY7IGZvbnQtc2l6ZToxNnB4OyBmb250LWZhbWlseTpBcmlhbCxIZWx2ZXRpY2Esc2Fucy1zZXJpZjsgb3ZlcmZsb3c6aGlkZGVuOyB0ZXh0LWFsaWduOmxlZnQ7XCIsXHJcblx0XHRcdHRpdGxlYm90dG9tY3NzOiBcImNvbG9yOiMzMzM7IGZvbnQtc2l6ZToxNnB4OyBmb250LWZhbWlseTpBcmlhbCxIZWx2ZXRpY2Esc2Fucy1zZXJpZjsgb3ZlcmZsb3c6aGlkZGVuOyB0ZXh0LWFsaWduOmxlZnQ7XCIsXHJcblx0XHRcdHNob3dkZXNjcmlwdGlvbjogdHJ1ZSxcclxuXHRcdFx0ZGVzY3JpcHRpb25pbnNpZGVjc3M6IFwiY29sb3I6I2ZmZjsgZm9udC1zaXplOjEycHg7IGZvbnQtZmFtaWx5OkFyaWFsLEhlbHZldGljYSxzYW5zLXNlcmlmOyBvdmVyZmxvdzpoaWRkZW47IHRleHQtYWxpZ246bGVmdDsgbWFyZ2luOjRweCAwcHggMHB4OyBwYWRkaW5nOiAwcHg7XCIsXHJcblx0XHRcdGRlc2NyaXB0aW9uYm90dG9tY3NzOiBcImNvbG9yOiMzMzM7IGZvbnQtc2l6ZToxMnB4OyBmb250LWZhbWlseTpBcmlhbCxIZWx2ZXRpY2Esc2Fucy1zZXJpZjsgb3ZlcmZsb3c6aGlkZGVuOyB0ZXh0LWFsaWduOmxlZnQ7IG1hcmdpbjo0cHggMHB4IDBweDsgcGFkZGluZzogMHB4O1wiLFxyXG5cdFx0XHRzaG93dGl0bGVwcmVmaXg6IHRydWUsXHJcblx0XHRcdHRpdGxlcHJlZml4OiBcIiVOVU0gLyAlVE9UQUxcIixcclxuXHRcdFx0YXV0b3NsaWRlOiBmYWxzZSxcclxuXHRcdFx0c2xpZGVpbnRlcnZhbDogNUUzLFxyXG5cdFx0XHRzaG93dGltZXI6IHRydWUsXHJcblx0XHRcdHRpbWVycG9zaXRpb246IFwiYm90dG9tXCIsXHJcblx0XHRcdHRpbWVyaGVpZ2h0OiAyLFxyXG5cdFx0XHR0aW1lcmNvbG9yOiBcIiNkYzU3MmVcIixcclxuXHRcdFx0dGltZXJvcGFjaXR5OiAxLFxyXG5cdFx0XHRpbml0dmltZW86IHRydWUsXHJcblx0XHRcdGluaXR5b3V0dWJlOiB0cnVlLFxyXG5cdFx0XHRpbWFnZXBlcmNlbnRhZ2U6IDc1LFxyXG5cdFx0XHRzaWRldG9ib3R0b21zY3JlZW53aWR0aDogNDc5LFxyXG5cdFx0XHRlcnJvcndpZHRoOiAyODAsXHJcblx0XHRcdGVycm9yaGVpZ2h0OiA0OCxcclxuXHRcdFx0ZXJyb3Jjc3M6IFwidGV4dC1hbGlnbjpjZW50ZXI7IGNvbG9yOiNmZjAwMDA7IGZvbnQtc2l6ZToxNHB4OyBmb250LWZhbWlseTpBcmlhbCwgc2Fucy1zZXJpZjtcIixcclxuXHRcdFx0ZW5hYmxldG91Y2hzd2lwZTogdHJ1ZSxcclxuXHRcdFx0c3VwcG9ydGVzY2tleTogdHJ1ZSxcclxuXHRcdFx0c3VwcG9ydGFycm93a2V5czogdHJ1ZSxcclxuXHRcdFx0dmVyc2lvbjogXCIzLjNcIixcclxuXHRcdFx0c3RhbXA6IGZhbHNlLFxyXG5cdFx0XHRmcmVlbWFyazogXCI3Miw4NCw3Nyw3Niw1MywzMiw3NiwxMDUsMTAzLDEwNCwxMTYsOTgsMTExLDEyMCwzMiw3MCwxMTQsMTAxLDEwMSwzMiw4NiwxMDEsMTE0LDExNSwxMDUsMTExLDExMFwiLFxyXG5cdFx0XHR3YXRlcm1hcms6IFwiXCIsXHJcblx0XHRcdHdhdGVybWFya2xpbms6IFwiXCJcclxuXHRcdH0sIG9wdGlvbnMpO1xyXG5cdFx0aWYgKHR5cGVvZiBodG1sNWxpZ2h0Ym94X29wdGlvbnMgIT0gXCJ1bmRlZmluZWRcIiAmJiBodG1sNWxpZ2h0Ym94X29wdGlvbnMpICQuZXh0ZW5kKGluc3Qub3B0aW9ucywgaHRtbDVsaWdodGJveF9vcHRpb25zKTtcclxuXHRcdGlmICgkKFwiZGl2I2h0bWw1bGlnaHRib3hfb3B0aW9uc1wiKS5sZW5ndGgpICQuZWFjaCgkKFwiZGl2I2h0bWw1bGlnaHRib3hfb3B0aW9uc1wiKS5kYXRhKCksIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XHJcblx0XHRcdGluc3Qub3B0aW9uc1trZXkudG9Mb3dlckNhc2UoKV0gPSB2YWx1ZVxyXG5cdFx0fSk7XHJcblx0XHR2YXIgREVGQVVMVF9XSURUSCA9IDk2MCxcclxuXHRcdFx0REVGQVVMVF9IRUlHSFQgPSA1NDA7XHJcblx0XHR2YXIgRUxFTV9UWVBFID0gMCxcclxuXHRcdFx0RUxFTV9IUkVGID0gMSxcclxuXHRcdFx0RUxFTV9USVRMRSA9IDIsXHJcblx0XHRcdEVMRU1fR1JPVVAgPSAzLFxyXG5cdFx0XHRFTEVNX1dJRFRIID0gNCxcclxuXHRcdFx0RUxFTV9IRUlHSFQgPSA1LFxyXG5cdFx0XHRFTEVNX0hSRUZfV0VCTSA9IDYsXHJcblx0XHRcdEVMRU1fSFJFRl9PR0cgPSA3LFxyXG5cdFx0XHRFTEVNX1RIVU1CTkFJTCA9IDgsXHJcblx0XHRcdEVMRU1fREVTQ1JJUFRJT04gPSA5LFxyXG5cdFx0XHRFTEVNX0RJViA9IDEwO1xyXG5cdFx0aW5zdC5vcHRpb25zLnR5cGVzID0gW1wiSU1BR0VcIiwgXCJGTEFTSFwiLCBcIlZJREVPXCIsIFwiWU9VVFVCRVwiLCBcIlZJTUVPXCIsIFwiUERGXCIsIFwiTVAzXCIsIFwiV0VCXCIsIFwiRkxWXCIsIFwiREFJTFlNT1RJT05cIiwgXCJESVZcIl07XHJcblx0XHRpbnN0Lm9wdGlvbnMuaHRtbGZvbGRlciA9IHdpbmRvdy5sb2NhdGlvbi5ocmVmLnN1YnN0cigwLCB3aW5kb3cubG9jYXRpb24uaHJlZi5sYXN0SW5kZXhPZihcIi9cIikgKyAxKTtcclxuXHRcdGluc3Qub3B0aW9ucy5za2luc2ZvbGRlciA9IGluc3Qub3B0aW9ucy5za2luc2ZvbGRlcm5hbWU7XHJcblx0XHRpZiAoaW5zdC5vcHRpb25zLnNraW5zZm9sZGVyLmxlbmd0aCA+IDAgJiYgaW5zdC5vcHRpb25zLnNraW5zZm9sZGVyW2luc3Qub3B0aW9ucy5za2luc2ZvbGRlci5sZW5ndGggLSAxXSAhPSBcIi9cIikgaW5zdC5vcHRpb25zLnNraW5zZm9sZGVyICs9IFwiL1wiO1xyXG5cdFx0aWYgKGluc3Qub3B0aW9ucy5za2luc2ZvbGRlci5jaGFyQXQoMCkgIT0gXCIvXCIgJiYgaW5zdC5vcHRpb25zLnNraW5zZm9sZGVyLnN1YnN0cmluZygwLCA1KSAhPSBcImh0dHA6XCIgJiYgaW5zdC5vcHRpb25zLnNraW5zZm9sZGVyLnN1YnN0cmluZygwLFxyXG5cdFx0XHRcdDYpICE9IFwiaHR0cHM6XCIpIGluc3Qub3B0aW9ucy5za2luc2ZvbGRlciA9IGluc3Qub3B0aW9ucy5qc2ZvbGRlciArIGluc3Qub3B0aW9ucy5za2luc2ZvbGRlcjtcclxuXHRcdHZhciBpO1xyXG5cdFx0dmFyIGw7XHJcblx0XHR2YXIgbWFyayA9IFwiXCI7XHJcblx0XHR2YXIgYnl0ZXMgPSBpbnN0Lm9wdGlvbnMuZnJlZW1hcmsuc3BsaXQoXCIsXCIpO1xyXG5cdFx0Zm9yIChpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSsrKSBtYXJrICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZXNbaV0pO1xyXG5cdFx0aW5zdC5vcHRpb25zLmZyZWVtYXJrID0gbWFyaztcclxuXHRcdHZhciBkMCA9IFwiaG10YW1nbGk1Y2JveGguaWNsb2xtc1wiO1xyXG5cdFx0Zm9yIChpID0gMTsgaSA8PSA1OyBpKyspIGQwID0gZDAuc2xpY2UoMCwgaSkgKyBkMC5zbGljZShpICsgMSk7XHJcblx0XHRsID0gZDAubGVuZ3RoO1xyXG5cdFx0Zm9yIChpID0gMDsgaSA8IDU7IGkrKykgZDAgPSBkMC5zbGljZSgwLCBsIC0gOSArIGkpICsgZDAuc2xpY2UobCAtIDggKyBpKTtcclxuXHRcdGlmIChpbnN0Lm9wdGlvbnMuaHRtbGZvbGRlci5pbmRleE9mKGQwKSAhPSAtMSkgaW5zdC5vcHRpb25zLnN0YW1wID0gZmFsc2U7XHJcblx0XHRpbnN0Lm9wdGlvbnMuZmxhc2hJbnN0YWxsZWQgPSBmYWxzZTtcclxuXHRcdHRyeSB7XHJcblx0XHRcdGlmIChuZXcgQWN0aXZlWE9iamVjdChcIlNob2Nrd2F2ZUZsYXNoLlNob2Nrd2F2ZUZsYXNoXCIpKSBpbnN0Lm9wdGlvbnMuZmxhc2hJbnN0YWxsZWQgPVxyXG5cdFx0XHRcdHRydWVcclxuXHRcdH0gY2F0Y2ggKGUpIHtcclxuXHRcdFx0aWYgKG5hdmlnYXRvci5taW1lVHlwZXNbXCJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaFwiXSkgaW5zdC5vcHRpb25zLmZsYXNoSW5zdGFsbGVkID0gdHJ1ZVxyXG5cdFx0fVxyXG5cdFx0aW5zdC5vcHRpb25zLmh0bWw1VmlkZW9TdXBwb3J0ZWQgPSAhIWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ2aWRlb1wiKS5jYW5QbGF5VHlwZTtcclxuXHRcdGluc3Qub3B0aW9ucy5pc0Nocm9tZSA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0Nocm9tZS9pKSAhPSBudWxsO1xyXG5cdFx0aW5zdC5vcHRpb25zLmlzRmlyZWZveCA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL0ZpcmVmb3gvaSkgIT0gbnVsbDtcclxuXHRcdGluc3Qub3B0aW9ucy5pc09wZXJhID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvT3BlcmEvaSkgIT0gbnVsbCB8fCBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9PUFJcXC8vaSkgIT0gbnVsbDtcclxuXHRcdGluc3Qub3B0aW9ucy5pc1NhZmFyaSA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL1NhZmFyaS9pKSAhPSBudWxsO1xyXG5cdFx0aW5zdC5vcHRpb25zLmlzSUUxMSA9XHJcblx0XHRcdG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL1RyaWRlbnRcXC83LykgIT0gbnVsbCAmJiBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9ydjoxMS8pICE9IG51bGw7XHJcblx0XHRpbnN0Lm9wdGlvbnMuaXNJRSA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL01TSUUvaSkgIT0gbnVsbCAmJiAhaW5zdC5vcHRpb25zLmlzT3BlcmE7XHJcblx0XHRpbnN0Lm9wdGlvbnMuaXNJRTEwID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvTVNJRSAxMC9pKSAhPSBudWxsICYmICF0aGlzLm9wdGlvbnMuaXNPcGVyYTtcclxuXHRcdGluc3Qub3B0aW9ucy5pc0lFOSA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL01TSUUgOS9pKSAhPSBudWxsICYmICFpbnN0Lm9wdGlvbnMuaXNPcGVyYTtcclxuXHRcdGluc3Qub3B0aW9ucy5pc0lFOCA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL01TSUUgOC9pKSAhPSBudWxsICYmICFpbnN0Lm9wdGlvbnMuaXNPcGVyYTtcclxuXHRcdGluc3Qub3B0aW9ucy5pc0lFNyA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL01TSUUgNy9pKSAhPSBudWxsICYmICFpbnN0Lm9wdGlvbnMuaXNPcGVyYTtcclxuXHRcdGluc3Qub3B0aW9ucy5pc0lFNiA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL01TSUUgNi9pKSAhPSBudWxsICYmICFpbnN0Lm9wdGlvbnMuaXNPcGVyYTtcclxuXHRcdGluc3Qub3B0aW9ucy5pc0lFNjc4ID0gaW5zdC5vcHRpb25zLmlzSUU2IHx8IGluc3Qub3B0aW9ucy5pc0lFNyB8fCBpbnN0Lm9wdGlvbnMuaXNJRTg7XHJcblx0XHRpbnN0Lm9wdGlvbnMuaXNJRTY3ODkgPSBpbnN0Lm9wdGlvbnMuaXNJRTYgfHwgaW5zdC5vcHRpb25zLmlzSUU3IHx8IGluc3Qub3B0aW9ucy5pc0lFOCB8fCBpbnN0Lm9wdGlvbnMuaXNJRTk7XHJcblx0XHRpbnN0Lm9wdGlvbnMuaXNBbmRyb2lkID0gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvQW5kcm9pZC9pKSAhPSBudWxsO1xyXG5cdFx0aW5zdC5vcHRpb25zLmlzSVBhZCA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL2lQYWQvaSkgIT0gbnVsbDtcclxuXHRcdGluc3Qub3B0aW9ucy5pc0lQaG9uZSA9IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL2lQb2QvaSkgIT0gbnVsbCB8fCBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9pUGhvbmUvaSkgIT0gbnVsbDtcclxuXHRcdGluc3Qub3B0aW9ucy5pc0lPUyA9IGluc3Qub3B0aW9ucy5pc0lQYWQgfHwgaW5zdC5vcHRpb25zLmlzSVBob25lO1xyXG5cdFx0aW5zdC5vcHRpb25zLmlzTW9iaWxlID0gaW5zdC5vcHRpb25zLmlzQW5kcm9pZCB8fCBpbnN0Lm9wdGlvbnMuaXNJUGFkIHx8IGluc3Qub3B0aW9ucy5pc0lQaG9uZTtcclxuXHRcdGluc3Qub3B0aW9ucy5pc0lPU0xlc3M1ID0gaW5zdC5vcHRpb25zLmlzSVBhZCAmJiBpbnN0Lm9wdGlvbnMuaXNJUGhvbmUgJiYgKG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL09TIDQvaSkgIT0gbnVsbCB8fCBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9PUyAzL2kpICE9IG51bGwpO1xyXG5cdFx0aW5zdC5vcHRpb25zLnN1cHBvcnRDU1NQb3NpdGlvbkZpeGVkID0gIWluc3Qub3B0aW9ucy5pc0lFNiAmJiAhaW5zdC5vcHRpb25zLmlzSU9TTGVzczU7XHJcblx0XHRpbnN0Lm9wdGlvbnMuaWVxdWlya3Ntb2RlID0gaW5zdC5vcHRpb25zLmlzSUU2Nzg5ICYmIGRvY3VtZW50LmNvbXBhdE1vZGUgIT0gXCJDU1MxQ29tcGF0XCI7XHJcblx0XHRpbnN0Lm9wdGlvbnMuaXNUb3VjaCA9IFwib250b3VjaHN0YXJ0XCIgaW5cclxuXHRcdFx0d2luZG93O1xyXG5cdFx0aWYgKGluc3Qub3B0aW9ucy5pc01vYmlsZSkgaW5zdC5vcHRpb25zLmF1dG9wbGF5ID0gZmFsc2U7XHJcblx0XHRpbnN0Lm9wdGlvbnMubmF2aGVpZ2h0ID0gMDtcclxuXHRcdGluc3Qub3B0aW9ucy50aHVtYmdhcCArPSAyICogaW5zdC5vcHRpb25zLnRodW1iYm9yZGVyO1xyXG5cdFx0aW5zdC5vcHRpb25zLnJlc2l6ZVRpbWVvdXQgPSAtMTtcclxuXHRcdGluc3Quc2xpZGVUaW1lb3V0ID0gbnVsbDtcclxuXHRcdGluc3QuYXV0b3NsaWRpbmcgPSBmYWxzZTtcclxuXHRcdGluc3QuZWxlbUFycmF5ID0gbmV3IEFycmF5O1xyXG5cdFx0aW5zdC5vcHRpb25zLmN1ckVsZW0gPSAtMTtcclxuXHRcdGluc3QuZGVmYXVsdG9wdGlvbnMgPSAkLmV4dGVuZCh7fSwgaW5zdC5vcHRpb25zKTtcclxuXHRcdGlmIChpbnN0Lm9wdGlvbnMuZ29vZ2xlYW5hbHl0aWNzYWNjb3VudCAmJiAhd2luZG93Ll9nYXEpIHtcclxuXHRcdFx0d2luZG93Ll9nYXEgPSB3aW5kb3cuX2dhcSB8fCBbXTtcclxuXHRcdFx0d2luZG93Ll9nYXEucHVzaChbXCJfc2V0QWNjb3VudFwiLCBpbnN0Lm9wdGlvbnMuZ29vZ2xlYW5hbHl0aWNzYWNjb3VudF0pO1xyXG5cdFx0XHR3aW5kb3cuX2dhcS5wdXNoKFtcIl90cmFja1BhZ2V2aWV3XCJdKTtcclxuXHRcdFx0JC5nZXRTY3JpcHQoKFwiaHR0cHM6XCIgPT1cclxuXHRcdFx0XHRkb2N1bWVudC5sb2NhdGlvbi5wcm90b2NvbCA/IFwiaHR0cHM6Ly9zc2xcIiA6IFwiaHR0cDovL3d3d1wiKSArIFwiLmdvb2dsZS1hbmFseXRpY3MuY29tL2dhLmpzXCIpXHJcblx0XHR9XHJcblx0XHRpZiAoaW5zdC5vcHRpb25zLmluaXR2aW1lbykge1xyXG5cdFx0XHR2YXIgdGFnID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiKTtcclxuXHRcdFx0dmFyIGZpcnN0U2NyaXB0VGFnID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIilbMF07XHJcblx0XHRcdGZpcnN0U2NyaXB0VGFnLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRhZywgZmlyc3RTY3JpcHRUYWcpXHJcblx0XHR9XHJcblx0XHRpZiAoaW5zdC5vcHRpb25zLmluaXR5b3V0dWJlKSB7XHJcblx0XHRcdHZhciB0YWcgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xyXG5cdFx0XHR0YWcuc3JjID0gKFwiaHR0cHM6XCIgPT0gZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2wgPyBcImh0dHBzXCIgOiBcImh0dHBcIikgKyBcIjovL3d3dy55b3V0dWJlLmNvbS9pZnJhbWVfYXBpXCI7XHJcblx0XHRcdHZhciBmaXJzdFNjcmlwdFRhZyA9XHJcblx0XHRcdFx0ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIilbMF07XHJcblx0XHRcdGZpcnN0U2NyaXB0VGFnLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHRhZywgZmlyc3RTY3JpcHRUYWcpXHJcblx0XHR9XHJcblx0XHRpbnN0LmluaXQgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGluc3Quc2hvd2luZyA9IGZhbHNlO1xyXG5cdFx0XHRpbnN0LnJlYWREYXRhKCk7XHJcblx0XHRcdGluc3QuY3JlYXRlTWFya3VwKCk7XHJcblx0XHRcdGluc3Quc3VwcG9ydEtleWJvYXJkKCk7XHJcblx0XHRcdGluc3QuaW5pdFNsaWRlKClcclxuXHRcdH07XHJcblx0XHRpbnN0LnJlYWREYXRhID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRpbnN0LmVhY2goZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGlmICh0aGlzLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT0gXCJhXCIgJiYgdGhpcy5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9IFwiYXJlYVwiKSByZXR1cm47XHJcblx0XHRcdFx0dmFyICR0aGlzID0gJCh0aGlzKTtcclxuXHRcdFx0XHR2YXIgZmlsZVR5cGUgPSBcIm1lZGlhdHlwZVwiIGluICR0aGlzLmRhdGEoKSA/ICR0aGlzLmRhdGEoXCJtZWRpYXR5cGVcIikgOiBpbnN0LmNoZWNrVHlwZSgkdGhpcy5hdHRyKFwiaHJlZlwiKSk7XHJcblx0XHRcdFx0aWYgKGZpbGVUeXBlIDwgMCkgcmV0dXJuO1xyXG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgaW5zdC5lbGVtQXJyYXkubGVuZ3RoOyBpKyspXHJcblx0XHRcdFx0XHRpZiAoJHRoaXMuYXR0cihcImhyZWZcIikgPT1cclxuXHRcdFx0XHRcdFx0aW5zdC5lbGVtQXJyYXlbaV1bRUxFTV9IUkVGXSkgcmV0dXJuO1xyXG5cdFx0XHRcdGluc3QuZWxlbUFycmF5LnB1c2gobmV3IEFycmF5KGZpbGVUeXBlLCAkdGhpcy5hdHRyKFwiaHJlZlwiKSwgJHRoaXMuYXR0cihcInRpdGxlXCIpLCAkdGhpcy5kYXRhKFwiZ3JvdXBcIiksICR0aGlzLmRhdGEoXCJ3aWR0aFwiKSwgJHRoaXMuZGF0YShcImhlaWdodFwiKSwgJHRoaXMuZGF0YShcIndlYm1cIiksICR0aGlzLmRhdGEoXCJvZ2dcIiksICR0aGlzLmRhdGEoXCJ0aHVtYm5haWxcIiksICR0aGlzLmRhdGEoXCJkZXNjcmlwdGlvblwiKSkpXHJcblx0XHRcdH0pXHJcblx0XHR9O1xyXG5cdFx0aW5zdC5jcmVhdGVNYXJrdXAgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGlmICghaW5zdC5vcHRpb25zLnRpdGxlY3NzKSBpbnN0Lm9wdGlvbnMudGl0bGVjc3MgPSBpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcImluc2lkZVwiID8gaW5zdC5vcHRpb25zLnRpdGxlaW5zaWRlY3NzIDogaW5zdC5vcHRpb25zLnRpdGxlYm90dG9tY3NzO1xyXG5cdFx0XHRpZiAoIWluc3Qub3B0aW9ucy5kZXNjcmlwdGlvbmNzcykgaW5zdC5vcHRpb25zLmRlc2NyaXB0aW9uY3NzID0gaW5zdC5vcHRpb25zLnRpdGxlc3R5bGUgPT1cclxuXHRcdFx0XHRcImluc2lkZVwiID8gaW5zdC5vcHRpb25zLmRlc2NyaXB0aW9uaW5zaWRlY3NzIDogaW5zdC5vcHRpb25zLmRlc2NyaXB0aW9uYm90dG9tY3NzO1xyXG5cdFx0XHRpbnN0Lm9wdGlvbnMudGl0bGVjc3MgPSAkLnRyaW0oaW5zdC5vcHRpb25zLnRpdGxlY3NzKTtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy50aXRsZWNzcy5sZW5ndGggPiAxKSB7XHJcblx0XHRcdFx0aWYgKGluc3Qub3B0aW9ucy50aXRsZWNzcy5jaGFyQXQoMCkgPT0gXCJ7XCIpIGluc3Qub3B0aW9ucy50aXRsZWNzcyA9IGluc3Qub3B0aW9ucy50aXRsZWNzcy5zdWJzdHJpbmcoMSk7XHJcblx0XHRcdFx0aWYgKGluc3Qub3B0aW9ucy50aXRsZWNzcy5jaGFyQXQoaW5zdC5vcHRpb25zLnRpdGxlY3NzLmxlbmd0aCAtIDEpID09IFwifVwiKSBpbnN0Lm9wdGlvbnMudGl0bGVjc3MgPSBpbnN0Lm9wdGlvbnMudGl0bGVjc3Muc3Vic3RyaW5nKDAsIGluc3Qub3B0aW9ucy50aXRsZWNzcy5sZW5ndGggLSAxKVxyXG5cdFx0XHR9XHJcblx0XHRcdGluc3Qub3B0aW9ucy5kZXNjcmlwdGlvbmNzcyA9ICQudHJpbShpbnN0Lm9wdGlvbnMuZGVzY3JpcHRpb25jc3MpO1xyXG5cdFx0XHRpZiAoaW5zdC5vcHRpb25zLmRlc2NyaXB0aW9uY3NzLmxlbmd0aCA+XHJcblx0XHRcdFx0MSkge1xyXG5cdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuZGVzY3JpcHRpb25jc3MuY2hhckF0KDApID09IFwie1wiKSBpbnN0Lm9wdGlvbnMuZGVzY3JpcHRpb25jc3MgPSBpbnN0Lm9wdGlvbnMuZGVzY3JpcHRpb25jc3Muc3Vic3RyaW5nKDEpO1xyXG5cdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuZGVzY3JpcHRpb25jc3MuY2hhckF0KGluc3Qub3B0aW9ucy5kZXNjcmlwdGlvbmNzcy5sZW5ndGggLSAxKSA9PSBcIn1cIikgaW5zdC5vcHRpb25zLmRlc2NyaXB0aW9uY3NzID0gaW5zdC5vcHRpb25zLmRlc2NyaXB0aW9uY3NzLnN1YnN0cmluZygwLCBpbnN0Lm9wdGlvbnMuZGVzY3JpcHRpb25jc3MubGVuZ3RoIC0gMSlcclxuXHRcdFx0fVxyXG5cdFx0XHRpbnN0Lm9wdGlvbnMuZXJyb3Jjc3MgPSAkLnRyaW0oaW5zdC5vcHRpb25zLmVycm9yY3NzKTtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5lcnJvcmNzcy5sZW5ndGggPiAxKSB7XHJcblx0XHRcdFx0aWYgKGluc3Qub3B0aW9ucy5lcnJvcmNzcy5jaGFyQXQoMCkgPT0gXCJ7XCIpIGluc3Qub3B0aW9ucy5lcnJvcmNzcyA9IGluc3Qub3B0aW9ucy5lcnJvcmNzcy5zdWJzdHJpbmcoMSk7XHJcblx0XHRcdFx0aWYgKGluc3Qub3B0aW9ucy5lcnJvcmNzcy5jaGFyQXQoaW5zdC5vcHRpb25zLmVycm9yY3NzLmxlbmd0aCAtXHJcblx0XHRcdFx0XHRcdDEpID09IFwifVwiKSBpbnN0Lm9wdGlvbnMuZXJyb3Jjc3MgPSBpbnN0Lm9wdGlvbnMuZXJyb3Jjc3Muc3Vic3RyaW5nKDAsIGluc3Qub3B0aW9ucy5lcnJvcmNzcy5sZW5ndGggLSAxKVxyXG5cdFx0XHR9XHJcblx0XHRcdHZhciBzdHlsZUNzcyA9IFwiLmh0bWw1LWhpZGUge2Rpc3BsYXk6bm9uZSAhaW1wb3J0YW50O30gI2Nhcm91c2VsLWh0bWw1LWxpZ2h0Ym94ICNodG1sNS10ZXh0IHtcIiArIGluc3Qub3B0aW9ucy50aXRsZWNzcyArIFwifVwiO1xyXG5cdFx0XHRzdHlsZUNzcyArPSBcIiNjYXJvdXNlbC1odG1sNS1saWdodGJveCAuaHRtbDUtZGVzY3JpcHRpb24ge1wiICsgaW5zdC5vcHRpb25zLmRlc2NyaXB0aW9uY3NzICsgXCJ9XCI7XHJcblx0XHRcdHN0eWxlQ3NzICs9IFwiI2Nhcm91c2VsLWh0bWw1LWxpZ2h0Ym94IC5odG1sNS1lcnJvciB7XCIgKyBpbnN0Lm9wdGlvbnMuZXJyb3Jjc3MgKyBcIn1cIjtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5uYXZhcnJvd3NhbHdheXNzaG93b250b3VjaCB8fCBpbnN0Lm9wdGlvbnMuYWx3YXlzc2hvd25hdmFycm93cykge1xyXG5cdFx0XHRcdHN0eWxlQ3NzICs9IFwiI2Nhcm91c2VsLWh0bWw1LWxpZ2h0Ym94IC5odG1sNS1wcmV2LXRvdWNoIHtsZWZ0OjBweDt0b3A6NTAlO21hcmdpbi10b3A6LTE2cHg7bWFyZ2luLWxlZnQ6LTMycHg7fSAjY2Fyb3VzZWwtaHRtbDUtbGlnaHRib3ggLmh0bWw1LW5leHQtdG91Y2gge3JpZ2h0OjBweDt0b3A6NTAlO21hcmdpbi10b3A6LTE2cHg7bWFyZ2luLXJpZ2h0Oi0zMnB4O31cIjtcclxuXHRcdFx0XHRzdHlsZUNzcyArPSBcIkBtZWRpYSAobWF4LXdpZHRoOiBcIiArIGluc3Qub3B0aW9ucy5uYXZhcnJvd3Nib3R0b21zY3JlZW53aWR0aCArIFwicHgpIHsgI2Nhcm91c2VsLWh0bWw1LWxpZ2h0Ym94IC5odG1sNS1wcmV2LXRvdWNoIHt0b3A6MTAwJTtsZWZ0OjA7bWFyZ2luOjA7fSAjY2Fyb3VzZWwtaHRtbDUtbGlnaHRib3ggLmh0bWw1LW5leHQtdG91Y2gge3RvcDoxMDAlO3JpZ2h0OjA7bWFyZ2luOjA7fSB9XCJcclxuXHRcdFx0fVxyXG5cdFx0XHRzdHlsZUNzcyArPSBcIiNjYXJvdXNlbC1odG1sNS1saWdodGJveCAuaHRtbDUtcHJldi1mdWxsc2NyZWVuIHtkaXNwbGF5OmJsb2NrO30gI2Nhcm91c2VsLWh0bWw1LWxpZ2h0Ym94IC5odG1sNS1uZXh0LWZ1bGxzY3JlZW4ge2Rpc3BsYXk6YmxvY2s7fSAjY2Fyb3VzZWwtaHRtbDUtbGlnaHRib3ggLmh0bWw1LXByZXYtYm90dG9tLWZ1bGxzY3JlZW4ge2Rpc3BsYXk6bm9uZTt9ICNjYXJvdXNlbC1odG1sNS1saWdodGJveCAuaHRtbDUtbmV4dC1ib3R0b20tZnVsbHNjcmVlbiB7ZGlzcGxheTpub25lO31cIjtcclxuXHRcdFx0c3R5bGVDc3MgKz0gXCJAbWVkaWEgKG1heC13aWR0aDogXCIgKyBpbnN0Lm9wdGlvbnMubmF2YXJyb3dzYm90dG9tc2NyZWVud2lkdGggKyBcInB4KSB7I2Nhcm91c2VsLWh0bWw1LWxpZ2h0Ym94IC5odG1sNS1wcmV2LWZ1bGxzY3JlZW4ge2Rpc3BsYXk6bm9uZTt9ICNjYXJvdXNlbC1odG1sNS1saWdodGJveCAuaHRtbDUtbmV4dC1mdWxsc2NyZWVuIHtkaXNwbGF5Om5vbmU7fSAjY2Fyb3VzZWwtaHRtbDUtbGlnaHRib3ggLmh0bWw1LXByZXYtYm90dG9tLWZ1bGxzY3JlZW4ge2Rpc3BsYXk6YmxvY2s7fSAjY2Fyb3VzZWwtaHRtbDUtbGlnaHRib3ggLmh0bWw1LW5leHQtYm90dG9tLWZ1bGxzY3JlZW4ge2Rpc3BsYXk6YmxvY2s7fSB9XCI7XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcInJpZ2h0XCIpIHtcclxuXHRcdFx0XHRzdHlsZUNzcyArPSBcIiNjYXJvdXNlbC1odG1sNS1saWdodGJveCAjaHRtbDUtZWxlbS13cmFwIHt3aWR0aDpcIiArIGluc3Qub3B0aW9ucy5pbWFnZXBlcmNlbnRhZ2UgKyBcIiU7aGVpZ2h0OjEwMCU7fSAjY2Fyb3VzZWwtaHRtbDUtbGlnaHRib3ggI2h0bWw1LWVsZW0tZGF0YS1ib3gge21pbi1oZWlnaHQ6MTAwJTt9XCI7XHJcblx0XHRcdFx0c3R5bGVDc3MgKz0gXCJAbWVkaWEgKG1heC13aWR0aDogXCIgKyBpbnN0Lm9wdGlvbnMuc2lkZXRvYm90dG9tc2NyZWVud2lkdGggKyBcInB4KSB7I2Nhcm91c2VsLWh0bWw1LWxpZ2h0Ym94ICNodG1sNS1lbGVtLXdyYXAge3dpZHRoOjEwMCU7aGVpZ2h0OmF1dG87fSAjY2Fyb3VzZWwtaHRtbDUtbGlnaHRib3ggI2h0bWw1LWVsZW0tZGF0YS1ib3gge3dpZHRoOjEwMCU7aGVpZ2h0OmF1dG87bWluLWhlaWdodDowO319XCJcclxuXHRcdFx0fSBlbHNlIGlmIChpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcImxlZnRcIikge1xyXG5cdFx0XHRcdHN0eWxlQ3NzICs9IFwiI2Nhcm91c2VsLWh0bWw1LWxpZ2h0Ym94ICNodG1sNS1lbGVtLXdyYXAge2hlaWdodDoxMDAlO30gI2Nhcm91c2VsLWh0bWw1LWxpZ2h0Ym94ICNodG1sNS1lbGVtLWRhdGEtYm94IHt3aWR0aDpcIiArIFN0cmluZygxMDAgLSBpbnN0Lm9wdGlvbnMuaW1hZ2VwZXJjZW50YWdlKSArIFwiJTttaW4taGVpZ2h0OjEwMCU7fVwiO1xyXG5cdFx0XHRcdHN0eWxlQ3NzICs9IFwiQG1lZGlhIChtYXgtd2lkdGg6IFwiICsgaW5zdC5vcHRpb25zLnNpZGV0b2JvdHRvbXNjcmVlbndpZHRoICtcclxuXHRcdFx0XHRcdFwicHgpIHsjY2Fyb3VzZWwtaHRtbDUtbGlnaHRib3ggI2h0bWw1LWVsZW0td3JhcCB7d2lkdGg6MTAwJTtoZWlnaHQ6YXV0bzt9ICNjYXJvdXNlbC1odG1sNS1saWdodGJveCAjaHRtbDUtZWxlbS1kYXRhLWJveCB7d2lkdGg6MTAwJTtoZWlnaHQ6YXV0bzttaW4taGVpZ2h0OjA7fX1cIlxyXG5cdFx0XHR9XHJcblx0XHRcdCQoXCJoZWFkXCIpLmFwcGVuZChcIjxzdHlsZSB0eXBlPSd0ZXh0L2NzcycgZGF0YS1jcmVhdG9yPSdjYXJvdXNlbC1odG1sNS1saWdodGJveCc+XCIgKyBzdHlsZUNzcyArIFwiPC9zdHlsZT5cIik7XHJcblx0XHRcdGluc3QuJGxpZ2h0Ym94ID0gJChcIjxkaXYgaWQ9J2Nhcm91c2VsLWh0bWw1LWxpZ2h0Ym94JyBzdHlsZT0nZGlzcGxheTpub25lO3RvcDowcHg7bGVmdDowcHg7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTt6LWluZGV4Ojk5OTk5OTg7dGV4dC1hbGlnbjpjZW50ZXI7Jz5cIiArIFwiPGRpdiBpZD0naHRtbDUtbGlnaHRib3gtb3ZlcmxheScgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7dG9wOjBweDtsZWZ0OjBweDt3aWR0aDoxMDAlO21pbi1oZWlnaHQ6MTAwJTtiYWNrZ3JvdW5kLWNvbG9yOlwiICtcclxuXHRcdFx0XHRpbnN0Lm9wdGlvbnMub3ZlcmxheWJnY29sb3IgKyBcIjtvcGFjaXR5OlwiICsgaW5zdC5vcHRpb25zLm92ZXJsYXlvcGFjaXR5ICsgXCI7ZmlsdGVyOmFscGhhKG9wYWNpdHk9XCIgKyBNYXRoLnJvdW5kKGluc3Qub3B0aW9ucy5vdmVybGF5b3BhY2l0eSAqIDEwMCkgKyBcIik7Jz48L2Rpdj5cIiArIFwiPGRpdiBpZD0naHRtbDUtbGlnaHRib3gtYm94JyBzdHlsZT0nZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW46MHB4IGF1dG87Jz5cIiArIFwiPGRpdiBpZD0naHRtbDUtZWxlbS1ib3gnIHN0eWxlPSdkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlO3dpZHRoOjEwMCU7b3ZlcmZsb3cteDpoaWRkZW47b3ZlcmZsb3cteTphdXRvO2hlaWdodDoxMDAlO21hcmdpbjowcHggYXV0bzt0ZXh0LWFsaWduOmNlbnRlcjtib3gtc2l6aW5nOmJvcmRlci1ib3g7LW1vei1ib3gtc2l6aW5nOmJvcmRlci1ib3g7LXdlYmtpdC1ib3gtc2l6aW5nOmJvcmRlci1ib3g7Jz5cIiArIFwiPGRpdiBpZD0naHRtbDUtZWxlbS13cmFwJyBzdHlsZT0nZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTttYXJnaW46MHB4IGF1dG87dGV4dC1hbGlnbjpjZW50ZXI7Ym94LXNpemluZzpib3JkZXItYm94Oy1tb3otYm94LXNpemluZzpib3JkZXItYm94Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94O2JhY2tncm91bmQtY29sb3I6XCIgK1xyXG5cdFx0XHRcdGluc3Qub3B0aW9ucy5iZ2NvbG9yICsgXCI7Jz5cIiArIFwiPGRpdiBpZD0naHRtbDUtbG9hZGluZycgc3R5bGU9J2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MHB4O2xlZnQ6MHB4O3RleHQtYWxpZ246Y2VudGVyO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7YmFja2dyb3VuZDp1cmwoXFxcIlwiICsgaW5zdC5vcHRpb25zLnNraW5zZm9sZGVyICsgaW5zdC5vcHRpb25zLmxvYWRpbmdpbWFnZSArIFwiXFxcIikgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7Jz48L2Rpdj5cIiArIFwiPGRpdiBpZD0naHRtbDUtZXJyb3InIGNsYXNzPSdodG1sNS1lcnJvcicgc3R5bGU9J2Rpc3BsYXk6bm9uZTtwb3NpdGlvbjphYnNvbHV0ZTtwYWRkaW5nOlwiICsgaW5zdC5vcHRpb25zLmJvcmRlcnNpemUgKyBcInB4O3RleHQtYWxpZ246Y2VudGVyO3dpZHRoOlwiICsgaW5zdC5vcHRpb25zLmVycm9yd2lkdGggKyBcInB4O2hlaWdodDpcIiArIGluc3Qub3B0aW9ucy5lcnJvcmhlaWdodCArIFwicHg7Jz5cIiArIFwiVGhlIHJlcXVlc3RlZCBjb250ZW50IGNhbm5vdCBiZSBsb2FkZWQuPGJyIC8+UGxlYXNlIHRyeSBhZ2FpbiBsYXRlci5cIiArXHJcblx0XHRcdFx0XCI8L2Rpdj5cIiArIFwiPGRpdiBpZD0naHRtbDUtaW1hZ2UnIHN0eWxlPSdkaXNwbGF5Om5vbmU7cG9zaXRpb246cmVsYXRpdmU7dG9wOjBweDtsZWZ0OjBweDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO1wiICsgKGluc3Qub3B0aW9ucy5pZXF1aXJrc21vZGUgPyBcIm1hcmdpblwiIDogXCJwYWRkaW5nXCIpICsgXCI6XCIgKyBpbnN0Lm9wdGlvbnMuYm9yZGVyc2l6ZSArIFwicHg7dGV4dC1hbGlnbjpjZW50ZXI7Ym94LXNpemluZzpib3JkZXItYm94Oy1tb3otYm94LXNpemluZzpib3JkZXItYm94Oy13ZWJraXQtYm94LXNpemluZzpib3JkZXItYm94Oyc+PC9kaXY+XCIgKyBcIjwvZGl2PlwiICsgXCI8L2Rpdj5cIiArIFwiPGRpdiBpZD0naHRtbDUtd2F0ZXJtYXJrJyBzdHlsZT0nZGlzcGxheTpub25lO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6XCIgKyBTdHJpbmcoaW5zdC5vcHRpb25zLmJvcmRlcnNpemUgKyAyKSArIFwicHg7dG9wOlwiICsgU3RyaW5nKGluc3Qub3B0aW9ucy5ib3JkZXJzaXplICsgMikgKyBcInB4Oyc+PC9kaXY+XCIgKyBcIjwvZGl2PlwiICsgXCI8L2Rpdj5cIik7XHJcblx0XHRcdGluc3QuJGxpZ2h0Ym94LmNzcyh7XHJcblx0XHRcdFx0cG9zaXRpb246IGluc3Qub3B0aW9ucy5zdXBwb3J0Q1NTUG9zaXRpb25GaXhlZCAmJlxyXG5cdFx0XHRcdFx0aW5zdC5vcHRpb25zLnJlc3BvbnNpdmUgJiYgIWluc3Qub3B0aW9ucy5pZXF1aXJrc21vZGUgPyBcImZpeGVkXCIgOiBcImFic29sdXRlXCJcclxuXHRcdFx0fSk7XHJcblx0XHRcdGluc3QuJGxpZ2h0Ym94LmFwcGVuZFRvKFwiYm9keVwiKTtcclxuXHRcdFx0aW5zdC4kbGlnaHRib3hCb3ggPSAkKFwiI2h0bWw1LWxpZ2h0Ym94LWJveFwiLCBpbnN0LiRsaWdodGJveCk7XHJcblx0XHRcdGluc3QuJGVsZW0gPSAkKFwiI2h0bWw1LWVsZW0tYm94XCIsIGluc3QuJGxpZ2h0Ym94KTtcclxuXHRcdFx0aW5zdC4kZWxlbVdyYXAgPSAkKFwiI2h0bWw1LWVsZW0td3JhcFwiLCBpbnN0LiRsaWdodGJveCk7XHJcblx0XHRcdGluc3QuJGxvYWRpbmcgPSAkKFwiI2h0bWw1LWxvYWRpbmdcIiwgaW5zdC4kbGlnaHRib3gpO1xyXG5cdFx0XHRpbnN0LiRlcnJvciA9ICQoXCIjaHRtbDUtZXJyb3JcIiwgaW5zdC4kbGlnaHRib3gpO1xyXG5cdFx0XHRpbnN0LiRpbWFnZSA9ICQoXCIjaHRtbDUtaW1hZ2VcIiwgaW5zdC4kbGlnaHRib3gpO1xyXG5cdFx0XHR2YXIgZWxlbVRleHQgPSBcIjxkaXYgaWQ9J2h0bWw1LWVsZW0tZGF0YS1ib3gnIHN0eWxlPSdkaXNwbGF5Om5vbmU7Ym94LXNpemluZzpib3JkZXItYm94Oyc+PGRpdiBpZD0naHRtbDUtdGV4dCcgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7b3ZlcmZsb3c6aGlkZGVuOyc+PC9kaXY+PC9kaXY+XCI7XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcImxlZnRcIikgaW5zdC4kZWxlbS5wcmVwZW5kKGVsZW1UZXh0KTtcclxuXHRcdFx0ZWxzZSBpbnN0LiRlbGVtLmFwcGVuZChlbGVtVGV4dCk7XHJcblx0XHRcdGluc3QuJGVsZW1EYXRhID0gJChcIiNodG1sNS1lbGVtLWRhdGEtYm94XCIsIGluc3QuJGxpZ2h0Ym94KTtcclxuXHRcdFx0aW5zdC4kdGV4dCA9ICQoXCIjaHRtbDUtdGV4dFwiLCBpbnN0LiRsaWdodGJveCk7XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuYm9yZGVycmFkaXVzID4gMCkge1xyXG5cdFx0XHRcdGluc3QuJGVsZW0uY3NzKHtcclxuXHRcdFx0XHRcdFwiYm9yZGVyLXJhZGl1c1wiOiBpbnN0Lm9wdGlvbnMuYm9yZGVycmFkaXVzICsgXCJweFwiLFxyXG5cdFx0XHRcdFx0XCItbW96LWJvcmRlci1yYWRpdXNcIjogaW5zdC5vcHRpb25zLmJvcmRlcnJhZGl1cyArIFwicHhcIixcclxuXHRcdFx0XHRcdFwiLXdlYmtpdC1ib3JkZXItcmFkaXVzXCI6IGluc3Qub3B0aW9ucy5ib3JkZXJyYWRpdXMgKyBcInB4XCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpZiAoaW5zdC5vcHRpb25zLnRpdGxlc3R5bGUgPT0gXCJpbnNpZGVcIikgaW5zdC4kZWxlbVdyYXAuY3NzKHtcclxuXHRcdFx0XHRcdFwiYm9yZGVyLXJhZGl1c1wiOiBpbnN0Lm9wdGlvbnMuYm9yZGVycmFkaXVzICsgXCJweFwiLFxyXG5cdFx0XHRcdFx0XCItbW96LWJvcmRlci1yYWRpdXNcIjogaW5zdC5vcHRpb25zLmJvcmRlcnJhZGl1cyArIFwicHhcIixcclxuXHRcdFx0XHRcdFwiLXdlYmtpdC1ib3JkZXItcmFkaXVzXCI6IGluc3Qub3B0aW9ucy5ib3JkZXJyYWRpdXMgKyBcInB4XCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRlbHNlIGlmIChpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcImJvdHRvbVwiKSB7XHJcblx0XHRcdFx0XHRpbnN0LiRlbGVtV3JhcC5jc3Moe1xyXG5cdFx0XHRcdFx0XHRcImJvcmRlci10b3AtbGVmdC1yYWRpdXNcIjogaW5zdC5vcHRpb25zLmJvcmRlcnJhZGl1cyArIFwicHhcIixcclxuXHRcdFx0XHRcdFx0XCItbW96LXRvcC1sZWZ0LWJvcmRlci1yYWRpdXNcIjogaW5zdC5vcHRpb25zLmJvcmRlcnJhZGl1cyArIFwicHhcIixcclxuXHRcdFx0XHRcdFx0XCItd2Via2l0LXRvcC1sZWZ0LWJvcmRlci1yYWRpdXNcIjogaW5zdC5vcHRpb25zLmJvcmRlcnJhZGl1cyArIFwicHhcIixcclxuXHRcdFx0XHRcdFx0XCJib3JkZXItdG9wLXJpZ2h0LXJhZGl1c1wiOiBpbnN0Lm9wdGlvbnMuYm9yZGVycmFkaXVzICsgXCJweFwiLFxyXG5cdFx0XHRcdFx0XHRcIi1tb3otdG9wLXJpZ2h0LWJvcmRlci1yYWRpdXNcIjogaW5zdC5vcHRpb25zLmJvcmRlcnJhZGl1cyArIFwicHhcIixcclxuXHRcdFx0XHRcdFx0XCItd2Via2l0LXRvcC1yaWdodC1ib3JkZXItcmFkaXVzXCI6IGluc3Qub3B0aW9ucy5ib3JkZXJyYWRpdXMgK1xyXG5cdFx0XHRcdFx0XHRcdFwicHhcIlxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRpbnN0LiRlbGVtRGF0YS5jc3Moe1xyXG5cdFx0XHRcdFx0XHRcImJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXNcIjogaW5zdC5vcHRpb25zLmJvcmRlcnJhZGl1cyArIFwicHhcIixcclxuXHRcdFx0XHRcdFx0XCItbW96LXRvcC1ib3R0b20tYm9yZGVyLXJhZGl1c1wiOiBpbnN0Lm9wdGlvbnMuYm9yZGVycmFkaXVzICsgXCJweFwiLFxyXG5cdFx0XHRcdFx0XHRcIi13ZWJraXQtYm90dG9tLWxlZnQtYm9yZGVyLXJhZGl1c1wiOiBpbnN0Lm9wdGlvbnMuYm9yZGVycmFkaXVzICsgXCJweFwiLFxyXG5cdFx0XHRcdFx0XHRcImJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzXCI6IGluc3Qub3B0aW9ucy5ib3JkZXJyYWRpdXMgKyBcInB4XCIsXHJcblx0XHRcdFx0XHRcdFwiLW1vei1ib3R0b20tcmlnaHQtYm9yZGVyLXJhZGl1c1wiOiBpbnN0Lm9wdGlvbnMuYm9yZGVycmFkaXVzICsgXCJweFwiLFxyXG5cdFx0XHRcdFx0XHRcIi13ZWJraXQtYm90dG9tLXJpZ2h0LWJvcmRlci1yYWRpdXNcIjogaW5zdC5vcHRpb25zLmJvcmRlcnJhZGl1cyArIFwicHhcIlxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy50aXRsZXN0eWxlID09IFwicmlnaHRcIiB8fCBpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcImxlZnRcIikge1xyXG5cdFx0XHRcdGluc3QuJGxpZ2h0Ym94Qm94LmNzcyh7XHJcblx0XHRcdFx0XHRcImJhY2tncm91bmQtY29sb3JcIjogaW5zdC5vcHRpb25zLmJnY29sb3JcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpZiAoaW5zdC5vcHRpb25zLnRpdGxlc3R5bGUgPT0gXCJyaWdodFwiKSB7XHJcblx0XHRcdFx0XHRpbnN0LiRlbGVtV3JhcC5jc3Moe1xyXG5cdFx0XHRcdFx0XHRwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxyXG5cdFx0XHRcdFx0XHRcImZsb2F0XCI6IFwibGVmdFwiXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGluc3QuJGVsZW1EYXRhLmNzcyh7XHJcblx0XHRcdFx0XHRcdHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXHJcblx0XHRcdFx0XHRcdG92ZXJmbG93OiBcImhpZGRlblwiLFxyXG5cdFx0XHRcdFx0XHRwYWRkaW5nOiBpbnN0Lm9wdGlvbnMuYm9yZGVyc2l6ZSArIFwicHhcIlxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0aW5zdC4kZWxlbVdyYXAuY3NzKHtcclxuXHRcdFx0XHRcdFx0cG9zaXRpb246IFwicmVsYXRpdmVcIixcclxuXHRcdFx0XHRcdFx0b3ZlcmZsb3c6IFwiaGlkZGVuXCJcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0aW5zdC4kZWxlbURhdGEuY3NzKHtcclxuXHRcdFx0XHRcdFx0cG9zaXRpb246IFwicmVsYXRpdmVcIixcclxuXHRcdFx0XHRcdFx0XCJmbG9hdFwiOiBcImxlZnRcIixcclxuXHRcdFx0XHRcdFx0cGFkZGluZzogaW5zdC5vcHRpb25zLmJvcmRlcnNpemUgKyBcInB4XCJcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2UgaWYgKGluc3Qub3B0aW9ucy50aXRsZXN0eWxlID09IFwiaW5zaWRlXCIpIHtcclxuXHRcdFx0XHRpbnN0LiRlbGVtRGF0YS5jc3Moe1xyXG5cdFx0XHRcdFx0cG9zaXRpb246IFwiYWJzb2x1dGVcIixcclxuXHRcdFx0XHRcdG1hcmdpbjogaW5zdC5vcHRpb25zLmJvcmRlcnNpemUgKyBcInB4XCIsXHJcblx0XHRcdFx0XHRib3R0b206IDAsXHJcblx0XHRcdFx0XHRsZWZ0OiAwLFxyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLWNvbG9yXCI6IFwiIzMzM1wiLFxyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLWNvbG9yXCI6IFwicmdiYSg1MSwgNTEsIDUxLCAwLjYpXCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpbnN0LiR0ZXh0LmNzcyh7XHJcblx0XHRcdFx0XHRwYWRkaW5nOiBpbnN0Lm9wdGlvbnMuYm9yZGVyc2l6ZSArIFwicHggXCIgKyAyICogaW5zdC5vcHRpb25zLmJvcmRlcnNpemUgKyBcInB4XCJcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGluc3QuJGVsZW1EYXRhLmNzcyh7XHJcblx0XHRcdFx0XHRwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxyXG5cdFx0XHRcdFx0d2lkdGg6IFwiMTAwJVwiLFxyXG5cdFx0XHRcdFx0aGVpZ2h0OiBpbnN0Lm9wdGlvbnMuYmFyYXV0b2hlaWdodCA/IFwiYXV0b1wiIDogaW5zdC5vcHRpb25zLmJhcmhlaWdodCArIFwicHhcIixcclxuXHRcdFx0XHRcdFwicGFkZGluZ1wiOiBcIjAgMCBcIiArIGluc3Qub3B0aW9ucy5ib3JkZXJzaXplICsgXCJweFwiICsgXCIgMFwiLFxyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLWNvbG9yXCI6IGluc3Qub3B0aW9ucy5iZ2NvbG9yLFxyXG5cdFx0XHRcdFx0XCJ0ZXh0LWFsaWduXCI6IFwibGVmdFwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aW5zdC4kdGV4dC5jc3Moe1xyXG5cdFx0XHRcdFx0XCJtYXJnaW5cIjogXCIwIFwiICsgaW5zdC5vcHRpb25zLmJvcmRlcnNpemUgKyBcInB4XCJcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuZnVsbHNjcmVlbm1vZGUpIHtcclxuXHRcdFx0XHRpbnN0LiRsaWdodGJveC5hcHBlbmQoXCI8ZGl2IGNsYXNzPSdodG1sNS1uZXh0LWZ1bGxzY3JlZW4nIHN0eWxlPSdjdXJzb3I6cG9pbnRlcjtwb3NpdGlvbjphYnNvbHV0ZTtyaWdodDpcIiArXHJcblx0XHRcdFx0XHRpbnN0Lm9wdGlvbnMuYm9yZGVyc2l6ZSArIFwicHg7dG9wOjUwJTttYXJnaW4tdG9wOi0xNnB4Oyc+PGltZyBzcmM9J1wiICsgaW5zdC5vcHRpb25zLnNraW5zZm9sZGVyICsgaW5zdC5vcHRpb25zLmZ1bGxzY3JlZW5uZXh0aW1hZ2UgKyBcIic+PC9kaXY+XCIgKyBcIjxkaXYgY2xhc3M9J2h0bWw1LXByZXYtZnVsbHNjcmVlbicgc3R5bGU9J2N1cnNvcjpwb2ludGVyO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6XCIgKyBpbnN0Lm9wdGlvbnMuYm9yZGVyc2l6ZSArIFwicHg7dG9wOjUwJTttYXJnaW4tdG9wOi0xNnB4Oyc+PGltZyBzcmM9J1wiICsgaW5zdC5vcHRpb25zLnNraW5zZm9sZGVyICsgaW5zdC5vcHRpb25zLmZ1bGxzY3JlZW5wcmV2aW1hZ2UgKyBcIic+PC9kaXY+XCIpO1xyXG5cdFx0XHRcdGluc3QuJG5leHQgPSAkKFwiLmh0bWw1LW5leHQtZnVsbHNjcmVlblwiLCBpbnN0LiRsaWdodGJveCk7XHJcblx0XHRcdFx0aW5zdC4kcHJldiA9ICQoXCIuaHRtbDUtcHJldi1mdWxsc2NyZWVuXCIsIGluc3QuJGxpZ2h0Ym94KTtcclxuXHRcdFx0XHRpbnN0LiRsaWdodGJveEJveC5hcHBlbmQoXCI8ZGl2IGNsYXNzPSdodG1sNS1uZXh0LWJvdHRvbS1mdWxsc2NyZWVuJyBzdHlsZT0nY3Vyc29yOnBvaW50ZXI7cG9zaXRpb246YWJzb2x1dGU7dG9wOjEwMCU7cmlnaHQ6MDttYXJnaW4tdG9wOjhweDsnPjxpbWcgc3JjPSdcIiArXHJcblx0XHRcdFx0XHRpbnN0Lm9wdGlvbnMuc2tpbnNmb2xkZXIgKyBpbnN0Lm9wdGlvbnMuZnVsbHNjcmVlbm5leHRpbWFnZSArIFwiJz48L2Rpdj5cIiArIFwiPGRpdiBjbGFzcz0naHRtbDUtcHJldi1ib3R0b20tZnVsbHNjcmVlbicgc3R5bGU9J2N1cnNvcjpwb2ludGVyO3Bvc2l0aW9uOmFic29sdXRlO3RvcDoxMDAlO2xlZnQ6MDttYXJnaW4tdG9wOjhweDsnPjxpbWcgc3JjPSdcIiArIGluc3Qub3B0aW9ucy5za2luc2ZvbGRlciArIGluc3Qub3B0aW9ucy5mdWxsc2NyZWVucHJldmltYWdlICsgXCInPjwvZGl2PlwiKTtcclxuXHRcdFx0XHRpbnN0LiRuZXh0Ym90dG9tID0gJChcIi5odG1sNS1uZXh0LWJvdHRvbS1mdWxsc2NyZWVuXCIsIGluc3QuJGxpZ2h0Ym94KTtcclxuXHRcdFx0XHRpbnN0LiRwcmV2Ym90dG9tID0gJChcIi5odG1sNS1wcmV2LWJvdHRvbS1mdWxsc2NyZWVuXCIsIGluc3QuJGxpZ2h0Ym94KTtcclxuXHRcdFx0XHRpbnN0LiRuZXh0Ym90dG9tLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdGluc3QubmV4dEFycm93Q2xpY2tlZCgpXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aW5zdC4kcHJldmJvdHRvbS5jbGljayhmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRpbnN0LnByZXZBcnJvd0NsaWNrZWQoKVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGluc3QuJGxpZ2h0Ym94LmFwcGVuZChcIjxkaXYgaWQ9J2h0bWw1LWNsb3NlLWZ1bGxzY3JlZW4nIHN0eWxlPSdkaXNwbGF5OmJsb2NrO2N1cnNvcjpwb2ludGVyO3Bvc2l0aW9uOmFic29sdXRlO3RvcDowO3JpZ2h0OjA7bWFyZ2luLXRvcDowO21hcmdpbi1yaWdodDowOyc+PGltZyBzcmM9J1wiICsgaW5zdC5vcHRpb25zLnNraW5zZm9sZGVyICsgaW5zdC5vcHRpb25zLmZ1bGxzY3JlZW5jbG9zZWltYWdlICsgXCInPjwvZGl2PlwiKTtcclxuXHRcdFx0XHRpbnN0LiRjbG9zZSA9ICQoXCIjaHRtbDUtY2xvc2UtZnVsbHNjcmVlblwiLCBpbnN0LiRsaWdodGJveClcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRpbnN0LiRlbGVtV3JhcC5hcHBlbmQoXCI8ZGl2IGlkPSdodG1sNS1uZXh0JyBzdHlsZT0nZGlzcGxheTpub25lO2N1cnNvcjpwb2ludGVyO3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OlwiICsgaW5zdC5vcHRpb25zLmJvcmRlcnNpemUgKyBcInB4O3RvcDo1MCU7bWFyZ2luLXRvcDotMTZweDsnPjxpbWcgc3JjPSdcIiArIGluc3Qub3B0aW9ucy5za2luc2ZvbGRlciArIGluc3Qub3B0aW9ucy5uZXh0aW1hZ2UgK1xyXG5cdFx0XHRcdFx0XCInPjwvZGl2PlwiICsgXCI8ZGl2IGlkPSdodG1sNS1wcmV2JyBzdHlsZT0nZGlzcGxheTpub25lO2N1cnNvcjpwb2ludGVyO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6XCIgKyBpbnN0Lm9wdGlvbnMuYm9yZGVyc2l6ZSArIFwicHg7dG9wOjUwJTttYXJnaW4tdG9wOi0xNnB4Oyc+PGltZyBzcmM9J1wiICsgaW5zdC5vcHRpb25zLnNraW5zZm9sZGVyICsgaW5zdC5vcHRpb25zLnByZXZpbWFnZSArIFwiJz48L2Rpdj5cIik7XHJcblx0XHRcdFx0aW5zdC4kbmV4dCA9ICQoXCIjaHRtbDUtbmV4dFwiLCBpbnN0LiRsaWdodGJveCk7XHJcblx0XHRcdFx0aW5zdC4kcHJldiA9ICQoXCIjaHRtbDUtcHJldlwiLCBpbnN0LiRsaWdodGJveCk7XHJcblx0XHRcdFx0aWYgKGluc3Qub3B0aW9ucy5pc1RvdWNoICYmIGluc3Qub3B0aW9ucy5uYXZhcnJvd3NhbHdheXNzaG93b250b3VjaCB8fCBpbnN0Lm9wdGlvbnMuYWx3YXlzc2hvd25hdmFycm93cykge1xyXG5cdFx0XHRcdFx0aW5zdC4kbGlnaHRib3hCb3guYXBwZW5kKFwiPGRpdiBjbGFzcz0naHRtbDUtbmV4dC10b3VjaCcgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7Y3Vyc29yOnBvaW50ZXI7cG9zaXRpb246YWJzb2x1dGU7Jz48aW1nIHNyYz0nXCIgK1xyXG5cdFx0XHRcdFx0XHRpbnN0Lm9wdGlvbnMuc2tpbnNmb2xkZXIgKyBpbnN0Lm9wdGlvbnMubmV4dGltYWdlICsgXCInPjwvZGl2PlwiICsgXCI8ZGl2IGNsYXNzPSdodG1sNS1wcmV2LXRvdWNoJyBzdHlsZT0nZGlzcGxheTpibG9jaztjdXJzb3I6cG9pbnRlcjtwb3NpdGlvbjphYnNvbHV0ZTsnPjxpbWcgc3JjPSdcIiArIGluc3Qub3B0aW9ucy5za2luc2ZvbGRlciArIGluc3Qub3B0aW9ucy5wcmV2aW1hZ2UgKyBcIic+PC9kaXY+XCIpO1xyXG5cdFx0XHRcdFx0aW5zdC4kbmV4dHRvdWNoID0gJChcIi5odG1sNS1uZXh0LXRvdWNoXCIsIGluc3QuJGxpZ2h0Ym94KTtcclxuXHRcdFx0XHRcdGluc3QuJHByZXZ0b3VjaCA9ICQoXCIuaHRtbDUtcHJldi10b3VjaFwiLCBpbnN0LiRsaWdodGJveCk7XHJcblx0XHRcdFx0XHRpbnN0LiRuZXh0dG91Y2guY2xpY2soZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRpbnN0Lm5leHRBcnJvd0NsaWNrZWQoKVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRpbnN0LiRwcmV2dG91Y2guY2xpY2soZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRpbnN0LnByZXZBcnJvd0NsaWNrZWQoKVxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aW5zdC4kbGlnaHRib3hCb3guYXBwZW5kKFwiPGRpdiBpZD0naHRtbDUtY2xvc2UnIHN0eWxlPSdkaXNwbGF5Om5vbmU7Y3Vyc29yOnBvaW50ZXI7cG9zaXRpb246YWJzb2x1dGU7dG9wOjA7cmlnaHQ6MDttYXJnaW4tdG9wOi0xNnB4O21hcmdpbi1yaWdodDotMTZweDsnPjxpbWcgc3JjPSdcIiArXHJcblx0XHRcdFx0XHRpbnN0Lm9wdGlvbnMuc2tpbnNmb2xkZXIgKyBpbnN0Lm9wdGlvbnMuY2xvc2VpbWFnZSArIFwiJz48L2Rpdj5cIik7XHJcblx0XHRcdFx0aW5zdC4kY2xvc2UgPSAkKFwiI2h0bWw1LWNsb3NlXCIsIGluc3QuJGxpZ2h0Ym94KVxyXG5cdFx0XHR9XHJcblx0XHRcdGluc3QuJHdhdGVybWFyayA9ICQoXCIjaHRtbDUtd2F0ZXJtYXJrXCIsIGluc3QuJGxpZ2h0Ym94KTtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5zdGFtcCkgaW5zdC4kd2F0ZXJtYXJrLmh0bWwoXCI8YSBocmVmPSdcIiArIGluc3Qub3B0aW9ucy5mcmVlbGluayArIFwiJyBzdHlsZT0ndGV4dC1kZWNvcmF0aW9uOm5vbmU7JyB0aXRsZT0nalF1ZXJ5IExpZ2h0Ym94Jz48ZGl2IHN0eWxlPSdkaXNwbGF5OmJsb2NrO3dpZHRoOjE3MHB4O2hlaWdodDoyMHB4O3RleHQtYWxpZ246Y2VudGVyO2JvcmRlci1yYWRpdXM6M3B4Oy1tb3otYm9yZGVyLXJhZGl1czozcHg7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjNweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7Y29sb3I6IzMzMztmb250OjEycHggQXJpYWwsc2Fucy1zZXJpZjsnPjxkaXYgc3R5bGU9J2xpbmUtaGVpZ2h0OjIwcHg7Jz5cIiArXHJcblx0XHRcdFx0aW5zdC5vcHRpb25zLmZyZWVtYXJrICsgXCI8L2Rpdj48L2Rpdj48L2E+XCIpO1xyXG5cdFx0XHRlbHNlIGlmIChpbnN0Lm9wdGlvbnMud2F0ZXJtYXJrKSB7XHJcblx0XHRcdFx0dmFyIGh0bWwgPSBcIjxpbWcgc3JjPSdcIiArIGluc3Qub3B0aW9ucy53YXRlcm1hcmsgKyBcIicgc3R5bGU9J2JvcmRlcjpub25lOycgLz5cIjtcclxuXHRcdFx0XHRpZiAoaW5zdC5vcHRpb25zLndhdGVybWFya2xpbmspIGh0bWwgPSBcIjxhIGhyZWY9J1wiICsgaW5zdC5vcHRpb25zLndhdGVybWFya2xpbmsgKyBcIicgdGFyZ2V0PSdfYmxhbmsnPlwiICsgaHRtbCArIFwiPC9hPlwiO1xyXG5cdFx0XHRcdGluc3QuJHdhdGVybWFyay5odG1sKGh0bWwpXHJcblx0XHRcdH1cclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5jbG9zZW9ub3ZlcmxheSkgJChcIiNodG1sNS1saWdodGJveC1vdmVybGF5XCIsIGluc3QuJGxpZ2h0Ym94KS5jbGljayhpbnN0LmZpbmlzaCk7XHJcblx0XHRcdGluc3QuJGNsb3NlLmNsaWNrKGluc3QuZmluaXNoKTtcclxuXHRcdFx0aW5zdC4kbmV4dC5jbGljayhmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0aW5zdC5uZXh0QXJyb3dDbGlja2VkKClcclxuXHRcdFx0fSk7XHJcblx0XHRcdGluc3QuJHByZXYuY2xpY2soZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGluc3QucHJldkFycm93Q2xpY2tlZCgpXHJcblx0XHRcdH0pO1xyXG5cdFx0XHQkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRjbGVhclRpbWVvdXQoaW5zdC5vcHRpb25zLnJlc2l6ZVRpbWVvdXQpO1xyXG5cdFx0XHRcdGluc3Qub3B0aW9ucy5yZXNpemVUaW1lb3V0ID0gc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRpbnN0LnJlc2l6ZVdpbmRvdygpXHJcblx0XHRcdFx0fSwgNTAwKVxyXG5cdFx0XHR9KTtcclxuXHRcdFx0JCh3aW5kb3cpLnNjcm9sbChmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0aW5zdC5zY3JvbGxCb3goKVxyXG5cdFx0XHR9KTtcclxuXHRcdFx0JCh3aW5kb3cpLmJpbmQoXCJvcmllbnRhdGlvbmNoYW5nZVwiLCBmdW5jdGlvbiAoZSkge1xyXG5cdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuaXNNb2JpbGUpIGluc3QucmVzaXplV2luZG93KClcclxuXHRcdFx0fSk7XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuaXNJUGhvbmUpIHtcclxuXHRcdFx0XHRpbnN0Lm9wdGlvbnMud2luZG93SW5uZXJIZWlnaHQgPSB3aW5kb3cuaW5uZXJIZWlnaHQ7XHJcblx0XHRcdFx0c2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRpZiAoaW5zdC5vcHRpb25zLndpbmRvd0lubmVySGVpZ2h0ICE9IHdpbmRvdy5pbm5lckhlaWdodCkge1xyXG5cdFx0XHRcdFx0XHRcdGluc3Qub3B0aW9ucy53aW5kb3dJbm5lckhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDtcclxuXHRcdFx0XHRcdFx0XHRpbnN0LnJlc2l6ZVdpbmRvdygpXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHQ1MDApXHJcblx0XHRcdH1cclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5lbmFibGV0b3VjaHN3aXBlKSBpbnN0LmVuYWJsZVN3aXBlKClcclxuXHRcdH07XHJcblx0XHRpbnN0LnNsaWRlVGltZXIgPSBmdW5jdGlvbiAoaW50ZXJ2YWwsIGNhbGxiYWNrLCB1cGRhdGVjYWxsYmFjaykge1xyXG5cdFx0XHR2YXIgdGltZXJJbnN0YW5jZSA9IHRoaXM7XHJcblx0XHRcdHRpbWVySW5zdGFuY2UudGltZW91dCA9IGludGVydmFsO1xyXG5cdFx0XHR2YXIgdXBkYXRlaW50ZXJ2YWwgPSA1MDtcclxuXHRcdFx0dmFyIHVwZGF0ZVRpbWVySWQgPSBudWxsO1xyXG5cdFx0XHR2YXIgcnVubmluZ1RpbWUgPSAwO1xyXG5cdFx0XHR2YXIgcGF1c2VkID0gZmFsc2U7XHJcblx0XHRcdHZhciBzdGFydGVkID0gZmFsc2U7XHJcblx0XHRcdHZhciBzdGFydGVkYW5kcGF1c2VkID0gZmFsc2U7XHJcblx0XHRcdHRoaXMucGF1c2UgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0aWYgKHN0YXJ0ZWQpIHtcclxuXHRcdFx0XHRcdHBhdXNlZCA9IHRydWU7XHJcblx0XHRcdFx0XHRjbGVhckludGVydmFsKHVwZGF0ZVRpbWVySWQpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9O1xyXG5cdFx0XHR0aGlzLnJlc3VtZSA9IGZ1bmN0aW9uIChmb3JjZXJlc3VtZSkge1xyXG5cdFx0XHRcdGlmIChzdGFydGVkYW5kcGF1c2VkICYmICFmb3JjZXJlc3VtZSkgcmV0dXJuO1xyXG5cdFx0XHRcdHN0YXJ0ZWRhbmRwYXVzZWQgPSBmYWxzZTtcclxuXHRcdFx0XHRpZiAoc3RhcnRlZCAmJiBwYXVzZWQpIHtcclxuXHRcdFx0XHRcdHBhdXNlZCA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0dXBkYXRlVGltZXJJZCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0cnVubmluZ1RpbWUgKz0gdXBkYXRlaW50ZXJ2YWw7XHJcblx0XHRcdFx0XHRcdGlmIChydW5uaW5nVGltZSA+IHRpbWVySW5zdGFuY2UudGltZW91dCkge1xyXG5cdFx0XHRcdFx0XHRcdGNsZWFySW50ZXJ2YWwodXBkYXRlVGltZXJJZCk7XHJcblx0XHRcdFx0XHRcdFx0aWYgKGNhbGxiYWNrKSBjYWxsYmFjaygpXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0aWYgKHVwZGF0ZWNhbGxiYWNrKSB1cGRhdGVjYWxsYmFjayhydW5uaW5nVGltZSAvIHRpbWVySW5zdGFuY2UudGltZW91dClcclxuXHRcdFx0XHRcdH0sIHVwZGF0ZWludGVydmFsKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHRcdFx0dGhpcy5zdG9wID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGNsZWFySW50ZXJ2YWwodXBkYXRlVGltZXJJZCk7XHJcblx0XHRcdFx0aWYgKHVwZGF0ZWNhbGxiYWNrKSB1cGRhdGVjYWxsYmFjaygtMSk7XHJcblx0XHRcdFx0cnVubmluZ1RpbWUgPSAwO1xyXG5cdFx0XHRcdHBhdXNlZCA9IGZhbHNlO1xyXG5cdFx0XHRcdHN0YXJ0ZWQgPSBmYWxzZVxyXG5cdFx0XHR9O1xyXG5cdFx0XHR0aGlzLnN0YXJ0ID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdHJ1bm5pbmdUaW1lID0gMDtcclxuXHRcdFx0XHRwYXVzZWQgPSBmYWxzZTtcclxuXHRcdFx0XHRzdGFydGVkID0gdHJ1ZTtcclxuXHRcdFx0XHR1cGRhdGVUaW1lcklkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0cnVubmluZ1RpbWUgKz0gdXBkYXRlaW50ZXJ2YWw7XHJcblx0XHRcdFx0XHRpZiAocnVubmluZ1RpbWUgPlxyXG5cdFx0XHRcdFx0XHR0aW1lckluc3RhbmNlLnRpbWVvdXQpIHtcclxuXHRcdFx0XHRcdFx0Y2xlYXJJbnRlcnZhbCh1cGRhdGVUaW1lcklkKTtcclxuXHRcdFx0XHRcdFx0aWYgKGNhbGxiYWNrKSBjYWxsYmFjaygpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRpZiAodXBkYXRlY2FsbGJhY2spIHVwZGF0ZWNhbGxiYWNrKHJ1bm5pbmdUaW1lIC8gdGltZXJJbnN0YW5jZS50aW1lb3V0KVxyXG5cdFx0XHRcdH0sIHVwZGF0ZWludGVydmFsKVxyXG5cdFx0XHR9O1xyXG5cdFx0XHR0aGlzLnN0YXJ0YW5kcGF1c2UgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0cnVubmluZ1RpbWUgPSAwO1xyXG5cdFx0XHRcdHBhdXNlZCA9IHRydWU7XHJcblx0XHRcdFx0c3RhcnRlZCA9IHRydWU7XHJcblx0XHRcdFx0c3RhcnRlZGFuZHBhdXNlZCA9IHRydWVcclxuXHRcdFx0fTtcclxuXHRcdFx0cmV0dXJuIHRoaXNcclxuXHRcdH07XHJcblx0XHRpbnN0LnVwZGF0ZVRpbWVyID0gZnVuY3Rpb24gKHBlcmNlbnQpIHtcclxuXHRcdFx0dmFyIHcgPSBNYXRoLnJvdW5kKHBlcmNlbnQgKiAxMDApO1xyXG5cdFx0XHRpZiAodyA+IDEwMCkgdyA9IDEwMDtcclxuXHRcdFx0aWYgKHcgPCAwKSB3ID0gMDtcclxuXHRcdFx0JChcIiNodG1sNS10aW1lclwiLCBpbnN0LiRsaWdodGJveCkuY3NzKHtcclxuXHRcdFx0XHRkaXNwbGF5OiBcImJsb2NrXCIsXHJcblx0XHRcdFx0d2lkdGg6IHcgKyBcIiVcIlxyXG5cdFx0XHR9KVxyXG5cdFx0fTtcclxuXHRcdGluc3QuaW5pdFNsaWRlID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRpbnN0LmF1dG9zbGlkaW5nID0gZmFsc2U7XHJcblx0XHRcdGluc3Quc2xpZGVUaW1lb3V0ID0gaW5zdC5zbGlkZVRpbWVyKGluc3Qub3B0aW9ucy5zbGlkZWludGVydmFsLFxyXG5cdFx0XHRcdGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdGluc3QuZ290b1NsaWRlKC0xKVxyXG5cdFx0XHRcdH0sIGluc3Qub3B0aW9ucy5zaG93dGltZXIgPyBmdW5jdGlvbiAocGVyY2VudCkge1xyXG5cdFx0XHRcdFx0aW5zdC51cGRhdGVUaW1lcihwZXJjZW50KVxyXG5cdFx0XHRcdH0gOiBudWxsKTtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5hdXRvc2xpZGUpIHtcclxuXHRcdFx0XHRpbnN0LnNsaWRlVGltZW91dC5zdG9wKCk7XHJcblx0XHRcdFx0aW5zdC5hdXRvc2xpZGluZyA9IHRydWVcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHRcdGluc3QubmV4dEFycm93Q2xpY2tlZCA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5uZXh0RWxlbSA8PSBpbnN0Lm9wdGlvbnMuY3VyRWxlbSlcclxuXHRcdFx0XHRpZiAoaW5zdC5vcHRpb25zLm9ubGFzdGFycm93Y2xpY2tlZCAmJiB3aW5kb3dbaW5zdC5vcHRpb25zLm9ubGFzdGFycm93Y2xpY2tlZF0gJiYgdHlwZW9mIHdpbmRvd1tpbnN0Lm9wdGlvbnMub25sYXN0YXJyb3djbGlja2VkXSA9PSBcImZ1bmN0aW9uXCIpIHdpbmRvd1tpbnN0Lm9wdGlvbnMub25sYXN0YXJyb3djbGlja2VkXSgpO1xyXG5cdFx0XHRpbnN0LmdvdG9TbGlkZSgtMSlcclxuXHRcdH07XHJcblx0XHRpbnN0LnByZXZBcnJvd0NsaWNrZWQgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMucHJldkVsZW0gPj1cclxuXHRcdFx0XHRpbnN0Lm9wdGlvbnMuY3VyRWxlbSlcclxuXHRcdFx0XHRpZiAoaW5zdC5vcHRpb25zLm9uZmlyc3RhcnJvd2NsaWNrZWQgJiYgd2luZG93W2luc3Qub3B0aW9ucy5vbmZpcnN0YXJyb3djbGlja2VkXSAmJiB0eXBlb2Ygd2luZG93W2luc3Qub3B0aW9ucy5vbmZpcnN0YXJyb3djbGlja2VkXSA9PSBcImZ1bmN0aW9uXCIpIHdpbmRvd1tpbnN0Lm9wdGlvbnMub25maXJzdGFycm93Y2xpY2tlZF0oKTtcclxuXHRcdFx0aW5zdC5nb3RvU2xpZGUoLTIpXHJcblx0XHR9O1xyXG5cdFx0aW5zdC5jYWxjTmV4dFByZXZFbGVtID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRpbnN0Lm9wdGlvbnMubmV4dEVsZW0gPSAtMTtcclxuXHRcdFx0aW5zdC5vcHRpb25zLnByZXZFbGVtID0gLTE7XHJcblx0XHRcdGluc3Qub3B0aW9ucy5pbkdyb3VwID0gZmFsc2U7XHJcblx0XHRcdGluc3Qub3B0aW9ucy5ncm91cEluZGV4ID0gMDtcclxuXHRcdFx0aW5zdC5vcHRpb25zLmdyb3VwQ291bnQgPSAwO1xyXG5cdFx0XHR2YXIgZ3JvdXAgPSBpbnN0LmVsZW1BcnJheVtpbnN0Lm9wdGlvbnMuY3VyRWxlbV1bRUxFTV9HUk9VUF07XHJcblx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgaW5zdC5lbGVtQXJyYXkubGVuZ3RoOyBpKyspXHJcblx0XHRcdFx0aWYgKGluc3QubWF0Y2hHcm91cChncm91cCxcclxuXHRcdFx0XHRcdFx0aW5zdC5lbGVtQXJyYXlbaV1bRUxFTV9HUk9VUF0pKSB7XHJcblx0XHRcdFx0XHRpZiAoaSA9PSBpbnN0Lm9wdGlvbnMuY3VyRWxlbSkgaW5zdC5vcHRpb25zLmdyb3VwSW5kZXggPSBpbnN0Lm9wdGlvbnMuZ3JvdXBDb3VudDtcclxuXHRcdFx0XHRcdGluc3Qub3B0aW9ucy5ncm91cENvdW50KytcclxuXHRcdFx0XHR9XHJcblx0XHRcdHZhciBqLCBjdXJHcm91cCA9IGluc3QuZWxlbUFycmF5W2luc3Qub3B0aW9ucy5jdXJFbGVtXVtFTEVNX0dST1VQXTtcclxuXHRcdFx0aWYgKGN1ckdyb3VwICE9IHVuZGVmaW5lZCAmJiBjdXJHcm91cCAhPSBudWxsKSB7XHJcblx0XHRcdFx0Zm9yIChqID0gaW5zdC5vcHRpb25zLmN1ckVsZW0gKyAxOyBqIDwgaW5zdC5lbGVtQXJyYXkubGVuZ3RoOyBqKyspXHJcblx0XHRcdFx0XHRpZiAoaW5zdC5tYXRjaEdyb3VwKGN1ckdyb3VwLCBpbnN0LmVsZW1BcnJheVtqXVtFTEVNX0dST1VQXSkpIHtcclxuXHRcdFx0XHRcdFx0aW5zdC5vcHRpb25zLm5leHRFbGVtID0gajtcclxuXHRcdFx0XHRcdFx0YnJlYWtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRpZiAoaW5zdC5vcHRpb25zLm5leHRFbGVtIDwgMClcclxuXHRcdFx0XHRcdGZvciAoaiA9IDA7IGogPCBpbnN0Lm9wdGlvbnMuY3VyRWxlbTsgaisrKVxyXG5cdFx0XHRcdFx0XHRpZiAoaW5zdC5tYXRjaEdyb3VwKGN1ckdyb3VwLCBpbnN0LmVsZW1BcnJheVtqXVtFTEVNX0dST1VQXSkpIHtcclxuXHRcdFx0XHRcdFx0XHRpbnN0Lm9wdGlvbnMubmV4dEVsZW0gPVxyXG5cdFx0XHRcdFx0XHRcdFx0ajtcclxuXHRcdFx0XHRcdFx0XHRicmVha1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0aWYgKGluc3Qub3B0aW9ucy5uZXh0RWxlbSA+PSAwKSB7XHJcblx0XHRcdFx0XHRmb3IgKGogPSBpbnN0Lm9wdGlvbnMuY3VyRWxlbSAtIDE7IGogPj0gMDsgai0tKVxyXG5cdFx0XHRcdFx0XHRpZiAoaW5zdC5tYXRjaEdyb3VwKGN1ckdyb3VwLCBpbnN0LmVsZW1BcnJheVtqXVtFTEVNX0dST1VQXSkpIHtcclxuXHRcdFx0XHRcdFx0XHRpbnN0Lm9wdGlvbnMucHJldkVsZW0gPSBqO1xyXG5cdFx0XHRcdFx0XHRcdGJyZWFrXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMucHJldkVsZW0gPCAwKVxyXG5cdFx0XHRcdFx0XHRmb3IgKGogPSBpbnN0LmVsZW1BcnJheS5sZW5ndGggLSAxOyBqID4gaW5zdC5vcHRpb25zLmN1ckVsZW07IGotLSlcclxuXHRcdFx0XHRcdFx0XHRpZiAoaW5zdC5tYXRjaEdyb3VwKGN1ckdyb3VwLCBpbnN0LmVsZW1BcnJheVtqXVtFTEVNX0dST1VQXSkpIHtcclxuXHRcdFx0XHRcdFx0XHRcdGluc3Qub3B0aW9ucy5wcmV2RWxlbSA9IGo7XHJcblx0XHRcdFx0XHRcdFx0XHRicmVha1xyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5uZXh0RWxlbSA+PSAwIHx8IGluc3Qub3B0aW9ucy5wcmV2RWxlbSA+PSAwKSBpbnN0Lm9wdGlvbnMuaW5Hcm91cCA9IHRydWVcclxuXHRcdH07XHJcblx0XHRpbnN0LmNhbGNCb3hQb3NpdGlvbiA9IGZ1bmN0aW9uIChpbml0VywgaW5pdEgpIHtcclxuXHRcdFx0dmFyIGJveFcgPSBpbml0VyArIDIgKiBpbnN0Lm9wdGlvbnMuYm9yZGVyc2l6ZTtcclxuXHRcdFx0dmFyIGJveEggPSBpbml0SCArIDIgKiBpbnN0Lm9wdGlvbnMuYm9yZGVyc2l6ZTtcclxuXHRcdFx0dmFyIHdpbkggPSB3aW5kb3cuaW5uZXJIZWlnaHQgPyB3aW5kb3cuaW5uZXJIZWlnaHQgOiAkKHdpbmRvdykuaGVpZ2h0KCk7XHJcblx0XHRcdHZhciBib3hUID0gTWF0aC5yb3VuZCgod2luSCAtIGluc3Qub3B0aW9ucy5uYXZoZWlnaHQpIC8gMiAtIGJveEggLyAyKTtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy50aXRsZXN0eWxlID09IFwiYm90dG9tXCIpIGJveFQgLT0gTWF0aC5yb3VuZChpbnN0Lm9wdGlvbnMuYmFyaGVpZ2h0IC8gMik7XHJcblx0XHRcdHZhciB0b3BtYXJnaW4gPSAkKHdpbmRvdykud2lkdGgoKSA8IGluc3Qub3B0aW9ucy5uYXZhcnJvd3Nib3R0b21zY3JlZW53aWR0aCA/IGluc3Qub3B0aW9ucy5ib3JkZXJ0b3BtYXJnaW5zbWFsbCA6IGluc3Qub3B0aW9ucy5ib3JkZXJ0b3BtYXJnaW47XHJcblx0XHRcdGlmIChib3hUIDwgdG9wbWFyZ2luKSBib3hUID0gdG9wbWFyZ2luO1xyXG5cdFx0XHRpZiAod2luZG93LnNlbGYgIT0gd2luZG93LnRvcClcclxuXHRcdFx0XHRpZiAocGFyZW50LndpbmRvdy5qUXVlcnkgJiYgcGFyZW50LndpbmRvdy5qUXVlcnkoXCIjXCIgKyBpbnN0Lm9wdGlvbnMuaWZyYW1laWQpLmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0dmFyIGlmcmFtZXRvcCA9XHJcblx0XHRcdFx0XHRcdHBhcmVudC53aW5kb3cualF1ZXJ5KFwiI1wiICsgaW5zdC5vcHRpb25zLmlmcmFtZWlkKS5vZmZzZXQoKS50b3A7XHJcblx0XHRcdFx0XHR2YXIgcGFyZW50c2Nyb2xsID0gcGFyZW50LndpbmRvdy5kb2N1bWVudC5ib2R5LnNjcm9sbFRvcDtcclxuXHRcdFx0XHRcdGJveFQgPSB0b3BtYXJnaW47XHJcblx0XHRcdFx0XHRib3hUICs9IHBhcmVudHNjcm9sbCA+IGlmcmFtZXRvcCA/IHBhcmVudHNjcm9sbCAtIGlmcmFtZXRvcCA6IDBcclxuXHRcdFx0XHR9XHJcblx0XHRcdHJldHVybiBbYm94VywgYm94SCwgYm94VF1cclxuXHRcdH07XHJcblx0XHRpbnN0LmhpZGVOYXZBcnJvd3MgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdHZhciBzaG93UHJldiA9IGZhbHNlO1xyXG5cdFx0XHR2YXIgc2hvd05leHQgPSBmYWxzZTtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5pbkdyb3VwKSB7XHJcblx0XHRcdFx0aWYgKGluc3Qub3B0aW9ucy5hcnJvd2xvb3AgfHwgIWluc3Qub3B0aW9ucy5hcnJvd2xvb3AgJiYgaW5zdC5vcHRpb25zLnByZXZFbGVtIDwgaW5zdC5vcHRpb25zLmN1ckVsZW0pIHNob3dQcmV2ID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAoaW5zdC5vcHRpb25zLmFycm93bG9vcCB8fCAhaW5zdC5vcHRpb25zLmFycm93bG9vcCAmJiBpbnN0Lm9wdGlvbnMucHJldkVsZW0gPCBpbnN0Lm9wdGlvbnMuY3VyRWxlbSkgc2hvd05leHQgPVxyXG5cdFx0XHRcdFx0dHJ1ZVxyXG5cdFx0XHR9XHJcblx0XHRcdGlmIChzaG93UHJldikge1xyXG5cdFx0XHRcdGluc3QuJHByZXYucmVtb3ZlQ2xhc3MoXCJodG1sNS1oaWRlXCIpO1xyXG5cdFx0XHRcdGlmIChpbnN0LiRwcmV2Ym90dG9tKSBpbnN0LiRwcmV2Ym90dG9tLnJlbW92ZUNsYXNzKFwiaHRtbDUtaGlkZVwiKTtcclxuXHRcdFx0XHRpZiAoaW5zdC4kcHJldnRvdWNoKSBpbnN0LiRwcmV2dG91Y2gucmVtb3ZlQ2xhc3MoXCJodG1sNS1oaWRlXCIpXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0aW5zdC4kcHJldi5hZGRDbGFzcyhcImh0bWw1LWhpZGVcIik7XHJcblx0XHRcdFx0aWYgKGluc3QuJHByZXZib3R0b20pIGluc3QuJHByZXZib3R0b20uYWRkQ2xhc3MoXCJodG1sNS1oaWRlXCIpO1xyXG5cdFx0XHRcdGlmIChpbnN0LiRwcmV2dG91Y2gpIGluc3QuJHByZXZ0b3VjaC5hZGRDbGFzcyhcImh0bWw1LWhpZGVcIilcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoc2hvd05leHQpIHtcclxuXHRcdFx0XHRpbnN0LiRuZXh0LnJlbW92ZUNsYXNzKFwiaHRtbDUtaGlkZVwiKTtcclxuXHRcdFx0XHRpZiAoaW5zdC4kbmV4dGJvdHRvbSkgaW5zdC4kbmV4dGJvdHRvbS5yZW1vdmVDbGFzcyhcImh0bWw1LWhpZGVcIik7XHJcblx0XHRcdFx0aWYgKGluc3QuJG5leHR0b3VjaCkgaW5zdC4kbmV4dHRvdWNoLnJlbW92ZUNsYXNzKFwiaHRtbDUtaGlkZVwiKVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGluc3QuJG5leHQuYWRkQ2xhc3MoXCJodG1sNS1oaWRlXCIpO1xyXG5cdFx0XHRcdGlmIChpbnN0LiRuZXh0Ym90dG9tKSBpbnN0LiRuZXh0Ym90dG9tLmFkZENsYXNzKFwiaHRtbDUtaGlkZVwiKTtcclxuXHRcdFx0XHRpZiAoaW5zdC4kbmV4dHRvdWNoKSBpbnN0LiRuZXh0dG91Y2guYWRkQ2xhc3MoXCJodG1sNS1oaWRlXCIpXHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0XHRpbnN0LmNsaWNrSGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0dmFyICR0aGlzID0gJCh0aGlzKTtcclxuXHRcdFx0dmFyIGRhdGFvcHRpb25zID0ge307XHJcblx0XHRcdCQuZWFjaCgkdGhpcy5kYXRhKCksIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XHJcblx0XHRcdFx0ZGF0YW9wdGlvbnNba2V5LnRvTG93ZXJDYXNlKCldID0gdmFsdWVcclxuXHRcdFx0fSk7XHJcblx0XHRcdGluc3Qub3B0aW9ucyA9ICQuZXh0ZW5kKGluc3Qub3B0aW9ucywgaW5zdC5kZWZhdWx0b3B0aW9ucywgZGF0YW9wdGlvbnMpO1xyXG5cdFx0XHRpbnN0LmluaXQoKTtcclxuXHRcdFx0aWYgKGluc3QuZWxlbUFycmF5Lmxlbmd0aCA8PSAwKSByZXR1cm4gdHJ1ZTtcclxuXHRcdFx0aW5zdC5oaWRlT2JqZWN0cygpO1xyXG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGluc3QuZWxlbUFycmF5Lmxlbmd0aDsgaSsrKVxyXG5cdFx0XHRcdGlmIChpbnN0LmVsZW1BcnJheVtpXVtFTEVNX0hSRUZdID09ICR0aGlzLmF0dHIoXCJocmVmXCIpKSBicmVhaztcclxuXHRcdFx0aWYgKGkgPT0gaW5zdC5lbGVtQXJyYXkubGVuZ3RoKSByZXR1cm4gdHJ1ZTtcclxuXHRcdFx0aW5zdC5vcHRpb25zLmN1ckVsZW0gPSBpO1xyXG5cdFx0XHRpbnN0LmNhbGNOZXh0UHJldkVsZW0oKTtcclxuXHRcdFx0aW5zdC5yZXNldCgpO1xyXG5cdFx0XHRpbnN0LiRsaWdodGJveC5zaG93KCk7XHJcblx0XHRcdGlmICghaW5zdC5vcHRpb25zLnN1cHBvcnRDU1NQb3NpdGlvbkZpeGVkKSBpbnN0LiRsaWdodGJveC5jc3MoXCJ0b3BcIiwgJCh3aW5kb3cpLnNjcm9sbFRvcCgpKTtcclxuXHRcdFx0dmFyIGJveFBvcyA9IGluc3QuY2FsY0JveFBvc2l0aW9uKGluc3Qub3B0aW9ucy5sb2FkaW5nd2lkdGgsIGluc3Qub3B0aW9ucy5sb2FkaW5naGVpZ2h0KTtcclxuXHRcdFx0dmFyIGJveFcgPSBib3hQb3NbMF07XHJcblx0XHRcdHZhciBib3hIID0gYm94UG9zWzFdO1xyXG5cdFx0XHR2YXIgYm94VCA9IGJveFBvc1syXTtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5pZXF1aXJrc21vZGUpIGluc3QuJGxpZ2h0Ym94Qm94LmNzcyh7XHJcblx0XHRcdFx0XCJ0b3BcIjogYm94VFxyXG5cdFx0XHR9KTtcclxuXHRcdFx0ZWxzZSBpbnN0LiRsaWdodGJveEJveC5jc3Moe1xyXG5cdFx0XHRcdFwibWFyZ2luLXRvcFwiOiBib3hUXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRpZiAoaW5zdC5vcHRpb25zLnRpdGxlc3R5bGUgPT0gXCJsZWZ0XCIgfHxcclxuXHRcdFx0XHRpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcInJpZ2h0XCIpIGluc3QuJGxpZ2h0Ym94Qm94LmNzcyh7XHJcblx0XHRcdFx0XCJ3aWR0aFwiOiBib3hXLFxyXG5cdFx0XHRcdFwiaGVpZ2h0XCI6IGJveEhcclxuXHRcdFx0fSk7XHJcblx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdGluc3QuJGxpZ2h0Ym94Qm94LmNzcyh7XHJcblx0XHRcdFx0XHRcIndpZHRoXCI6IGJveFcsXHJcblx0XHRcdFx0XHRcImhlaWdodFwiOiBcImF1dG9cIlxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGluc3QuJGVsZW1XcmFwLmNzcyh7XHJcblx0XHRcdFx0XHRcIndpZHRoXCI6IGJveFcsXHJcblx0XHRcdFx0XHRcImhlaWdodFwiOiBib3hIXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fVxyXG5cdFx0XHRpbnN0LmxvYWRDdXJFbGVtKCk7XHJcblx0XHRcdHJldHVybiBmYWxzZVxyXG5cdFx0fTtcclxuXHRcdGluc3QubG9hZFRodW1ibmFpbCA9IGZ1bmN0aW9uIChzcmMsIGluZGV4KSB7XHJcblx0XHRcdHZhciBpbWdMb2FkZXIgPSBuZXcgSW1hZ2U7XHJcblx0XHRcdCQoaW1nTG9hZGVyKS5sb2FkKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHR2YXIgc3R5bGU7XHJcblx0XHRcdFx0aWYgKHRoaXMud2lkdGggLyB0aGlzLmhlaWdodCA8PSBpbnN0Lm9wdGlvbnMudGh1bWJ3aWR0aCAvIGluc3Qub3B0aW9ucy50aHVtYmhlaWdodCkgc3R5bGUgPSBcIndpZHRoOjEwMCU7XCI7XHJcblx0XHRcdFx0ZWxzZSBzdHlsZSA9IFwiaGVpZ2h0OjEwMCU7XCI7XHJcblx0XHRcdFx0JChcIi5odG1sNS1uYXYtdGh1bWJcIikuZXEoaW5kZXgpLmh0bWwoXCI8aW1nIHN0eWxlPSdcIiArXHJcblx0XHRcdFx0XHRzdHlsZSArIFwiJyBzcmM9J1wiICsgc3JjICsgXCInIC8+XCIpXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRpbWdMb2FkZXIuc3JjID0gc3JjXHJcblx0XHR9O1xyXG5cdFx0aW5zdC5tYXRjaEdyb3VwID0gZnVuY3Rpb24gKGN1ckdyb3VwLCBlbGVtR3JvdXApIHtcclxuXHRcdFx0aWYgKCFjdXJHcm91cCB8fCAhZWxlbUdyb3VwKSByZXR1cm4gZmFsc2U7XHJcblx0XHRcdHZhciBjdXJzID0gY3VyR3JvdXAuc3BsaXQoXCI6XCIpO1xyXG5cdFx0XHR2YXIgZWxlbXMgPSBlbGVtR3JvdXAuc3BsaXQoXCI6XCIpO1xyXG5cdFx0XHR2YXIgcmVzdWx0ID0gZmFsc2U7XHJcblx0XHRcdGZvciAodmFyIGkgaW4gY3VycylcclxuXHRcdFx0XHRpZiAoJC5pbkFycmF5KGN1cnNbaV0sIGVsZW1zKSA+IC0xKSB7XHJcblx0XHRcdFx0XHRyZXN1bHQgPSB0cnVlO1xyXG5cdFx0XHRcdFx0YnJlYWtcclxuXHRcdFx0XHR9XHJcblx0XHRcdHJldHVybiByZXN1bHRcclxuXHRcdH07XHJcblx0XHRpbnN0LnNob3dOYXZpZ2F0aW9uID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRpZiAoIWluc3Qub3B0aW9ucy5zaG93bmF2aWdhdGlvbikgcmV0dXJuO1xyXG5cdFx0XHRpZiAoIWluc3QuY3VycmVudEVsZW0gfHwgIWluc3QuY3VycmVudEVsZW1bRUxFTV9HUk9VUF0pIHJldHVybjtcclxuXHRcdFx0dmFyIGk7XHJcblx0XHRcdHZhciBzaG93TmF2ID0gZmFsc2U7XHJcblx0XHRcdHZhciBncm91cCA9IGluc3QuY3VycmVudEVsZW1bRUxFTV9HUk9VUF07XHJcblx0XHRcdGZvciAoaSA9IDA7IGkgPCBpbnN0LmVsZW1BcnJheS5sZW5ndGg7IGkrKylcclxuXHRcdFx0XHRpZiAoaW5zdC5tYXRjaEdyb3VwKGdyb3VwLFxyXG5cdFx0XHRcdFx0XHRpbnN0LmVsZW1BcnJheVtpXVtFTEVNX0dST1VQXSkpXHJcblx0XHRcdFx0XHRpZiAoaW5zdC5lbGVtQXJyYXlbaV1bRUxFTV9USFVNQk5BSUxdICYmIGluc3QuZWxlbUFycmF5W2ldW0VMRU1fVEhVTUJOQUlMXS5sZW5ndGggPiAwKSB7XHJcblx0XHRcdFx0XHRcdHNob3dOYXYgPSB0cnVlO1xyXG5cdFx0XHRcdFx0XHRicmVha1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRpZiAoIXNob3dOYXYpIHJldHVybjtcclxuXHRcdFx0aW5zdC5vcHRpb25zLm5hdmhlaWdodCA9IGluc3Qub3B0aW9ucy50aHVtYmhlaWdodCArIGluc3Qub3B0aW9ucy50aHVtYnRvcG1hcmdpbiArIGluc3Qub3B0aW9ucy50aHVtYmJvdHRvbW1hcmdpbjtcclxuXHRcdFx0aWYgKCQoXCIuaHRtbDUtbmF2XCIpLmxlbmd0aCA+IDApIHJldHVybjtcclxuXHRcdFx0JChcImJvZHlcIikuYXBwZW5kKFwiPGRpdiBjbGFzcz0naHRtbDUtbmF2JyBzdHlsZT0nZGlzcGxheTpibG9jaztwb3NpdGlvbjpmaXhlZDtib3R0b206MDtsZWZ0OjA7d2lkdGg6MTAwJTtoZWlnaHQ6XCIgKyBpbnN0Lm9wdGlvbnMubmF2aGVpZ2h0ICsgXCJweDt6LWluZGV4Ojk5OTk5OTk7Jz5cIiArIFwiPGRpdiBjbGFzcz0naHRtbDUtbmF2LWNvbnRhaW5lcicgc3R5bGU9J3Bvc2l0aW9uOnJlbGF0aXZlO21hcmdpbjpcIiArXHJcblx0XHRcdFx0aW5zdC5vcHRpb25zLnRodW1idG9wbWFyZ2luICsgXCJweCBhdXRvIFwiICsgaW5zdC5vcHRpb25zLnRodW1iYm90dG9tbWFyZ2luICsgXCJweDsnPlwiICsgXCI8ZGl2IGNsYXNzPSdodG1sNS1uYXYtcHJldicgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7Y3Vyc29yOnBvaW50ZXI7d2lkdGg6XCIgKyBpbnN0Lm9wdGlvbnMubmF2YnV0dG9ud2lkdGggKyAncHg7aGVpZ2h0OjEwMCU7bGVmdDowO3RvcDowO2JhY2tncm91bmQ6dXJsKFwiJyArIGluc3Qub3B0aW9ucy5za2luc2ZvbGRlciArIGluc3Qub3B0aW9ucy5uYXZhcnJvd3NwcmV2aW1hZ2UgKyBcIlxcXCIpIG5vLXJlcGVhdCBsZWZ0IGNlbnRlcjsnPjwvZGl2PlwiICsgXCI8ZGl2IGNsYXNzPSdodG1sNS1uYXYtbWFzaycgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmU7bWFyZ2luOjAgYXV0bztvdmVyZmxvdzpoaWRkZW47Jz5cIiArIFwiPGRpdiBjbGFzcz0naHRtbDUtbmF2LWxpc3QnPjwvZGl2PlwiICsgXCI8L2Rpdj5cIiArIFwiPGRpdiBjbGFzcz0naHRtbDUtbmF2LW5leHQnIHN0eWxlPSdkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO2N1cnNvcjpwb2ludGVyO3dpZHRoOlwiICtcclxuXHRcdFx0XHRpbnN0Lm9wdGlvbnMubmF2YnV0dG9ud2lkdGggKyAncHg7aGVpZ2h0OjEwMCU7cmlnaHQ6MDt0b3A6MDtiYWNrZ3JvdW5kOnVybChcIicgKyBpbnN0Lm9wdGlvbnMuc2tpbnNmb2xkZXIgKyBpbnN0Lm9wdGlvbnMubmF2YXJyb3dzbmV4dGltYWdlICsgXCJcXFwiKSBuby1yZXBlYXQgcmlnaHQgY2VudGVyOyc+PC9kaXY+XCIgKyBcIjwvZGl2PlwiICsgXCI8L2Rpdj5cIik7XHJcblx0XHRcdHZhciBpbmRleCA9IDA7XHJcblx0XHRcdGZvciAoaSA9IDA7IGkgPCBpbnN0LmVsZW1BcnJheS5sZW5ndGg7IGkrKylcclxuXHRcdFx0XHRpZiAoaW5zdC5tYXRjaEdyb3VwKGdyb3VwLCBpbnN0LmVsZW1BcnJheVtpXVtFTEVNX0dST1VQXSkpXHJcblx0XHRcdFx0XHRpZiAoaW5zdC5lbGVtQXJyYXlbaV1bRUxFTV9USFVNQk5BSUxdICYmIGluc3QuZWxlbUFycmF5W2ldW0VMRU1fVEhVTUJOQUlMXS5sZW5ndGggPiAwKSB7XHJcblx0XHRcdFx0XHRcdCQoXCIuaHRtbDUtbmF2LWxpc3RcIikuYXBwZW5kKFwiPGRpdiBjbGFzcz0naHRtbDUtbmF2LXRodW1iJyBkYXRhLWFycmF5aW5kZXg9J1wiICsgaSArIFwiJyBzdHlsZT0nZmxvYXQ6bGVmdDtvdmVyZmxvdzpoaWRkZW47Y3Vyc29yOnBvaW50ZXI7b3BhY2l0eTpcIiArXHJcblx0XHRcdFx0XHRcdFx0aW5zdC5vcHRpb25zLnRodW1ib3BhY2l0eSArIFwiO21hcmdpbjogMCBcIiArIGluc3Qub3B0aW9ucy50aHVtYmdhcCAvIDIgKyBcInB4O3dpZHRoOlwiICsgaW5zdC5vcHRpb25zLnRodW1id2lkdGggKyBcInB4O2hlaWdodDpcIiArIGluc3Qub3B0aW9ucy50aHVtYmhlaWdodCArIFwicHg7Ym9yZGVyOlwiICsgaW5zdC5vcHRpb25zLnRodW1iYm9yZGVyICsgXCJweCBzb2xpZCBcIiArIGluc3Qub3B0aW9ucy50aHVtYmJvcmRlcmNvbG9yICsgXCI7Jz48L2Rpdj5cIik7XHJcblx0XHRcdFx0XHRcdHRoaXMubG9hZFRodW1ibmFpbChpbnN0LmVsZW1BcnJheVtpXVtFTEVNX1RIVU1CTkFJTF0sIGluZGV4KTtcclxuXHRcdFx0XHRcdFx0aW5kZXgrK1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHQkKFwiLmh0bWw1LW5hdi10aHVtYlwiKS5ob3ZlcihmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0JCh0aGlzKS5jc3Moe1xyXG5cdFx0XHRcdFx0b3BhY2l0eTogMVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdCQodGhpcykuY3NzKHtcclxuXHRcdFx0XHRcdGJvcmRlcjogaW5zdC5vcHRpb25zLnRodW1iYm9yZGVyICsgXCJweCBzb2xpZCBcIiArIGluc3Qub3B0aW9ucy50aHVtYmhpZ2hsaWdodGJvcmRlcmNvbG9yXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fSwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdCQodGhpcykuY3NzKHtcclxuXHRcdFx0XHRcdG9wYWNpdHk6IGluc3Qub3B0aW9ucy50aHVtYm9wYWNpdHlcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHQkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XHRib3JkZXI6IGluc3Qub3B0aW9ucy50aHVtYmJvcmRlciArIFwicHggc29saWQgXCIgKyBpbnN0Lm9wdGlvbnMudGh1bWJib3JkZXJjb2xvclxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH0pO1xyXG5cdFx0XHQkKFwiLmh0bWw1LW5hdi10aHVtYlwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0dmFyIGluZGV4ID0gJCh0aGlzKS5kYXRhKFwiYXJyYXlpbmRleFwiKTtcclxuXHRcdFx0XHRpZiAoaW5kZXggPj0gMCkgaW5zdC5nb3RvU2xpZGUoaW5kZXgpXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRpbnN0Lm9wdGlvbnMudG90YWx3aWR0aCA9IGluZGV4ICogKGluc3Qub3B0aW9ucy50aHVtYmdhcCArIGluc3Qub3B0aW9ucy50aHVtYndpZHRoICsgMiAqIGluc3Qub3B0aW9ucy50aHVtYmJvcmRlcik7XHJcblx0XHRcdCQoXCIuaHRtbDUtbmF2LWxpc3RcIikuY3NzKHtcclxuXHRcdFx0XHRkaXNwbGF5OiBcImJsb2NrXCIsXHJcblx0XHRcdFx0cG9zaXRpb246IFwicmVsYXRpdmVcIixcclxuXHRcdFx0XHRcIm1hcmdpbi1sZWZ0XCI6IDAsXHJcblx0XHRcdFx0d2lkdGg6IGluc3Qub3B0aW9ucy50b3RhbHdpZHRoICsgXCJweFwiXHJcblx0XHRcdH0pLmFwcGVuZChcIjxkaXYgc3R5bGU9J2NsZWFyOmJvdGg7Jz48L2Rpdj5cIik7XHJcblx0XHRcdHZhciAkbmF2TWFzayA9ICQoXCIuaHRtbDUtbmF2LW1hc2tcIik7XHJcblx0XHRcdHZhciAkbmF2UHJldiA9XHJcblx0XHRcdFx0JChcIi5odG1sNS1uYXYtcHJldlwiKTtcclxuXHRcdFx0dmFyICRuYXZOZXh0ID0gJChcIi5odG1sNS1uYXYtbmV4dFwiKTtcclxuXHRcdFx0JG5hdlByZXYuY2xpY2soZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdHZhciAkbmF2TGlzdCA9ICQoXCIuaHRtbDUtbmF2LWxpc3RcIik7XHJcblx0XHRcdFx0dmFyICRuYXZOZXh0ID0gJChcIi5odG1sNS1uYXYtbmV4dFwiKTtcclxuXHRcdFx0XHR2YXIgd2luV2lkdGggPSAkKHdpbmRvdykud2lkdGgoKTtcclxuXHRcdFx0XHR2YXIgbWFza1dpZHRoID0gd2luV2lkdGggLSAyICogaW5zdC5vcHRpb25zLm5hdmJ1dHRvbndpZHRoO1xyXG5cdFx0XHRcdHZhciBtYXJnaW5MZWZ0ID0gcGFyc2VJbnQoJG5hdkxpc3QuY3NzKFwibWFyZ2luLWxlZnRcIikpICsgbWFza1dpZHRoO1xyXG5cdFx0XHRcdGlmIChtYXJnaW5MZWZ0ID49IDApIHtcclxuXHRcdFx0XHRcdG1hcmdpbkxlZnQgPSAwO1xyXG5cdFx0XHRcdFx0JCh0aGlzKS5jc3Moe1xyXG5cdFx0XHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogXCJjZW50ZXIgbGVmdFwiXHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdH0gZWxzZSAkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogXCJjZW50ZXIgcmlnaHRcIlxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGlmIChtYXJnaW5MZWZ0IDw9IG1hc2tXaWR0aCAtIGluc3Qub3B0aW9ucy50b3RhbHdpZHRoKSAkbmF2TmV4dC5jc3Moe1xyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCI6IFwiY2VudGVyIGxlZnRcIlxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGVsc2UgJG5hdk5leHQuY3NzKHtcclxuXHRcdFx0XHRcdFwiYmFja2dyb3VuZC1wb3NpdGlvblwiOiBcImNlbnRlciByaWdodFwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0JG5hdkxpc3QuYW5pbWF0ZSh7XHJcblx0XHRcdFx0XHRcIm1hcmdpbi1sZWZ0XCI6IG1hcmdpbkxlZnRcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9KTtcclxuXHRcdFx0JG5hdk5leHQuY2xpY2soZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdHZhciAkbmF2TGlzdCA9ICQoXCIuaHRtbDUtbmF2LWxpc3RcIik7XHJcblx0XHRcdFx0dmFyICRuYXZQcmV2ID0gJChcIi5odG1sNS1uYXYtcHJldlwiKTtcclxuXHRcdFx0XHR2YXIgd2luV2lkdGggPSAkKHdpbmRvdykud2lkdGgoKTtcclxuXHRcdFx0XHR2YXIgbWFza1dpZHRoID0gd2luV2lkdGggLSAyICogaW5zdC5vcHRpb25zLm5hdmJ1dHRvbndpZHRoO1xyXG5cdFx0XHRcdHZhciBtYXJnaW5MZWZ0ID0gcGFyc2VJbnQoJG5hdkxpc3QuY3NzKFwibWFyZ2luLWxlZnRcIikpIC0gbWFza1dpZHRoO1xyXG5cdFx0XHRcdGlmIChtYXJnaW5MZWZ0IDw9IG1hc2tXaWR0aCAtIGluc3Qub3B0aW9ucy50b3RhbHdpZHRoKSB7XHJcblx0XHRcdFx0XHRtYXJnaW5MZWZ0ID0gbWFza1dpZHRoIC0gaW5zdC5vcHRpb25zLnRvdGFsd2lkdGg7XHJcblx0XHRcdFx0XHQkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XHRcdFwiYmFja2dyb3VuZC1wb3NpdGlvblwiOiBcImNlbnRlciBsZWZ0XCJcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fSBlbHNlICQodGhpcykuY3NzKHtcclxuXHRcdFx0XHRcdFwiYmFja2dyb3VuZC1wb3NpdGlvblwiOiBcImNlbnRlciByaWdodFwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aWYgKG1hcmdpbkxlZnQgPj0gMCkgJG5hdlByZXYuY3NzKHtcclxuXHRcdFx0XHRcdFwiYmFja2dyb3VuZC1wb3NpdGlvblwiOiBcImNlbnRlciBsZWZ0XCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRlbHNlICRuYXZQcmV2LmNzcyh7XHJcblx0XHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogXCJjZW50ZXIgcmlnaHRcIlxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdCRuYXZMaXN0LmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0XCJtYXJnaW4tbGVmdFwiOiBtYXJnaW5MZWZ0XHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fSk7XHJcblx0XHRcdHZhciB3aW5XaWR0aCA9ICQod2luZG93KS53aWR0aCgpO1xyXG5cdFx0XHRpZiAoaW5zdC5vcHRpb25zLnRvdGFsd2lkdGggPD0gd2luV2lkdGgpIHtcclxuXHRcdFx0XHQkbmF2TWFzay5jc3Moe1xyXG5cdFx0XHRcdFx0d2lkdGg6IGluc3Qub3B0aW9ucy50b3RhbHdpZHRoICsgXCJweFwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0JG5hdlByZXYuaGlkZSgpO1xyXG5cdFx0XHRcdCRuYXZOZXh0LmhpZGUoKVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdCRuYXZNYXNrLmNzcyh7XHJcblx0XHRcdFx0XHR3aWR0aDogd2luV2lkdGggLSAyICogaW5zdC5vcHRpb25zLm5hdmJ1dHRvbndpZHRoICsgXCJweFwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0JG5hdlByZXYuc2hvdygpO1xyXG5cdFx0XHRcdCRuYXZOZXh0LnNob3coKVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0aW5zdC5sb2FkRWxlbSA9IGZ1bmN0aW9uIChlbGVtKSB7XHJcblx0XHRcdGluc3QuY3VycmVudEVsZW0gPSBlbGVtO1xyXG5cdFx0XHRpbnN0LnNob3dpbmcgPSB0cnVlO1xyXG5cdFx0XHRpbnN0LnNob3dOYXZpZ2F0aW9uKCk7XHJcblx0XHRcdGluc3QuJGVsZW0udW5iaW5kKFwibW91c2VlbnRlclwiKS51bmJpbmQoXCJtb3VzZWxlYXZlXCIpLnVuYmluZChcIm1vdXNlbW92ZVwiKTtcclxuXHRcdFx0aW5zdC4kbG9hZGluZy5zaG93KCk7XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMub25zaG93aXRlbSAmJiB3aW5kb3dbaW5zdC5vcHRpb25zLm9uc2hvd2l0ZW1dICYmIHR5cGVvZiB3aW5kb3dbaW5zdC5vcHRpb25zLm9uc2hvd2l0ZW1dID09IFwiZnVuY3Rpb25cIikgd2luZG93W2luc3Qub3B0aW9ucy5vbnNob3dpdGVtXShlbGVtKTtcclxuXHRcdFx0c3dpdGNoIChlbGVtW0VMRU1fVFlQRV0pIHtcclxuXHRcdFx0Y2FzZSAwOlxyXG5cdFx0XHRcdHZhciBpbWdMb2FkZXIgPSBuZXcgSW1hZ2U7XHJcblx0XHRcdFx0JChpbWdMb2FkZXIpLmxvYWQoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0aW5zdC5zaG93SW1hZ2UoZWxlbSwgaW1nTG9hZGVyLndpZHRoLCBpbWdMb2FkZXIuaGVpZ2h0KVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdCQoaW1nTG9hZGVyKS5lcnJvcihmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRpbnN0LnNob3dFcnJvcigpXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aW1nTG9hZGVyLnNyYyA9IGVsZW1bRUxFTV9IUkVGXTtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0Y2FzZSAxOlxyXG5cdFx0XHRcdGluc3Quc2hvd1NXRihlbGVtKTtcclxuXHRcdFx0XHRicmVhaztcclxuXHRcdFx0Y2FzZSAyOlxyXG5cdFx0XHRjYXNlIDg6XHJcblx0XHRcdFx0aW5zdC5zaG93VmlkZW8oZWxlbSk7XHJcblx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdGNhc2UgMzpcclxuXHRcdFx0Y2FzZSA0OlxyXG5cdFx0XHRjYXNlIDk6XHJcblx0XHRcdFx0aW5zdC5zaG93WW91dHViZVZpbWVvKGVsZW0pO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlIDU6XHJcblx0XHRcdFx0aW5zdC5zaG93UERGKGVsZW0pO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlIDY6XHJcblx0XHRcdFx0aW5zdC5zaG93TVAzKGVsZW0pO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlIDc6XHJcblx0XHRcdFx0aW5zdC5zaG93V2ViKGVsZW0pO1xyXG5cdFx0XHRcdGJyZWFrO1xyXG5cdFx0XHRjYXNlIDEwOlxyXG5cdFx0XHRcdGluc3Quc2hvd0RpdihlbGVtKTtcclxuXHRcdFx0XHRicmVha1xyXG5cdFx0XHR9XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuZ29vZ2xlYW5hbHl0aWNzYWNjb3VudCAmJiB3aW5kb3cuX2dhcSkgd2luZG93Ll9nYXEucHVzaChbXCJfdHJhY2tFdmVudFwiLCBcIkxpZ2h0Ym94XCIsIFwiT3BlblwiLCBlbGVtW0VMRU1fSFJFRl1dKVxyXG5cdFx0fTtcclxuXHRcdGluc3QubG9hZEN1ckVsZW0gPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGluc3QubG9hZEVsZW0oaW5zdC5lbGVtQXJyYXlbaW5zdC5vcHRpb25zLmN1ckVsZW1dKVxyXG5cdFx0fTtcclxuXHRcdGluc3Quc2hvd0Vycm9yID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRpbnN0LiRsb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0aW5zdC5yZXNpemVMaWdodGJveChpbnN0Lm9wdGlvbnMuZXJyb3J3aWR0aCxcclxuXHRcdFx0XHRpbnN0Lm9wdGlvbnMuZXJyb3JoZWlnaHQsIHRydWUsXHJcblx0XHRcdFx0ZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0aW5zdC4kZXJyb3Iuc2hvdygpO1xyXG5cdFx0XHRcdFx0aW5zdC4kZWxlbS5mYWRlSW4oaW5zdC5vcHRpb25zLmZhZGVzcGVlZCwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRpbnN0LnNob3dEYXRhKClcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fSlcclxuXHRcdH07XHJcblx0XHRpbnN0LmNhbGNUZXh0V2lkdGggPSBmdW5jdGlvbiAob2JqVykge1xyXG5cdFx0XHRyZXR1cm4gb2JqVyAtIDM2XHJcblx0XHR9O1xyXG5cdFx0aW5zdC5zaG93VGl0bGUgPSBmdW5jdGlvbiAodywgdCwgZGVzY3JpcHRpb24pIHtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy50aXRsZXN0eWxlID09IFwiaW5zaWRlXCIpIGluc3QuJGVsZW1EYXRhLmNzcyh7XHJcblx0XHRcdFx0d2lkdGg6IHcgKyBcInB4XCJcclxuXHRcdFx0fSk7XHJcblx0XHRcdHZhciB0ZXh0ID0gXCJcIjtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5zaG93dGl0bGUpXHJcblx0XHRcdFx0aWYgKHQgJiYgdC5sZW5ndGggPiAwKSB0ZXh0ICs9IHQ7XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuaW5Hcm91cCkge1xyXG5cdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuc2hvd3RpdGxlcHJlZml4KSB0ZXh0ID0gaW5zdC5vcHRpb25zLnRpdGxlcHJlZml4LnJlcGxhY2UoXCIlTlVNXCIsIGluc3Qub3B0aW9ucy5ncm91cEluZGV4ICsgMSkucmVwbGFjZShcIiVUT1RBTFwiLFxyXG5cdFx0XHRcdFx0aW5zdC5vcHRpb25zLmdyb3VwQ291bnQpICsgXCIgXCIgKyB0ZXh0O1xyXG5cdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuc2hvd3BsYXlidXR0b24pIHRleHQgPSBcIjxkaXYgaWQ9J2h0bWw1LXBsYXlwYXVzZScgc3R5bGU9J2Rpc3BsYXk6aW5saW5lLWJsb2NrO2N1cnNvcjpwb2ludGVyO3ZlcnRpY2FsLWFsaWduOm1pZGRsZTsnPjxkaXYgaWQ9J2h0bWw1LXBsYXknIHN0eWxlPSdkaXNwbGF5OmJsb2NrOyc+PGltZyBzcmM9J1wiICsgaW5zdC5vcHRpb25zLnNraW5zZm9sZGVyICsgaW5zdC5vcHRpb25zLnBsYXlpbWFnZSArIFwiJz48L2Rpdj48ZGl2IGlkPSdodG1sNS1wYXVzZScgc3R5bGU9J2Rpc3BsYXk6bm9uZTsnPjxpbWcgc3JjPSdcIiArIGluc3Qub3B0aW9ucy5za2luc2ZvbGRlciArIGluc3Qub3B0aW9ucy5wYXVzZWltYWdlICsgXCInPjwvZGl2PjwvZGl2PiBcIiArIHRleHRcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoaW5zdC5vcHRpb25zLnNob3dkZXNjcmlwdGlvbiAmJiBkZXNjcmlwdGlvbiAmJiBkZXNjcmlwdGlvbi5sZW5ndGggPiAwKSB0ZXh0ICs9ICc8cCBjbGFzcz1cImh0bWw1LWRlc2NyaXB0aW9uXCI+JyArXHJcblx0XHRcdFx0ZGVzY3JpcHRpb24gKyBcIjwvcD5cIjtcclxuXHRcdFx0aW5zdC4kdGV4dC5odG1sKHRleHQpO1xyXG5cdFx0XHRpZiAoaW5zdC5vcHRpb25zLmluR3JvdXAgJiYgaW5zdC5vcHRpb25zLnNob3dwbGF5YnV0dG9uKSB7XHJcblx0XHRcdFx0aWYgKGluc3QuYXV0b3NsaWRpbmcpIHtcclxuXHRcdFx0XHRcdCQoXCIjaHRtbDUtcGxheVwiLCBpbnN0LiRsaWdodGJveCkuaGlkZSgpO1xyXG5cdFx0XHRcdFx0JChcIiNodG1sNS1wYXVzZVwiLCBpbnN0LiRsaWdodGJveCkuc2hvdygpXHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdCQoXCIjaHRtbDUtcGxheVwiLCBpbnN0LiRsaWdodGJveCkuc2hvdygpO1xyXG5cdFx0XHRcdFx0JChcIiNodG1sNS1wYXVzZVwiLCBpbnN0LiRsaWdodGJveCkuaGlkZSgpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdCQoXCIjaHRtbDUtcGxheVwiLCBpbnN0LiRsaWdodGJveCkuY2xpY2soZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0JChcIiNodG1sNS1wbGF5XCIsIGluc3QuJGxpZ2h0Ym94KS5oaWRlKCk7XHJcblx0XHRcdFx0XHQkKFwiI2h0bWw1LXBhdXNlXCIsIGluc3QuJGxpZ2h0Ym94KS5zaG93KCk7XHJcblx0XHRcdFx0XHRpZiAoaW5zdC5zbGlkZVRpbWVvdXQpIHtcclxuXHRcdFx0XHRcdFx0aW5zdC5zbGlkZVRpbWVvdXQuc3RvcCgpO1xyXG5cdFx0XHRcdFx0XHRpbnN0LnNsaWRlVGltZW91dC5zdGFydCgpO1xyXG5cdFx0XHRcdFx0XHRpbnN0LmF1dG9zbGlkaW5nID0gdHJ1ZVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdCQoXCIjaHRtbDUtcGF1c2VcIiwgaW5zdC4kbGlnaHRib3gpLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdCQoXCIjaHRtbDUtcGxheVwiLCBpbnN0LiRsaWdodGJveCkuc2hvdygpO1xyXG5cdFx0XHRcdFx0JChcIiNodG1sNS1wYXVzZVwiLCBpbnN0LiRsaWdodGJveCkuaGlkZSgpO1xyXG5cdFx0XHRcdFx0aWYgKGluc3Quc2xpZGVUaW1lb3V0KSB7XHJcblx0XHRcdFx0XHRcdGluc3Quc2xpZGVUaW1lb3V0LnN0b3AoKTtcclxuXHRcdFx0XHRcdFx0aW5zdC5hdXRvc2xpZGluZyA9IGZhbHNlXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fVxyXG5cdFx0fSwgaW5zdC5zaG93SW1hZ2UgPSBmdW5jdGlvbiAoZWxlbSwgaW1nVywgaW1nSCkge1xyXG5cdFx0XHR2YXIgZWxlbVcsIGVsZW1IO1xyXG5cdFx0XHRpZiAoZWxlbVtFTEVNX1dJRFRIXSkgZWxlbVcgPSBlbGVtW0VMRU1fV0lEVEhdO1xyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRlbGVtVyA9IGltZ1c7XHJcblx0XHRcdFx0ZWxlbVtFTEVNX1dJRFRIXSA9IGltZ1dcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoZWxlbVtFTEVNX0hFSUdIVF0pIGVsZW1IID0gZWxlbVtFTEVNX0hFSUdIVF07XHJcblx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdGVsZW1IID0gaW1nSDtcclxuXHRcdFx0XHRlbGVtW0VMRU1fSEVJR0hUXSA9IGltZ0hcclxuXHRcdFx0fVxyXG5cdFx0XHR2YXIgc2l6ZU9iaiA9IGluc3QuY2FsY0VsZW1TaXplKHtcclxuXHRcdFx0XHR3OiBlbGVtVyxcclxuXHRcdFx0XHRoOiBlbGVtSFxyXG5cdFx0XHR9LCB0cnVlKTtcclxuXHRcdFx0aW5zdC5yZXNpemVMaWdodGJveChzaXplT2JqLncsXHJcblx0XHRcdFx0c2l6ZU9iai5oLCB0cnVlLFxyXG5cdFx0XHRcdGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdGluc3Quc2hvd1RpdGxlKHNpemVPYmoudywgZWxlbVtFTEVNX1RJVExFXSwgZWxlbVtFTEVNX0RFU0NSSVBUSU9OXSk7XHJcblx0XHRcdFx0XHR2YXIgdGltZXJjb2RlID0gIWluc3Qub3B0aW9ucy5zaG93dGltZXIgfHwgIWluc3Qub3B0aW9ucy5pbkdyb3VwID8gXCJcIiA6IFwiPGRpdiBpZD0naHRtbDUtdGltZXInIHN0eWxlPSdkaXNwbGF5Om5vbmU7cG9zaXRpb246YWJzb2x1dGU7XCIgKyBpbnN0Lm9wdGlvbnMudGltZXJwb3NpdGlvbiArIFwiOjA7bGVmdDowO3dpZHRoOjA7aGVpZ2h0OlwiICsgaW5zdC5vcHRpb25zLnRpbWVyaGVpZ2h0ICsgXCJweDtiYWNrZ3JvdW5kLWNvbG9yOlwiICsgaW5zdC5vcHRpb25zLnRpbWVyY29sb3IgKyBcIjtvcGFjaXR5OlwiICsgaW5zdC5vcHRpb25zLnRpbWVyb3BhY2l0eSArIFwiOyc+PC9kaXY+XCI7XHJcblx0XHRcdFx0XHRpbnN0LiRpbWFnZS5zaG93KCk7XHJcblx0XHRcdFx0XHRpbnN0LiRpbWFnZS5odG1sKFwiPGRpdiBpZD0naHRtbDUtaW1hZ2UtY29udGFpbmVyJyBzdHlsZT0nZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO2hlaWdodDoxMDAlOyc+PGltZyBzcmM9J1wiICtcclxuXHRcdFx0XHRcdFx0ZWxlbVtFTEVNX0hSRUZdICsgXCInIHdpZHRoPScxMDAlJyBoZWlnaHQ9JzEwMCUnIC8+XCIgKyB0aW1lcmNvZGUgKyBcIjwvZGl2PlwiKTtcclxuXHRcdFx0XHRcdGluc3QuJGVsZW0uZmFkZUluKGluc3Qub3B0aW9ucy5mYWRlc3BlZWQsIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0aW5zdC5zaG93RGF0YSgpXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGlmIChpbnN0LmF1dG9zbGlkaW5nKSB7XHJcblx0XHRcdFx0XHRcdGluc3Quc2xpZGVUaW1lb3V0LnN0b3AoKTtcclxuXHRcdFx0XHRcdFx0aW5zdC5zbGlkZVRpbWVvdXQuc3RhcnQoKVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pXHJcblx0XHR9O1xyXG5cdFx0aW5zdC5zaG93U1dGID0gZnVuY3Rpb24gKGVsZW0pIHtcclxuXHRcdFx0dmFyIGRhdGFXID0gZWxlbVtFTEVNX1dJRFRIXSA/IGVsZW1bRUxFTV9XSURUSF0gOiBERUZBVUxUX1dJRFRIO1xyXG5cdFx0XHR2YXIgZGF0YUggPSBlbGVtW0VMRU1fSEVJR0hUXSA/IGVsZW1bRUxFTV9IRUlHSFRdIDogREVGQVVMVF9IRUlHSFQ7XHJcblx0XHRcdHZhciBzaXplT2JqID0gaW5zdC5jYWxjRWxlbVNpemUoe1xyXG5cdFx0XHRcdHc6IGRhdGFXLFxyXG5cdFx0XHRcdGg6IGRhdGFIXHJcblx0XHRcdH0sIHRydWUpO1xyXG5cdFx0XHRkYXRhVyA9IHNpemVPYmoudztcclxuXHRcdFx0ZGF0YUggPSBzaXplT2JqLmg7XHJcblx0XHRcdGluc3QucmVzaXplTGlnaHRib3goZGF0YVcsIGRhdGFILCB0cnVlLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0aW5zdC5zaG93VGl0bGUoc2l6ZU9iai53LFxyXG5cdFx0XHRcdFx0ZWxlbVtFTEVNX1RJVExFXSwgZWxlbVtFTEVNX0RFU0NSSVBUSU9OXSk7XHJcblx0XHRcdFx0aW5zdC4kaW1hZ2UuaHRtbChcIjxkaXYgaWQ9J2h0bWw1bGlnaHRib3gtc3dmJyBzdHlsZT0nZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO2hlaWdodDoxMDAlOyc+PC9kaXY+XCIpLnNob3coKTtcclxuXHRcdFx0XHRpbnN0LmVtYmVkRmxhc2goJChcIiNodG1sNWxpZ2h0Ym94LXN3ZlwiKSwgZWxlbVtFTEVNX0hSRUZdLCBcIndpbmRvd1wiLCB7XHJcblx0XHRcdFx0XHR3aWR0aDogZGF0YVcsXHJcblx0XHRcdFx0XHRoZWlnaHQ6IGRhdGFIXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aW5zdC4kZWxlbS5zaG93KCk7XHJcblx0XHRcdFx0aW5zdC5zaG93RGF0YSgpO1xyXG5cdFx0XHRcdGlmIChpbnN0LmF1dG9zbGlkaW5nKSB7XHJcblx0XHRcdFx0XHRpbnN0LnNsaWRlVGltZW91dC5zdG9wKCk7XHJcblx0XHRcdFx0XHRpbnN0LnNsaWRlVGltZW91dC5zdGFydCgpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KVxyXG5cdFx0fTtcclxuXHRcdGluc3Quc2hvd1ZpZGVvID0gZnVuY3Rpb24gKGVsZW0pIHtcclxuXHRcdFx0aW5zdC5zbGlkZVRpbWVvdXQuc3RvcCgpO1xyXG5cdFx0XHR2YXIgZGF0YVcgPSBlbGVtW0VMRU1fV0lEVEhdID8gZWxlbVtFTEVNX1dJRFRIXSA6IERFRkFVTFRfV0lEVEg7XHJcblx0XHRcdHZhciBkYXRhSCA9IGVsZW1bRUxFTV9IRUlHSFRdID8gZWxlbVtFTEVNX0hFSUdIVF0gOlxyXG5cdFx0XHRcdERFRkFVTFRfSEVJR0hUO1xyXG5cdFx0XHR2YXIgc2l6ZU9iaiA9IGluc3QuY2FsY0VsZW1TaXplKHtcclxuXHRcdFx0XHR3OiBkYXRhVyxcclxuXHRcdFx0XHRoOiBkYXRhSFxyXG5cdFx0XHR9LCB0cnVlKTtcclxuXHRcdFx0ZGF0YVcgPSBzaXplT2JqLnc7XHJcblx0XHRcdGRhdGFIID0gc2l6ZU9iai5oO1xyXG5cdFx0XHRpbnN0LnJlc2l6ZUxpZ2h0Ym94KGRhdGFXLCBkYXRhSCwgdHJ1ZSwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGluc3Quc2hvd1RpdGxlKHNpemVPYmoudywgZWxlbVtFTEVNX1RJVExFXSwgZWxlbVtFTEVNX0RFU0NSSVBUSU9OXSk7XHJcblx0XHRcdFx0aW5zdC4kaW1hZ2UuaHRtbChcIjxkaXYgaWQ9J2h0bWw1bGlnaHRib3gtdmlkZW8nIHN0eWxlPSdkaXNwbGF5OmJsb2NrO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7YmFja2dyb3VuZC1jb2xvcjpcIiArIGluc3Qub3B0aW9ucy52aWRlb2JnY29sb3IgKyBcIjsnPjwvZGl2PlwiKS5zaG93KCk7XHJcblx0XHRcdFx0dmFyIGlzSFRNTDUgPSBmYWxzZTtcclxuXHRcdFx0XHRpZiAoaW5zdC5vcHRpb25zLmlzSUU2NzggfHwgZWxlbVtFTEVNX1RZUEVdID09IDggfHwgaW5zdC5vcHRpb25zLmlzSUU5ICYmIGluc3Qub3B0aW9ucy51c2VmbGFzaG9uaWU5IHx8IGluc3Qub3B0aW9ucy5pc0lFMTAgJiZcclxuXHRcdFx0XHRcdGluc3Qub3B0aW9ucy51c2VmbGFzaG9uaWUxMCB8fCBpbnN0Lm9wdGlvbnMuaXNJRTExICYmIGluc3Qub3B0aW9ucy51c2VmbGFzaG9uaWUxMSkgaXNIVE1MNSA9IGZhbHNlO1xyXG5cdFx0XHRcdGVsc2UgaWYgKGluc3Qub3B0aW9ucy5pc01vYmlsZSkgaXNIVE1MNSA9IHRydWU7XHJcblx0XHRcdFx0ZWxzZSBpZiAoKGluc3Qub3B0aW9ucy5odG1sNXBsYXllciB8fCAhaW5zdC5vcHRpb25zLmZsYXNoSW5zdGFsbGVkKSAmJiBpbnN0Lm9wdGlvbnMuaHRtbDVWaWRlb1N1cHBvcnRlZClcclxuXHRcdFx0XHRcdGlmICghaW5zdC5vcHRpb25zLmlzRmlyZWZveCAmJiAhaW5zdC5vcHRpb25zLmlzT3BlcmEgfHwgKGluc3Qub3B0aW9ucy5pc0ZpcmVmb3ggfHwgaW5zdC5vcHRpb25zLmlzT3BlcmEpICYmIChlbGVtW0VMRU1fSFJFRl9PR0ddIHx8IGVsZW1bRUxFTV9IUkVGX1dFQk1dKSkgaXNIVE1MNSA9IHRydWU7XHJcblx0XHRcdFx0aWYgKGlzSFRNTDUpIHtcclxuXHRcdFx0XHRcdHZhciB2aWRlb1NyYyA9IGVsZW1bRUxFTV9IUkVGXTtcclxuXHRcdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuaXNGaXJlZm94IHx8IGluc3Qub3B0aW9ucy5pc09wZXJhIHx8ICF2aWRlb1NyYykgdmlkZW9TcmMgPSBlbGVtW0VMRU1fSFJFRl9XRUJNXSA/XHJcblx0XHRcdFx0XHRcdGVsZW1bRUxFTV9IUkVGX1dFQk1dIDogZWxlbVtFTEVNX0hSRUZfT0dHXTtcclxuXHRcdFx0XHRcdGluc3QuZW1iZWRIVE1MNVZpZGVvKCQoXCIjaHRtbDVsaWdodGJveC12aWRlb1wiKSwgdmlkZW9TcmMsIGluc3Qub3B0aW9ucy5hdXRvcGxheSlcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0dmFyIHZpZGVvRmlsZSA9IGVsZW1bRUxFTV9IUkVGXTtcclxuXHRcdFx0XHRcdGlmICh2aWRlb0ZpbGUuY2hhckF0KDApICE9IFwiL1wiICYmIHZpZGVvRmlsZS5zdWJzdHJpbmcoMCwgNSkgIT0gXCJodHRwOlwiICYmIHZpZGVvRmlsZS5zdWJzdHJpbmcoMCwgNikgIT0gXCJodHRwczpcIikgdmlkZW9GaWxlID0gaW5zdC5vcHRpb25zLmh0bWxmb2xkZXIgKyB2aWRlb0ZpbGU7XHJcblx0XHRcdFx0XHRpbnN0LmVtYmVkRmxhc2goJChcIiNodG1sNWxpZ2h0Ym94LXZpZGVvXCIpLCBpbnN0Lm9wdGlvbnMuanNmb2xkZXIgKyBcImh0bWw1Ym94cGxheWVyLnN3ZlwiLCBcInRyYW5zcGFyZW50XCIsIHtcclxuXHRcdFx0XHRcdFx0d2lkdGg6IGRhdGFXLFxyXG5cdFx0XHRcdFx0XHRoZWlnaHQ6IGRhdGFILFxyXG5cdFx0XHRcdFx0XHRqc29iamVjdG5hbWU6IFwiaHRtbDVMaWdodGJveFwiLFxyXG5cdFx0XHRcdFx0XHRoaWRlY29udHJvbHM6IGluc3Qub3B0aW9ucy52aWRlb2hpZGVjb250cm9scyA/IFwiMVwiIDogXCIwXCIsXHJcblx0XHRcdFx0XHRcdGhpZGVwbGF5YnV0dG9uOiBcIjBcIixcclxuXHRcdFx0XHRcdFx0dmlkZW9maWxlOiB2aWRlb0ZpbGUsXHJcblx0XHRcdFx0XHRcdGhkZmlsZTogXCJcIixcclxuXHRcdFx0XHRcdFx0aXNoZDogXCIwXCIsXHJcblx0XHRcdFx0XHRcdGRlZmF1bHR2b2x1bWU6IGluc3Qub3B0aW9ucy5kZWZhdWx0dmlkZW92b2x1bWUsXHJcblx0XHRcdFx0XHRcdGF1dG9wbGF5OiBpbnN0Lm9wdGlvbnMuYXV0b3BsYXkgPyBcIjFcIiA6IFwiMFwiLFxyXG5cdFx0XHRcdFx0XHRlcnJvcmNzczogXCIuaHRtbDVib3gtZXJyb3JcIiArIGluc3Qub3B0aW9ucy5lcnJvcmNzcyxcclxuXHRcdFx0XHRcdFx0aWQ6IDBcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGluc3QuJGVsZW0uc2hvdygpO1xyXG5cdFx0XHRcdGluc3Quc2hvd0RhdGEoKVxyXG5cdFx0XHR9KVxyXG5cdFx0fTtcclxuXHRcdGluc3QubG9hZE5leHQgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdCQod2luZG93KS50cmlnZ2VyKFwiaHRtbDVsaWdodGJveC52aWRlb2ZpbmlzaGVkXCIpO1xyXG5cdFx0XHRpZiAoaW5zdC5hdXRvc2xpZGluZykgaW5zdC5nb3RvU2xpZGUoLTEpXHJcblx0XHR9O1xyXG5cdFx0aW5zdC5nZXRZb3V0dWJlUGFyYW1zID0gZnVuY3Rpb24gKGhyZWYpIHtcclxuXHRcdFx0dmFyIHJlc3VsdCA9IHt9O1xyXG5cdFx0XHRpZiAoaHJlZi5pbmRleE9mKFwiP1wiKSA8IDApIHJldHVybiByZXN1bHQ7XHJcblx0XHRcdHZhciBwYXJhbXMgPSBocmVmLnN1YnN0cmluZyhocmVmLmluZGV4T2YoXCI/XCIpICsgMSkuc3BsaXQoXCImXCIpO1xyXG5cdFx0XHRmb3IgKHZhciBpID1cclxuXHRcdFx0XHRcdDA7IGkgPCBwYXJhbXMubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0XHR2YXIgdmFsdWUgPSBwYXJhbXNbaV0uc3BsaXQoXCI9XCIpO1xyXG5cdFx0XHRcdGlmICh2YWx1ZSAmJiB2YWx1ZS5sZW5ndGggPT0gMiAmJiB2YWx1ZVswXS50b0xvd2VyQ2FzZSgpICE9IFwidlwiKSByZXN1bHRbdmFsdWVbMF0udG9Mb3dlckNhc2UoKV0gPSB2YWx1ZVsxXVxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiByZXN1bHRcclxuXHRcdH07XHJcblx0XHRpbnN0LnByZXBhcmVZb3V0dWJlSHJlZiA9IGZ1bmN0aW9uIChocmVmKSB7XHJcblx0XHRcdHZhciB5b3V0dWJlSWQgPSBcIlwiO1xyXG5cdFx0XHR2YXIgcmVnRXhwID0gL14uKigoeW91dHUuYmVcXC8pfCh2XFwvKXwoXFwvdVxcL1xcd1xcLyl8KGVtYmVkXFwvKXwod2F0Y2hcXD8/dj89PykpKFteI1xcJlxcP10qKS4qLztcclxuXHRcdFx0dmFyIG1hdGNoID0gaHJlZi5tYXRjaChyZWdFeHApO1xyXG5cdFx0XHRpZiAobWF0Y2ggJiYgbWF0Y2hbN10gJiYgbWF0Y2hbN10ubGVuZ3RoID09IDExKSB5b3V0dWJlSWQgPSBtYXRjaFs3XTtcclxuXHRcdFx0dmFyIHByb3RvY29sID0gd2luZG93LmxvY2F0aW9uLnByb3RvY29sID09IFwiaHR0cHM6XCIgPyBcImh0dHBzOlwiIDogXCJodHRwOlwiO1xyXG5cdFx0XHR2YXIgcmVzdWx0ID0gcHJvdG9jb2wgKyBcIi8vd3d3LnlvdXR1YmUuY29tL2VtYmVkL1wiICtcclxuXHRcdFx0XHR5b3V0dWJlSWQ7XHJcblx0XHRcdHZhciBwYXJhbXMgPSB0aGlzLmdldFlvdXR1YmVQYXJhbXMoaHJlZik7XHJcblx0XHRcdHZhciBmaXJzdCA9IHRydWU7XHJcblx0XHRcdGZvciAodmFyIGtleSBpbiBwYXJhbXMpIHtcclxuXHRcdFx0XHRpZiAoZmlyc3QpIHtcclxuXHRcdFx0XHRcdHJlc3VsdCArPSBcIj9cIjtcclxuXHRcdFx0XHRcdGZpcnN0ID0gZmFsc2VcclxuXHRcdFx0XHR9IGVsc2UgcmVzdWx0ICs9IFwiJlwiO1xyXG5cdFx0XHRcdHJlc3VsdCArPSBrZXkgKyBcIj1cIiArIHBhcmFtc1trZXldXHJcblx0XHRcdH1cclxuXHRcdFx0cmV0dXJuIHJlc3VsdFxyXG5cdFx0fTtcclxuXHRcdGluc3QucHJlcGFyZURhaWx5bW90aW9uSHJlZiA9IGZ1bmN0aW9uIChocmVmKSB7XHJcblx0XHRcdGlmIChocmVmLm1hdGNoKC9cXDpcXC9cXC8uKihkYWlcXC5seSkvaSkpIHtcclxuXHRcdFx0XHR2YXIgcHJvdG9jb2wgPSB3aW5kb3cubG9jYXRpb24ucHJvdG9jb2wgPT0gXCJodHRwczpcIiA/IFwiaHR0cHM6XCIgOiBcImh0dHA6XCI7XHJcblx0XHRcdFx0dmFyIGlkID0gaHJlZi5tYXRjaCgvKGRhaVxcLmx5XFwvKShbYS16QS1aMC05XFwtXFxfXSspLylbMl07XHJcblx0XHRcdFx0aHJlZiA9IHByb3RvY29sICsgXCIvL3d3dy5kYWlseW1vdGlvbi5jb20vZW1iZWQvdmlkZW8vXCIgKyBpZFxyXG5cdFx0XHR9XHJcblx0XHRcdHJldHVybiBocmVmXHJcblx0XHR9O1xyXG5cdFx0aW5zdC5zaG93WW91dHViZVZpbWVvID0gZnVuY3Rpb24gKGVsZW0pIHtcclxuXHRcdFx0aW5zdC5zbGlkZVRpbWVvdXQuc3RvcCgpO1xyXG5cdFx0XHR2YXIgZGF0YVcgPSBlbGVtW0VMRU1fV0lEVEhdID8gZWxlbVtFTEVNX1dJRFRIXSA6IERFRkFVTFRfV0lEVEg7XHJcblx0XHRcdHZhciBkYXRhSCA9IGVsZW1bRUxFTV9IRUlHSFRdID8gZWxlbVtFTEVNX0hFSUdIVF0gOiBERUZBVUxUX0hFSUdIVDtcclxuXHRcdFx0dmFyIHNpemVPYmogPSBpbnN0LmNhbGNFbGVtU2l6ZSh7XHJcblx0XHRcdFx0dzogZGF0YVcsXHJcblx0XHRcdFx0aDogZGF0YUhcclxuXHRcdFx0fSwgdHJ1ZSk7XHJcblx0XHRcdGRhdGFXID0gc2l6ZU9iai53O1xyXG5cdFx0XHRkYXRhSCA9IHNpemVPYmouaDtcclxuXHRcdFx0aW5zdC5yZXNpemVMaWdodGJveChkYXRhVywgZGF0YUgsIHRydWUsIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRpbnN0LnNob3dUaXRsZShzaXplT2JqLncsIGVsZW1bRUxFTV9USVRMRV0sIGVsZW1bRUxFTV9ERVNDUklQVElPTl0pO1xyXG5cdFx0XHRcdGluc3QuJGltYWdlLmh0bWwoXCI8ZGl2IGlkPSdodG1sNWxpZ2h0Ym94LXZpZGVvJyBzdHlsZT0nZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO2hlaWdodDoxMDAlOyc+PC9kaXY+XCIpLnNob3coKTtcclxuXHRcdFx0XHR2YXIgaHJlZiA9IGVsZW1bRUxFTV9IUkVGXTtcclxuXHRcdFx0XHRpZiAoZWxlbVtFTEVNX1RZUEVdID09IDMpIGhyZWYgPSBpbnN0LnByZXBhcmVZb3V0dWJlSHJlZihocmVmKTtcclxuXHRcdFx0XHRpZiAoZWxlbVtFTEVNX1RZUEVdID09IDkpIGhyZWYgPSBpbnN0LnByZXBhcmVEYWlseW1vdGlvbkhyZWYoaHJlZik7XHJcblx0XHRcdFx0aWYgKGluc3Qub3B0aW9ucy5hdXRvcGxheSlcclxuXHRcdFx0XHRcdGlmIChocmVmLmluZGV4T2YoXCI/XCIpIDwgMCkgaHJlZiArPSBcIj9hdXRvcGxheT0xXCI7XHJcblx0XHRcdFx0XHRlbHNlIGhyZWYgKz0gXCImYXV0b3BsYXk9MVwiO1xyXG5cdFx0XHRcdGlmIChlbGVtW0VMRU1fVFlQRV0gPT0gMykge1xyXG5cdFx0XHRcdFx0aWYgKGhyZWYuaW5kZXhPZihcIj9cIikgPCAwKSBocmVmICs9IFwiP3dtb2RlPXRyYW5zcGFyZW50JnJlbD0wXCI7XHJcblx0XHRcdFx0XHRlbHNlIGhyZWYgKz0gXCImd21vZGU9dHJhbnNwYXJlbnQmcmVsPTBcIjtcclxuXHRcdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMudmlkZW9oaWRlY29udHJvbHMpIGhyZWYgKz0gXCImY29udHJvbHM9MCZzaG93aW5mbz0wXCI7XHJcblx0XHRcdFx0XHRocmVmICs9IFwiJmVuYWJsZWpzYXBpPTEmb3JpZ2luPVwiICsgZG9jdW1lbnQubG9jYXRpb24ucHJvdG9jb2wgKyBcIi8vXCIgKyBkb2N1bWVudC5sb2NhdGlvbi5ob3N0bmFtZVxyXG5cdFx0XHRcdH0gZWxzZSBpZiAoZWxlbVtFTEVNX1RZUEVdID09IDQpIHtcclxuXHRcdFx0XHRcdGhyZWYgKz0gaHJlZi5pbmRleE9mKFwiP1wiKSA8IDAgPyBcIj9cIiA6IFwiJlwiO1xyXG5cdFx0XHRcdFx0aHJlZiArPSBcImFwaT0xJnBsYXllcl9pZD1odG1sNWJveGlmcmFtZXZpZGVvXCJcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0JChcIiNodG1sNWxpZ2h0Ym94LXZpZGVvXCIpLmh0bWwoXCI8aWZyYW1lIGlkPSdodG1sNWJveGlmcmFtZXZpZGVvJyB3aWR0aD0nMTAwJScgaGVpZ2h0PScxMDAlJyBzcmM9J1wiICtcclxuXHRcdFx0XHRcdGhyZWYgKyBcIicgZnJhbWVib3JkZXI9JzAnIHdlYmtpdEFsbG93RnVsbFNjcmVlbiBtb3phbGxvd2Z1bGxzY3JlZW4gYWxsb3dGdWxsU2NyZWVuPjwvaWZyYW1lPlwiKTtcclxuXHRcdFx0XHRpbnN0LiRlbGVtLnNob3coKTtcclxuXHRcdFx0XHRpbnN0LnNob3dEYXRhKCk7XHJcblx0XHRcdFx0aWYgKGVsZW1bRUxFTV9UWVBFXSA9PSAzICYmIHR5cGVvZiBZVCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgWVQuUGxheWVyID09PSBcImZ1bmN0aW9uXCIpIG5ldyBZVC5QbGF5ZXIoXCJodG1sNWJveGlmcmFtZXZpZGVvXCIsIHtcclxuXHRcdFx0XHRcdGV2ZW50czoge1xyXG5cdFx0XHRcdFx0XHRcIm9uU3RhdGVDaGFuZ2VcIjogZnVuY3Rpb24gKGV2ZW50KSB7XHJcblx0XHRcdFx0XHRcdFx0aWYgKGV2ZW50LmRhdGEgPT0gWVQuUGxheWVyU3RhdGUuRU5ERUQpIHtcclxuXHRcdFx0XHRcdFx0XHRcdCQod2luZG93KS50cmlnZ2VyKFwiaHRtbDVsaWdodGJveC52aWRlb2ZpbmlzaGVkXCIpO1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKGluc3QuYXV0b3NsaWRpbmcpIGluc3QuZ290b1NsaWRlKC0xKVxyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGVsc2UgaWYgKGVsZW1bRUxFTV9UWVBFXSA9PSA0ICYmIHR5cGVvZiAkZiA9PT0gXCJmdW5jdGlvblwiKSB7XHJcblx0XHRcdFx0XHR2YXIgdmltZW9JZnJhbWUgPSAkKFwiI2h0bWw1Ym94aWZyYW1ldmlkZW9cIilbMF07XHJcblx0XHRcdFx0XHR2YXIgdmltZW9QbGF5ZXIgPSAkZih2aW1lb0lmcmFtZSk7XHJcblx0XHRcdFx0XHR2aW1lb1BsYXllci5hZGRFdmVudChcInJlYWR5XCIsIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0dmltZW9QbGF5ZXIuYWRkRXZlbnQoXCJmaW5pc2hcIiwgZnVuY3Rpb24gKGlkKSB7XHJcblx0XHRcdFx0XHRcdFx0JCh3aW5kb3cpLnRyaWdnZXIoXCJodG1sNWxpZ2h0Ym94LnZpZGVvZmluaXNoZWRcIik7XHJcblx0XHRcdFx0XHRcdFx0aWYgKGluc3QuYXV0b3NsaWRpbmcpIGluc3QuZ290b1NsaWRlKC0xKVxyXG5cdFx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pXHJcblx0XHR9O1xyXG5cdFx0aW5zdC5zaG93UERGID0gZnVuY3Rpb24gKGVsZW0pIHt9O1xyXG5cdFx0aW5zdC5zaG93TVAzID0gZnVuY3Rpb24gKGVsZW0pIHt9O1xyXG5cdFx0aW5zdC5zaG93RGl2ID0gZnVuY3Rpb24gKGVsZW0pIHtcclxuXHRcdFx0dmFyIHdpbldpZHRoID0gJCh3aW5kb3cpLndpZHRoKCk7XHJcblx0XHRcdHZhciB3aW5IID0gd2luZG93LmlubmVySGVpZ2h0ID8gd2luZG93LmlubmVySGVpZ2h0IDogJCh3aW5kb3cpLmhlaWdodCgpO1xyXG5cdFx0XHR2YXIgZGF0YVcgPSBlbGVtW0VMRU1fV0lEVEhdID8gZWxlbVtFTEVNX1dJRFRIXSA6IHdpbldpZHRoO1xyXG5cdFx0XHR2YXIgZGF0YUggPSBlbGVtW0VMRU1fSEVJR0hUXSA/IGVsZW1bRUxFTV9IRUlHSFRdIDogd2luSCAtIGluc3Qub3B0aW9ucy5uYXZoZWlnaHQ7XHJcblx0XHRcdHZhciBzaXplT2JqID0gaW5zdC5jYWxjRWxlbVNpemUoe1xyXG5cdFx0XHRcdHc6IGRhdGFXLFxyXG5cdFx0XHRcdGg6IGRhdGFIXHJcblx0XHRcdH0sIGZhbHNlKTtcclxuXHRcdFx0ZGF0YVcgPSBzaXplT2JqLnc7XHJcblx0XHRcdGRhdGFIID0gc2l6ZU9iai5oO1xyXG5cdFx0XHRpbnN0LnJlc2l6ZUxpZ2h0Ym94KGRhdGFXLCBkYXRhSCwgdHJ1ZSwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGluc3QuJGxvYWRpbmcuaGlkZSgpO1xyXG5cdFx0XHRcdGluc3Quc2hvd1RpdGxlKHNpemVPYmoudywgZWxlbVtFTEVNX1RJVExFXSwgZWxlbVtFTEVNX0RFU0NSSVBUSU9OXSk7XHJcblx0XHRcdFx0aW5zdC4kaW1hZ2UuaHRtbChcIjxkaXYgaWQ9J2h0bWw1bGlnaHRib3gtZGl2JyBzdHlsZT0nZGlzcGxheTpibG9jazt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO1wiICsgKGluc3Qub3B0aW9ucy5pc0lPUyA/IFwiLXdlYmtpdC1vdmVyZmxvdy1zY3JvbGxpbmc6dG91Y2g7b3ZlcmZsb3cteTpzY3JvbGw7XCIgOiBcIm92ZXJmbG93OmF1dG87XCIpICsgXCInPjwvZGl2PlwiKS5zaG93KCk7XHJcblx0XHRcdFx0dmFyIGRpdklEID0gZWxlbVtFTEVNX0hSRUZdO1xyXG5cdFx0XHRcdGlmICgkKGRpdklEKS5sZW5ndGggPiAwKSAkKFwiI2h0bWw1bGlnaHRib3gtZGl2XCIpLmh0bWwoJChkaXZJRCkuaHRtbCgpKTtcclxuXHRcdFx0XHRlbHNlICQoXCIjaHRtbDVsaWdodGJveC1kaXZcIikuaHRtbChcIjxkaXYgY2xhc3M9J2h0bWw1LWVycm9yJz5UaGUgc3BlY2lmaWVkIGRpdiBJRCBkb2VzIG5vdCBleGlzdC48L2Rpdj5cIik7XHJcblx0XHRcdFx0aW5zdC4kZWxlbS5zaG93KCk7XHJcblx0XHRcdFx0aW5zdC5zaG93RGF0YSgpO1xyXG5cdFx0XHRcdGlmIChpbnN0LmF1dG9zbGlkaW5nKSB7XHJcblx0XHRcdFx0XHRpbnN0LnNsaWRlVGltZW91dC5zdG9wKCk7XHJcblx0XHRcdFx0XHRpbnN0LnNsaWRlVGltZW91dC5zdGFydCgpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KVxyXG5cdFx0fTtcclxuXHRcdGluc3Quc2hvd1dlYiA9IGZ1bmN0aW9uIChlbGVtKSB7XHJcblx0XHRcdHZhciB3aW5XaWR0aCA9ICQod2luZG93KS53aWR0aCgpO1xyXG5cdFx0XHR2YXIgd2luSCA9IHdpbmRvdy5pbm5lckhlaWdodCA/IHdpbmRvdy5pbm5lckhlaWdodCA6ICQod2luZG93KS5oZWlnaHQoKTtcclxuXHRcdFx0dmFyIGRhdGFXID0gZWxlbVtFTEVNX1dJRFRIXSA/IGVsZW1bRUxFTV9XSURUSF0gOiB3aW5XaWR0aDtcclxuXHRcdFx0dmFyIGRhdGFIID0gZWxlbVtFTEVNX0hFSUdIVF0gPyBlbGVtW0VMRU1fSEVJR0hUXSA6IHdpbkggLSBpbnN0Lm9wdGlvbnMubmF2aGVpZ2h0O1xyXG5cdFx0XHR2YXIgc2l6ZU9iaiA9IGluc3QuY2FsY0VsZW1TaXplKHtcclxuXHRcdFx0XHR3OiBkYXRhVyxcclxuXHRcdFx0XHRoOiBkYXRhSFxyXG5cdFx0XHR9LCBmYWxzZSk7XHJcblx0XHRcdGRhdGFXID0gc2l6ZU9iai53O1xyXG5cdFx0XHRkYXRhSCA9IHNpemVPYmouaDtcclxuXHRcdFx0aW5zdC5yZXNpemVMaWdodGJveChkYXRhVywgZGF0YUgsIHRydWUsIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRpbnN0LiRsb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0XHRpbnN0LnNob3dUaXRsZShzaXplT2JqLncsIGVsZW1bRUxFTV9USVRMRV0sIGVsZW1bRUxFTV9ERVNDUklQVElPTl0pO1xyXG5cdFx0XHRcdGluc3QuJGltYWdlLmh0bWwoXCI8ZGl2IGlkPSdodG1sNWxpZ2h0Ym94LXdlYicgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtcIiArIChpbnN0Lm9wdGlvbnMuaXNJT1MgPyBcIi13ZWJraXQtb3ZlcmZsb3ctc2Nyb2xsaW5nOnRvdWNoO292ZXJmbG93LXk6c2Nyb2xsO1wiIDogXCJcIikgKyBcIic+PC9kaXY+XCIpLnNob3coKTtcclxuXHRcdFx0XHQkKFwiI2h0bWw1bGlnaHRib3gtd2ViXCIpLmh0bWwoXCI8aWZyYW1lIGlkPSdodG1sNWxpZ2h0Ym94LXdlYi1pZnJhbWUnIHdpZHRoPScxMDAlJyBoZWlnaHQ9JzEwMCUnIHNyYz0nXCIgKyBlbGVtW0VMRU1fSFJFRl0gKyBcIicgZnJhbWVib3JkZXI9JzAnPjwvaWZyYW1lPlwiKTtcclxuXHRcdFx0XHRpbnN0LiRlbGVtLnNob3coKTtcclxuXHRcdFx0XHRpbnN0LnNob3dEYXRhKCk7XHJcblx0XHRcdFx0aWYgKGluc3QuYXV0b3NsaWRpbmcpIHtcclxuXHRcdFx0XHRcdGluc3Quc2xpZGVUaW1lb3V0LnN0b3AoKTtcclxuXHRcdFx0XHRcdGluc3Quc2xpZGVUaW1lb3V0LnN0YXJ0KClcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pXHJcblx0XHR9O1xyXG5cdFx0aW5zdC5zY3JvbGxCb3ggPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGlmICghaW5zdC5vcHRpb25zLnN1cHBvcnRDU1NQb3NpdGlvbkZpeGVkKSBpbnN0LiRsaWdodGJveC5jc3MoXCJ0b3BcIiwgJCh3aW5kb3cpLnNjcm9sbFRvcCgpKVxyXG5cdFx0fTtcclxuXHRcdGluc3QucmVzaXplV2luZG93ID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRpZiAoIWluc3QuY3VycmVudEVsZW0pIHJldHVybjtcclxuXHRcdFx0aWYgKCFpbnN0Lm9wdGlvbnMucmVzcG9uc2l2ZSkgcmV0dXJuO1xyXG5cdFx0XHR2YXIgd2luV2lkdGggPSAkKHdpbmRvdykud2lkdGgoKTtcclxuXHRcdFx0dmFyIHdpbkggPSB3aW5kb3cuaW5uZXJIZWlnaHQgPyB3aW5kb3cuaW5uZXJIZWlnaHQgOiAkKHdpbmRvdykuaGVpZ2h0KCk7XHJcblx0XHRcdHZhciBlbGVtVywgZWxlbUgsIGtlZXByYXRpbztcclxuXHRcdFx0aWYgKGluc3QuY3VycmVudEVsZW1bRUxFTV9UWVBFXSA9PSA3IHx8IGluc3QuY3VycmVudEVsZW1bRUxFTV9UWVBFXSA9PVxyXG5cdFx0XHRcdDEwKSB7XHJcblx0XHRcdFx0ZWxlbVcgPSBpbnN0LmN1cnJlbnRFbGVtW0VMRU1fV0lEVEhdID8gaW5zdC5jdXJyZW50RWxlbVtFTEVNX1dJRFRIXSA6IHdpbldpZHRoO1xyXG5cdFx0XHRcdGVsZW1IID0gaW5zdC5jdXJyZW50RWxlbVtFTEVNX0hFSUdIVF0gPyBpbnN0LmN1cnJlbnRFbGVtW0VMRU1fSEVJR0hUXSA6IHdpbkggLSBpbnN0Lm9wdGlvbnMubmF2aGVpZ2h0O1xyXG5cdFx0XHRcdGtlZXByYXRpbyA9IGZhbHNlXHJcblx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0ZWxlbVcgPSBpbnN0LmN1cnJlbnRFbGVtW0VMRU1fV0lEVEhdID8gaW5zdC5jdXJyZW50RWxlbVtFTEVNX1dJRFRIXSA6IERFRkFVTFRfV0lEVEg7XHJcblx0XHRcdFx0ZWxlbUggPSBpbnN0LmN1cnJlbnRFbGVtW0VMRU1fSEVJR0hUXSA/IGluc3QuY3VycmVudEVsZW1bRUxFTV9IRUlHSFRdIDogREVGQVVMVF9IRUlHSFQ7XHJcblx0XHRcdFx0a2VlcHJhdGlvID0gdHJ1ZVxyXG5cdFx0XHR9XHJcblx0XHRcdHZhciBzaXplT2JqID0gaW5zdC5jYWxjRWxlbVNpemUoe1xyXG5cdFx0XHRcdHc6IGVsZW1XLFxyXG5cdFx0XHRcdGg6IGVsZW1IXHJcblx0XHRcdH0sIGtlZXByYXRpbyk7XHJcblx0XHRcdHZhciBib3hQb3MgPSBpbnN0LmNhbGNCb3hQb3NpdGlvbihzaXplT2JqLncsIHNpemVPYmouaCk7XHJcblx0XHRcdHZhciBib3hXID0gYm94UG9zWzBdO1xyXG5cdFx0XHR2YXIgYm94SCA9XHJcblx0XHRcdFx0Ym94UG9zWzFdO1xyXG5cdFx0XHR2YXIgYm94VCA9IGJveFBvc1syXTtcclxuXHRcdFx0aW5zdC4kbGlnaHRib3hCb3guY3NzKHtcclxuXHRcdFx0XHRcIm1hcmdpbi10b3BcIjogYm94VFxyXG5cdFx0XHR9KTtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy50aXRsZXN0eWxlID09IFwibGVmdFwiIHx8IGluc3Qub3B0aW9ucy50aXRsZXN0eWxlID09IFwicmlnaHRcIikgaW5zdC4kbGlnaHRib3hCb3guY3NzKHtcclxuXHRcdFx0XHRcIndpZHRoXCI6IGJveFcsXHJcblx0XHRcdFx0XCJoZWlnaHRcIjogYm94SFxyXG5cdFx0XHR9KTtcclxuXHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0aW5zdC4kbGlnaHRib3hCb3guY3NzKHtcclxuXHRcdFx0XHRcdFwid2lkdGhcIjogYm94VyxcclxuXHRcdFx0XHRcdFwiaGVpZ2h0XCI6IFwiYXV0b1wiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aW5zdC4kZWxlbVdyYXAuY3NzKHtcclxuXHRcdFx0XHRcdFwid2lkdGhcIjogYm94VyxcclxuXHRcdFx0XHRcdFwiaGVpZ2h0XCI6IGJveEhcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcImluc2lkZVwiKSBpbnN0LiRlbGVtRGF0YS5jc3Moe1xyXG5cdFx0XHRcdHdpZHRoOiBzaXplT2JqLncgKyBcInB4XCJcclxuXHRcdFx0fSk7XHJcblx0XHRcdGlmICgkKFwiLmh0bWw1LW5hdlwiKS5sZW5ndGggPD0gMCkgcmV0dXJuO1xyXG5cdFx0XHQkKFwiLmh0bWw1LW5hdi1saXN0XCIpLmNzcyh7XHJcblx0XHRcdFx0XCJtYXJnaW4tbGVmdFwiOiAwXHJcblx0XHRcdH0pO1xyXG5cdFx0XHR2YXIgJG5hdk1hc2sgPSAkKFwiLmh0bWw1LW5hdi1tYXNrXCIpO1xyXG5cdFx0XHR2YXIgJG5hdlByZXYgPVxyXG5cdFx0XHRcdCQoXCIuaHRtbDUtbmF2LXByZXZcIik7XHJcblx0XHRcdHZhciAkbmF2TmV4dCA9ICQoXCIuaHRtbDUtbmF2LW5leHRcIik7XHJcblx0XHRcdHZhciB3aW5XaWR0aCA9ICQod2luZG93KS53aWR0aCgpO1xyXG5cdFx0XHRpZiAoaW5zdC5vcHRpb25zLnRvdGFsd2lkdGggPD0gd2luV2lkdGgpIHtcclxuXHRcdFx0XHQkbmF2TWFzay5jc3Moe1xyXG5cdFx0XHRcdFx0d2lkdGg6IGluc3Qub3B0aW9ucy50b3RhbHdpZHRoICsgXCJweFwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0JG5hdlByZXYuaGlkZSgpO1xyXG5cdFx0XHRcdCRuYXZOZXh0LmhpZGUoKVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdCRuYXZNYXNrLmNzcyh7XHJcblx0XHRcdFx0XHR3aWR0aDogd2luV2lkdGggLSAyICogaW5zdC5vcHRpb25zLm5hdmJ1dHRvbndpZHRoICsgXCJweFwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0JG5hdlByZXYuc2hvdygpO1xyXG5cdFx0XHRcdCRuYXZOZXh0LnNob3coKVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0aW5zdC5jYWxjRWxlbVNpemUgPSBmdW5jdGlvbiAoc2l6ZU9iaiwga2VlcHJhdGlvKSB7XHJcblx0XHRcdGlmICghaW5zdC5vcHRpb25zLnJlc3BvbnNpdmUpIHJldHVybiBzaXplT2JqO1xyXG5cdFx0XHR2YXIgd2luV2lkdGggPSAkKHdpbmRvdykud2lkdGgoKTtcclxuXHRcdFx0d2luV2lkdGggPSB3aW5XaWR0aCA/IHdpbldpZHRoIDogJChkb2N1bWVudCkud2lkdGgoKTtcclxuXHRcdFx0dmFyIHdpbkggPSB3aW5kb3cuaW5uZXJIZWlnaHQgP1xyXG5cdFx0XHRcdHdpbmRvdy5pbm5lckhlaWdodCA6ICQod2luZG93KS5oZWlnaHQoKTtcclxuXHRcdFx0d2luSCA9IHdpbkggPyB3aW5IIDogJChkb2N1bWVudCkuaGVpZ2h0KCk7XHJcblx0XHRcdGlmICgoaW5zdC5vcHRpb25zLnRpdGxlc3R5bGUgPT0gXCJsZWZ0XCIgfHwgaW5zdC5vcHRpb25zLnRpdGxlc3R5bGUgPT0gXCJyaWdodFwiKSAmJiB3aW5XaWR0aCA+IGluc3Qub3B0aW9ucy5zaWRldG9ib3R0b21zY3JlZW53aWR0aCkgc2l6ZU9iai53ID0gc2l6ZU9iai53ICogMTAwIC8gaW5zdC5vcHRpb25zLmltYWdlcGVyY2VudGFnZTtcclxuXHRcdFx0dmFyIHRvcG1hcmdpbiA9ICQod2luZG93KS53aWR0aCgpIDwgaW5zdC5vcHRpb25zLm5hdmFycm93c2JvdHRvbXNjcmVlbndpZHRoID8gaW5zdC5vcHRpb25zLmJvcmRlcnRvcG1hcmdpbnNtYWxsIDogaW5zdC5vcHRpb25zLmJvcmRlcnRvcG1hcmdpbjtcclxuXHRcdFx0dmFyIGgwID0gd2luSCAtIGluc3Qub3B0aW9ucy5uYXZoZWlnaHQgLSAyICogaW5zdC5vcHRpb25zLmJvcmRlcnNpemUgLSAyICogdG9wbWFyZ2luO1xyXG5cdFx0XHRpZiAoaW5zdC5vcHRpb25zLnRpdGxlc3R5bGUgPT0gXCJib3R0b21cIikgaDAgLT0gaW5zdC5vcHRpb25zLmJhcmhlaWdodDtcclxuXHRcdFx0aWYgKChpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcImxlZnRcIiB8fCBpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcInJpZ2h0XCIpICYmIHdpbldpZHRoIDw9IGluc3Qub3B0aW9ucy5zaWRldG9ib3R0b21zY3JlZW53aWR0aCkga2VlcHJhdGlvID0gZmFsc2U7XHJcblx0XHRcdGlmIChzaXplT2JqLmggPiBoMCkge1xyXG5cdFx0XHRcdGlmIChrZWVwcmF0aW8pIHNpemVPYmoudyA9IE1hdGgucm91bmQoc2l6ZU9iai53ICogaDAgLyBzaXplT2JqLmgpO1xyXG5cdFx0XHRcdHNpemVPYmouaCA9IGgwXHJcblx0XHRcdH1cclxuXHRcdFx0dmFyIHcwID0gd2luV2lkdGggLSAyICogaW5zdC5vcHRpb25zLmJvcmRlcnNpemUgLSAyICogaW5zdC5vcHRpb25zLmJvcmRlcm1hcmdpbjtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5mdWxsc2NyZWVubW9kZSAmJiB3aW5XaWR0aCA+IGluc3Qub3B0aW9ucy5uYXZhcnJvd3Nib3R0b21zY3JlZW53aWR0aCB8fCAoaW5zdC5vcHRpb25zLmlzVG91Y2ggJiYgaW5zdC5vcHRpb25zLm5hdmFycm93c2Fsd2F5c3Nob3dvbnRvdWNoIHx8IGluc3Qub3B0aW9ucy5hbHdheXNzaG93bmF2YXJyb3dzKSAmJiB3aW5XaWR0aCA+IGluc3Qub3B0aW9ucy5uYXZhcnJvd3Nib3R0b21zY3JlZW53aWR0aCkgdzAgLT1cclxuXHRcdFx0XHQ2NDtcclxuXHRcdFx0aWYgKHNpemVPYmoudyA+IHcwKSB7XHJcblx0XHRcdFx0aWYgKGtlZXByYXRpbykgc2l6ZU9iai5oID0gTWF0aC5yb3VuZChzaXplT2JqLmggKiB3MCAvIHNpemVPYmoudyk7XHJcblx0XHRcdFx0c2l6ZU9iai53ID0gdzBcclxuXHRcdFx0fVxyXG5cdFx0XHRyZXR1cm4gc2l6ZU9ialxyXG5cdFx0fTtcclxuXHRcdGluc3Quc2hvd0RhdGEgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGlmIChpbnN0LiR0ZXh0LnRleHQoKS5sZW5ndGggPiAwKSBpbnN0LiRlbGVtRGF0YS5zaG93KCk7XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcImJvdHRvbVwiIHx8IGluc3Qub3B0aW9ucy50aXRsZXN0eWxlID09IFwiaW5zaWRlXCIpIGluc3QuJGxpZ2h0Ym94Qm94LmNzcyh7XHJcblx0XHRcdFx0aGVpZ2h0OiBcImF1dG9cIlxyXG5cdFx0XHR9KTtcclxuXHRcdFx0aWYgKGluc3QuJHRleHQudGV4dCgpLmxlbmd0aCA+IDAgJiYgaW5zdC5vcHRpb25zLnRpdGxlc3R5bGUgPT0gXCJib3R0b21cIikgaW5zdC4kZWxlbURhdGEuY3NzKHtcclxuXHRcdFx0XHRcIm1heC1oZWlnaHRcIjogaW5zdC5vcHRpb25zLmJhcmhlaWdodCArIFwicHhcIlxyXG5cdFx0XHR9KTtcclxuXHRcdFx0JChcIiNodG1sNS1saWdodGJveC1vdmVybGF5XCIsIGluc3QuJGxpZ2h0Ym94KS5jc3Moe1xyXG5cdFx0XHRcdGhlaWdodDogTWF0aC5tYXgoJCh3aW5kb3cpLmhlaWdodCgpLFxyXG5cdFx0XHRcdFx0JChkb2N1bWVudCkuaGVpZ2h0KCkpXHJcblx0XHRcdH0pO1xyXG5cdFx0XHQkKHdpbmRvdykudHJpZ2dlcihcImh0bWw1bGlnaHRib3gubGlnaHRib3hvcGVuZWRcIilcclxuXHRcdH07XHJcblx0XHRpbnN0LnJlc2l6ZUxpZ2h0Ym94ID0gZnVuY3Rpb24gKGVsZW1XLCBlbGVtSCwgYkFuaW1hdGUsIG9uRmluaXNoKSB7XHJcblx0XHRcdGluc3QuaGlkZU5hdkFycm93cygpO1xyXG5cdFx0XHR2YXIgYm94UG9zID0gaW5zdC5jYWxjQm94UG9zaXRpb24oZWxlbVcsIGVsZW1IKTtcclxuXHRcdFx0dmFyIGJveFcgPSBib3hQb3NbMF07XHJcblx0XHRcdHZhciBib3hIID0gYm94UG9zWzFdO1xyXG5cdFx0XHR2YXIgYm94VCA9IGJveFBvc1syXTtcclxuXHRcdFx0aW5zdC4kbG9hZGluZy5oaWRlKCk7XHJcblx0XHRcdGluc3QuJHdhdGVybWFyay5oaWRlKCk7XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMubmV4dEVsZW0gPD0gaW5zdC5vcHRpb25zLmN1ckVsZW0pXHJcblx0XHRcdFx0aWYgKGluc3Qub3B0aW9ucy5vbmxhc3RpdGVtICYmIHdpbmRvd1tpbnN0Lm9wdGlvbnMub25sYXN0aXRlbV0gJiYgdHlwZW9mIHdpbmRvd1tpbnN0Lm9wdGlvbnMub25sYXN0aXRlbV0gPT0gXCJmdW5jdGlvblwiKSB3aW5kb3dbaW5zdC5vcHRpb25zLm9ubGFzdGl0ZW1dKGluc3QuY3VycmVudEVsZW0pO1xyXG5cdFx0XHRpZiAoaW5zdC5vcHRpb25zLnByZXZFbGVtID49IGluc3Qub3B0aW9ucy5jdXJFbGVtKVxyXG5cdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMub25maXJzdGl0ZW0gJiYgd2luZG93W2luc3Qub3B0aW9ucy5vbmZpcnN0aXRlbV0gJiYgdHlwZW9mIHdpbmRvd1tpbnN0Lm9wdGlvbnMub25maXJzdGl0ZW1dID09IFwiZnVuY3Rpb25cIikgd2luZG93W2luc3Qub3B0aW9ucy5vbmZpcnN0aXRlbV0oaW5zdC5jdXJyZW50RWxlbSk7XHJcblx0XHRcdGlmICghaW5zdC5vcHRpb25zLmZ1bGxzY3JlZW5tb2RlICYmICghaW5zdC5vcHRpb25zLmlzVG91Y2ggfHwgIWluc3Qub3B0aW9ucy5uYXZhcnJvd3NhbHdheXNzaG93b250b3VjaCkgJiYgIWluc3Qub3B0aW9ucy5hbHdheXNzaG93bmF2YXJyb3dzKSB7XHJcblx0XHRcdFx0aW5zdC4kZWxlbS5iaW5kKFwibW91c2VlbnRlciBtb3VzZW1vdmVcIiwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0aWYgKGluc3Qub3B0aW9ucy5hcnJvd2xvb3AgJiYgaW5zdC5vcHRpb25zLnByZXZFbGVtID49IDAgfHwgIWluc3Qub3B0aW9ucy5hcnJvd2xvb3AgJiYgaW5zdC5vcHRpb25zLnByZXZFbGVtID49IDAgJiZcclxuXHRcdFx0XHRcdFx0aW5zdC5vcHRpb25zLnByZXZFbGVtIDwgaW5zdC5vcHRpb25zLmN1ckVsZW0pIGluc3QuJHByZXYuZmFkZUluKCk7XHJcblx0XHRcdFx0XHRpZiAoaW5zdC5vcHRpb25zLmFycm93bG9vcCAmJiBpbnN0Lm9wdGlvbnMubmV4dEVsZW0gPj0gMCB8fCAhaW5zdC5vcHRpb25zLmFycm93bG9vcCAmJiBpbnN0Lm9wdGlvbnMubmV4dEVsZW0gPj0gMCAmJiBpbnN0Lm9wdGlvbnMubmV4dEVsZW0gPiBpbnN0Lm9wdGlvbnMuY3VyRWxlbSkgaW5zdC4kbmV4dC5mYWRlSW4oKVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGluc3QuJGVsZW0uYmluZChcIm1vdXNlbGVhdmVcIiwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0aW5zdC4kbmV4dC5mYWRlT3V0KCk7XHJcblx0XHRcdFx0XHRpbnN0LiRwcmV2LmZhZGVPdXQoKVxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH1cclxuXHRcdFx0aW5zdC4kbGlnaHRib3hCb3guY3NzKHtcclxuXHRcdFx0XHRcIm1hcmdpbi10b3BcIjogYm94VFxyXG5cdFx0XHR9KTtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy50aXRsZXN0eWxlID09IFwibGVmdFwiIHx8IGluc3Qub3B0aW9ucy50aXRsZXN0eWxlID09IFwicmlnaHRcIikge1xyXG5cdFx0XHRcdHZhciBzcGVlZCA9IGJBbmltYXRlID8gaW5zdC5vcHRpb25zLnJlc2l6ZXNwZWVkIDogMDtcclxuXHRcdFx0XHRpZiAoYm94VyA9PSBpbnN0LiRsaWdodGJveEJveC53aWR0aCgpICYmXHJcblx0XHRcdFx0XHRib3hIID09IGluc3QuJGxpZ2h0Ym94Qm94LmhlaWdodCgpKSBzcGVlZCA9IDA7XHJcblx0XHRcdFx0aW5zdC4kbGlnaHRib3hCb3guYW5pbWF0ZSh7XHJcblx0XHRcdFx0XHR3aWR0aDogYm94V1xyXG5cdFx0XHRcdH0sIHNwZWVkKS5hbmltYXRlKHtcclxuXHRcdFx0XHRcdGhlaWdodDogYm94SFxyXG5cdFx0XHRcdH0sIHNwZWVkLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRpbnN0Lm9uQW5pbWF0ZUZpbmlzaChvbkZpbmlzaClcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdHZhciBzcGVlZCA9IGJBbmltYXRlID8gaW5zdC5vcHRpb25zLnJlc2l6ZXNwZWVkIDogMDtcclxuXHRcdFx0XHRpZiAoYm94VyA9PSBpbnN0LiRlbGVtV3JhcC53aWR0aCgpICYmIGJveEggPT0gaW5zdC4kZWxlbVdyYXAuaGVpZ2h0KCkpIHNwZWVkID0gMDtcclxuXHRcdFx0XHRpbnN0LiRsaWdodGJveEJveC5jc3Moe1xyXG5cdFx0XHRcdFx0XCJ3aWR0aFwiOiBib3hXLFxyXG5cdFx0XHRcdFx0XCJoZWlnaHRcIjogXCJhdXRvXCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpbnN0LiRlbGVtV3JhcC5hbmltYXRlKHtcclxuXHRcdFx0XHRcdHdpZHRoOiBib3hXXHJcblx0XHRcdFx0fSwgc3BlZWQpLmFuaW1hdGUoe1xyXG5cdFx0XHRcdFx0aGVpZ2h0OiBib3hIXHJcblx0XHRcdFx0fSwgc3BlZWQsIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdGluc3Qub25BbmltYXRlRmluaXNoKG9uRmluaXNoKVxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0XHRpbnN0Lm9uQW5pbWF0ZUZpbmlzaCA9IGZ1bmN0aW9uIChvbkZpbmlzaCkge1xyXG5cdFx0XHRpbnN0LiRsb2FkaW5nLnNob3coKTtcclxuXHRcdFx0aW5zdC4kd2F0ZXJtYXJrLnNob3coKTtcclxuXHRcdFx0aW5zdC4kY2xvc2Uuc2hvdygpO1xyXG5cdFx0XHRpbnN0LiRlbGVtLmNzcyh7XHJcblx0XHRcdFx0XCJiYWNrZ3JvdW5kLWNvbG9yXCI6IGluc3Qub3B0aW9ucy5iZ2NvbG9yXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRvbkZpbmlzaCgpXHJcblx0XHR9O1xyXG5cdFx0aW5zdC5yZXNldCA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5zdGFtcCkgaW5zdC4kd2F0ZXJtYXJrLmhpZGUoKTtcclxuXHRcdFx0aW5zdC5zaG93aW5nID0gZmFsc2U7XHJcblx0XHRcdGluc3QuJGltYWdlLmVtcHR5KCk7XHJcblx0XHRcdGluc3QuJHRleHQuZW1wdHkoKTtcclxuXHRcdFx0aW5zdC4kZXJyb3IuaGlkZSgpO1xyXG5cdFx0XHRpbnN0LiRsb2FkaW5nLmhpZGUoKTtcclxuXHRcdFx0aW5zdC4kaW1hZ2UuaGlkZSgpO1xyXG5cdFx0XHRpZiAoaW5zdC5vcHRpb25zLnRpdGxlc3R5bGUgPT0gXCJib3R0b21cIiB8fCBpbnN0Lm9wdGlvbnMudGl0bGVzdHlsZSA9PSBcImluc2lkZVwiKSBpbnN0LiRlbGVtRGF0YS5oaWRlKCk7XHJcblx0XHRcdGlmICghaW5zdC5vcHRpb25zLmZ1bGxzY3JlZW5tb2RlKSBpbnN0LiRjbG9zZS5oaWRlKCk7XHJcblx0XHRcdGluc3QuJGVsZW0uY3NzKHtcclxuXHRcdFx0XHRcImJhY2tncm91bmQtY29sb3JcIjogXCJcIlxyXG5cdFx0XHR9KVxyXG5cdFx0fTtcclxuXHRcdGluc3QucmVzZXROYXZpZ2F0aW9uID1cclxuXHRcdFx0ZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGluc3Qub3B0aW9ucy5uYXZoZWlnaHQgPSAwO1xyXG5cdFx0XHRcdCQoXCIuaHRtbDUtbmF2XCIpLnJlbW92ZSgpXHJcblx0XHRcdH07XHJcblx0XHRpbnN0LmZpbmlzaCA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0aWYgKCQoXCIjaHRtbDUtbGlnaHRib3gtdmlkZW9cIiwgaW5zdC4kbGlnaHRib3gpLmxlbmd0aCkgJChcIiNodG1sNS1saWdodGJveC12aWRlb1wiLCBpbnN0LiRsaWdodGJveCkuYXR0cihcInNyY1wiLCBcIlwiKTtcclxuXHRcdFx0JChcImhlYWRcIikuZmluZChcInN0eWxlXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGlmICgkKHRoaXMpLmRhdGEoXCJjcmVhdG9yXCIpID09IFwiY2Fyb3VzZWwtaHRtbDUtbGlnaHRib3hcIikgJCh0aGlzKS5yZW1vdmUoKVxyXG5cdFx0XHR9KTtcclxuXHRcdFx0aW5zdC5zbGlkZVRpbWVvdXQuc3RvcCgpO1xyXG5cdFx0XHRpbnN0LnJlc2V0KCk7XHJcblx0XHRcdGluc3QucmVzZXROYXZpZ2F0aW9uKCk7XHJcblx0XHRcdGluc3QuJGxpZ2h0Ym94LnJlbW92ZSgpO1xyXG5cdFx0XHRpbnN0LnNob3dPYmplY3RzKCk7XHJcblx0XHRcdGlmIChpbnN0Lm9wdGlvbnMub25jbG9zZWxpZ2h0Ym94ICYmIHdpbmRvd1tpbnN0Lm9wdGlvbnMub25jbG9zZWxpZ2h0Ym94XSAmJiB0eXBlb2Ygd2luZG93W2luc3Qub3B0aW9ucy5vbmNsb3NlbGlnaHRib3hdID09XHJcblx0XHRcdFx0XCJmdW5jdGlvblwiKSB3aW5kb3dbaW5zdC5vcHRpb25zLm9uY2xvc2VsaWdodGJveF0oaW5zdC5jdXJyZW50RWxlbSk7XHJcblx0XHRcdGlmIChpbnN0Lm9uTGlnaHRib3hDbG9zZWQgJiYgdHlwZW9mIGluc3Qub25MaWdodGJveENsb3NlZCA9PSBcImZ1bmN0aW9uXCIpIGluc3Qub25MaWdodGJveENsb3NlZChpbnN0LmN1cnJlbnRFbGVtKVxyXG5cdFx0fTtcclxuXHRcdGluc3QucGF1c2VTbGlkZSA9IGZ1bmN0aW9uICgpIHt9O1xyXG5cdFx0aW5zdC5wbGF5U2xpZGUgPSBmdW5jdGlvbiAoKSB7fTtcclxuXHRcdGluc3QuZ290b1NsaWRlID0gZnVuY3Rpb24gKHNsaWRlKSB7XHJcblx0XHRcdGlmIChzbGlkZSA9PSAtMSkge1xyXG5cdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMubmV4dEVsZW0gPCAwKSByZXR1cm47XHJcblx0XHRcdFx0aW5zdC5vcHRpb25zLmN1ckVsZW0gPSBpbnN0Lm9wdGlvbnMubmV4dEVsZW1cclxuXHRcdFx0fSBlbHNlIGlmIChzbGlkZSA9PSAtMikge1xyXG5cdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMucHJldkVsZW0gPCAwKSByZXR1cm47XHJcblx0XHRcdFx0aW5zdC5vcHRpb25zLmN1ckVsZW0gPSBpbnN0Lm9wdGlvbnMucHJldkVsZW1cclxuXHRcdFx0fSBlbHNlIGlmIChzbGlkZSA+PSAwKSBpbnN0Lm9wdGlvbnMuY3VyRWxlbSA9IHNsaWRlO1xyXG5cdFx0XHRpZiAoaW5zdC5hdXRvc2xpZGluZykgaW5zdC5zbGlkZVRpbWVvdXQuc3RvcCgpO1xyXG5cdFx0XHRpbnN0LmNhbGNOZXh0UHJldkVsZW0oKTtcclxuXHRcdFx0aW5zdC5yZXNldCgpO1xyXG5cdFx0XHRpbnN0LmxvYWRDdXJFbGVtKClcclxuXHRcdH07XHJcblx0XHRpbnN0LnN1cHBvcnRLZXlib2FyZCA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0JChkb2N1bWVudCkua2V5dXAoZnVuY3Rpb24gKGUpIHtcclxuXHRcdFx0XHRpZiAoIWluc3Quc2hvd2luZykgcmV0dXJuO1xyXG5cdFx0XHRcdGlmIChpbnN0Lm9wdGlvbnMuc3VwcG9ydGVzY2tleSAmJiBlLmtleUNvZGUgPT0gMjcpIGluc3QuZmluaXNoKCk7XHJcblx0XHRcdFx0ZWxzZSBpZiAoaW5zdC5vcHRpb25zLnN1cHBvcnRhcnJvd2tleXMpXHJcblx0XHRcdFx0XHRpZiAoZS5rZXlDb2RlID09IDM5KSBpbnN0LmdvdG9TbGlkZSgtMSk7XHJcblx0XHRcdFx0XHRlbHNlIGlmIChlLmtleUNvZGUgPT0gMzcpIGluc3QuZ290b1NsaWRlKC0yKVxyXG5cdFx0XHR9KVxyXG5cdFx0fTtcclxuXHRcdGluc3QuZW5hYmxlU3dpcGUgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGluc3QuJGVsZW0uY2Fyb3VzZWxUb3VjaFN3aXBlKHtcclxuXHRcdFx0XHRwcmV2ZW50V2ViQnJvd3NlcjogZmFsc2UsXHJcblx0XHRcdFx0c3dpcGVMZWZ0OiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRpbnN0LmdvdG9TbGlkZSgtMSlcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHN3aXBlUmlnaHQ6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdGluc3QuZ290b1NsaWRlKC0yKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSlcclxuXHRcdH07XHJcblx0XHRpbnN0LmhpZGVPYmplY3RzID1cclxuXHRcdFx0ZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdCQoXCJzZWxlY3QsIGVtYmVkLCBvYmplY3RcIikuY3NzKHtcclxuXHRcdFx0XHRcdFwidmlzaWJpbGl0eVwiOiBcImhpZGRlblwiXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fTtcclxuXHRcdGluc3Quc2hvd09iamVjdHMgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdCQoXCJzZWxlY3QsIGVtYmVkLCBvYmplY3RcIikuY3NzKHtcclxuXHRcdFx0XHRcInZpc2liaWxpdHlcIjogXCJ2aXNpYmxlXCJcclxuXHRcdFx0fSlcclxuXHRcdH07XHJcblx0XHRpbnN0LmVtYmVkSFRNTDVWaWRlbyA9IGZ1bmN0aW9uICgkY29udGFpbmVyLCBzcmMsIGF1dG9wbGF5KSB7XHJcblx0XHRcdCRjb250YWluZXIuaHRtbChcIjxkaXYgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtwb3NpdGlvbjpyZWxhdGl2ZTsnPjx2aWRlbyBpZD0naHRtbDUtbGlnaHRib3gtdmlkZW8nIHdpZHRoPScxMDAlJyBoZWlnaHQ9JzEwMCUnXCIgKyAoYXV0b3BsYXkgPyBcIiBhdXRvcGxheVwiIDogXCJcIikgKyAoaW5zdC5vcHRpb25zLm5hdGl2ZWh0bWw1Y29udHJvbHMgJiYgIWluc3Qub3B0aW9ucy52aWRlb2hpZGVjb250cm9scyA/IFwiIGNvbnRyb2xzPSdjb250cm9scydcIiA6IFwiXCIpICsgXCIgc3JjPSdcIiArIHNyYyArIFwiJz48L2Rpdj5cIik7XHJcblx0XHRcdGlmICghaW5zdC5vcHRpb25zLm5hdGl2ZWh0bWw1Y29udHJvbHMpIHtcclxuXHRcdFx0XHQkKFwidmlkZW9cIiwgJGNvbnRhaW5lcikuZGF0YShcInNyY1wiLCBzcmMpO1xyXG5cdFx0XHRcdCQoXCJ2aWRlb1wiLCAkY29udGFpbmVyKS5hY0hUTUw1VmlkZW9Db250cm9scyhpbnN0Lm9wdGlvbnMuc2tpbnNmb2xkZXIsIGluc3QsIGluc3Qub3B0aW9ucy52aWRlb2hpZGVjb250cm9scywgZmFsc2UsIGluc3Qub3B0aW9ucy5kZWZhdWx0dmlkZW92b2x1bWUpXHJcblx0XHRcdH1cclxuXHRcdFx0JChcInZpZGVvXCIsICRjb250YWluZXIpLnVuYmluZChcImVuZGVkXCIpLmJpbmQoXCJlbmRlZFwiLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0JCh3aW5kb3cpLnRyaWdnZXIoXCJodG1sNWxpZ2h0Ym94LnZpZGVvZmluaXNoZWRcIik7XHJcblx0XHRcdFx0aWYgKGluc3QuYXV0b3NsaWRpbmcpIGluc3QuZ290b1NsaWRlKC0xKVxyXG5cdFx0XHR9KVxyXG5cdFx0fTtcclxuXHRcdGluc3QuZW1iZWRGbGFzaCA9IGZ1bmN0aW9uICgkY29udGFpbmVyLCBzcmMsIHdtb2RlLCBmbGFzaFZhcnMpIHtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy5mbGFzaEluc3RhbGxlZCkge1xyXG5cdFx0XHRcdHZhciBodG1sT3B0aW9ucyA9IHtcclxuXHRcdFx0XHRcdHBsdWdpbnNwYWdlOiBcImh0dHA6Ly93d3cuYWRvYmUuY29tL2dvL2dldGZsYXNocGxheWVyXCIsXHJcblx0XHRcdFx0XHRxdWFsaXR5OiBcImhpZ2hcIixcclxuXHRcdFx0XHRcdGFsbG93RnVsbFNjcmVlbjogXCJ0cnVlXCIsXHJcblx0XHRcdFx0XHRhbGxvd1NjcmlwdEFjY2VzczogXCJhbHdheXNcIixcclxuXHRcdFx0XHRcdHR5cGU6IFwiYXBwbGljYXRpb24veC1zaG9ja3dhdmUtZmxhc2hcIlxyXG5cdFx0XHRcdH07XHJcblx0XHRcdFx0aHRtbE9wdGlvbnMud2lkdGggPSBcIjEwMCVcIjtcclxuXHRcdFx0XHRodG1sT3B0aW9ucy5oZWlnaHQgPSBcIjEwMCVcIjtcclxuXHRcdFx0XHRodG1sT3B0aW9ucy5zcmMgPSBzcmM7XHJcblx0XHRcdFx0aHRtbE9wdGlvbnMuZmxhc2hWYXJzID0gJC5wYXJhbShmbGFzaFZhcnMpO1xyXG5cdFx0XHRcdGh0bWxPcHRpb25zLndtb2RlID0gd21vZGU7XHJcblx0XHRcdFx0dmFyIGh0bWxTdHJpbmcgPSBcIlwiO1xyXG5cdFx0XHRcdGZvciAodmFyIGtleSBpbiBodG1sT3B0aW9ucykgaHRtbFN0cmluZyArPSBrZXkgKyBcIj1cIiArIGh0bWxPcHRpb25zW2tleV0gKyBcIiBcIjtcclxuXHRcdFx0XHQkY29udGFpbmVyLmh0bWwoXCI8ZW1iZWQgXCIgKyBodG1sU3RyaW5nICsgXCIvPlwiKVxyXG5cdFx0XHR9IGVsc2UgJGNvbnRhaW5lci5odG1sKFwiPGRpdiBjbGFzcz0naHRtbDVsaWdodGJveC1mbGFzaC1lcnJvcicgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7IHBvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246Y2VudGVyOyB3aWR0aDoxMDAlOyBsZWZ0OjBweDsgdG9wOjQwJTsnPjxkaXYgY2xhc3M9J2h0bWw1LWVycm9yJz48ZGl2PlRoZSByZXF1aXJlZCBBZG9iZSBGbGFzaCBQbGF5ZXIgcGx1Z2luIGlzIG5vdCBpbnN0YWxsZWQ8L2Rpdj48YnIgLz48ZGl2IHN0eWxlPSdkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246Y2VudGVyO3dpZHRoOjExMnB4O2hlaWdodDozM3B4O21hcmdpbjowcHggYXV0bzsnPjxhIGhyZWY9J2h0dHA6Ly93d3cuYWRvYmUuY29tL2dvL2dldGZsYXNocGxheWVyJz48aW1nIHNyYz0naHR0cDovL3d3dy5hZG9iZS5jb20vaW1hZ2VzL3NoYXJlZC9kb3dubG9hZF9idXR0b25zL2dldF9mbGFzaF9wbGF5ZXIuZ2lmJyBhbHQ9J0dldCBBZG9iZSBGbGFzaCBwbGF5ZXInIHdpZHRoPScxMTInIGhlaWdodD0nMzMnPjwvaW1nPjwvYT48L2Rpdj48L2Rpdj5cIilcclxuXHRcdH07XHJcblx0XHRpbnN0LmNoZWNrVHlwZSA9IGZ1bmN0aW9uIChocmVmKSB7XHJcblx0XHRcdGlmICghaHJlZikgcmV0dXJuIC0xO1xyXG5cdFx0XHRpZiAoaHJlZi5tYXRjaCgvXFwuKGpwZ3xnaWZ8cG5nfGJtcHxqcGVnKSguKik/JC9pKSkgcmV0dXJuIDA7XHJcblx0XHRcdGlmIChocmVmLm1hdGNoKC9bXlxcLl1cXC4oc3dmKVxccyokL2kpKSByZXR1cm4gMTtcclxuXHRcdFx0aWYgKGhyZWYubWF0Y2goL1xcLihtcDR8bTR2fG9ndnxvZ2d8d2VibSkoLiopPyQvaSkpIHJldHVybiAyO1xyXG5cdFx0XHRpZiAoaHJlZi5tYXRjaCgvXFw6XFwvXFwvLiooeW91dHViZVxcLmNvbSkvaSkgfHwgaHJlZi5tYXRjaCgvXFw6XFwvXFwvLiooeW91dHVcXC5iZSkvaSkpIHJldHVybiAzO1xyXG5cdFx0XHRpZiAoaHJlZi5tYXRjaCgvXFw6XFwvXFwvLioodmltZW9cXC5jb20pL2kpKSByZXR1cm4gNDtcclxuXHRcdFx0aWYgKGhyZWYubWF0Y2goL1xcOlxcL1xcLy4qKGRhaWx5bW90aW9uXFwuY29tKS9pKSB8fCBocmVmLm1hdGNoKC9cXDpcXC9cXC8uKihkYWlcXC5seSkvaSkpIHJldHVybiA5O1xyXG5cdFx0XHRpZiAoaHJlZi5tYXRjaCgvW15cXC5dXFwuKHBkZilcXHMqJC9pKSkgcmV0dXJuIDU7XHJcblx0XHRcdGlmIChocmVmLm1hdGNoKC9bXlxcLl1cXC4obXAzKVxccyokL2kpKSByZXR1cm4gNjtcclxuXHRcdFx0aWYgKGhyZWYubWF0Y2goL1teXFwuXVxcLihmbHYpXFxzKiQvaSkpIHJldHVybiA4O1xyXG5cdFx0XHRpZiAoaHJlZi5tYXRjaCgvXFwjXFx3Ky9pKSkgcmV0dXJuIDEwO1xyXG5cdFx0XHRyZXR1cm4gN1xyXG5cdFx0fTtcclxuXHRcdGluc3Quc2hvd0xpZ2h0Ym94ID0gZnVuY3Rpb24gKHR5cGUsIGhyZWYsIHRpdGxlLCB3aWR0aCwgaGVpZ2h0LCB3ZWJtLCBvZ2csIHRodW1ibmFpbCwgZGVzY3JpcHRpb24pIHtcclxuXHRcdFx0aW5zdC5vcHRpb25zID0gJC5leHRlbmQoaW5zdC5vcHRpb25zLCBpbnN0LmRlZmF1bHRvcHRpb25zKTtcclxuXHRcdFx0aW5zdC5pbml0KCk7XHJcblx0XHRcdGluc3QucmVzZXQoKTtcclxuXHRcdFx0aW5zdC4kbGlnaHRib3guc2hvdygpO1xyXG5cdFx0XHRpZiAoIWluc3Qub3B0aW9ucy5zdXBwb3J0Q1NTUG9zaXRpb25GaXhlZCkgaW5zdC4kbGlnaHRib3guY3NzKFwidG9wXCIsICQod2luZG93KS5zY3JvbGxUb3AoKSk7XHJcblx0XHRcdHZhciBib3hQb3MgPSBpbnN0LmNhbGNCb3hQb3NpdGlvbihpbnN0Lm9wdGlvbnMubG9hZGluZ3dpZHRoLCBpbnN0Lm9wdGlvbnMubG9hZGluZ2hlaWdodCk7XHJcblx0XHRcdHZhciBib3hXID0gYm94UG9zWzBdO1xyXG5cdFx0XHR2YXIgYm94SCA9IGJveFBvc1sxXTtcclxuXHRcdFx0dmFyIGJveFQgPVxyXG5cdFx0XHRcdGJveFBvc1syXTtcclxuXHRcdFx0aW5zdC4kbGlnaHRib3hCb3guY3NzKHtcclxuXHRcdFx0XHRcIm1hcmdpbi10b3BcIjogYm94VFxyXG5cdFx0XHR9KTtcclxuXHRcdFx0aWYgKGluc3Qub3B0aW9ucy50aXRsZXN0eWxlID09IFwibGVmdFwiIHx8IGluc3Qub3B0aW9ucy50aXRsZXN0eWxlID09IFwicmlnaHRcIikgaW5zdC4kbGlnaHRib3hCb3guY3NzKHtcclxuXHRcdFx0XHRcIndpZHRoXCI6IGJveFcsXHJcblx0XHRcdFx0XCJoZWlnaHRcIjogYm94SFxyXG5cdFx0XHR9KTtcclxuXHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0aW5zdC4kbGlnaHRib3hCb3guY3NzKHtcclxuXHRcdFx0XHRcdFwid2lkdGhcIjogYm94VyxcclxuXHRcdFx0XHRcdFwiaGVpZ2h0XCI6IFwiYXV0b1wiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aW5zdC4kZWxlbVdyYXAuY3NzKHtcclxuXHRcdFx0XHRcdFwid2lkdGhcIjogYm94VyxcclxuXHRcdFx0XHRcdFwiaGVpZ2h0XCI6IGJveEhcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9XHJcblx0XHRcdGluc3QubG9hZEVsZW0obmV3IEFycmF5KHR5cGUsIGhyZWYsIHRpdGxlLCBudWxsLCB3aWR0aCwgaGVpZ2h0LCB3ZWJtLCBvZ2csIHRodW1ibmFpbCwgZGVzY3JpcHRpb24pKVxyXG5cdFx0fTtcclxuXHRcdGluc3QuYWRkSXRlbSA9IGZ1bmN0aW9uIChocmVmLCB0aXRsZSwgZ3JvdXAsIHdpZHRoLCBoZWlnaHQsIHdlYm0sIG9nZywgdGh1bWJuYWlsLCBkZXNjcmlwdGlvbikge1xyXG5cdFx0XHR0eXBlID0gaW5zdC5jaGVja1R5cGUoaHJlZik7XHJcblx0XHRcdGluc3QuZWxlbUFycmF5LnB1c2gobmV3IEFycmF5KHR5cGUsXHJcblx0XHRcdFx0aHJlZiwgdGl0bGUsIGdyb3VwLCB3aWR0aCwgaGVpZ2h0LCB3ZWJtLCBvZ2csIHRodW1ibmFpbCwgZGVzY3JpcHRpb24pKVxyXG5cdFx0fTtcclxuXHRcdGluc3Quc2hvd0l0ZW0gPSBmdW5jdGlvbiAoaHJlZikge1xyXG5cdFx0XHRpbnN0Lm9wdGlvbnMgPSAkLmV4dGVuZChpbnN0Lm9wdGlvbnMsIGluc3QuZGVmYXVsdG9wdGlvbnMpO1xyXG5cdFx0XHRpbnN0LmluaXQoKTtcclxuXHRcdFx0aWYgKGluc3QuZWxlbUFycmF5Lmxlbmd0aCA8PSAwKSByZXR1cm4gdHJ1ZTtcclxuXHRcdFx0aW5zdC5oaWRlT2JqZWN0cygpO1xyXG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGluc3QuZWxlbUFycmF5Lmxlbmd0aDsgaSsrKVxyXG5cdFx0XHRcdGlmIChpbnN0LmVsZW1BcnJheVtpXVtFTEVNX0hSRUZdID09IGhyZWYpIGJyZWFrO1xyXG5cdFx0XHRpZiAoaSA9PSBpbnN0LmVsZW1BcnJheS5sZW5ndGgpIHJldHVybiB0cnVlO1xyXG5cdFx0XHRpbnN0Lm9wdGlvbnMuY3VyRWxlbSA9IGk7XHJcblx0XHRcdGluc3QuY2FsY05leHRQcmV2RWxlbSgpO1xyXG5cdFx0XHRpbnN0LnJlc2V0KCk7XHJcblx0XHRcdGluc3QuJGxpZ2h0Ym94LnNob3coKTtcclxuXHRcdFx0aWYgKCFpbnN0Lm9wdGlvbnMuc3VwcG9ydENTU1Bvc2l0aW9uRml4ZWQpIGluc3QuJGxpZ2h0Ym94LmNzcyhcInRvcFwiLCAkKHdpbmRvdykuc2Nyb2xsVG9wKCkpO1xyXG5cdFx0XHR2YXIgYm94UG9zID0gaW5zdC5jYWxjQm94UG9zaXRpb24oaW5zdC5vcHRpb25zLmxvYWRpbmd3aWR0aCwgaW5zdC5vcHRpb25zLmxvYWRpbmdoZWlnaHQpO1xyXG5cdFx0XHR2YXIgYm94VyA9IGJveFBvc1swXTtcclxuXHRcdFx0dmFyIGJveEggPSBib3hQb3NbMV07XHJcblx0XHRcdHZhciBib3hUID0gYm94UG9zWzJdO1xyXG5cdFx0XHRpbnN0LiRsaWdodGJveEJveC5jc3Moe1xyXG5cdFx0XHRcdFwibWFyZ2luLXRvcFwiOiBib3hUXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRpZiAoaW5zdC5vcHRpb25zLnRpdGxlc3R5bGUgPT0gXCJsZWZ0XCIgfHwgaW5zdC5vcHRpb25zLnRpdGxlc3R5bGUgPT0gXCJyaWdodFwiKSBpbnN0LiRsaWdodGJveEJveC5jc3Moe1xyXG5cdFx0XHRcdFwid2lkdGhcIjogYm94VyxcclxuXHRcdFx0XHRcImhlaWdodFwiOiBib3hIXHJcblx0XHRcdH0pO1xyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRpbnN0LiRsaWdodGJveEJveC5jc3Moe1xyXG5cdFx0XHRcdFx0XCJ3aWR0aFwiOiBib3hXLFxyXG5cdFx0XHRcdFx0XCJoZWlnaHRcIjogXCJhdXRvXCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpbnN0LiRlbGVtV3JhcC5jc3Moe1xyXG5cdFx0XHRcdFx0XCJ3aWR0aFwiOiBib3hXLFxyXG5cdFx0XHRcdFx0XCJoZWlnaHRcIjogYm94SFxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH1cclxuXHRcdFx0aW5zdC5sb2FkQ3VyRWxlbSgpO1xyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRcdH07XHJcblx0XHRyZXR1cm4gaW5zdC51bmJpbmQoXCJjbGlja1wiKS5jbGljayhpbnN0LmNsaWNrSGFuZGxlcilcclxuXHR9XHJcbn0pKGpRdWVyeSk7XHJcbihmdW5jdGlvbiAoJCkge1xyXG5cdCQuZm4uYWNIVE1MNVZpZGVvQ29udHJvbHMgPSBmdW5jdGlvbiAoc2tpbkZvbGRlciwgcGFyZW50SW5zdCwgaGlkZWNvbnRyb2xzLCBoaWRlcGxheWJ1dHRvbiwgZGVmYXVsdHZvbHVtZSkge1xyXG5cdFx0dmFyIGlzVG91Y2ggPSBcIm9udG91Y2hzdGFydFwiIGluIHdpbmRvdztcclxuXHRcdHZhciBlU3RhcnQgPSBpc1RvdWNoID8gXCJ0b3VjaHN0YXJ0XCIgOiBcIm1vdXNlZG93blwiO1xyXG5cdFx0dmFyIGVNb3ZlID0gaXNUb3VjaCA/IFwidG91Y2htb3ZlXCIgOiBcIm1vdXNlbW92ZVwiO1xyXG5cdFx0dmFyIGVDYW5jZWwgPSBpc1RvdWNoID8gXCJ0b3VjaGNhbmNlbFwiIDogXCJtb3VzZXVwXCI7XHJcblx0XHR2YXIgZUNsaWNrID0gXCJjbGlja1wiO1xyXG5cdFx0dmFyIEJVVFRPTl9TSVpFID0gMzI7XHJcblx0XHR2YXIgQkFSX0hFSUdIVCA9IGlzVG91Y2ggPyA0OCA6IDM2O1xyXG5cdFx0dmFyIGhpZGVDb250cm9sc1RpbWVySWQgPSBudWxsO1xyXG5cdFx0dmFyIGhpZGVWb2x1bWVCYXJUaW1lb3V0SWQgPSBudWxsO1xyXG5cdFx0dmFyIHNsaWRlckRyYWdnaW5nID0gZmFsc2U7XHJcblx0XHR2YXIgaXNGdWxsc2NyZWVuID0gZmFsc2U7XHJcblx0XHR2YXIgdXNlckFjdGl2ZSA9IHRydWU7XHJcblx0XHR2YXIgaXNJUGhvbmUgPSBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9pUG9kL2kpICE9XHJcblx0XHRcdG51bGwgfHwgbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvaVBob25lL2kpICE9IG51bGw7XHJcblx0XHR2YXIgaXNIZCA9ICQodGhpcykuZGF0YShcImlzaGRcIik7XHJcblx0XHR2YXIgaGQgPSAkKHRoaXMpLmRhdGEoXCJoZFwiKTtcclxuXHRcdHZhciBzcmMgPSAkKHRoaXMpLmRhdGEoXCJzcmNcIik7XHJcblx0XHR2YXIgJHZpZGVvT2JqID0gJCh0aGlzKTtcclxuXHRcdCR2aWRlb09iai5nZXQoMCkucmVtb3ZlQXR0cmlidXRlKFwiY29udHJvbHNcIik7XHJcblx0XHRpZiAoaXNJUGhvbmUpIHtcclxuXHRcdFx0dmFyIGggPSAkdmlkZW9PYmouaGVpZ2h0KCkgLSBCQVJfSEVJR0hUO1xyXG5cdFx0XHQkdmlkZW9PYmouY3NzKHtcclxuXHRcdFx0XHRoZWlnaHQ6IGhcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHRcdHZhciAkdmlkZW9QbGF5ID0gJChcIjxkaXYgY2xhc3M9J2h0bWw1Ym94VmlkZW9QbGF5Jz48L2Rpdj5cIik7XHJcblx0XHRpZiAoIWlzSVBob25lKSB7XHJcblx0XHRcdCR2aWRlb09iai5hZnRlcigkdmlkZW9QbGF5KTtcclxuXHRcdFx0JHZpZGVvUGxheS5jc3Moe1xyXG5cdFx0XHRcdHBvc2l0aW9uOiBcImFic29sdXRlXCIsXHJcblx0XHRcdFx0dG9wOiBcIjUwJVwiLFxyXG5cdFx0XHRcdGxlZnQ6IFwiNTAlXCIsXHJcblx0XHRcdFx0ZGlzcGxheTogXCJibG9ja1wiLFxyXG5cdFx0XHRcdGN1cnNvcjogXCJwb2ludGVyXCIsXHJcblx0XHRcdFx0d2lkdGg6IDY0LFxyXG5cdFx0XHRcdGhlaWdodDogNjQsXHJcblx0XHRcdFx0XCJtYXJnaW4tbGVmdFwiOiAtMzIsXHJcblx0XHRcdFx0XCJtYXJnaW4tdG9wXCI6IC0zMixcclxuXHRcdFx0XHRcImJhY2tncm91bmQtaW1hZ2VcIjogXCJ1cmwoJ1wiICsgc2tpbkZvbGRlciArIFwiaW1nL2h0bWw1Ym94cGxheWVyX3BsYXl2aWRlby5wbmdcIiArIFwiJylcIixcclxuXHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogXCJjZW50ZXIgY2VudGVyXCIsXHJcblx0XHRcdFx0XCJiYWNrZ3JvdW5kLXJlcGVhdFwiOiBcIm5vLXJlcGVhdFwiXHJcblx0XHRcdH0pLmJpbmQoZUNsaWNrLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0JHZpZGVvT2JqLmdldCgwKS5wbGF5KClcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHRcdHZhciAkdmlkZW9GdWxsc2NyZWVuQmcgPSAkKFwiPGRpdiBjbGFzcz0naHRtbDVib3hWaWRlb0Z1bGxzY3JlZW5CZyc+PC9kaXY+XCIpO1xyXG5cdFx0dmFyICR2aWRlb0NvbnRyb2xzID0gJChcIjxkaXYgY2xhc3M9J2h0bWw1Ym94VmlkZW9Db250cm9scyc+XCIgKyBcIjxkaXYgY2xhc3M9J2h0bWw1Ym94VmlkZW9Db250cm9sc0JnJz48L2Rpdj5cIiArIFwiPGRpdiBjbGFzcz0naHRtbDVib3hQbGF5UGF1c2UnPlwiICsgXCI8ZGl2IGNsYXNzPSdodG1sNWJveFBsYXknPjwvZGl2PlwiICsgXCI8ZGl2IGNsYXNzPSdodG1sNWJveFBhdXNlJz48L2Rpdj5cIiArIFwiPC9kaXY+XCIgK1xyXG5cdFx0XHRcIjxkaXYgY2xhc3M9J2h0bWw1Ym94VGltZUN1cnJlbnQnPi0tOi0tPC9kaXY+XCIgKyBcIjxkaXYgY2xhc3M9J2h0bWw1Ym94RnVsbHNjcmVlbic+PC9kaXY+XCIgKyBcIjxkaXYgY2xhc3M9J2h0bWw1Ym94SEQnPjwvZGl2PlwiICsgXCI8ZGl2IGNsYXNzPSdodG1sNWJveFZvbHVtZSc+XCIgKyBcIjxkaXYgY2xhc3M9J2h0bWw1Ym94Vm9sdW1lQnV0dG9uJz48L2Rpdj5cIiArIFwiPGRpdiBjbGFzcz0naHRtbDVib3hWb2x1bWVCYXInPlwiICsgXCI8ZGl2IGNsYXNzPSdodG1sNWJveFZvbHVtZUJhckJnJz5cIiArIFwiPGRpdiBjbGFzcz0naHRtbDVib3hWb2x1bWVCYXJBY3RpdmUnPjwvZGl2PlwiICsgXCI8L2Rpdj5cIiArIFwiPC9kaXY+XCIgKyBcIjwvZGl2PlwiICsgXCI8ZGl2IGNsYXNzPSdodG1sNWJveFRpbWVUb3RhbCc+LS06LS08L2Rpdj5cIiArIFwiPGRpdiBjbGFzcz0naHRtbDVib3hTZWVrZXInPlwiICsgXCI8ZGl2IGNsYXNzPSdodG1sNWJveFNlZWtlckJ1ZmZlcic+PC9kaXY+XCIgKyBcIjxkaXYgY2xhc3M9J2h0bWw1Ym94U2Vla2VyUGxheSc+PC9kaXY+XCIgKyBcIjxkaXYgY2xhc3M9J2h0bWw1Ym94U2Vla2VySGFuZGxlcic+PC9kaXY+XCIgK1xyXG5cdFx0XHRcIjwvZGl2PlwiICsgXCI8ZGl2IHN0eWxlPSdjbGVhcjpib3RoOyc+PC9kaXY+XCIgKyBcIjwvZGl2PlwiKTtcclxuXHRcdCR2aWRlb09iai5hZnRlcigkdmlkZW9Db250cm9scyk7XHJcblx0XHQkdmlkZW9PYmouYWZ0ZXIoJHZpZGVvRnVsbHNjcmVlbkJnKTtcclxuXHRcdCR2aWRlb0Z1bGxzY3JlZW5CZy5jc3Moe1xyXG5cdFx0XHRkaXNwbGF5OiBcIm5vbmVcIixcclxuXHRcdFx0cG9zaXRpb246IFwiZml4ZWRcIixcclxuXHRcdFx0bGVmdDogMCxcclxuXHRcdFx0dG9wOiAwLFxyXG5cdFx0XHRib3R0b206IDAsXHJcblx0XHRcdHJpZ2h0OiAwLFxyXG5cdFx0XHRcInotaW5kZXhcIjogMjE0NzQ4MzY0N1xyXG5cdFx0fSk7XHJcblx0XHQkdmlkZW9Db250cm9scy5jc3Moe1xyXG5cdFx0XHRkaXNwbGF5OiBcImJsb2NrXCIsXHJcblx0XHRcdHBvc2l0aW9uOiBcImFic29sdXRlXCIsXHJcblx0XHRcdHdpZHRoOiBcIjEwMCVcIixcclxuXHRcdFx0aGVpZ2h0OiBCQVJfSEVJR0hULFxyXG5cdFx0XHRsZWZ0OiAwLFxyXG5cdFx0XHRib3R0b206IDAsXHJcblx0XHRcdHJpZ2h0OiAwLFxyXG5cdFx0XHRcIm1heC13aWR0aFwiOiBcIjY0MHB4XCIsXHJcblx0XHRcdG1hcmdpbjogXCIwIGF1dG9cIlxyXG5cdFx0fSk7XHJcblx0XHR2YXIgdXNlckFjdGl2YXRlID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0XHR1c2VyQWN0aXZlID0gdHJ1ZVxyXG5cdFx0fTtcclxuXHRcdCR2aWRlb09iai5iaW5kKGVDbGljaywgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHR1c2VyQWN0aXZlID0gdHJ1ZVxyXG5cdFx0fSkuaG92ZXIoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHR1c2VyQWN0aXZlID1cclxuXHRcdFx0XHR0cnVlXHJcblx0XHR9LCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdHVzZXJBY3RpdmUgPSBmYWxzZVxyXG5cdFx0fSk7XHJcblx0XHRpZiAoIWhpZGVjb250cm9scykgc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRpZiAodXNlckFjdGl2ZSkge1xyXG5cdFx0XHRcdCR2aWRlb0NvbnRyb2xzLnNob3coKTtcclxuXHRcdFx0XHR1c2VyQWN0aXZlID0gZmFsc2U7XHJcblx0XHRcdFx0Y2xlYXJUaW1lb3V0KGhpZGVDb250cm9sc1RpbWVySWQpO1xyXG5cdFx0XHRcdGhpZGVDb250cm9sc1RpbWVySWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdGlmICghJHZpZGVvT2JqLmdldCgwKS5wYXVzZWQpICR2aWRlb0NvbnRyb2xzLmZhZGVPdXQoKVxyXG5cdFx0XHRcdH0sIDVFMylcclxuXHRcdFx0fVxyXG5cdFx0fSwgMjUwKTtcclxuXHRcdCQoXCIuaHRtbDVib3hWaWRlb0NvbnRyb2xzQmdcIiwgJHZpZGVvQ29udHJvbHMpLmNzcyh7XHJcblx0XHRcdGRpc3BsYXk6IFwiYmxvY2tcIixcclxuXHRcdFx0cG9zaXRpb246IFwiYWJzb2x1dGVcIixcclxuXHRcdFx0d2lkdGg6IFwiMTAwJVwiLFxyXG5cdFx0XHRoZWlnaHQ6IFwiMTAwJVwiLFxyXG5cdFx0XHRsZWZ0OiAwLFxyXG5cdFx0XHR0b3A6IDAsXHJcblx0XHRcdFwiYmFja2dyb3VuZC1jb2xvclwiOiBcIiMwMDAwMDBcIixcclxuXHRcdFx0b3BhY2l0eTogMC43LFxyXG5cdFx0XHRmaWx0ZXI6IFwiYWxwaGEob3BhY2l0eT03MClcIlxyXG5cdFx0fSk7XHJcblx0XHQkKFwiLmh0bWw1Ym94UGxheVBhdXNlXCIsICR2aWRlb0NvbnRyb2xzKS5jc3Moe1xyXG5cdFx0XHRkaXNwbGF5OiBcImJsb2NrXCIsXHJcblx0XHRcdHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXHJcblx0XHRcdHdpZHRoOiBCVVRUT05fU0laRSArIFwicHhcIixcclxuXHRcdFx0aGVpZ2h0OiBCVVRUT05fU0laRSArIFwicHhcIixcclxuXHRcdFx0bWFyZ2luOiBNYXRoLmZsb29yKChCQVJfSEVJR0hUIC0gQlVUVE9OX1NJWkUpIC8gMiksXHJcblx0XHRcdFwiZmxvYXRcIjogXCJsZWZ0XCJcclxuXHRcdH0pO1xyXG5cdFx0dmFyICR2aWRlb0J0blBsYXkgPSAkKFwiLmh0bWw1Ym94UGxheVwiLCAkdmlkZW9Db250cm9scyk7XHJcblx0XHR2YXIgJHZpZGVvQnRuUGF1c2UgPSAkKFwiLmh0bWw1Ym94UGF1c2VcIiwgJHZpZGVvQ29udHJvbHMpO1xyXG5cdFx0JHZpZGVvQnRuUGxheS5jc3Moe1xyXG5cdFx0XHRkaXNwbGF5OiBcImJsb2NrXCIsXHJcblx0XHRcdHBvc2l0aW9uOiBcImFic29sdXRlXCIsXHJcblx0XHRcdHRvcDogMCxcclxuXHRcdFx0bGVmdDogMCxcclxuXHRcdFx0d2lkdGg6IEJVVFRPTl9TSVpFICsgXCJweFwiLFxyXG5cdFx0XHRoZWlnaHQ6IEJVVFRPTl9TSVpFICsgXCJweFwiLFxyXG5cdFx0XHRjdXJzb3I6IFwicG9pbnRlclwiLFxyXG5cdFx0XHRcImJhY2tncm91bmQtaW1hZ2VcIjogXCJ1cmwoJ1wiICsgc2tpbkZvbGRlciArIFwiaW1nL2h0bWw1Ym94cGxheWVyX3BsYXlwYXVzZS5wbmdcIiArIFwiJylcIixcclxuXHRcdFx0XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCI6IFwidG9wIGxlZnRcIlxyXG5cdFx0fSkuaG92ZXIoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdCQodGhpcykuY3NzKHtcclxuXHRcdFx0XHRcdFwiYmFja2dyb3VuZC1wb3NpdGlvblwiOiBcImJvdHRvbSBsZWZ0XCJcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0JCh0aGlzKS5jc3Moe1xyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCI6IFwidG9wIGxlZnRcIlxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH0pLmJpbmQoZUNsaWNrLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdCR2aWRlb09iai5nZXQoMCkucGxheSgpXHJcblx0XHR9KTtcclxuXHRcdCR2aWRlb0J0blBhdXNlLmNzcyh7XHJcblx0XHRcdGRpc3BsYXk6IFwibm9uZVwiLFxyXG5cdFx0XHRwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxyXG5cdFx0XHR0b3A6IDAsXHJcblx0XHRcdGxlZnQ6IDAsXHJcblx0XHRcdHdpZHRoOiBCVVRUT05fU0laRSArIFwicHhcIixcclxuXHRcdFx0aGVpZ2h0OiBCVVRUT05fU0laRSArIFwicHhcIixcclxuXHRcdFx0Y3Vyc29yOiBcInBvaW50ZXJcIixcclxuXHRcdFx0XCJiYWNrZ3JvdW5kLWltYWdlXCI6IFwidXJsKCdcIiArIHNraW5Gb2xkZXIgKyBcImltZy9odG1sNWJveHBsYXllcl9wbGF5cGF1c2UucG5nXCIgKyBcIicpXCIsXHJcblx0XHRcdFwiYmFja2dyb3VuZC1wb3NpdGlvblwiOiBcInRvcCByaWdodFwiXHJcblx0XHR9KS5ob3ZlcihmdW5jdGlvbiAoKSB7XHJcblx0XHRcdCQodGhpcykuY3NzKHtcclxuXHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogXCJib3R0b20gcmlnaHRcIlxyXG5cdFx0XHR9KVxyXG5cdFx0fSwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHQkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCI6IFwidG9wIHJpZ2h0XCJcclxuXHRcdFx0fSlcclxuXHRcdH0pLmJpbmQoZUNsaWNrLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdCR2aWRlb09iai5nZXQoMCkucGF1c2UoKVxyXG5cdFx0fSk7XHJcblx0XHR2YXIgJHZpZGVvVGltZUN1cnJlbnQgPSAkKFwiLmh0bWw1Ym94VGltZUN1cnJlbnRcIiwgJHZpZGVvQ29udHJvbHMpO1xyXG5cdFx0dmFyICR2aWRlb1RpbWVUb3RhbCA9ICQoXCIuaHRtbDVib3hUaW1lVG90YWxcIiwgJHZpZGVvQ29udHJvbHMpO1xyXG5cdFx0dmFyICR2aWRlb1NlZWtlciA9ICQoXCIuaHRtbDVib3hTZWVrZXJcIiwgJHZpZGVvQ29udHJvbHMpO1xyXG5cdFx0dmFyICR2aWRlb1NlZWtlclBsYXkgPSAkKFwiLmh0bWw1Ym94U2Vla2VyUGxheVwiLCAkdmlkZW9Db250cm9scyk7XHJcblx0XHR2YXIgJHZpZGVvU2Vla2VyQnVmZmVyID0gJChcIi5odG1sNWJveFNlZWtlckJ1ZmZlclwiLCAkdmlkZW9Db250cm9scyk7XHJcblx0XHR2YXIgJHZpZGVvU2Vla2VySGFuZGxlciA9ICQoXCIuaHRtbDVib3hTZWVrZXJIYW5kbGVyXCIsICR2aWRlb0NvbnRyb2xzKTtcclxuXHRcdCR2aWRlb1RpbWVDdXJyZW50LmNzcyh7XHJcblx0XHRcdGRpc3BsYXk6IFwiYmxvY2tcIixcclxuXHRcdFx0cG9zaXRpb246IFwicmVsYXRpdmVcIixcclxuXHRcdFx0XCJmbG9hdFwiOiBcImxlZnRcIixcclxuXHRcdFx0XCJsaW5lLWhlaWdodFwiOiBCQVJfSEVJR0hUICsgXCJweFwiLFxyXG5cdFx0XHRcImZvbnQtd2VpZ2h0XCI6IFwibm9ybWFsXCIsXHJcblx0XHRcdFwiZm9udC1zaXplXCI6IFwiMTJweFwiLFxyXG5cdFx0XHRtYXJnaW46IFwiMCA4cHhcIixcclxuXHRcdFx0XCJmb250LWZhbWlseVwiOiBcIkFyaWFsLCBIZWx2ZXRpY2EsIHNhbnMtc2VyaWZcIixcclxuXHRcdFx0Y29sb3I6IFwiI2ZmZlwiXHJcblx0XHR9KTtcclxuXHRcdCR2aWRlb1RpbWVUb3RhbC5jc3Moe1xyXG5cdFx0XHRkaXNwbGF5OiBcImJsb2NrXCIsXHJcblx0XHRcdHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXHJcblx0XHRcdFwiZmxvYXRcIjogXCJyaWdodFwiLFxyXG5cdFx0XHRcImxpbmUtaGVpZ2h0XCI6IEJBUl9IRUlHSFQgKyBcInB4XCIsXHJcblx0XHRcdFwiZm9udC13ZWlnaHRcIjogXCJub3JtYWxcIixcclxuXHRcdFx0XCJmb250LXNpemVcIjogXCIxMnB4XCIsXHJcblx0XHRcdG1hcmdpbjogXCIwIDhweFwiLFxyXG5cdFx0XHRcImZvbnQtZmFtaWx5XCI6IFwiQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZlwiLFxyXG5cdFx0XHRjb2xvcjogXCIjZmZmXCJcclxuXHRcdH0pO1xyXG5cdFx0JHZpZGVvU2Vla2VyLmNzcyh7XHJcblx0XHRcdGRpc3BsYXk6IFwiYmxvY2tcIixcclxuXHRcdFx0Y3Vyc29yOiBcInBvaW50ZXJcIixcclxuXHRcdFx0b3ZlcmZsb3c6IFwiaGlkZGVuXCIsXHJcblx0XHRcdHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXHJcblx0XHRcdGhlaWdodDogXCIxMHB4XCIsXHJcblx0XHRcdFwiYmFja2dyb3VuZC1jb2xvclwiOiBcIiMyMjJcIixcclxuXHRcdFx0bWFyZ2luOiBNYXRoLmZsb29yKChCQVJfSEVJR0hUIC0gMTApIC8gMikgKyBcInB4IDRweFwiXHJcblx0XHR9KS5iaW5kKGVTdGFydCwgZnVuY3Rpb24gKGUpIHtcclxuXHRcdFx0dmFyIGUwID1cclxuXHRcdFx0XHRpc1RvdWNoID8gZS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF0gOiBlO1xyXG5cdFx0XHR2YXIgcG9zID0gZTAucGFnZVggLSAkdmlkZW9TZWVrZXIub2Zmc2V0KCkubGVmdDtcclxuXHRcdFx0JHZpZGVvU2Vla2VyUGxheS5jc3Moe1xyXG5cdFx0XHRcdHdpZHRoOiBwb3NcclxuXHRcdFx0fSk7XHJcblx0XHRcdCR2aWRlb09iai5nZXQoMCkuY3VycmVudFRpbWUgPSBwb3MgKiAkdmlkZW9PYmouZ2V0KDApLmR1cmF0aW9uIC8gJHZpZGVvU2Vla2VyLndpZHRoKCk7XHJcblx0XHRcdCR2aWRlb1NlZWtlci5iaW5kKGVNb3ZlLCBmdW5jdGlvbiAoZSkge1xyXG5cdFx0XHRcdHZhciBlMCA9IGlzVG91Y2ggPyBlLm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXSA6IGU7XHJcblx0XHRcdFx0dmFyIHBvcyA9IGUwLnBhZ2VYIC0gJHZpZGVvU2Vla2VyLm9mZnNldCgpLmxlZnQ7XHJcblx0XHRcdFx0JHZpZGVvU2Vla2VyUGxheS5jc3Moe1xyXG5cdFx0XHRcdFx0d2lkdGg6IHBvc1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdCR2aWRlb09iai5nZXQoMCkuY3VycmVudFRpbWUgPSBwb3MgKiAkdmlkZW9PYmouZ2V0KDApLmR1cmF0aW9uIC8gJHZpZGVvU2Vla2VyLndpZHRoKClcclxuXHRcdFx0fSlcclxuXHRcdH0pLmJpbmQoZUNhbmNlbCwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHQkdmlkZW9TZWVrZXIudW5iaW5kKGVNb3ZlKVxyXG5cdFx0fSk7XHJcblx0XHQkdmlkZW9TZWVrZXJCdWZmZXIuY3NzKHtcclxuXHRcdFx0ZGlzcGxheTogXCJibG9ja1wiLFxyXG5cdFx0XHRwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxyXG5cdFx0XHRsZWZ0OiAwLFxyXG5cdFx0XHR0b3A6IDAsXHJcblx0XHRcdGhlaWdodDogXCIxMDAlXCIsXHJcblx0XHRcdFwiYmFja2dyb3VuZC1jb2xvclwiOiBcIiM0NDRcIlxyXG5cdFx0fSk7XHJcblx0XHQkdmlkZW9TZWVrZXJQbGF5LmNzcyh7XHJcblx0XHRcdGRpc3BsYXk6IFwiYmxvY2tcIixcclxuXHRcdFx0cG9zaXRpb246IFwiYWJzb2x1dGVcIixcclxuXHRcdFx0bGVmdDogMCxcclxuXHRcdFx0dG9wOiAwLFxyXG5cdFx0XHRoZWlnaHQ6IFwiMTAwJVwiLFxyXG5cdFx0XHRcImJhY2tncm91bmQtY29sb3JcIjogXCIjZmNjNTAwXCJcclxuXHRcdH0pO1xyXG5cdFx0aWYgKCFpc0lQaG9uZSAmJiAoJHZpZGVvT2JqLmdldCgwKS5yZXF1ZXN0RnVsbHNjcmVlbiB8fCAkdmlkZW9PYmouZ2V0KDApLndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuIHx8ICR2aWRlb09iai5nZXQoMCkubW96UmVxdWVzdEZ1bGxTY3JlZW4gfHwgJHZpZGVvT2JqLmdldCgwKS53ZWJraXRFbnRlckZ1bGxTY3JlZW4gfHwgJHZpZGVvT2JqLmdldCgwKS5tc1JlcXVlc3RGdWxsc2NyZWVuKSkge1xyXG5cdFx0XHR2YXIgc3dpdGNoU2NyZWVuID0gZnVuY3Rpb24gKGZ1bGxzY3JlZW4pIHtcclxuXHRcdFx0XHRpZiAoZnVsbHNjcmVlbikge1xyXG5cdFx0XHRcdFx0aWYgKCR2aWRlb09iai5nZXQoMCkucmVxdWVzdEZ1bGxzY3JlZW4pICR2aWRlb09iai5nZXQoMCkucmVxdWVzdEZ1bGxzY3JlZW4oKTtcclxuXHRcdFx0XHRcdGVsc2UgaWYgKCR2aWRlb09iai5nZXQoMCkud2Via2l0UmVxdWVzdEZ1bGxTY3JlZW4pICR2aWRlb09iai5nZXQoMCkud2Via2l0UmVxdWVzdEZ1bGxTY3JlZW4oKTtcclxuXHRcdFx0XHRcdGVsc2UgaWYgKCR2aWRlb09iai5nZXQoMCkubW96UmVxdWVzdEZ1bGxTY3JlZW4pICR2aWRlb09iai5nZXQoMCkubW96UmVxdWVzdEZ1bGxTY3JlZW4oKTtcclxuXHRcdFx0XHRcdGVsc2UgaWYgKCR2aWRlb09iai5nZXQoMCkud2Via2l0RW50ZXJGdWxsU2NyZWVuKSAkdmlkZW9PYmouZ2V0KDApLndlYmtpdEVudGVyRnVsbFNjcmVlbigpO1xyXG5cdFx0XHRcdFx0aWYgKCR2aWRlb09iai5nZXQoMCkubXNSZXF1ZXN0RnVsbHNjcmVlbikgJHZpZGVvT2JqLmdldCgwKS5tc1JlcXVlc3RGdWxsc2NyZWVuKClcclxuXHRcdFx0XHR9IGVsc2UgaWYgKGRvY3VtZW50LmNhbmNlbEZ1bGxTY3JlZW4pIGRvY3VtZW50LmNhbmNlbEZ1bGxTY3JlZW4oKTtcclxuXHRcdFx0XHRlbHNlIGlmIChkb2N1bWVudC5tb3pDYW5jZWxGdWxsU2NyZWVuKSBkb2N1bWVudC5tb3pDYW5jZWxGdWxsU2NyZWVuKCk7XHJcblx0XHRcdFx0ZWxzZSBpZiAoZG9jdW1lbnQud2Via2l0Q2FuY2VsRnVsbFNjcmVlbikgZG9jdW1lbnQud2Via2l0Q2FuY2VsRnVsbFNjcmVlbigpO1xyXG5cdFx0XHRcdGVsc2UgaWYgKGRvY3VtZW50LndlYmtpdEV4aXRGdWxsc2NyZWVuKSBkb2N1bWVudC53ZWJraXRFeGl0RnVsbHNjcmVlbigpO1xyXG5cdFx0XHRcdGVsc2UgaWYgKGRvY3VtZW50Lm1zRXhpdEZ1bGxzY3JlZW4pIGRvY3VtZW50Lm1zRXhpdEZ1bGxzY3JlZW4oKVxyXG5cdFx0XHR9O1xyXG5cdFx0XHR2YXIgc3dpdGNoU2NyZWVuQ1NTID0gZnVuY3Rpb24gKGZ1bGxzY3JlZW4pIHtcclxuXHRcdFx0XHQkdmlkZW9Db250cm9scy5jc3Moe1xyXG5cdFx0XHRcdFx0cG9zaXRpb246IGZ1bGxzY3JlZW4gPyBcImZpeGVkXCIgOiBcImFic29sdXRlXCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHR2YXIgYmFja2dyb3VuZFBvc1kgPSAkdmlkZW9GdWxsc2NyZWVuLmNzcyhcImJhY2tncm91bmQtcG9zaXRpb25cIikgPyAkdmlkZW9GdWxsc2NyZWVuLmNzcyhcImJhY2tncm91bmQtcG9zaXRpb25cIikuc3BsaXQoXCIgXCIpWzFdIDogJHZpZGVvRnVsbHNjcmVlbi5jc3MoXCJiYWNrZ3JvdW5kLXBvc2l0aW9uLXlcIik7XHJcblx0XHRcdFx0JHZpZGVvRnVsbHNjcmVlbi5jc3Moe1xyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCI6IChmdWxsc2NyZWVuID8gXCJyaWdodFwiIDogXCJsZWZ0XCIpICsgXCIgXCIgKyBiYWNrZ3JvdW5kUG9zWVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdCR2aWRlb0Z1bGxzY3JlZW5CZy5jc3Moe1xyXG5cdFx0XHRcdFx0ZGlzcGxheTogZnVsbHNjcmVlbiA/XHJcblx0XHRcdFx0XHRcdFwiYmxvY2tcIiA6IFwibm9uZVwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aWYgKGZ1bGxzY3JlZW4pIHtcclxuXHRcdFx0XHRcdCQoZG9jdW1lbnQpLmJpbmQoXCJtb3VzZW1vdmVcIiwgdXNlckFjdGl2YXRlKTtcclxuXHRcdFx0XHRcdCR2aWRlb0NvbnRyb2xzLmNzcyh7XHJcblx0XHRcdFx0XHRcdFwiei1pbmRleFwiOiAyMTQ3NDgzNjQ3XHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHQkKGRvY3VtZW50KS51bmJpbmQoXCJtb3VzZW1vdmVcIiwgdXNlckFjdGl2YXRlKTtcclxuXHRcdFx0XHRcdCR2aWRlb0NvbnRyb2xzLmNzcyh7XHJcblx0XHRcdFx0XHRcdFwiei1pbmRleFwiOiBcIlwiXHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fTtcclxuXHRcdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImZ1bGxzY3JlZW5jaGFuZ2VcIiwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGlzRnVsbHNjcmVlbiA9IGRvY3VtZW50LmZ1bGxzY3JlZW47XHJcblx0XHRcdFx0c3dpdGNoU2NyZWVuQ1NTKGRvY3VtZW50LmZ1bGxzY3JlZW4pXHJcblx0XHRcdH0sIGZhbHNlKTtcclxuXHRcdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIm1vemZ1bGxzY3JlZW5jaGFuZ2VcIiwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGlzRnVsbHNjcmVlbiA9IGRvY3VtZW50Lm1vekZ1bGxTY3JlZW47XHJcblx0XHRcdFx0c3dpdGNoU2NyZWVuQ1NTKGRvY3VtZW50Lm1vekZ1bGxTY3JlZW4pXHJcblx0XHRcdH0sIGZhbHNlKTtcclxuXHRcdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcIndlYmtpdGZ1bGxzY3JlZW5jaGFuZ2VcIixcclxuXHRcdFx0XHRmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRpc0Z1bGxzY3JlZW4gPSBkb2N1bWVudC53ZWJraXRJc0Z1bGxTY3JlZW47XHJcblx0XHRcdFx0XHRzd2l0Y2hTY3JlZW5DU1MoZG9jdW1lbnQud2Via2l0SXNGdWxsU2NyZWVuKVxyXG5cdFx0XHRcdH0sIGZhbHNlKTtcclxuXHRcdFx0JHZpZGVvT2JqLmdldCgwKS5hZGRFdmVudExpc3RlbmVyKFwid2Via2l0YmVnaW5mdWxsc2NyZWVuXCIsIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRpc0Z1bGxzY3JlZW4gPSB0cnVlXHJcblx0XHRcdH0sIGZhbHNlKTtcclxuXHRcdFx0JHZpZGVvT2JqLmdldCgwKS5hZGRFdmVudExpc3RlbmVyKFwid2Via2l0ZW5kZnVsbHNjcmVlblwiLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0aXNGdWxsc2NyZWVuID0gZmFsc2VcclxuXHRcdFx0fSwgZmFsc2UpO1xyXG5cdFx0XHQkKFwiaGVhZFwiKS5hcHBlbmQoXCI8c3R5bGUgdHlwZT0ndGV4dC9jc3MnPnZpZGVvOjotd2Via2l0LW1lZGlhLWNvbnRyb2xzIHsgZGlzcGxheTpub25lICFpbXBvcnRhbnQ7IH08L3N0eWxlPlwiKTtcclxuXHRcdFx0dmFyICR2aWRlb0Z1bGxzY3JlZW4gPSAkKFwiLmh0bWw1Ym94RnVsbHNjcmVlblwiLCAkdmlkZW9Db250cm9scyk7XHJcblx0XHRcdCR2aWRlb0Z1bGxzY3JlZW4uY3NzKHtcclxuXHRcdFx0XHRkaXNwbGF5OiBcImJsb2NrXCIsXHJcblx0XHRcdFx0cG9zaXRpb246IFwicmVsYXRpdmVcIixcclxuXHRcdFx0XHRcImZsb2F0XCI6IFwicmlnaHRcIixcclxuXHRcdFx0XHR3aWR0aDogQlVUVE9OX1NJWkUgKyBcInB4XCIsXHJcblx0XHRcdFx0aGVpZ2h0OiBCVVRUT05fU0laRSArIFwicHhcIixcclxuXHRcdFx0XHRtYXJnaW46IE1hdGguZmxvb3IoKEJBUl9IRUlHSFQgLSBCVVRUT05fU0laRSkgLyAyKSxcclxuXHRcdFx0XHRjdXJzb3I6IFwicG9pbnRlclwiLFxyXG5cdFx0XHRcdFwiYmFja2dyb3VuZC1pbWFnZVwiOiBcInVybCgnXCIgKyBza2luRm9sZGVyICsgXCJpbWcvaHRtbDVib3hwbGF5ZXJfZnVsbHNjcmVlbi5wbmdcIiArIFwiJylcIixcclxuXHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogXCJsZWZ0IHRvcFwiXHJcblx0XHRcdH0pLmhvdmVyKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHR2YXIgYmFja2dyb3VuZFBvc1ggPSAkKHRoaXMpLmNzcyhcImJhY2tncm91bmQtcG9zaXRpb25cIikgPyAkKHRoaXMpLmNzcyhcImJhY2tncm91bmQtcG9zaXRpb25cIikuc3BsaXQoXCIgXCIpWzBdIDogJCh0aGlzKS5jc3MoXCJiYWNrZ3JvdW5kLXBvc2l0aW9uLXhcIik7XHJcblx0XHRcdFx0JCh0aGlzKS5jc3Moe1xyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCI6IGJhY2tncm91bmRQb3NYICsgXCIgYm90dG9tXCJcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9LCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0dmFyIGJhY2tncm91bmRQb3NYID1cclxuXHRcdFx0XHRcdCQodGhpcykuY3NzKFwiYmFja2dyb3VuZC1wb3NpdGlvblwiKSA/ICQodGhpcykuY3NzKFwiYmFja2dyb3VuZC1wb3NpdGlvblwiKS5zcGxpdChcIiBcIilbMF0gOiAkKHRoaXMpLmNzcyhcImJhY2tncm91bmQtcG9zaXRpb24teFwiKTtcclxuXHRcdFx0XHQkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogYmFja2dyb3VuZFBvc1ggKyBcIiB0b3BcIlxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH0pLmJpbmQoZUNsaWNrLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0aXNGdWxsc2NyZWVuID0gIWlzRnVsbHNjcmVlbjtcclxuXHRcdFx0XHRzd2l0Y2hTY3JlZW4oaXNGdWxsc2NyZWVuKVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdFx0aWYgKGhkKSB7XHJcblx0XHRcdHZhciAkdmlkZW9IRCA9ICQoXCIuaHRtbDVib3hIRFwiLCAkdmlkZW9Db250cm9scyk7XHJcblx0XHRcdCR2aWRlb0hELmNzcyh7XHJcblx0XHRcdFx0ZGlzcGxheTogXCJibG9ja1wiLFxyXG5cdFx0XHRcdHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXHJcblx0XHRcdFx0XCJmbG9hdFwiOiBcInJpZ2h0XCIsXHJcblx0XHRcdFx0d2lkdGg6IEJVVFRPTl9TSVpFICsgXCJweFwiLFxyXG5cdFx0XHRcdGhlaWdodDogQlVUVE9OX1NJWkUgKyBcInB4XCIsXHJcblx0XHRcdFx0bWFyZ2luOiBNYXRoLmZsb29yKChCQVJfSEVJR0hUIC0gQlVUVE9OX1NJWkUpIC8gMiksXHJcblx0XHRcdFx0Y3Vyc29yOiBcInBvaW50ZXJcIixcclxuXHRcdFx0XHRcImJhY2tncm91bmQtaW1hZ2VcIjogXCJ1cmwoJ1wiICtcclxuXHRcdFx0XHRcdHNraW5Gb2xkZXIgKyBcImltZy9odG1sNWJveHBsYXllcl9oZC5wbmdcIiArIFwiJylcIixcclxuXHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogKGlzSGQgPyBcInJpZ2h0XCIgOiBcImxlZnRcIikgKyBcIiBjZW50ZXJcIlxyXG5cdFx0XHR9KS5iaW5kKGVDbGljaywgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGlzSGQgPSAhaXNIZDtcclxuXHRcdFx0XHQkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogKGlzSGQgPyBcInJpZ2h0XCIgOiBcImxlZnRcIikgKyBcIiBjZW50ZXJcIlxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdHBhcmVudEluc3QuaXNIZCA9IGlzSGQ7XHJcblx0XHRcdFx0dmFyIGlzUGF1c2VkID0gJHZpZGVvT2JqLmdldCgwKS5pc1BhdXNlZDtcclxuXHRcdFx0XHQkdmlkZW9PYmouZ2V0KDApLnNldEF0dHJpYnV0ZShcInNyY1wiLCAoaXNIZCA/IGhkIDogc3JjKSArIFwiI3Q9XCIgKyAkdmlkZW9PYmouZ2V0KDApLmN1cnJlbnRUaW1lKTtcclxuXHRcdFx0XHRpZiAoIWlzUGF1c2VkKSAkdmlkZW9PYmouZ2V0KDApLnBsYXkoKTtcclxuXHRcdFx0XHRlbHNlIGlmICghaXNJUGhvbmUpICR2aWRlb09iai5nZXQoMCkucGF1c2UoKVxyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdFx0JHZpZGVvT2JqLmdldCgwKS52b2x1bWUgPSBkZWZhdWx0dm9sdW1lO1xyXG5cdFx0dmFyIHZvbHVtZVNhdmVkID0gZGVmYXVsdHZvbHVtZSA9PSAwID8gMSA6IGRlZmF1bHR2b2x1bWU7XHJcblx0XHR2YXIgdm9sdW1lID0gJHZpZGVvT2JqLmdldCgwKS52b2x1bWU7XHJcblx0XHQkdmlkZW9PYmouZ2V0KDApLnZvbHVtZSA9IHZvbHVtZSAvIDIgKyAwLjE7XHJcblx0XHRpZiAoJHZpZGVvT2JqLmdldCgwKS52b2x1bWUgPT09IHZvbHVtZSAvIDIgKyAwLjEpIHtcclxuXHRcdFx0JHZpZGVvT2JqLmdldCgwKS52b2x1bWUgPSB2b2x1bWU7XHJcblx0XHRcdHZhciAkdmlkZW9Wb2x1bWUgPSAkKFwiLmh0bWw1Ym94Vm9sdW1lXCIsICR2aWRlb0NvbnRyb2xzKTtcclxuXHRcdFx0dmFyICR2aWRlb1ZvbHVtZUJ1dHRvbiA9ICQoXCIuaHRtbDVib3hWb2x1bWVCdXR0b25cIiwgJHZpZGVvQ29udHJvbHMpO1xyXG5cdFx0XHR2YXIgJHZpZGVvVm9sdW1lQmFyID0gJChcIi5odG1sNWJveFZvbHVtZUJhclwiLCAkdmlkZW9Db250cm9scyk7XHJcblx0XHRcdHZhciAkdmlkZW9Wb2x1bWVCYXJCZyA9ICQoXCIuaHRtbDVib3hWb2x1bWVCYXJCZ1wiLCAkdmlkZW9Db250cm9scyk7XHJcblx0XHRcdHZhciAkdmlkZW9Wb2x1bWVCYXJBY3RpdmUgPSAkKFwiLmh0bWw1Ym94Vm9sdW1lQmFyQWN0aXZlXCIsICR2aWRlb0NvbnRyb2xzKTtcclxuXHRcdFx0JHZpZGVvVm9sdW1lLmNzcyh7XHJcblx0XHRcdFx0ZGlzcGxheTogXCJibG9ja1wiLFxyXG5cdFx0XHRcdHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXHJcblx0XHRcdFx0XCJmbG9hdFwiOiBcInJpZ2h0XCIsXHJcblx0XHRcdFx0d2lkdGg6IEJVVFRPTl9TSVpFICsgXCJweFwiLFxyXG5cdFx0XHRcdGhlaWdodDogQlVUVE9OX1NJWkUgKyBcInB4XCIsXHJcblx0XHRcdFx0bWFyZ2luOiBNYXRoLmZsb29yKChCQVJfSEVJR0hUIC0gQlVUVE9OX1NJWkUpIC8gMilcclxuXHRcdFx0fSkuaG92ZXIoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGNsZWFyVGltZW91dChoaWRlVm9sdW1lQmFyVGltZW91dElkKTtcclxuXHRcdFx0XHR2YXIgdm9sdW1lID0gJHZpZGVvT2JqLmdldCgwKS52b2x1bWU7XHJcblx0XHRcdFx0JHZpZGVvVm9sdW1lQmFyQWN0aXZlLmNzcyh7XHJcblx0XHRcdFx0XHRoZWlnaHQ6IE1hdGgucm91bmQodm9sdW1lICogMTAwKSArIFwiJVwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0JHZpZGVvVm9sdW1lQmFyLnNob3coKVxyXG5cdFx0XHR9LCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0Y2xlYXJUaW1lb3V0KGhpZGVWb2x1bWVCYXJUaW1lb3V0SWQpO1xyXG5cdFx0XHRcdGhpZGVWb2x1bWVCYXJUaW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdCR2aWRlb1ZvbHVtZUJhci5oaWRlKClcclxuXHRcdFx0XHR9LCAxRTMpXHJcblx0XHRcdH0pO1xyXG5cdFx0XHQkdmlkZW9Wb2x1bWVCdXR0b24uY3NzKHtcclxuXHRcdFx0XHRkaXNwbGF5OiBcImJsb2NrXCIsXHJcblx0XHRcdFx0cG9zaXRpb246IFwiYWJzb2x1dGVcIixcclxuXHRcdFx0XHR0b3A6IDAsXHJcblx0XHRcdFx0bGVmdDogMCxcclxuXHRcdFx0XHR3aWR0aDogQlVUVE9OX1NJWkUgK1xyXG5cdFx0XHRcdFx0XCJweFwiLFxyXG5cdFx0XHRcdGhlaWdodDogQlVUVE9OX1NJWkUgKyBcInB4XCIsXHJcblx0XHRcdFx0Y3Vyc29yOiBcInBvaW50ZXJcIixcclxuXHRcdFx0XHRcImJhY2tncm91bmQtaW1hZ2VcIjogXCJ1cmwoJ1wiICsgc2tpbkZvbGRlciArIFwiaHRtbDVib3hwbGF5ZXJfdm9sdW1lLnBuZ1wiICsgXCInKVwiLFxyXG5cdFx0XHRcdFwiYmFja2dyb3VuZC1wb3NpdGlvblwiOiBcInRvcCBcIiArICh2b2x1bWUgPiAwID8gXCJsZWZ0XCIgOiBcInJpZ2h0XCIpXHJcblx0XHRcdH0pLmhvdmVyKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHR2YXIgYmFja2dyb3VuZFBvc1ggPSAkKHRoaXMpLmNzcyhcImJhY2tncm91bmQtcG9zaXRpb25cIikgPyAkKHRoaXMpLmNzcyhcImJhY2tncm91bmQtcG9zaXRpb25cIikuc3BsaXQoXCIgXCIpWzBdIDogJCh0aGlzKS5jc3MoXCJiYWNrZ3JvdW5kLXBvc2l0aW9uLXhcIik7XHJcblx0XHRcdFx0JCh0aGlzKS5jc3Moe1xyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCI6IGJhY2tncm91bmRQb3NYICsgXCIgYm90dG9tXCJcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9LCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0dmFyIGJhY2tncm91bmRQb3NYID0gJCh0aGlzKS5jc3MoXCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCIpID8gJCh0aGlzKS5jc3MoXCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCIpLnNwbGl0KFwiIFwiKVswXSA6XHJcblx0XHRcdFx0XHQkKHRoaXMpLmNzcyhcImJhY2tncm91bmQtcG9zaXRpb24teFwiKTtcclxuXHRcdFx0XHQkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogYmFja2dyb3VuZFBvc1ggKyBcIiB0b3BcIlxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH0pLmJpbmQoZUNsaWNrLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0dmFyIHZvbHVtZSA9ICR2aWRlb09iai5nZXQoMCkudm9sdW1lO1xyXG5cdFx0XHRcdGlmICh2b2x1bWUgPiAwKSB7XHJcblx0XHRcdFx0XHR2b2x1bWVTYXZlZCA9IHZvbHVtZTtcclxuXHRcdFx0XHRcdHZvbHVtZSA9IDBcclxuXHRcdFx0XHR9IGVsc2Ugdm9sdW1lID0gdm9sdW1lU2F2ZWQ7XHJcblx0XHRcdFx0dmFyIGJhY2tncm91bmRQb3NZID0gJCh0aGlzKS5jc3MoXCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCIpID8gJCh0aGlzKS5jc3MoXCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCIpLnNwbGl0KFwiIFwiKVsxXSA6ICQodGhpcykuY3NzKFwiYmFja2dyb3VuZC1wb3NpdGlvbi15XCIpO1xyXG5cdFx0XHRcdCR2aWRlb1ZvbHVtZUJ1dHRvbi5jc3Moe1xyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCI6ICh2b2x1bWUgPiAwID8gXCJsZWZ0XCIgOiBcInJpZ2h0XCIpICsgXCIgXCIgKyBiYWNrZ3JvdW5kUG9zWVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdCR2aWRlb09iai5nZXQoMCkudm9sdW1lID0gdm9sdW1lO1xyXG5cdFx0XHRcdCR2aWRlb1ZvbHVtZUJhckFjdGl2ZS5jc3Moe1xyXG5cdFx0XHRcdFx0aGVpZ2h0OiBNYXRoLnJvdW5kKHZvbHVtZSAqXHJcblx0XHRcdFx0XHRcdDEwMCkgKyBcIiVcIlxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH0pO1xyXG5cdFx0XHQkdmlkZW9Wb2x1bWVCYXIuY3NzKHtcclxuXHRcdFx0XHRkaXNwbGF5OiBcIm5vbmVcIixcclxuXHRcdFx0XHRwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLFxyXG5cdFx0XHRcdGxlZnQ6IDQsXHJcblx0XHRcdFx0Ym90dG9tOiBcIjEwMCVcIixcclxuXHRcdFx0XHR3aWR0aDogMjQsXHJcblx0XHRcdFx0aGVpZ2h0OiA4MCxcclxuXHRcdFx0XHRcIm1hcmdpbi1ib3R0b21cIjogTWF0aC5mbG9vcigoQkFSX0hFSUdIVCAtIEJVVFRPTl9TSVpFKSAvIDIpLFxyXG5cdFx0XHRcdFwiYmFja2dyb3VuZC1jb2xvclwiOiBcIiMwMDAwMDBcIixcclxuXHRcdFx0XHRvcGFjaXR5OiAwLjcsXHJcblx0XHRcdFx0ZmlsdGVyOiBcImFscGhhKG9wYWNpdHk9NzApXCJcclxuXHRcdFx0fSk7XHJcblx0XHRcdCR2aWRlb1ZvbHVtZUJhckJnLmNzcyh7XHJcblx0XHRcdFx0ZGlzcGxheTogXCJibG9ja1wiLFxyXG5cdFx0XHRcdHBvc2l0aW9uOiBcInJlbGF0aXZlXCIsXHJcblx0XHRcdFx0d2lkdGg6IDEwLFxyXG5cdFx0XHRcdGhlaWdodDogNjgsXHJcblx0XHRcdFx0bWFyZ2luOiA3LFxyXG5cdFx0XHRcdGN1cnNvcjogXCJwb2ludGVyXCIsXHJcblx0XHRcdFx0XCJiYWNrZ3JvdW5kLWNvbG9yXCI6IFwiIzIyMlwiXHJcblx0XHRcdH0pO1xyXG5cdFx0XHQkdmlkZW9Wb2x1bWVCYXJBY3RpdmUuY3NzKHtcclxuXHRcdFx0XHRkaXNwbGF5OiBcImJsb2NrXCIsXHJcblx0XHRcdFx0cG9zaXRpb246IFwiYWJzb2x1dGVcIixcclxuXHRcdFx0XHRib3R0b206IDAsXHJcblx0XHRcdFx0bGVmdDogMCxcclxuXHRcdFx0XHR3aWR0aDogXCIxMDAlXCIsXHJcblx0XHRcdFx0aGVpZ2h0OiBcIjEwMCVcIixcclxuXHRcdFx0XHRcImJhY2tncm91bmQtY29sb3JcIjogXCIjZmNjNTAwXCJcclxuXHRcdFx0fSk7XHJcblx0XHRcdCR2aWRlb1ZvbHVtZUJhckJnLmJpbmQoZVN0YXJ0LCBmdW5jdGlvbiAoZSkge1xyXG5cdFx0XHRcdHZhciBlMCA9IGlzVG91Y2ggPyBlLm9yaWdpbmFsRXZlbnQudG91Y2hlc1swXSA6IGU7XHJcblx0XHRcdFx0dmFyIHZvbCA9IDEgLSAoZTAucGFnZVkgLSAkdmlkZW9Wb2x1bWVCYXJCZy5vZmZzZXQoKS50b3ApIC8gJHZpZGVvVm9sdW1lQmFyQmcuaGVpZ2h0KCk7XHJcblx0XHRcdFx0dm9sID0gdm9sID4gMSA/IDEgOiB2b2wgPCAwID8gMCA6IHZvbDtcclxuXHRcdFx0XHQkdmlkZW9Wb2x1bWVCYXJBY3RpdmUuY3NzKHtcclxuXHRcdFx0XHRcdGhlaWdodDogTWF0aC5yb3VuZCh2b2wgKiAxMDApICsgXCIlXCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHQkdmlkZW9Wb2x1bWVCdXR0b24uY3NzKHtcclxuXHRcdFx0XHRcdFwiYmFja2dyb3VuZC1wb3NpdGlvblwiOiBcImxlZnQgXCIgKyAodm9sID4gMCA/IFwidG9wXCIgOiBcImJvdHRvbVwiKVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdCR2aWRlb09iai5nZXQoMCkudm9sdW1lID0gdm9sO1xyXG5cdFx0XHRcdCR2aWRlb1ZvbHVtZUJhckJnLmJpbmQoZU1vdmUsIGZ1bmN0aW9uIChlKSB7XHJcblx0XHRcdFx0XHR2YXIgZTAgPSBpc1RvdWNoID8gZS5vcmlnaW5hbEV2ZW50LnRvdWNoZXNbMF0gOiBlO1xyXG5cdFx0XHRcdFx0dmFyIHZvbCA9IDEgLSAoZTAucGFnZVkgLSAkdmlkZW9Wb2x1bWVCYXJCZy5vZmZzZXQoKS50b3ApIC8gJHZpZGVvVm9sdW1lQmFyQmcuaGVpZ2h0KCk7XHJcblx0XHRcdFx0XHR2b2wgPSB2b2wgPiAxID8gMSA6IHZvbCA8IDAgPyAwIDogdm9sO1xyXG5cdFx0XHRcdFx0JHZpZGVvVm9sdW1lQmFyQWN0aXZlLmNzcyh7XHJcblx0XHRcdFx0XHRcdGhlaWdodDogTWF0aC5yb3VuZCh2b2wgKiAxMDApICsgXCIlXCJcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0JHZpZGVvVm9sdW1lQnV0dG9uLmNzcyh7XHJcblx0XHRcdFx0XHRcdFwiYmFja2dyb3VuZC1wb3NpdGlvblwiOiBcImxlZnQgXCIgKyAodm9sID4gMCA/IFwidG9wXCIgOiBcImJvdHRvbVwiKVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHQkdmlkZW9PYmouZ2V0KDApLnZvbHVtZSA9IHZvbFxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH0pLmJpbmQoZUNhbmNlbCwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdCR2aWRlb1ZvbHVtZUJhckJnLnVuYmluZChlTW92ZSlcclxuXHRcdFx0fSlcclxuXHRcdH1cclxuXHRcdHZhciBjYWxjVGltZUZvcm1hdCA9IGZ1bmN0aW9uIChzZWNvbmRzKSB7XHJcblx0XHRcdHZhciBoMCA9IE1hdGguZmxvb3Ioc2Vjb25kcyAvIDM2MDApO1xyXG5cdFx0XHR2YXIgaCA9IGgwIDwgMTAgPyBcIjBcIiArIGgwIDogaDA7XHJcblx0XHRcdHZhciBtMCA9IE1hdGguZmxvb3IoKHNlY29uZHMgLSBoMCAqIDM2MDApIC8gNjApO1xyXG5cdFx0XHR2YXIgbSA9IG0wIDwgMTAgPyBcIjBcIiArIG0wIDogbTA7XHJcblx0XHRcdHZhciBzMCA9IE1hdGguZmxvb3Ioc2Vjb25kcyAtIChoMCAqIDM2MDAgKyBtMCAqIDYwKSk7XHJcblx0XHRcdHZhciBzID0gczAgPCAxMCA/IFwiMFwiICsgczAgOiBzMDtcclxuXHRcdFx0dmFyIHIgPSBtICsgXCI6XCIgKyBzO1xyXG5cdFx0XHRpZiAoaDAgPiAwKSByID0gaCArIFwiOlwiICtcclxuXHRcdFx0XHRyO1xyXG5cdFx0XHRyZXR1cm4gclxyXG5cdFx0fTtcclxuXHRcdGlmIChoaWRlcGxheWJ1dHRvbikgJHZpZGVvUGxheS5oaWRlKCk7XHJcblx0XHRpZiAoaGlkZWNvbnRyb2xzKSAkdmlkZW9Db250cm9scy5oaWRlKCk7XHJcblx0XHR2YXIgb25WaWRlb1BsYXkgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdGlmICghaGlkZXBsYXlidXR0b24pICR2aWRlb1BsYXkuaGlkZSgpO1xyXG5cdFx0XHRpZiAoIWhpZGVjb250cm9scykge1xyXG5cdFx0XHRcdCR2aWRlb0J0blBsYXkuaGlkZSgpO1xyXG5cdFx0XHRcdCR2aWRlb0J0blBhdXNlLnNob3coKVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0dmFyIG9uVmlkZW9QYXVzZSA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0aWYgKCFoaWRlcGxheWJ1dHRvbikgJHZpZGVvUGxheS5zaG93KCk7XHJcblx0XHRcdGlmICghaGlkZWNvbnRyb2xzKSB7XHJcblx0XHRcdFx0JHZpZGVvQ29udHJvbHMuc2hvdygpO1xyXG5cdFx0XHRcdGNsZWFyVGltZW91dChoaWRlQ29udHJvbHNUaW1lcklkKTtcclxuXHRcdFx0XHQkdmlkZW9CdG5QbGF5LnNob3coKTtcclxuXHRcdFx0XHQkdmlkZW9CdG5QYXVzZS5oaWRlKClcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHRcdHZhciBvblZpZGVvRW5kZWQgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdCQod2luZG93KS50cmlnZ2VyKFwiaHRtbDVsaWdodGJveC52aWRlb2VuZGVkXCIpO1xyXG5cdFx0XHRpZiAoIWhpZGVwbGF5YnV0dG9uKSAkdmlkZW9QbGF5LnNob3coKTtcclxuXHRcdFx0aWYgKCFoaWRlY29udHJvbHMpIHtcclxuXHRcdFx0XHQkdmlkZW9Db250cm9scy5zaG93KCk7XHJcblx0XHRcdFx0Y2xlYXJUaW1lb3V0KGhpZGVDb250cm9sc1RpbWVySWQpO1xyXG5cdFx0XHRcdCR2aWRlb0J0blBsYXkuc2hvdygpO1xyXG5cdFx0XHRcdCR2aWRlb0J0blBhdXNlLmhpZGUoKVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0dmFyIG9uVmlkZW9VcGRhdGUgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdHZhciBjdXJUaW1lID0gJHZpZGVvT2JqLmdldCgwKS5jdXJyZW50VGltZTtcclxuXHRcdFx0aWYgKGN1clRpbWUpIHtcclxuXHRcdFx0XHQkdmlkZW9UaW1lQ3VycmVudC50ZXh0KGNhbGNUaW1lRm9ybWF0KGN1clRpbWUpKTtcclxuXHRcdFx0XHR2YXIgZHVyYXRpb24gPSAkdmlkZW9PYmouZ2V0KDApLmR1cmF0aW9uO1xyXG5cdFx0XHRcdGlmIChkdXJhdGlvbikge1xyXG5cdFx0XHRcdFx0JHZpZGVvVGltZVRvdGFsLnRleHQoY2FsY1RpbWVGb3JtYXQoZHVyYXRpb24pKTtcclxuXHRcdFx0XHRcdGlmICghc2xpZGVyRHJhZ2dpbmcpIHtcclxuXHRcdFx0XHRcdFx0dmFyIHNsaWRlclcgPSAkdmlkZW9TZWVrZXIud2lkdGgoKTtcclxuXHRcdFx0XHRcdFx0dmFyIHBvcyA9IE1hdGgucm91bmQoc2xpZGVyVyAqIGN1clRpbWUgLyBkdXJhdGlvbik7XHJcblx0XHRcdFx0XHRcdCR2aWRlb1NlZWtlclBsYXkuY3NzKHtcclxuXHRcdFx0XHRcdFx0XHR3aWR0aDogcG9zXHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHQkdmlkZW9TZWVrZXJIYW5kbGVyLmNzcyh7XHJcblx0XHRcdFx0XHRcdFx0bGVmdDogcG9zXHJcblx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHR9O1xyXG5cdFx0dmFyIG9uVmlkZW9Qcm9ncmVzcyA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0aWYgKCR2aWRlb09iai5nZXQoMCkuYnVmZmVyZWQgJiYgJHZpZGVvT2JqLmdldCgwKS5idWZmZXJlZC5sZW5ndGggPiAwICYmICFpc05hTigkdmlkZW9PYmouZ2V0KDApLmJ1ZmZlcmVkLmVuZCgwKSkgJiYgIWlzTmFOKCR2aWRlb09iai5nZXQoMCkuZHVyYXRpb24pKSB7XHJcblx0XHRcdFx0dmFyIHNsaWRlclcgPSAkdmlkZW9TZWVrZXIud2lkdGgoKTtcclxuXHRcdFx0XHQkdmlkZW9TZWVrZXJCdWZmZXIuY3NzKHtcclxuXHRcdFx0XHRcdHdpZHRoOiBNYXRoLnJvdW5kKHNsaWRlclcgKiAkdmlkZW9PYmouZ2V0KDApLmJ1ZmZlcmVkLmVuZCgwKSAvICR2aWRlb09iai5nZXQoMCkuZHVyYXRpb24pXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fVxyXG5cdFx0fTtcclxuXHRcdHRyeSB7XHJcblx0XHRcdCR2aWRlb09iai5iaW5kKFwicGxheVwiLCBvblZpZGVvUGxheSk7XHJcblx0XHRcdCR2aWRlb09iai5iaW5kKFwicGF1c2VcIiwgb25WaWRlb1BhdXNlKTtcclxuXHRcdFx0JHZpZGVvT2JqLmJpbmQoXCJlbmRlZFwiLCBvblZpZGVvRW5kZWQpO1xyXG5cdFx0XHQkdmlkZW9PYmouYmluZChcInRpbWV1cGRhdGVcIiwgb25WaWRlb1VwZGF0ZSk7XHJcblx0XHRcdCR2aWRlb09iai5iaW5kKFwicHJvZ3Jlc3NcIixcclxuXHRcdFx0XHRvblZpZGVvUHJvZ3Jlc3MpXHJcblx0XHR9IGNhdGNoIChlKSB7fVxyXG5cdH1cclxufSkoalF1ZXJ5KTtcclxuXHJcbmZ1bmN0aW9uIEFTVGltZXIoYXNUaW1lb3V0LCBhc0NhbGxiYWNrLCBhc1VwZGF0ZUNhbGxiYWNrKSB7XHJcblx0dmFyIGFzVXBkYXRlSW50ZXJ2YWwgPSA1MDtcclxuXHR2YXIgYXNVcGRhdGVUaW1lcklkID0gbnVsbDtcclxuXHR2YXIgYXNSdW5uaW5nVGltZSA9IDA7XHJcblx0dGhpcy5wYXVzZSA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdGNsZWFySW50ZXJ2YWwoYXNVcGRhdGVUaW1lcklkKVxyXG5cdH07XHJcblx0dGhpcy5yZXN1bWUgPSBmdW5jdGlvbiAoKSB7XHJcblx0XHRjbGVhckludGVydmFsKGFzVXBkYXRlVGltZXJJZCk7XHJcblx0XHRpZiAoYXNUaW1lb3V0ID4gMCkgYXNVcGRhdGVUaW1lcklkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRhc1J1bm5pbmdUaW1lICs9IGFzVXBkYXRlSW50ZXJ2YWw7XHJcblx0XHRcdGlmIChhc1J1bm5pbmdUaW1lID4gYXNUaW1lb3V0KSB7XHJcblx0XHRcdFx0Y2xlYXJJbnRlcnZhbChhc1VwZGF0ZVRpbWVySWQpO1xyXG5cdFx0XHRcdGlmIChhc0NhbGxiYWNrKSBhc0NhbGxiYWNrKClcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoYXNVcGRhdGVDYWxsYmFjaykgYXNVcGRhdGVDYWxsYmFjayhhc1J1bm5pbmdUaW1lIC8gYXNUaW1lb3V0KVxyXG5cdFx0fSwgYXNVcGRhdGVJbnRlcnZhbCk7XHJcblx0XHRlbHNlIGlmIChhc0NhbGxiYWNrKSBhc0NhbGxiYWNrKClcclxuXHR9O1xyXG5cdHRoaXMuc3RvcCA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdGNsZWFySW50ZXJ2YWwoYXNVcGRhdGVUaW1lcklkKTtcclxuXHRcdGlmIChhc1VwZGF0ZUNhbGxiYWNrKSBhc1VwZGF0ZUNhbGxiYWNrKC0xKTtcclxuXHRcdGFzUnVubmluZ1RpbWUgPSAwXHJcblx0fTtcclxuXHR0aGlzLnN0YXJ0ID0gZnVuY3Rpb24gKCkge1xyXG5cdFx0YXNSdW5uaW5nVGltZSA9IDA7XHJcblx0XHRjbGVhckludGVydmFsKGFzVXBkYXRlVGltZXJJZCk7XHJcblx0XHRpZiAoYXNUaW1lb3V0ID4gMCkgYXNVcGRhdGVUaW1lcklkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRhc1J1bm5pbmdUaW1lICs9IGFzVXBkYXRlSW50ZXJ2YWw7XHJcblx0XHRcdGlmIChhc1J1bm5pbmdUaW1lID4gYXNUaW1lb3V0KSB7XHJcblx0XHRcdFx0Y2xlYXJJbnRlcnZhbChhc1VwZGF0ZVRpbWVySWQpO1xyXG5cdFx0XHRcdGlmIChhc0NhbGxiYWNrKSBhc0NhbGxiYWNrKClcclxuXHRcdFx0fVxyXG5cdFx0XHRpZiAoYXNVcGRhdGVDYWxsYmFjaykgYXNVcGRhdGVDYWxsYmFjayhhc1J1bm5pbmdUaW1lIC8gYXNUaW1lb3V0KVxyXG5cdFx0fSwgYXNVcGRhdGVJbnRlcnZhbCk7XHJcblx0XHRlbHNlIGlmIChhc0NhbGxiYWNrKSBhc0NhbGxiYWNrKClcclxuXHR9XHJcbn1cclxudmFyIEFDUGxhdGZvcm1zID0ge1xyXG5cdGZsYXNoSW5zdGFsbGVkOiBmdW5jdGlvbiAoKSB7XHJcblx0XHR2YXIgZmxhc2hJbnN0YWxsZWQgPSBmYWxzZTtcclxuXHRcdHRyeSB7XHJcblx0XHRcdGlmIChuZXcgQWN0aXZlWE9iamVjdChcIlNob2Nrd2F2ZUZsYXNoLlNob2Nrd2F2ZUZsYXNoXCIpKSBmbGFzaEluc3RhbGxlZCA9IHRydWVcclxuXHRcdH0gY2F0Y2ggKGUpIHtcclxuXHRcdFx0aWYgKG5hdmlnYXRvci5taW1lVHlwZXNbXCJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaFwiXSkgZmxhc2hJbnN0YWxsZWQgPSB0cnVlXHJcblx0XHR9XHJcblx0XHRyZXR1cm4gZmxhc2hJbnN0YWxsZWRcclxuXHR9LFxyXG5cdGh0bWw1VmlkZW9TdXBwb3J0ZWQ6IGZ1bmN0aW9uICgpIHtcclxuXHRcdHJldHVybiAhIWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJ2aWRlb1wiKS5jYW5QbGF5VHlwZVxyXG5cdH0sXHJcblx0aXNDaHJvbWU6IGZ1bmN0aW9uICgpIHtcclxuXHRcdHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9DaHJvbWUvaSkgIT0gbnVsbFxyXG5cdH0sXHJcblx0aXNGaXJlZm94OiBmdW5jdGlvbiAoKSB7XHJcblx0XHRyZXR1cm4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvRmlyZWZveC9pKSAhPSBudWxsXHJcblx0fSxcclxuXHRpc09wZXJhOiBmdW5jdGlvbiAoKSB7XHJcblx0XHRyZXR1cm4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvT3BlcmEvaSkgIT1cclxuXHRcdFx0bnVsbCB8fCBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9PUFJcXC8vaSkgIT0gbnVsbFxyXG5cdH0sXHJcblx0aXNTYWZhcmk6IGZ1bmN0aW9uICgpIHtcclxuXHRcdHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9TYWZhcmkvaSkgIT0gbnVsbFxyXG5cdH0sXHJcblx0aXNBbmRyb2lkOiBmdW5jdGlvbiAoKSB7XHJcblx0XHRyZXR1cm4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvQW5kcm9pZC9pKSAhPSBudWxsXHJcblx0fSxcclxuXHRpc0lQYWQ6IGZ1bmN0aW9uICgpIHtcclxuXHRcdHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9pUGFkL2kpICE9IG51bGxcclxuXHR9LFxyXG5cdGlzSVBob25lOiBmdW5jdGlvbiAoKSB7XHJcblx0XHRyZXR1cm4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvaVBvZC9pKSAhPSBudWxsIHx8IG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL2lQaG9uZS9pKSAhPSBudWxsXHJcblx0fSxcclxuXHRpc0lPUzogZnVuY3Rpb24gKCkge1xyXG5cdFx0cmV0dXJuIHRoaXMuaXNJUGFkKCkgfHwgdGhpcy5pc0lQaG9uZSgpXHJcblx0fSxcclxuXHRpc0lFOTogZnVuY3Rpb24gKCkge1xyXG5cdFx0cmV0dXJuIG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL01TSUUvaSkgIT0gbnVsbCAmJiB0aGlzLmh0bWw1VmlkZW9TdXBwb3J0ZWQoKSAmJlxyXG5cdFx0XHQhdGhpcy5pc09wZXJhKClcclxuXHR9LFxyXG5cdGlzSUU4OiBmdW5jdGlvbiAoKSB7XHJcblx0XHRyZXR1cm4gbmF2aWdhdG9yLnVzZXJBZ2VudC5tYXRjaCgvTVNJRSA4L2kpICE9IG51bGwgJiYgIXRoaXMuaXNPcGVyYSgpXHJcblx0fSxcclxuXHRpc0lFNzogZnVuY3Rpb24gKCkge1xyXG5cdFx0cmV0dXJuIG5hdmlnYXRvci51c2VyQWdlbnQubWF0Y2goL01TSUUgNy9pKSAhPSBudWxsICYmICF0aGlzLmlzT3BlcmEoKVxyXG5cdH0sXHJcblx0aXNJRTY6IGZ1bmN0aW9uICgpIHtcclxuXHRcdHJldHVybiBuYXZpZ2F0b3IudXNlckFnZW50Lm1hdGNoKC9NU0lFIDYvaSkgIT0gbnVsbCAmJiAhdGhpcy5pc09wZXJhKClcclxuXHR9LFxyXG5cdGlzSUU2Nzg6IGZ1bmN0aW9uICgpIHtcclxuXHRcdHJldHVybiB0aGlzLmlzSUU2KCkgfHwgdGhpcy5pc0lFNygpIHx8IHRoaXMuaXNJRTgoKVxyXG5cdH0sXHJcblx0aXNJRTY3ODk6IGZ1bmN0aW9uICgpIHtcclxuXHRcdHJldHVybiB0aGlzLmlzSUU2KCkgfHwgdGhpcy5pc0lFNygpIHx8IHRoaXMuaXNJRTgoKSB8fCB0aGlzLmlzSUU5KClcclxuXHR9LFxyXG5cdGNzczMzZFRyYW5zZm9ybVN1cHBvcnRlZDogZnVuY3Rpb24gKCkge1xyXG5cdFx0cmV0dXJuICF0aGlzLmlzSUU2KCkgJiYgIXRoaXMuaXNJRTcoKSAmJiAhdGhpcy5pc0lFOCgpICYmXHJcblx0XHRcdCF0aGlzLmlzSUU5KCkgJiYgIXRoaXMuaXNPcGVyYSgpXHJcblx0fSxcclxuXHRhcHBseUJyb3dzZXJTdHlsZXM6IGZ1bmN0aW9uIChvYmplY3QsIGFwcGx5VG9WYWx1ZSkge1xyXG5cdFx0dmFyIHJldCA9IHt9O1xyXG5cdFx0Zm9yICh2YXIga2V5IGluIG9iamVjdCkge1xyXG5cdFx0XHRyZXRba2V5XSA9IG9iamVjdFtrZXldO1xyXG5cdFx0XHRyZXRbXCItd2Via2l0LVwiICsga2V5XSA9IGFwcGx5VG9WYWx1ZSA/IFwiLXdlYmtpdC1cIiArIG9iamVjdFtrZXldIDogb2JqZWN0W2tleV07XHJcblx0XHRcdHJldFtcIi1tb3otXCIgKyBrZXldID0gYXBwbHlUb1ZhbHVlID8gXCItbW96LVwiICsgb2JqZWN0W2tleV0gOiBvYmplY3Rba2V5XTtcclxuXHRcdFx0cmV0W1wiLW1zLVwiICsga2V5XSA9IGFwcGx5VG9WYWx1ZSA/IFwiLW1zLVwiICsgb2JqZWN0W2tleV0gOiBvYmplY3Rba2V5XTtcclxuXHRcdFx0cmV0W1wiLW8tXCIgKyBrZXldID0gYXBwbHlUb1ZhbHVlID8gXCItby1cIiArIG9iamVjdFtrZXldIDogb2JqZWN0W2tleV1cclxuXHRcdH1cclxuXHRcdHJldHVybiByZXRcclxuXHR9XHJcbn07XHJcbihmdW5jdGlvbiAoJCkge1xyXG5cdCQuZm4uYW1hemluZ2Nhcm91c2VsID0gZnVuY3Rpb24gKG9wdGlvbnMpIHtcclxuXHRcdHZhciBFTEVNX0lEID0gMCxcclxuXHRcdFx0RUxFTV9TUkMgPSAxLFxyXG5cdFx0XHRFTEVNX1RJVExFID0gMixcclxuXHRcdFx0RUxFTV9ERVNDUklQVElPTiA9IDMsXHJcblx0XHRcdEVMRU1fTElOSyA9IDQsXHJcblx0XHRcdEVMRU1fVEFSR0VUID0gNSxcclxuXHRcdFx0RUxFTV9WSURFTyA9IDYsXHJcblx0XHRcdEVMRU1fVEhVTUJOQUlMID0gNyxcclxuXHRcdFx0RUxFTV9MSUdIVEJPWCA9IDgsXHJcblx0XHRcdEVMRU1fTElHSFRCT1hXSURUSCA9IDksXHJcblx0XHRcdEVMRU1fTElHSFRCT1hIRUlHSFQgPSAxMDtcclxuXHRcdHZhciBUWVBFX0lNQUdFID0gMSxcclxuXHRcdFx0VFlQRV9TV0YgPSAyLFxyXG5cdFx0XHRUWVBFX01QMyA9IDMsXHJcblx0XHRcdFRZUEVfUERGID0gNCxcclxuXHRcdFx0VFlQRV9WSURFT19GTEFTSCA9IDUsXHJcblx0XHRcdFRZUEVfVklERU9fTVA0ID0gNixcclxuXHRcdFx0VFlQRV9WSURFT19PR0cgPSA3LFxyXG5cdFx0XHRUWVBFX1ZJREVPX1dFQk0gPSA4LFxyXG5cdFx0XHRUWVBFX1ZJREVPX1lPVVRVQkUgPSA5LFxyXG5cdFx0XHRUWVBFX1ZJREVPX1ZJTUVPID0gMTA7XHJcblx0XHR2YXIgQW1hemluZ0Nhcm91c2VsID0gZnVuY3Rpb24gKGNvbnRhaW5lciwgb3B0aW9ucywgaWQpIHtcclxuXHRcdFx0dGhpcy5jb250YWluZXIgPSBjb250YWluZXI7XHJcblx0XHRcdHRoaXMub3B0aW9ucyA9IG9wdGlvbnM7XHJcblx0XHRcdHRoaXMuaWQgPSBpZDtcclxuXHRcdFx0dGhpcy50cmFuc2l0aW9uVGltZW91dCA9XHJcblx0XHRcdFx0bnVsbDtcclxuXHRcdFx0dGhpcy5hcnJvd1RpbWVvdXQgPSBudWxsO1xyXG5cdFx0XHQkKFwiLmFtYXppbmdjYXJvdXNlbC1lbmdpbmVcIikuY3NzKHtcclxuXHRcdFx0XHRkaXNwbGF5OiBcIm5vbmVcIlxyXG5cdFx0XHR9KTtcclxuXHRcdFx0dGhpcy5saWdodGJveEFycmF5ID0gW107XHJcblx0XHRcdHRoaXMudmlzaWJsZUl0ZW1zID0gdGhpcy5vcHRpb25zLnZpc2libGVpdGVtcztcclxuXHRcdFx0dGhpcy5pdGVtU2l6ZSA9IHRoaXMub3B0aW9ucy53aWR0aDtcclxuXHRcdFx0dGhpcy5pdGVtSGVpZ2h0ID0gdGhpcy5vcHRpb25zLmhlaWdodDtcclxuXHRcdFx0dGhpcy5jdXJyZW50SXRlbSA9IDA7XHJcblx0XHRcdHRoaXMuZWxlbUxlbmd0aCA9IDA7XHJcblx0XHRcdHRoaXMuZWxlbVRvdGFsQ291bnQgPSAwO1xyXG5cdFx0XHR0aGlzLmFuaW1Qcm9wID0ge307XHJcblx0XHRcdHRoaXMudHJhbnNpdGlvblRpbWVySWQgPSBudWxsO1xyXG5cdFx0XHR0aGlzLnRyYW5zaXRpb25UaW1pbmcgPSAwO1xyXG5cdFx0XHR0aGlzLmluaXREYXRhKHRoaXMuaW5pdClcclxuXHRcdH07XHJcblx0XHRBbWF6aW5nQ2Fyb3VzZWwucHJvdG90eXBlID0ge1xyXG5cdFx0XHRpbml0RGF0YTogZnVuY3Rpb24gKG9uU3VjY2Vzcykge1xyXG5cdFx0XHRcdHRoaXMucmVhZFRhZ3MoKTtcclxuXHRcdFx0XHRvblN1Y2Nlc3ModGhpcylcclxuXHRcdFx0fSxcclxuXHRcdFx0cmVhZFRhZ3M6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHR2YXIgaXRlbXMgPSAkKFwibGkuYW1hemluZ2Nhcm91c2VsLWl0ZW1cIixcclxuXHRcdFx0XHRcdHRoaXMuY29udGFpbmVyKTtcclxuXHRcdFx0XHR0aGlzLmVsZW1MZW5ndGggPSBpdGVtcy5sZW5ndGg7XHJcblx0XHRcdFx0dGhpcy5lbGVtVG90YWxDb3VudCA9IHRoaXMuZWxlbUxlbmd0aDtcclxuXHRcdFx0XHR2YXIgaTtcclxuXHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLnJhbmRvbSkge1xyXG5cdFx0XHRcdFx0Zm9yIChpID0gdGhpcy5lbGVtTGVuZ3RoIC0gMTsgaSA+IDA7IGktLSkge1xyXG5cdFx0XHRcdFx0XHR2YXIgaW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBpKTtcclxuXHRcdFx0XHRcdFx0aXRlbXMuZXEoaW5kZXgpLmluc2VydEJlZm9yZShpdGVtcy5lcShpKSk7XHJcblx0XHRcdFx0XHRcdGl0ZW1zLmVxKGkpLmluc2VydEJlZm9yZShpdGVtcy5lcShpbmRleCkpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRpdGVtcyA9ICQoXCJsaS5hbWF6aW5nY2Fyb3VzZWwtaXRlbVwiLCB0aGlzLmNvbnRhaW5lcilcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aXRlbXMuZWFjaChmdW5jdGlvbiAoaW5kZXgpIHtcclxuXHRcdFx0XHRcdCQodGhpcykuZGF0YShcIml0ZW1JbmRleFwiLCBpbmRleClcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpZiAodGhpcy5lbGVtTGVuZ3RoID4gMSAmJiB0aGlzLm9wdGlvbnMuY2lyY3VsYXIpIHtcclxuXHRcdFx0XHRcdHZhciBjbG9uZUNvdW50ID0gTWF0aC5taW4odGhpcy5vcHRpb25zLnZpc2libGVpdGVtcyAqIDIsIHRoaXMuZWxlbUxlbmd0aCk7XHJcblx0XHRcdFx0XHRmb3IgKGkgPSAwOyBpIDxcclxuXHRcdFx0XHRcdFx0Y2xvbmVDb3VudDsgaSsrKSAkKFwidWwuYW1hemluZ2Nhcm91c2VsLWxpc3RcIiwgdGhpcy5jb250YWluZXIpLmFwcGVuZChpdGVtcy5lcShpKS5jbG9uZSh0cnVlKSk7XHJcblx0XHRcdFx0XHR0aGlzLmVsZW1Ub3RhbENvdW50ICs9IGNsb25lQ291bnRcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0JChcInVsLmFtYXppbmdjYXJvdXNlbC1saXN0XCIsIHRoaXMuY29udGFpbmVyKS5hcHBlbmQoXCI8ZGl2IHN0eWxlPSdjbGVhcjpib3RoOyc+PC9kaXY+XCIpXHJcblx0XHRcdH0sXHJcblx0XHRcdGluaXQ6IGZ1bmN0aW9uIChpbnN0YW5jZSkge1xyXG5cdFx0XHRcdGlmIChpbnN0YW5jZS5lbGVtTGVuZ3RoIDw9IDApIHJldHVybjtcclxuXHRcdFx0XHRpbnN0YW5jZS5jb250YWluZXIuY3NzKHtcclxuXHRcdFx0XHRcdGRpcmVjdGlvbjogXCJsdHJcIlxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdGlmIChpbnN0YW5jZS5vcHRpb25zLnNob3djb250YWluZXJvbmluaXQpIGluc3RhbmNlLmNvbnRhaW5lci5jc3Moe1xyXG5cdFx0XHRcdFx0ZGlzcGxheTogXCJibG9ja1wiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aW5zdGFuY2UuaXNBbmltYXRpbmcgPSBmYWxzZTtcclxuXHRcdFx0XHRpbnN0YW5jZS5pc1BhdXNlZCA9ICFpbnN0YW5jZS5vcHRpb25zLmF1dG9wbGF5O1xyXG5cdFx0XHRcdGluc3RhbmNlLnRlbXBQYXVzZWQgPSBmYWxzZTtcclxuXHRcdFx0XHRpbnN0YW5jZS5tb3VzZVBhdXNlZCA9XHJcblx0XHRcdFx0XHRmYWxzZTtcclxuXHRcdFx0XHRpbnN0YW5jZS5sb29wQ291bnQgPSAwO1xyXG5cdFx0XHRcdGluc3RhbmNlLmZpcnN0UmVzaXplID0gZmFsc2U7XHJcblx0XHRcdFx0aW5zdGFuY2UuY3JlYXRlUGxheVZpZGVvKCk7XHJcblx0XHRcdFx0aW5zdGFuY2UuY3JlYXRlSG92ZXJPdmVybGF5KCk7XHJcblx0XHRcdFx0aW5zdGFuY2UuY3JlYXRlU3R5bGUoKTtcclxuXHRcdFx0XHRpbnN0YW5jZS5jcmVhdGVOYXYoKTtcclxuXHRcdFx0XHRpbnN0YW5jZS5jcmVhdGVBcnJvd3MoKTtcclxuXHRcdFx0XHRpbnN0YW5jZS5jcmVhdGVCYWNrZ3JvdW5kSW1hZ2UoKTtcclxuXHRcdFx0XHRpbnN0YW5jZS5jcmVhdGVJdGVtQmFja2dyb3VuZEltYWdlKCk7XHJcblx0XHRcdFx0aW5zdGFuY2UuY3JlYXRlQm90dG9tU2hhZG93KCk7XHJcblx0XHRcdFx0aW5zdGFuY2UuY3JlYXRlSXRlbUJvdHRvbVNoYWRvdygpO1xyXG5cdFx0XHRcdGluc3RhbmNlLmNyZWF0ZVNsaWRlclRpbWVvdXQoKTtcclxuXHRcdFx0XHRpbnN0YW5jZS5jcmVhdGVHb29nbGVGb250cygpO1xyXG5cdFx0XHRcdGluc3RhbmNlLmVuYWJsZVN3aXBlKCk7XHJcblx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMuc2FtZWhlaWdodCAmJiBpbnN0YW5jZS5vcHRpb25zLmRpcmVjdGlvbiA9PSBcImhvcml6b250YWxcIikgaW5zdGFuY2UuaXRlbUhlaWdodCA9XHJcblx0XHRcdFx0XHRpbnN0YW5jZS5jYWxjU2FtZUhlaWdodCgpO1xyXG5cdFx0XHRcdHZhciAkaW1nID0gJChcIi5hbWF6aW5nY2Fyb3VzZWwtaW1hZ2VcIiwgaW5zdGFuY2UuY29udGFpbmVyKS5maW5kKFwiaW1nXCIpO1xyXG5cdFx0XHRcdGlmICgkaW1nLmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0JGltZy5vbmUoXCJsb2FkXCIsIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMuc2FtZWhlaWdodCAmJiBpbnN0YW5jZS5vcHRpb25zLmRpcmVjdGlvbiA9PSBcImhvcml6b250YWxcIikgJCh0aGlzKS5jc3Moe1xyXG5cdFx0XHRcdFx0XHRcdHdpZHRoOiBcImF1dG9cIixcclxuXHRcdFx0XHRcdFx0XHRoZWlnaHQ6IGluc3RhbmNlLml0ZW1IZWlnaHQgKyBcInB4XCIsXHJcblx0XHRcdFx0XHRcdFx0XCJtYXgtd2lkdGhcIjogXCJub25lXCIsXHJcblx0XHRcdFx0XHRcdFx0XCJtYXgtaGVpZ2h0XCI6IFwiMTAwJVwiLFxyXG5cdFx0XHRcdFx0XHRcdFwibWFyZ2luLXRvcFwiOiBcIjBweFwiLFxyXG5cdFx0XHRcdFx0XHRcdFwibWFyZ2luLWxlZnRcIjogXCIwcHhcIlxyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0ZWxzZSBpZiAoaW5zdGFuY2Uub3B0aW9ucy5maXhhc3BlY3RyYXRpbykge1xyXG5cdFx0XHRcdFx0XHRcdCQodGhpcykud3JhcCgnPGRpdiBjbGFzcz1cImFtYXppbmdjYXJvdXNlbC1pbWFnZS1maXgtd3JhcHBlclwiIHN0eWxlPVwid2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtvdmVyZmxvdzpoaWRkZW47XCI+PC9kaXY+Jyk7XHJcblx0XHRcdFx0XHRcdFx0dmFyIGltZ1cgPSAkKHRoaXMpLndpZHRoKCk7XHJcblx0XHRcdFx0XHRcdFx0dmFyIGltZ0ggPSAkKHRoaXMpLmhlaWdodCgpO1xyXG5cdFx0XHRcdFx0XHRcdGlmIChpbWdXID4gMCAmJiBpbWdIICYmIGltZ1cgLyBpbWdIID4gaW5zdGFuY2Uub3B0aW9ucy53aWR0aCAvIGluc3RhbmNlLm9wdGlvbnMuaGVpZ2h0KSB7XHJcblx0XHRcdFx0XHRcdFx0XHQkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHdpZHRoOiBcImF1dG9cIixcclxuXHRcdFx0XHRcdFx0XHRcdFx0aGVpZ2h0OiBcIjEwMCVcIixcclxuXHRcdFx0XHRcdFx0XHRcdFx0XCJtYXgtd2lkdGhcIjogXCJub25lXCIsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFwibWF4LWhlaWdodFwiOiBcIjEwMCVcIixcclxuXHRcdFx0XHRcdFx0XHRcdFx0XCJtYXJnaW4tdG9wXCI6IFwiMHB4XCIsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFwibWFyZ2luLWxlZnRcIjogXCIwcHhcIlxyXG5cdFx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdFx0XHRpZiAoaW5zdGFuY2Uub3B0aW9ucy5jZW50ZXJpbWFnZSlcclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCQodGhpcykud2lkdGgoKSA+IDApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR2YXIgbWwgPSAoJCh0aGlzKS5jbG9zZXN0KFwiLmFtYXppbmdjYXJvdXNlbC1pbWFnZVwiKS53aWR0aCgpIC0gJCh0aGlzKS53aWR0aCgpKSAvIDI7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0JCh0aGlzKS5jc3Moe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XCJtYXJnaW4tbGVmdFwiOiBtbCArIFwicHhcIlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdFx0JCh0aGlzKS5jc3Moe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR3aWR0aDogXCIxMDAlXCIsXHJcblx0XHRcdFx0XHRcdFx0XHRcdGhlaWdodDogXCJhdXRvXCIsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFwibWF4LXdpZHRoXCI6IFwiMTAwJVwiLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcIm1heC1oZWlnaHRcIjogXCJub25lXCIsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFwibWFyZ2luLXRvcFwiOiBcIjBweFwiLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcIm1hcmdpbi1sZWZ0XCI6IFwiMHB4XCJcclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMuY2VudGVyaW1hZ2UpXHJcblx0XHRcdFx0XHRcdFx0XHRcdGlmICgkKHRoaXMpLmhlaWdodCgpID4gMCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHZhciBtdCA9ICgkKHRoaXMpLmNsb3Nlc3QoXCIuYW1hemluZ2Nhcm91c2VsLWltYWdlXCIpLmhlaWdodCgpIC0gJCh0aGlzKS5oZWlnaHQoKSkgLyAyO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCQodGhpcykuY3NzKHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFwibWFyZ2luLXRvcFwiOiBtdCArIFwicHhcIlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0aWYgKCFpbnN0YW5jZS5maXJzdFJlc2l6ZSkge1xyXG5cdFx0XHRcdFx0XHRcdGluc3RhbmNlLmZpcnN0UmVzaXplID0gdHJ1ZTtcclxuXHRcdFx0XHRcdFx0XHRpbnN0YW5jZS5yZXNpemVDYXJvdXNlbCgpXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0JGltZy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0aWYgKHRoaXMuY29tcGxldGUpICQodGhpcykubG9hZCgpXHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdH0gZWxzZSBpbnN0YW5jZS5yZXNpemVDYXJvdXNlbCgpO1xyXG5cdFx0XHRcdGlmIChpbnN0YW5jZS5vcHRpb25zLnJlc3BvbnNpdmUpICQod2luZG93KS5yZXNpemUoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0aW5zdGFuY2UucmVzaXplQ2Fyb3VzZWwoKTtcclxuXHRcdFx0XHRcdGluc3RhbmNlLnJlc2l6ZU5hdigpXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0JCh3aW5kb3cpLmxvYWQoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0aW5zdGFuY2UucmVzaXplQ2Fyb3VzZWwoKTtcclxuXHRcdFx0XHRcdGluc3RhbmNlLnJlc2l6ZU5hdigpXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aW5zdGFuY2UucmVzaXplTmF2KCk7XHJcblx0XHRcdFx0dmFyIHBhcmFtcyA9IGluc3RhbmNlLmdldFBhcmFtcygpO1xyXG5cdFx0XHRcdHZhciBmaXJzdElkID0gMDtcclxuXHRcdFx0XHRpZiAoXCJmaXJzdGNhcm91c2VsaWRcIiBpbiBwYXJhbXMgJiYgcGFyYW1zW1wiZmlyc3RjYXJvdXNlbGlkXCJdID49IDAgJiYgcGFyYW1zW1wiZmlyc3RjYXJvdXNlbGlkXCJdIDwgaW5zdGFuY2UuZWxlbUxlbmd0aCkgZmlyc3RJZCA9IHBhcmFtc1tcImZpcnN0Y2Fyb3VzZWxpZFwiXTtcclxuXHRcdFx0XHRpbnN0YW5jZS5jb250YWluZXIudHJpZ2dlcihcImFtYXppbmdjYXJvdXNlbC5zd2l0Y2hcIiwgWy0xLCBmaXJzdElkXSk7XHJcblx0XHRcdFx0aWYgKGZpcnN0SWQgPiAwKSB7XHJcblx0XHRcdFx0XHRpbnN0YW5jZS5zbGlkZVJ1bihmaXJzdElkKTtcclxuXHRcdFx0XHRcdGlmIChcImNsaWNrY2Fyb3VzZWxcIiBpbiBwYXJhbXMpICQoXCIuYW1hemluZ2Nhcm91c2VsLWl0ZW1cIiwgaW5zdGFuY2UuY29udGFpbmVyKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0aWYgKCQodGhpcykuZGF0YShcIml0ZW1JbmRleFwiKSA9PSBmaXJzdElkKSB7XHJcblx0XHRcdFx0XHRcdFx0JChcIi5hbWF6aW5nY2Fyb3VzZWwtaW1hZ2UgaW1nXCIsIHRoaXMpLmNsaWNrKCk7XHJcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGluc3RhbmNlLmNvbnRhaW5lci50cmlnZ2VyKFwiYW1hemluZ2Nhcm91c2VsLmluaXRzdWNjZXNzXCIpO1xyXG5cdFx0XHRcdGlmICghaW5zdGFuY2UuaXNQYXVzZWQgJiYgIWluc3RhbmNlLnRlbXBQYXVzZWQpIGluc3RhbmNlLnNsaWRlclRpbWVvdXQuc3RhcnQoKVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRnZXRQYXJhbXM6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHR2YXIgcmVzdWx0ID0ge307XHJcblx0XHRcdFx0dmFyIHBhcmFtcyA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3Vic3RyaW5nKDEpLnNwbGl0KFwiJlwiKTtcclxuXHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHBhcmFtcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHRcdFx0dmFyIHZhbHVlID0gcGFyYW1zW2ldLnNwbGl0KFwiPVwiKTtcclxuXHRcdFx0XHRcdGlmICh2YWx1ZSAmJiB2YWx1ZS5sZW5ndGggPT0gMikgcmVzdWx0W3ZhbHVlWzBdLnRvTG93ZXJDYXNlKCldID0gdW5lc2NhcGUodmFsdWVbMV0pXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHJldHVybiByZXN1bHRcclxuXHRcdFx0fSxcclxuXHRcdFx0ZW5hYmxlU3dpcGU6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLmVuYWJsZXRvdWNoc3dpcGUpIHtcclxuXHRcdFx0XHRcdHZhciBpbnN0YW5jZSA9IHRoaXM7XHJcblx0XHRcdFx0XHQkKFwiLmFtYXppbmdjYXJvdXNlbC1saXN0LWNvbnRhaW5lclwiLFxyXG5cdFx0XHRcdFx0XHR0aGlzLmNvbnRhaW5lcikuY2Fyb3VzZWxUb3VjaFN3aXBlKHtcclxuXHRcdFx0XHRcdFx0cHJldmVudFdlYkJyb3dzZXI6IGZhbHNlLFxyXG5cdFx0XHRcdFx0XHRzd2lwZUxlZnQ6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0XHRpbnN0YW5jZS5zbGlkZVJ1bigtMSlcclxuXHRcdFx0XHRcdFx0fSxcclxuXHRcdFx0XHRcdFx0c3dpcGVSaWdodDogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRcdGluc3RhbmNlLnNsaWRlUnVuKC0yKVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSxcclxuXHRcdFx0Y3JlYXRlUGxheVZpZGVvOiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0aWYgKCF0aGlzLm9wdGlvbnMuc2hvd3BsYXl2aWRlbykgcmV0dXJuO1xyXG5cdFx0XHRcdHZhciBpbnN0YW5jZSA9IHRoaXM7XHJcblx0XHRcdFx0JChcIi5hbWF6aW5nY2Fyb3VzZWwtaW1hZ2VcIiwgdGhpcy5jb250YWluZXIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0dmFyICR0aGlzID0gJCh0aGlzKTtcclxuXHRcdFx0XHRcdHZhciBpc1ZpZGVvID0gZmFsc2U7XHJcblx0XHRcdFx0XHR2YXIgaXNMaWdodGJveFZpZGVvID0gZmFsc2U7XHJcblx0XHRcdFx0XHR2YXIgdmlkZW9VcmwgPSBcIlwiO1xyXG5cdFx0XHRcdFx0dmFyIHZpZGVvV2VibVVybCA9IFwiXCI7XHJcblx0XHRcdFx0XHQkKFwiaW1nXCIsICR0aGlzKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0aWYgKCQodGhpcykuZGF0YShcInZpZGVvXCIpKSB7XHJcblx0XHRcdFx0XHRcdFx0dmlkZW9VcmwgPSAkKHRoaXMpLmRhdGEoXCJ2aWRlb1wiKTtcclxuXHRcdFx0XHRcdFx0XHRpZiAoJCh0aGlzKS5kYXRhKFwidmlkZW93ZWJtXCIpKSB2aWRlb1dlYm1VcmwgPVxyXG5cdFx0XHRcdFx0XHRcdFx0JCh0aGlzKS5kYXRhKFwidmlkZW93ZWJtXCIpO1xyXG5cdFx0XHRcdFx0XHRcdGlzVmlkZW8gPSB0cnVlO1xyXG5cdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZVxyXG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCQodGhpcykucGFyZW50KClbMF0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PSBcImFcIilcclxuXHRcdFx0XHRcdFx0XHRpZiAoJCh0aGlzKS5wYXJlbnQoKS5oYXNDbGFzcyhcImh0bWw1bGlnaHRib3hcIikpIHtcclxuXHRcdFx0XHRcdFx0XHRcdHZhciB0eXBlID0gaW5zdGFuY2UuY2hlY2tWaWRlb1R5cGUoJCh0aGlzKS5wYXJlbnQoKS5hdHRyKFwiaHJlZlwiKSk7XHJcblx0XHRcdFx0XHRcdFx0XHRpZiAodHlwZSA9PSBUWVBFX1ZJREVPX1lPVVRVQkUgfHwgdHlwZSA9PSBUWVBFX1ZJREVPX1ZJTUVPIHx8IHR5cGUgPT0gVFlQRV9WSURFT19NUDQgfHwgdHlwZSA9PSBUWVBFX1ZJREVPX1dFQk0pIGlzTGlnaHRib3hWaWRlbyA9IHRydWVcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGlmIChpc1ZpZGVvIHx8IGlzTGlnaHRib3hWaWRlbykge1xyXG5cdFx0XHRcdFx0XHR2YXIgcG9zID0gXCJjZW50ZXIgY2VudGVyXCI7XHJcblx0XHRcdFx0XHRcdHN3aXRjaCAoaW5zdGFuY2Uub3B0aW9ucy5wbGF5dmlkZW9pbWFnZXBvcykge1xyXG5cdFx0XHRcdFx0XHRjYXNlIFwidG9wbGVmdFwiOlxyXG5cdFx0XHRcdFx0XHRcdHBvcyA9IFwibGVmdCB0b3BcIjtcclxuXHRcdFx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRcdFx0Y2FzZSBcInRvcHJpZ2h0XCI6XHJcblx0XHRcdFx0XHRcdFx0cG9zID0gXCJyaWdodCB0b3BcIjtcclxuXHRcdFx0XHRcdFx0XHRicmVhaztcclxuXHRcdFx0XHRcdFx0Y2FzZSBcImJvdHRvbWxlZnRcIjpcclxuXHRcdFx0XHRcdFx0XHRwb3MgPSBcImxlZnQgYm90dG9tXCI7XHJcblx0XHRcdFx0XHRcdFx0YnJlYWs7XHJcblx0XHRcdFx0XHRcdGNhc2UgXCJib3R0b21yaWdodFwiOlxyXG5cdFx0XHRcdFx0XHRcdHBvcyA9IFwicmlnaHQgYm90dG9tXCI7XHJcblx0XHRcdFx0XHRcdFx0YnJlYWtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR2YXIgJHBsYXlWaWRlbyA9ICQoJzxkaXYgY2xhc3M9XCJhbWF6aW5nY2Fyb3VzZWwtcGxheS12aWRlb1wiIHN0eWxlPVwicG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3RvcDowO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7Y3Vyc29yOnBvaW50ZXI7JyArIFwiYmFja2dyb3VuZC1pbWFnZTp1cmwoJ1wiICsgaW5zdGFuY2Uub3B0aW9ucy5wbGF5dmlkZW9pbWFnZSArIFwiJyk7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O1wiICsgXCJiYWNrZ3JvdW5kLXBvc2l0aW9uOlwiICsgcG9zICsgJztcIj48L2Rpdj4nKTtcclxuXHRcdFx0XHRcdFx0JHBsYXlWaWRlby5hcHBlbmRUbygkdGhpcyk7XHJcblx0XHRcdFx0XHRcdGlmIChpc1ZpZGVvKSAkcGxheVZpZGVvLmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0XHQkdGhpcy5maW5kKFwiaW1nXCIpLmNzcyh7XHJcblx0XHRcdFx0XHRcdFx0XHR2aXNpYmlsaXR5OiBcImhpZGRlblwiXHJcblx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdFx0aW5zdGFuY2UucGxheVZpZGVvKCQodGhpcyksIHZpZGVvVXJsLFxyXG5cdFx0XHRcdFx0XHRcdFx0dmlkZW9XZWJtVXJsKTtcclxuXHRcdFx0XHRcdFx0XHQkKHRoaXMpLnVuYmluZChcImNsaWNrXCIpXHJcblx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHR2YXIgJGltZyA9ICQoXCJpbWdcIiwgJHRoaXMpO1xyXG5cdFx0XHRcdFx0XHRcdCRwbGF5VmlkZW8uY2xpY2soZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0JGltZy5jbGljaygpXHJcblx0XHRcdFx0XHRcdFx0fSlcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH0sXHJcblx0XHRcdHBsYXlWaWRlbzogZnVuY3Rpb24gKCR2aWRlb0RpdiwgdmlkZW9VcmwsIHZpZGVvV2VibVVybCkge1xyXG5cdFx0XHRcdGlmICh2aWRlb1VybC5sZW5ndGggPD0gMCkgcmV0dXJuO1xyXG5cdFx0XHRcdHRoaXMuc2xpZGVyVGltZW91dC5zdG9wKCk7XHJcblx0XHRcdFx0dGhpcy50ZW1wUGF1c2VkID0gdHJ1ZTtcclxuXHRcdFx0XHR2YXIgdHlwZSA9IHRoaXMuY2hlY2tWaWRlb1R5cGUodmlkZW9VcmwpO1xyXG5cdFx0XHRcdGlmICh0eXBlID09IFRZUEVfVklERU9fWU9VVFVCRSkgdGhpcy5wbGF5WW91dHViZVZpZGVvKHZpZGVvVXJsLCAkdmlkZW9EaXYpO1xyXG5cdFx0XHRcdGVsc2UgaWYgKHR5cGUgPT0gVFlQRV9WSURFT19WSU1FTykgdGhpcy5wbGF5VmltZW9WaWRlbyh2aWRlb1VybCwgJHZpZGVvRGl2KTtcclxuXHRcdFx0XHRlbHNlIGlmICh0eXBlID09IFRZUEVfVklERU9fTVA0KSB0aGlzLnBsYXlNcDRWaWRlbyh2aWRlb1VybCwgdmlkZW9XZWJtVXJsLCB0cnVlLCAkdmlkZW9EaXYpXHJcblx0XHRcdH0sXHJcblx0XHRcdHBsYXlNcDRWaWRlbzogZnVuY3Rpb24gKGhyZWYsIHdlYm1ocmVmLCBhdXRvcGxheSwgJHZpZGVvV3JhcHBlcikge1xyXG5cdFx0XHRcdHZhciBpc0hUTUw1ID0gdHJ1ZTtcclxuXHRcdFx0XHRpZiAoQUNQbGF0Zm9ybXMuaXNJRTY3ODkoKSkgaXNIVE1MNSA9IGZhbHNlO1xyXG5cdFx0XHRcdGVsc2UgaWYgKChBQ1BsYXRmb3Jtcy5pc0ZpcmVmb3goKSB8fCBBQ1BsYXRmb3Jtcy5pc09wZXJhKCkpICYmICF3ZWJtaHJlZikgaXNIVE1MNSA9IGZhbHNlO1xyXG5cdFx0XHRcdGlmIChpc0hUTUw1KSB7XHJcblx0XHRcdFx0XHR2YXIgdmlkZW9TcmMgPSBBQ1BsYXRmb3Jtcy5pc0ZpcmVmb3goKSB8fCBBQ1BsYXRmb3Jtcy5pc09wZXJhKCkgPyB3ZWJtaHJlZiA6IGhyZWY7XHJcblx0XHRcdFx0XHR0aGlzLmVtYmVkSFRNTDVWaWRlbygkdmlkZW9XcmFwcGVyLCB2aWRlb1NyYywgYXV0b3BsYXkpXHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdHZhciB2aWRlb0ZpbGUgPSBocmVmO1xyXG5cdFx0XHRcdFx0aWYgKHZpZGVvRmlsZS5jaGFyQXQoMCkgIT0gXCIvXCIgJiYgdmlkZW9GaWxlLnN1YnN0cmluZygwLCA1KSAhPSBcImh0dHA6XCIgJiYgdmlkZW9GaWxlLnN1YnN0cmluZygwLCA2KSAhPSBcImh0dHBzOlwiKSB2aWRlb0ZpbGUgPSB0aGlzLm9wdGlvbnMuaHRtbGZvbGRlciArIHZpZGVvRmlsZTtcclxuXHRcdFx0XHRcdHRoaXMuZW1iZWRGbGFzaCgkdmlkZW9XcmFwcGVyLCBcIjEwMCVcIiwgXCIxMDAlXCIsIHRoaXMub3B0aW9ucy5qc2ZvbGRlciArIFwiaHRtbDVib3hwbGF5ZXIuc3dmXCIsIFwidHJhbnNwYXJlbnRcIiwge1xyXG5cdFx0XHRcdFx0XHR3aWR0aDogXCIxMDAlXCIsXHJcblx0XHRcdFx0XHRcdGhlaWdodDogXCIxMDAlXCIsXHJcblx0XHRcdFx0XHRcdHZpZGVvZmlsZTogdmlkZW9GaWxlLFxyXG5cdFx0XHRcdFx0XHRoZGZpbGU6IFwiXCIsXHJcblx0XHRcdFx0XHRcdGlzaGQ6IFwiMFwiLFxyXG5cdFx0XHRcdFx0XHRhdXRvcGxheTogYXV0b3BsYXkgPyBcIjFcIiA6IFwiMFwiLFxyXG5cdFx0XHRcdFx0XHRlcnJvcmNzczogXCIuYW1hemluZ2Nhcm91c2VsLWVycm9yXCIgKyB0aGlzLm9wdGlvbnMuZXJyb3Jjc3MsXHJcblx0XHRcdFx0XHRcdGlkOiB0aGlzLmlkLFxyXG5cdFx0XHRcdFx0XHRoaWRlY29udHJvbHM6IFwiMFwiLFxyXG5cdFx0XHRcdFx0XHRoaWRlcGxheWJ1dHRvbjogXCIwXCIsXHJcblx0XHRcdFx0XHRcdGRlZmF1bHR2b2x1bWU6IDFcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRlbWJlZEhUTUw1VmlkZW86IGZ1bmN0aW9uICgkY29udGFpbmVyLCBzcmMsIGF1dG9QbGF5KSB7XHJcblx0XHRcdFx0JGNvbnRhaW5lci5odG1sKFwiPGRpdiBjbGFzcz0nYW1hemluZ2Nhcm91c2VsLXZpZGVvLWNvbnRhaW5lci1cIiArIHRoaXMuaWQgKyBcIicgc3R5bGU9J3Bvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTsnPjx2aWRlbyBzdHlsZT0nd2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTsnIGNvbnRyb2xzID48L2Rpdj5cIik7XHJcblx0XHRcdFx0JChcInZpZGVvXCIsICRjb250YWluZXIpLmdldCgwKS5zZXRBdHRyaWJ1dGUoXCJzcmNcIiwgc3JjKTtcclxuXHRcdFx0XHRpZiAoYXV0b1BsYXkpICQoXCJ2aWRlb1wiLCAkY29udGFpbmVyKS5nZXQoMCkucGxheSgpO1xyXG5cdFx0XHRcdGlmICghdGhpcy5vcHRpb25zLm5hdGl2ZWh0bWw1Y29udHJvbHMpICQoXCJ2aWRlb1wiLCAkY29udGFpbmVyKS5hY0hUTUw1VmlkZW9Db250cm9scyh0aGlzLm9wdGlvbnMuc2tpbnNmb2xkZXIsIHRoaXMsIHRoaXMub3B0aW9ucy52aWRlb2hpZGVjb250cm9scywgdGhpcy5vcHRpb25zLnZpZGVvaGlkZXBsYXlidXR0b24sIHRoaXMub3B0aW9ucy5kZWZhdWx0dmlkZW92b2x1bWUpXHJcblx0XHRcdH0sXHJcblx0XHRcdGVtYmVkRmxhc2g6IGZ1bmN0aW9uICgkY29udGFpbmVyLCB3LCBoLCBzcmMsIHdtb2RlLCBmbGFzaFZhcnMpIHtcclxuXHRcdFx0XHRpZiAoQUNQbGF0Zm9ybXMuZmxhc2hJbnN0YWxsZWQoKSkge1xyXG5cdFx0XHRcdFx0dmFyIGh0bWxPcHRpb25zID0ge1xyXG5cdFx0XHRcdFx0XHRwbHVnaW5zcGFnZTogXCJodHRwOi8vd3d3LmFkb2JlLmNvbS9nby9nZXRmbGFzaHBsYXllclwiLFxyXG5cdFx0XHRcdFx0XHRxdWFsaXR5OiBcImhpZ2hcIixcclxuXHRcdFx0XHRcdFx0YWxsb3dGdWxsU2NyZWVuOiBcInRydWVcIixcclxuXHRcdFx0XHRcdFx0YWxsb3dTY3JpcHRBY2Nlc3M6IFwiYWx3YXlzXCIsXHJcblx0XHRcdFx0XHRcdHR5cGU6IFwiYXBwbGljYXRpb24veC1zaG9ja3dhdmUtZmxhc2hcIlxyXG5cdFx0XHRcdFx0fTtcclxuXHRcdFx0XHRcdGh0bWxPcHRpb25zLndpZHRoID0gdztcclxuXHRcdFx0XHRcdGh0bWxPcHRpb25zLmhlaWdodCA9IGg7XHJcblx0XHRcdFx0XHRodG1sT3B0aW9ucy5zcmMgPSBzcmM7XHJcblx0XHRcdFx0XHRodG1sT3B0aW9ucy53bW9kZSA9IHdtb2RlO1xyXG5cdFx0XHRcdFx0aHRtbE9wdGlvbnMuZmxhc2hWYXJzID0gJC5wYXJhbShmbGFzaFZhcnMpO1xyXG5cdFx0XHRcdFx0dmFyIGh0bWxTdHJpbmcgPSBcIlwiO1xyXG5cdFx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGh0bWxPcHRpb25zKSBodG1sU3RyaW5nICs9IGtleSArIFwiPVwiICsgaHRtbE9wdGlvbnNba2V5XSArIFwiIFwiO1xyXG5cdFx0XHRcdFx0JGNvbnRhaW5lci5odG1sKFwiPGVtYmVkIFwiICsgaHRtbFN0cmluZyArIFwiLz5cIilcclxuXHRcdFx0XHR9IGVsc2UgJGNvbnRhaW5lci5odG1sKFwiPGRpdiBjbGFzcz0nYW1hemluZ2Nhcm91c2VsLXZpZGVvLWVycm9yJyBzdHlsZT0nZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTt0ZXh0LWFsaWduOmNlbnRlcjt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2xlZnQ6MHB4O3RvcDowcHg7Jz48ZGl2PlRoZSByZXF1aXJlZCBBZG9iZSBGbGFzaCBQbGF5ZXIgcGx1Z2luIGlzIG5vdCBpbnN0YWxsZWQ8L2Rpdj48YnIgLz48ZGl2IHN0eWxlPSdkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOnJlbGF0aXZlO3RleHQtYWxpZ246Y2VudGVyO3dpZHRoOjExMnB4O2hlaWdodDozM3B4O21hcmdpbjowcHggYXV0bzsnPjxhIGhyZWY9J2h0dHA6Ly93d3cuYWRvYmUuY29tL2dvL2dldGZsYXNocGxheWVyJz48aW1nIHNyYz0naHR0cHM6Ly93d3cuYWRvYmUuY29tL2ltYWdlcy9zaGFyZWQvZG93bmxvYWRfYnV0dG9ucy9nZXRfZmxhc2hfcGxheWVyLmdpZicgYWx0PSdHZXQgQWRvYmUgRmxhc2ggcGxheWVyJyB3aWR0aD0nMTEyJyBoZWlnaHQ9JzMzJz48L2ltZz48L2E+PC9kaXY+XCIpXHJcblx0XHRcdH0sXHJcblx0XHRcdHBsYXlZb3V0dWJlVmlkZW86IGZ1bmN0aW9uIChocmVmLCAkdmlkZW9XcmFwcGVyKSB7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5wcmV2aWV3bW9kZSkge1xyXG5cdFx0XHRcdFx0JHZpZGVvV3JhcHBlci5odG1sKFwiPGRpdiBjbGFzcz0nYW1hemluZ2Nhcm91c2VsLXZpZGVvLWVycm9yJyBzdHlsZT0nZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzMzMzsnPlRvIHZpZXcgWW91VHViZSB2aWRlbywgcHVibGlzaCB0aGUgY2Fyb3VzZWwgdGhlbiBvcGVuIGl0IGluIHlvdXIgd2ViIGJyb3dzZXI8L2Rpdj5cIik7XHJcblx0XHRcdFx0XHRyZXR1cm5cclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0dmFyIHNyYyA9IGhyZWYgKyAoaHJlZi5pbmRleE9mKFwiP1wiKSA8IDAgPyBcIj9cIiA6IFwiJlwiKSArIFwiYXV0b3BsYXk9MSZ3bW9kZT10cmFuc3BhcmVudCZyZWw9MCZhdXRvaGlkZT0xXCI7XHJcblx0XHRcdFx0XHQkdmlkZW9XcmFwcGVyLmh0bWwoXCI8aWZyYW1lIHdpZHRoPScxMDAlJyBoZWlnaHQ9JzEwMCUnIHNyYz0nXCIgKyBzcmMgKyBcIicgZnJhbWVib3JkZXI9JzAnIHdlYmtpdEFsbG93RnVsbFNjcmVlbiBtb3phbGxvd2Z1bGxzY3JlZW4gYWxsb3dGdWxsU2NyZWVuPjwvaWZyYW1lPlwiKVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0fSxcclxuXHRcdFx0cGxheVZpbWVvVmlkZW86IGZ1bmN0aW9uIChocmVmLCAkdmlkZW9XcmFwcGVyKSB7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5wcmV2aWV3bW9kZSkge1xyXG5cdFx0XHRcdFx0JHZpZGVvV3JhcHBlci5odG1sKFwiPGRpdiBjbGFzcz0nYW1hemluZ2Nhcm91c2VsLXZpZGVvLWVycm9yJyBzdHlsZT0nZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OjA7dG9wOjA7d2lkdGg6MTAwJTtoZWlnaHQ6MTAwJTtjb2xvcjojZmZmO2JhY2tncm91bmQtY29sb3I6IzMzMzsnPlRvIHZpZXcgVmltZW8gdmlkZW8sIHB1Ymxpc2ggdGhlIGNhcm91c2VsIHRoZW4gb3BlbiBpdCBpbiB5b3VyIHdlYiBicm93c2VyPC9kaXY+XCIpO1xyXG5cdFx0XHRcdFx0cmV0dXJuXHJcblx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdHZhciBzcmMgPSBocmVmICsgKGhyZWYuaW5kZXhPZihcIj9cIikgPCAwID8gXCI/XCIgOiBcIiZcIikgKyBcImF1dG9wbGF5PTEmYXBpPTFcIjtcclxuXHRcdFx0XHRcdCR2aWRlb1dyYXBwZXIuaHRtbChcIjxpZnJhbWUgd2lkdGg9JzEwMCUnIGhlaWdodD0nMTAwJScgc3JjPSdcIiArIHNyYyArIFwiJyBmcmFtZWJvcmRlcj0nMCcgd2Via2l0QWxsb3dGdWxsU2NyZWVuIG1vemFsbG93ZnVsbHNjcmVlbiBhbGxvd0Z1bGxTY3JlZW4+PC9pZnJhbWU+XCIpXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRjaGVja1ZpZGVvVHlwZTogZnVuY3Rpb24gKGhyZWYpIHtcclxuXHRcdFx0XHRpZiAoIWhyZWYpIHJldHVybiAtMTtcclxuXHRcdFx0XHRpZiAoaHJlZi5tYXRjaCgvXFwuKGZsdikoLiopPyQvaSkpIHJldHVybiBUWVBFX1ZJREVPX0ZMQVNIO1xyXG5cdFx0XHRcdGlmIChocmVmLm1hdGNoKC9cXC4obXA0fG00dikoLiopPyQvaSkpIHJldHVybiBUWVBFX1ZJREVPX01QNDtcclxuXHRcdFx0XHRpZiAoaHJlZi5tYXRjaCgvXFwuKG9ndnxvZ2cpKC4qKT8kL2kpKSByZXR1cm4gVFlQRV9WSURFT19PR0c7XHJcblx0XHRcdFx0aWYgKGhyZWYubWF0Y2goL1xcLih3ZWJtKSguKik/JC9pKSkgcmV0dXJuIFRZUEVfVklERU9fV0VCTTtcclxuXHRcdFx0XHRpZiAoaHJlZi5tYXRjaCgvXFw6XFwvXFwvLiooeW91dHViZVxcLmNvbSkvaSkgfHwgaHJlZi5tYXRjaCgvXFw6XFwvXFwvLiooeW91dHVcXC5iZSkvaSkpIHJldHVybiBUWVBFX1ZJREVPX1lPVVRVQkU7XHJcblx0XHRcdFx0aWYgKGhyZWYubWF0Y2goL1xcOlxcL1xcLy4qKHZpbWVvXFwuY29tKS9pKSkgcmV0dXJuIFRZUEVfVklERU9fVklNRU87XHJcblx0XHRcdFx0cmV0dXJuIDBcclxuXHRcdFx0fSxcclxuXHRcdFx0Y3JlYXRlSG92ZXJPdmVybGF5OiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0dmFyIGluc3RhbmNlID0gdGhpcztcclxuXHRcdFx0XHQkKFwiLmFtYXppbmdjYXJvdXNlbC1pbWFnZVwiLFxyXG5cdFx0XHRcdFx0dGhpcy5jb250YWluZXIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0dmFyICR0aGlzID0gJCh0aGlzKTtcclxuXHRcdFx0XHRcdHZhciBpc0xpZ2h0Ym94ID0gZmFsc2U7XHJcblx0XHRcdFx0XHR2YXIgaXNMaW5rID0gZmFsc2U7XHJcblx0XHRcdFx0XHQkKFwiaW1nXCIsICR0aGlzKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0aWYgKCQodGhpcykucGFyZW50KClbMF0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PSBcImFcIikge1xyXG5cdFx0XHRcdFx0XHRcdGlzTGluayA9IHRydWU7XHJcblx0XHRcdFx0XHRcdFx0aWYgKCQodGhpcykucGFyZW50KCkuaGFzQ2xhc3MoXCJodG1sNWxpZ2h0Ym94XCIpKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRpc0xpZ2h0Ym94ID0gdHJ1ZTtcclxuXHRcdFx0XHRcdFx0XHRcdHJldHVybiBmYWxzZVxyXG5cdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRpZiAoJCh0aGlzKS5zaWJsaW5ncyhcIi5hbWF6aW5nY2Fyb3VzZWwtaG92ZXJcIikubGVuZ3RoID4gMCkge1xyXG5cdFx0XHRcdFx0XHQkKHRoaXMpLnBhcmVudCgpLmhvdmVyKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0XHQkKHRoaXMpLmZpbmQoXCIuYW1hemluZ2Nhcm91c2VsLWhvdmVyXCIpLmZhZGVJbigpXHJcblx0XHRcdFx0XHRcdH0sIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0XHQkKHRoaXMpLmZpbmQoXCIuYW1hemluZ2Nhcm91c2VsLWhvdmVyXCIpLmZhZGVPdXQoKVxyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0dmFyICRpbWcgPSAkKFwiaW1nXCIsICR0aGlzKTtcclxuXHRcdFx0XHRcdFx0JCh0aGlzKS5zaWJsaW5ncyhcIi5hbWF6aW5nY2Fyb3VzZWwtaG92ZXJcIikuY2xpY2soZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRcdCRpbWcuY2xpY2soKVxyXG5cdFx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0fSBlbHNlIGlmIChpbnN0YW5jZS5vcHRpb25zLnNob3dob3Zlcm92ZXJsYXkgJiZcclxuXHRcdFx0XHRcdFx0IShpbnN0YW5jZS5vcHRpb25zLmhpZGVob3Zlcm92ZXJsYXlvbnRvdWNoICYmIFwib250b3VjaHN0YXJ0XCIgaW4gd2luZG93KSAmJiAoaXNMaWdodGJveCB8fCBpc0xpbmsgJiYgaW5zdGFuY2Uub3B0aW9ucy5zaG93aG92ZXJvdmVybGF5YWx3YXlzKSkge1xyXG5cdFx0XHRcdFx0XHR2YXIgJGhvdmVySW1hZ2UgPSAkKCc8ZGl2IGNsYXNzPVwiYW1hemluZ2Nhcm91c2VsLWhvdmVyLWVmZmVjdFwiIHN0eWxlPVwiZGlzcGxheTpub25lO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6MDt0b3A6MDt3aWR0aDoxMDAlO2hlaWdodDoxMDAlO2N1cnNvcjpwb2ludGVyOycgKyBcImJhY2tncm91bmQtaW1hZ2U6dXJsKCdcIiArIGluc3RhbmNlLm9wdGlvbnMuaG92ZXJvdmVybGF5aW1hZ2UgKyBcIicpO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtcIiArICdiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciBjZW50ZXI7XCI+PC9kaXY+Jyk7XHJcblx0XHRcdFx0XHRcdCRob3ZlckltYWdlLmFwcGVuZFRvKCR0aGlzKTtcclxuXHRcdFx0XHRcdFx0dmFyICRpbWcgPSAkKFwiaW1nXCIsICR0aGlzKTtcclxuXHRcdFx0XHRcdFx0JGhvdmVySW1hZ2UuY2xpY2soZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRcdCRpbWcuY2xpY2soKVxyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0JCh0aGlzKS5ob3ZlcihmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRcdFx0aWYgKEFDUGxhdGZvcm1zLmlzSUU2NzgoKSkgJGhvdmVySW1hZ2Uuc2hvdygpO1xyXG5cdFx0XHRcdFx0XHRcdGVsc2UgJGhvdmVySW1hZ2UuZmFkZUluKClcclxuXHRcdFx0XHRcdFx0fSwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRcdGlmIChBQ1BsYXRmb3Jtcy5pc0lFNjc4KCkpICRob3ZlckltYWdlLmhpZGUoKTtcclxuXHRcdFx0XHRcdFx0XHRlbHNlICRob3ZlckltYWdlLmZhZGVPdXQoKVxyXG5cdFx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0aWYgKCQodGhpcykuc2libGluZ3MoXCIuYW1hemluZ2Nhcm91c2VsLWZsaXBcIikubGVuZ3RoID4gMCkge1xyXG5cdFx0XHRcdFx0XHRpZiAoQUNQbGF0Zm9ybXMuaXNJRTY3ODkoKSkgJCh0aGlzKS5wYXJlbnQoKS5ob3ZlcihmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRcdFx0JCh0aGlzKS5maW5kKFwiLmFtYXppbmdjYXJvdXNlbC1mbGlwXCIpLmhpZGUoKS5pbnNlcnRBZnRlcigkKHRoaXMpLmZpbmQoXCIuYW1hemluZ2Nhcm91c2VsLWltYWdlXCIpKS5mYWRlSW4oKVxyXG5cdFx0XHRcdFx0XHR9LCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRcdFx0JCh0aGlzKS5maW5kKFwiLmFtYXppbmdjYXJvdXNlbC1mbGlwXCIpLmZhZGVPdXQoKVxyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0dmFyICRpbWcgPSAkKFwiaW1nXCIsICR0aGlzKTtcclxuXHRcdFx0XHRcdFx0JCh0aGlzKS5zaWJsaW5ncyhcIi5hbWF6aW5nY2Fyb3VzZWwtZmxpcFwiKS5jbGljayhmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRcdFx0JGltZy5jbGljaygpXHJcblx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fSxcclxuXHRcdFx0Y3JlYXRlU3R5bGU6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHQkKFwidWwuYW1hemluZ2Nhcm91c2VsLWxpc3RcIiwgdGhpcy5jb250YWluZXIpLndyYXAoJzxkaXYgY2xhc3M9XCJhbWF6aW5nY2Fyb3VzZWwtbGlzdC13cmFwcGVyXCI+PC9kaXY+Jyk7XHJcblx0XHRcdFx0JChcInVsLmFtYXppbmdjYXJvdXNlbC1saXN0XCIsIHRoaXMuY29udGFpbmVyKS5jc3Moe1xyXG5cdFx0XHRcdFx0ZGlzcGxheTogXCJibG9ja1wiLFxyXG5cdFx0XHRcdFx0cG9zaXRpb246IFwicmVsYXRpdmVcIixcclxuXHRcdFx0XHRcdFwibGlzdC1zdHlsZS10eXBlXCI6IFwibm9uZVwiLFxyXG5cdFx0XHRcdFx0XCJsaXN0LXN0eWxlLWltYWdlXCI6IFwibm9uZVwiLFxyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLWltYWdlXCI6IFwibm9uZVwiLFxyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLWNvbG9yXCI6IFwidHJhbnNwYXJlbnRcIixcclxuXHRcdFx0XHRcdHBhZGRpbmc6IDAsXHJcblx0XHRcdFx0XHRtYXJnaW46IDBcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHQkKFwibGkuYW1hemluZ2Nhcm91c2VsLWl0ZW1cIiwgdGhpcy5jb250YWluZXIpLmNzcyh7XHJcblx0XHRcdFx0XHRkaXNwbGF5OiBcImJsb2NrXCIsXHJcblx0XHRcdFx0XHRwb3NpdGlvbjogXCJyZWxhdGl2ZVwiLFxyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLWltYWdlXCI6IFwibm9uZVwiLFxyXG5cdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLWNvbG9yXCI6IFwidHJhbnNwYXJlbnRcIixcclxuXHRcdFx0XHRcdG1hcmdpbjogMCxcclxuXHRcdFx0XHRcdHBhZGRpbmc6IDAsXHJcblx0XHRcdFx0XHRcImZsb2F0XCI6IHRoaXMub3B0aW9ucy5kaXJlY3Rpb24gPT0gXCJob3Jpem9udGFsXCIgPyBcImxlZnRcIiA6IFwidG9wXCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLnNhbWVoZWlnaHQgJiYgdGhpcy5vcHRpb25zLmRpcmVjdGlvbiA9PSBcImhvcml6b250YWxcIikge1xyXG5cdFx0XHRcdFx0JChcInVsLmFtYXppbmdjYXJvdXNlbC1saXN0XCIsIHRoaXMuY29udGFpbmVyKS5jc3Moe1xyXG5cdFx0XHRcdFx0XHRcIndoaXRlLXNwYWNlXCI6IFwibm93cmFwXCJcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0JChcImxpLmFtYXppbmdjYXJvdXNlbC1pdGVtXCIsIHRoaXMuY29udGFpbmVyKS5jc3Moe1xyXG5cdFx0XHRcdFx0XHRkaXNwbGF5OiBcImlubGluZS1ibG9ja1wiLFxyXG5cdFx0XHRcdFx0XHRcImZsb2F0XCI6IFwibm9uZVwiXHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR2YXIgbSA9IDA7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5zcGFjaW5nID4gMClcclxuXHRcdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMuZGlyZWN0aW9uID09IFwiaG9yaXpvbnRhbFwiKSB7XHJcblx0XHRcdFx0XHRcdHZhciBzID0gTWF0aC5taW4odGhpcy5vcHRpb25zLnNwYWNpbmcgLyAyKTtcclxuXHRcdFx0XHRcdFx0bSA9IFwiMCBcIiArIHMgKyBcInB4XCJcclxuXHRcdFx0XHRcdH0gZWxzZSBtID0gXCIwIDAgXCIgKyB0aGlzLm9wdGlvbnMuc3BhY2luZyArIFwicHggMFwiO1xyXG5cdFx0XHRcdHZhciBpdGVtQ3NzID0ge307XHJcblx0XHRcdFx0aXRlbUNzc1tcInBvc2l0aW9uXCJdID0gXCJyZWxhdGl2ZVwiO1xyXG5cdFx0XHRcdGl0ZW1Dc3NbXCJtYXJnaW5cIl0gPSBtO1xyXG5cdFx0XHRcdCQoXCJkaXYuYW1hemluZ2Nhcm91c2VsLWl0ZW0tY29udGFpbmVyXCIsIHRoaXMuY29udGFpbmVyKS5jc3MoaXRlbUNzcyk7XHJcblx0XHRcdFx0dmFyIGxpc3RDc3MgPSB7fTtcclxuXHRcdFx0XHRsaXN0Q3NzW1wicG9zaXRpb25cIl0gPSBcInJlbGF0aXZlXCI7XHJcblx0XHRcdFx0bGlzdENzc1tcIm1hcmdpblwiXSA9IFwiMCBhdXRvXCI7XHJcblx0XHRcdFx0bGlzdENzc1tcIm92ZXJmbG93XCJdID0gXCJ2aXNpYmxlXCI7XHJcblx0XHRcdFx0JChcImRpdi5hbWF6aW5nY2Fyb3VzZWwtbGlzdC1jb250YWluZXJcIiwgdGhpcy5jb250YWluZXIpLmNzcyhsaXN0Q3NzKTtcclxuXHRcdFx0XHR2YXIgd3JhcHBlckNzcyA9IHt9O1xyXG5cdFx0XHRcdHdyYXBwZXJDc3NbXCJvdmVyZmxvd1wiXSA9IFwiaGlkZGVuXCI7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5kaXJlY3Rpb24gPT0gXCJ2ZXJ0aWNhbFwiKSB3cmFwcGVyQ3NzW1wiaGVpZ2h0XCJdID0gXCIxMDAlXCI7XHJcblx0XHRcdFx0JChcImRpdi5hbWF6aW5nY2Fyb3VzZWwtbGlzdC13cmFwcGVyXCIsIHRoaXMuY29udGFpbmVyKS5jc3Mod3JhcHBlckNzcylcclxuXHRcdFx0fSxcclxuXHRcdFx0aGlkZVZpZGVvOiBmdW5jdGlvbiAoc3RhcnQpIHtcclxuXHRcdFx0XHR2YXIgaW5zdGFuY2UgPSB0aGlzO1xyXG5cdFx0XHRcdHZhciBpbmRleCA9IDA7XHJcblx0XHRcdFx0JChcImxpLmFtYXppbmdjYXJvdXNlbC1pdGVtXCIsIHRoaXMuY29udGFpbmVyKS5lYWNoKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdGlmIChpbmRleCA8IHN0YXJ0IHx8IGluZGV4ID49IHN0YXJ0ICsgaW5zdGFuY2UudmlzaWJsZUl0ZW1zKSAkKFwiLmFtYXppbmdjYXJvdXNlbC1wbGF5LXZpZGVvXCIsICQodGhpcykpLmVtcHR5KCk7XHJcblx0XHRcdFx0XHRpbmRleCsrXHJcblx0XHRcdFx0fSlcclxuXHRcdFx0fSxcclxuXHRcdFx0Y2FsY1NhbWVIZWlnaHQ6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHR2YXIgaXRlbUhlaWdodCA9IHRoaXMub3B0aW9ucy5oZWlnaHQ7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5yZXNwb25zaXZlICYmIHRoaXMub3B0aW9ucy5zYW1laGVpZ2h0cmVzcG9uc2l2ZSkge1xyXG5cdFx0XHRcdFx0dmFyIHNjcmVlbldpZHRoID0gJCh3aW5kb3cpLndpZHRoKCk7XHJcblx0XHRcdFx0XHRpZiAoc2NyZWVuV2lkdGggPCB0aGlzLm9wdGlvbnMuc2FtZWhlaWdodHNtYWxsc2NyZWVuKSBpdGVtSGVpZ2h0ID0gdGhpcy5vcHRpb25zLnNhbWVoZWlnaHRzbWFsbGhlaWdodDtcclxuXHRcdFx0XHRcdGVsc2UgaWYgKHNjcmVlbldpZHRoIDwgdGhpcy5vcHRpb25zLnNhbWVoZWlnaHRtZWRpdW1zY3JlZW4pIGl0ZW1IZWlnaHQgPSB0aGlzLm9wdGlvbnMuc2FtZWhlaWdodG1lZGl1bWhlaWdodDtcclxuXHRcdFx0XHRcdGVsc2UgaXRlbUhlaWdodCA9IHRoaXMub3B0aW9ucy5oZWlnaHRcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0cmV0dXJuIGl0ZW1IZWlnaHRcclxuXHRcdFx0fSxcclxuXHRcdFx0cmVzaXplQ2Fyb3VzZWw6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHR2YXIgaW5zdGFuY2UgPSB0aGlzO1xyXG5cdFx0XHRcdHRoaXMudmlzaWJsZUl0ZW1zID0gdGhpcy5vcHRpb25zLnZpc2libGVpdGVtcztcclxuXHRcdFx0XHR0aGlzLml0ZW1TaXplID0gdGhpcy5vcHRpb25zLndpZHRoO1xyXG5cdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZSlcclxuXHRcdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMuZGlyZWN0aW9uID09IFwiaG9yaXpvbnRhbFwiKSB7XHJcblx0XHRcdFx0XHRcdHZhciBjb25XaWR0aDtcclxuXHRcdFx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy51c2VzY3JlZW5xdWVyeSkge1xyXG5cdFx0XHRcdFx0XHRcdGNvbldpZHRoID0gJChcIi5hbWF6aW5nY2Fyb3VzZWwtbGlzdC1jb250YWluZXJcIiwgdGhpcy5jb250YWluZXIpLndpZHRoKCk7XHJcblx0XHRcdFx0XHRcdFx0aWYgKGNvbldpZHRoID4gMCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0dmFyIHNjcmVlbldpZHRoID0gJCh3aW5kb3cpLndpZHRoKCk7XHJcblx0XHRcdFx0XHRcdFx0XHRmb3IgKHZhciBpIGluIHRoaXMub3B0aW9ucy5zY3JlZW5xdWVyeSlcclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKHNjcmVlbldpZHRoIDwgdGhpcy5vcHRpb25zLnNjcmVlbnF1ZXJ5W2ldLnNjcmVlbndpZHRoKSB0aGlzLnZpc2libGVJdGVtcyA9XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhpcy5vcHRpb25zLnNjcmVlbnF1ZXJ5W2ldLnZpc2libGVpdGVtcztcclxuXHRcdFx0XHRcdFx0XHRcdHRoaXMuaXRlbVNpemUgPSBNYXRoLnJvdW5kKGNvbldpZHRoIC8gdGhpcy52aXNpYmxlSXRlbXMpO1xyXG5cdFx0XHRcdFx0XHRcdFx0JChcIi5hbWF6aW5nY2Fyb3VzZWwtbGlzdC13cmFwcGVyXCIsIHRoaXMuY29udGFpbmVyKS53aWR0aChjb25XaWR0aClcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHRcdFx0Y29uV2lkdGggPSB0aGlzLmNvbnRhaW5lci53aWR0aCgpO1xyXG5cdFx0XHRcdFx0XHRcdGlmIChjb25XaWR0aCA+IDApIHtcclxuXHRcdFx0XHRcdFx0XHRcdHRoaXMudmlzaWJsZUl0ZW1zID0gTWF0aC5mbG9vcihjb25XaWR0aCAvIHRoaXMub3B0aW9ucy53aWR0aCk7XHJcblx0XHRcdFx0XHRcdFx0XHRpZiAodGhpcy52aXNpYmxlSXRlbXMgPCAxKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHRoaXMudmlzaWJsZUl0ZW1zID0gMTtcclxuXHRcdFx0XHRcdFx0XHRcdFx0dGhpcy5pdGVtU2l6ZSA9IGNvbldpZHRoXHJcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2UgdGhpcy5pdGVtU2l6ZSA9IHRoaXMub3B0aW9ucy53aWR0aDtcclxuXHRcdFx0XHRcdFx0XHRcdCQoXCIuYW1hemluZ2Nhcm91c2VsLWxpc3QtY29udGFpbmVyXCIsIHRoaXMuY29udGFpbmVyKS53aWR0aCh0aGlzLnZpc2libGVJdGVtcyAqIHRoaXMuaXRlbVNpemUpO1xyXG5cdFx0XHRcdFx0XHRcdFx0JChcIi5hbWF6aW5nY2Fyb3VzZWwtbGlzdC13cmFwcGVyXCIsXHJcblx0XHRcdFx0XHRcdFx0XHRcdHRoaXMuY29udGFpbmVyKS53aWR0aCh0aGlzLnZpc2libGVJdGVtcyAqIHRoaXMuaXRlbVNpemUpXHJcblx0XHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHR2YXIgaXRlbVdpZHRoID0gJChcIi5hbWF6aW5nY2Fyb3VzZWwtbGlzdC1jb250YWluZXJcIiwgdGhpcy5jb250YWluZXIpLndpZHRoKCk7XHJcblx0XHRcdFx0XHRcdGlmIChpdGVtV2lkdGggPiAwKSB7XHJcblx0XHRcdFx0XHRcdFx0dGhpcy5pdGVtU2l6ZSA9IGl0ZW1XaWR0aDtcclxuXHRcdFx0XHRcdFx0XHQkKFwiLmFtYXppbmdjYXJvdXNlbC1saXN0LXdyYXBwZXJcIiwgdGhpcy5jb250YWluZXIpLndpZHRoKGl0ZW1XaWR0aClcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMuc2FtZWhlaWdodCAmJiB0aGlzLm9wdGlvbnMuZGlyZWN0aW9uID09IFwiaG9yaXpvbnRhbFwiKSB7XHJcblx0XHRcdFx0XHRpbnN0YW5jZS5pdGVtSGVpZ2h0ID0gaW5zdGFuY2UuY2FsY1NhbWVIZWlnaHQoKTtcclxuXHRcdFx0XHRcdCQoXCIuYW1hemluZ2Nhcm91c2VsLWltYWdlXCIsIHRoaXMuY29udGFpbmVyKS5maW5kKFwiaW1nXCIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHQkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XHRcdFx0d2lkdGg6IFwiYXV0b1wiLFxyXG5cdFx0XHRcdFx0XHRcdGhlaWdodDogaW5zdGFuY2UuaXRlbUhlaWdodCArIFwicHhcIlxyXG5cdFx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0JChcImxpLmFtYXppbmdjYXJvdXNlbC1pdGVtXCIsXHJcblx0XHRcdFx0XHRcdHRoaXMuY29udGFpbmVyKS5jc3Moe1xyXG5cdFx0XHRcdFx0XHR3aWR0aDogdGhpcy5pdGVtU2l6ZSArIFwicHhcIlxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLmRpcmVjdGlvbiA9PSBcInZlcnRpY2FsXCIpIHRoaXMuaXRlbVNpemUgPSAkKFwibGkuYW1hemluZ2Nhcm91c2VsLWl0ZW1cIiwgdGhpcy5jb250YWluZXIpLmhlaWdodCgpO1xyXG5cdFx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5maXhhc3BlY3RyYXRpbykge1xyXG5cdFx0XHRcdFx0XHR2YXIgaW1hZ2VXaWR0aCA9ICQoXCIuYW1hemluZ2Nhcm91c2VsLWltYWdlXCIsIHRoaXMuY29udGFpbmVyKS53aWR0aCgpO1xyXG5cdFx0XHRcdFx0XHR2YXIgaW1hZ2VIZWlnaHQgPSBpbWFnZVdpZHRoICogdGhpcy5vcHRpb25zLmhlaWdodCAvIHRoaXMub3B0aW9ucy53aWR0aDtcclxuXHRcdFx0XHRcdFx0JChcIi5hbWF6aW5nY2Fyb3VzZWwtaW1hZ2VcIiwgdGhpcy5jb250YWluZXIpLmNzcyh7XHJcblx0XHRcdFx0XHRcdFx0aGVpZ2h0OiBpbWFnZUhlaWdodCArIFwicHhcIixcclxuXHRcdFx0XHRcdFx0XHRvdmVyZmxvdzogXCJoaWRkZW5cIlxyXG5cdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0JChcIi5hbWF6aW5nY2Fyb3VzZWwtaW1hZ2VcIiwgdGhpcy5jb250YWluZXIpLmZpbmQoXCJpbWdcIikuZWFjaChmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRcdFx0dmFyIGltZ1cgPSAkKHRoaXMpLndpZHRoKCk7XHJcblx0XHRcdFx0XHRcdFx0dmFyIGltZ0ggPSAkKHRoaXMpLmhlaWdodCgpO1xyXG5cdFx0XHRcdFx0XHRcdGlmIChpbWdXID4gMCAmJiBpbWdIICYmIGltZ1cgLyBpbWdIID4gaW5zdGFuY2Uub3B0aW9ucy53aWR0aCAvIGluc3RhbmNlLm9wdGlvbnMuaGVpZ2h0KSB7XHJcblx0XHRcdFx0XHRcdFx0XHQkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XHRcdFx0XHRcdHdpZHRoOiBcImF1dG9cIixcclxuXHRcdFx0XHRcdFx0XHRcdFx0aGVpZ2h0OiBcIjEwMCVcIixcclxuXHRcdFx0XHRcdFx0XHRcdFx0XCJtYXgtd2lkdGhcIjogXCJub25lXCIsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFwibWF4LWhlaWdodFwiOiBcIjEwMCVcIixcclxuXHRcdFx0XHRcdFx0XHRcdFx0XCJtYXJnaW4tdG9wXCI6IFwiMHB4XCIsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFwibWFyZ2luLWxlZnRcIjogXCIwcHhcIlxyXG5cdFx0XHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdFx0XHRpZiAoaW5zdGFuY2Uub3B0aW9ucy5jZW50ZXJpbWFnZSlcclxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCQodGhpcykud2lkdGgoKSA+IDApIHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHR2YXIgbWwgPSAoJCh0aGlzKS5jbG9zZXN0KFwiLmFtYXppbmdjYXJvdXNlbC1pbWFnZVwiKS53aWR0aCgpIC0gJCh0aGlzKS53aWR0aCgpKSAvIDI7XHJcblx0XHRcdFx0XHRcdFx0XHRcdFx0JCh0aGlzKS5jc3Moe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XCJtYXJnaW4tbGVmdFwiOiBtbCArIFwicHhcIlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdFx0JCh0aGlzKS5jc3Moe1xyXG5cdFx0XHRcdFx0XHRcdFx0XHR3aWR0aDogXCIxMDAlXCIsXHJcblx0XHRcdFx0XHRcdFx0XHRcdGhlaWdodDogXCJhdXRvXCIsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFwibWF4LXdpZHRoXCI6IFwiMTAwJVwiLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcIm1heC1oZWlnaHRcIjogXCJub25lXCIsXHJcblx0XHRcdFx0XHRcdFx0XHRcdFwibWFyZ2luLXRvcFwiOiBcIjBweFwiLFxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcIm1hcmdpbi1sZWZ0XCI6IFwiMHB4XCJcclxuXHRcdFx0XHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMuY2VudGVyaW1hZ2UpXHJcblx0XHRcdFx0XHRcdFx0XHRcdGlmICgkKHRoaXMpLmhlaWdodCgpID4gMCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHZhciBtdCA9ICgkKHRoaXMpLmNsb3Nlc3QoXCIuYW1hemluZ2Nhcm91c2VsLWltYWdlXCIpLmhlaWdodCgpIC0gJCh0aGlzKS5oZWlnaHQoKSkgLyAyO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdCQodGhpcykuY3NzKHtcclxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFwibWFyZ2luLXRvcFwiOiBtdCArIFwicHhcIlxyXG5cdFx0XHRcdFx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMuZGlyZWN0aW9uID09IFwiaG9yaXpvbnRhbFwiKVxyXG5cdFx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5zYW1laGVpZ2h0KSAkKFwidWwuYW1hemluZ2Nhcm91c2VsLWxpc3RcIiwgdGhpcy5jb250YWluZXIpLmNzcyh7XHJcblx0XHRcdFx0XHRcdHdpZHRoOiBcImF1dG9cIlxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRlbHNlICQoXCJ1bC5hbWF6aW5nY2Fyb3VzZWwtbGlzdFwiLCB0aGlzLmNvbnRhaW5lcikuY3NzKFwid2lkdGhcIiwgdGhpcy5pdGVtU2l6ZSAqICh0aGlzLm9wdGlvbnMuY2lyY3VsYXIgPyB0aGlzLmVsZW1Ub3RhbENvdW50IDogdGhpcy5lbGVtTGVuZ3RoKSArIFwicHhcIik7XHJcblx0XHRcdFx0ZWxzZSAkKFwidWwuYW1hemluZ2Nhcm91c2VsLWxpc3RcIiwgdGhpcy5jb250YWluZXIpLmNzcyhcImhlaWdodFwiLFxyXG5cdFx0XHRcdFx0dGhpcy5vcHRpb25zLmhlaWdodCAqICh0aGlzLm9wdGlvbnMuY2lyY3VsYXIgPyB0aGlzLmVsZW1Ub3RhbENvdW50IDogdGhpcy5lbGVtTGVuZ3RoKSArIFwicHhcIik7XHJcblx0XHRcdFx0dmFyIGNzc1Byb3AgPSB0aGlzLm9wdGlvbnMuZGlyZWN0aW9uID09IFwiaG9yaXpvbnRhbFwiID8gXCJtYXJnaW4tbGVmdFwiIDogXCJtYXJnaW4tdG9wXCI7XHJcblx0XHRcdFx0dmFyIGl0ZW1TaXplID0gdGhpcy5vcHRpb25zLmRpcmVjdGlvbiA9PSBcImhvcml6b250YWxcIiA/IHRoaXMuaXRlbVNpemUgOiB0aGlzLm9wdGlvbnMuaGVpZ2h0O1xyXG5cdFx0XHRcdHZhciBwb3MgPSAtaXRlbVNpemUgKiB0aGlzLmN1cnJlbnRJdGVtO1xyXG5cdFx0XHRcdCQoXCJ1bC5hbWF6aW5nY2Fyb3VzZWwtbGlzdFwiLCB0aGlzLmNvbnRhaW5lcikuY3NzKGNzc1Byb3AsIHBvcyArIFwicHhcIik7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5kaXJlY3Rpb24gPT0gXCJ2ZXJ0aWNhbFwiKSB7XHJcblx0XHRcdFx0XHR2YXIgaXRlbUhlaWdodCA9IHRoaXMub3B0aW9ucy5oZWlnaHQ7XHJcblx0XHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLmZpeGFzcGVjdHJhdGlvKSB7XHJcblx0XHRcdFx0XHRcdGlmICgkKFwiLmFtYXppbmdjYXJvdXNlbC1pdGVtXCIsIHRoaXMuY29udGFpbmVyKS5oZWlnaHQoKSA+XHJcblx0XHRcdFx0XHRcdFx0MCkgaXRlbUhlaWdodCA9ICQoXCIuYW1hemluZ2Nhcm91c2VsLWl0ZW1cIiwgdGhpcy5jb250YWluZXIpLmhlaWdodCgpXHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHR2YXIgaDAgPSAkKFwiLmFtYXppbmdjYXJvdXNlbC1pdGVtXCIsIHRoaXMuY29udGFpbmVyKS5oZWlnaHQoKTtcclxuXHRcdFx0XHRcdFx0aWYgKGgwID4gMCkge1xyXG5cdFx0XHRcdFx0XHRcdHZhciBlcXVhbEhlaWdodCA9IHRydWU7XHJcblx0XHRcdFx0XHRcdFx0JChcIi5hbWF6aW5nY2Fyb3VzZWwtaXRlbVwiLCB0aGlzLmNvbnRhaW5lcikuZWFjaChmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRcdFx0XHRpZiAoJCh0aGlzKS5oZWlnaHQoKSAhPSBoMCkge1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRlcXVhbEhlaWdodCA9IGZhbHNlO1xyXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRcdFx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdFx0XHRpZiAoZXF1YWxIZWlnaHQpIGl0ZW1IZWlnaHQgPSBoMFxyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHQkKFwiZGl2LmFtYXppbmdjYXJvdXNlbC1saXN0LWNvbnRhaW5lclwiLCB0aGlzLmNvbnRhaW5lcikuY3NzKHtcclxuXHRcdFx0XHRcdFx0aGVpZ2h0OiBTdHJpbmcoaXRlbUhlaWdodCAqIHRoaXMudmlzaWJsZUl0ZW1zICsgdGhpcy5vcHRpb25zLnNwYWNpbmcgKiAodGhpcy52aXNpYmxlSXRlbXMgLSAxKSkgKyBcInB4XCJcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHRoaXMuaGlkZVZpZGVvKHRoaXMuY3VycmVudEl0ZW0pO1xyXG5cdFx0XHRcdHRoaXMuaGlkZUFycm93cygpO1xyXG5cdFx0XHRcdHRoaXMuY29udGFpbmVyLmNzcyh7XHJcblx0XHRcdFx0XHRkaXNwbGF5OiBcImJsb2NrXCJcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRjcmVhdGVHb29nbGVGb250czogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMucHJldmlld21vZGUpIHJldHVybjtcclxuXHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLmFkZGdvb2dsZWZvbnRzICYmIHRoaXMub3B0aW9ucy5nb29nbGVmb250cyAmJiB0aGlzLm9wdGlvbnMuZ29vZ2xlZm9udHMubGVuZ3RoID4gMCkge1xyXG5cdFx0XHRcdFx0dmFyIHByb3RvY29sID0gd2luZG93LmxvY2F0aW9uLnByb3RvY29sID09IFwiaHR0cHM6XCIgPyBcImh0dHBzOlwiIDogXCJodHRwOlwiO1xyXG5cdFx0XHRcdFx0dmFyIGZvbnRSZWYgPSBwcm90b2NvbCArIFwiLy9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVwiICsgdGhpcy5vcHRpb25zLmdvb2dsZWZvbnRzO1xyXG5cdFx0XHRcdFx0dmFyIGZvbnRMaW5rID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpbmtcIik7XHJcblx0XHRcdFx0XHRmb250TGluay5zZXRBdHRyaWJ1dGUoXCJyZWxcIiwgXCJzdHlsZXNoZWV0XCIpO1xyXG5cdFx0XHRcdFx0Zm9udExpbmsuc2V0QXR0cmlidXRlKFwidHlwZVwiLCBcInRleHQvY3NzXCIpO1xyXG5cdFx0XHRcdFx0Zm9udExpbmsuc2V0QXR0cmlidXRlKFwiaHJlZlwiLCBmb250UmVmKTtcclxuXHRcdFx0XHRcdGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwiaGVhZFwiKVswXS5hcHBlbmRDaGlsZChmb250TGluaylcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sXHJcblx0XHRcdGNyZWF0ZVdhdGVybWFyazogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGlmICghdGhpcy5vcHRpb25zLnNob3d3YXRlcm1hcmspIHJldHVybjtcclxuXHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLndhdGVybWFya3N0eWxlID09IFwidGV4dFwiICYmIHRoaXMub3B0aW9ucy53YXRlcm1hcmt0ZXh0Lmxlbmd0aCA8PSAwKSByZXR1cm47XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy53YXRlcm1hcmtzdHlsZSA9PSBcImltYWdlXCIgJiYgdGhpcy5vcHRpb25zLndhdGVybWFya2ltYWdlLmxlbmd0aCA8PSAwKSByZXR1cm47XHJcblx0XHRcdFx0dmFyIHdtQ29kZSA9IFwiPGRpdiBzdHlsZT0nXCIgKyB0aGlzLm9wdGlvbnMud2F0ZXJtYXJrcG9zaXRpb25jc3M7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy53YXRlcm1hcmtzdHlsZSA9PSBcInRleHRcIikgd21Db2RlICs9IHRoaXMub3B0aW9ucy53YXRlcm1hcmt0ZXh0Y3NzO1xyXG5cdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMud2F0ZXJtYXJrbGluaykgd21Db2RlICs9IFwiY3Vyc29yOnBvaW50ZXI7XCI7XHJcblx0XHRcdFx0d21Db2RlICs9XHJcblx0XHRcdFx0XHRcIic+XCI7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy53YXRlcm1hcmtsaW5rKSB7XHJcblx0XHRcdFx0XHR3bUNvZGUgKz0gXCI8YSBocmVmPSdcIiArIHRoaXMub3B0aW9ucy53YXRlcm1hcmtsaW5rICsgXCInIHN0eWxlPSdcIiArIHRoaXMub3B0aW9ucy53YXRlcm1hcmtsaW5rY3NzICsgXCInXCI7XHJcblx0XHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLndhdGVybWFya3RhcmdldCkgd21Db2RlICs9IFwiIHRhcmdldD0nXCIgKyB0aGlzLm9wdGlvbnMud2F0ZXJtYXJrdGFyZ2V0ICsgXCInXCI7XHJcblx0XHRcdFx0XHR3bUNvZGUgKz0gXCI+XCJcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy53YXRlcm1hcmtzdHlsZSA9PSBcInRleHRcIikgd21Db2RlICs9IHRoaXMub3B0aW9ucy53YXRlcm1hcmt0ZXh0O1xyXG5cdFx0XHRcdGVsc2UgaWYgKHRoaXMub3B0aW9ucy53YXRlcm1hcmtzdHlsZSA9PSBcImltYWdlXCIpIHdtQ29kZSArPSBcIjxpbWcgc3JjPSdcIiArIHRoaXMub3B0aW9ucy5za2luc2ZvbGRlciArIHRoaXMub3B0aW9ucy53YXRlcm1hcmtpbWFnZSArIFwiJyBzdHlsZT0nYm9yZGVyOm5vbmU7JyAvPlwiO1xyXG5cdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMud2F0ZXJtYXJrbGluaykgd21Db2RlICs9IFwiPC9hPlwiO1xyXG5cdFx0XHRcdHdtQ29kZSArPSBcIjwvZGl2PlwiO1xyXG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgJChcIi5hbWF6aW5nY2Fyb3VzZWwtaW1hZ2VcIiwgdGhpcy5jb250YWluZXIpLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLnZlcnNpb25tYXJrICE9IFwiQU1DXCIgKyBcIm9tXCIgJiYgaSAlIDIgIT0gMCkgY29udGludWU7XHJcblx0XHRcdFx0XHQkKFwiLmFtYXppbmdjYXJvdXNlbC1pbWFnZVwiLCB0aGlzLmNvbnRhaW5lcikuZXEoaSkuYXBwZW5kKCQod21Db2RlKSlcclxuXHRcdFx0XHR9XHJcblx0XHRcdH0sXHJcblx0XHRcdGNyZWF0ZVNsaWRlclRpbWVvdXQ6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHR2YXIgaW5zdGFuY2UgPSB0aGlzO1xyXG5cdFx0XHRcdHRoaXMuc2xpZGVyVGltZW91dCA9IG5ldyBBU1RpbWVyKHRoaXMub3B0aW9ucy5pbnRlcnZhbCwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0aW5zdGFuY2Uuc2xpZGVSdW4oLTEpXHJcblx0XHRcdFx0fSwgbnVsbCk7XHJcblx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMucGF1c2Vvbm1vdXNlb3ZlcikgdGhpcy5jb250YWluZXIuaG92ZXIoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0aW5zdGFuY2UubW91c2VQYXVzZWQgPSB0cnVlO1xyXG5cdFx0XHRcdFx0aWYgKCFpbnN0YW5jZS5pc1BhdXNlZCkgaW5zdGFuY2Uuc2xpZGVyVGltZW91dC5wYXVzZSgpO1xyXG5cdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMuY29udGludW91cykge1xyXG5cdFx0XHRcdFx0XHQkKFwidWwuYW1hemluZ2Nhcm91c2VsLWxpc3RcIixcclxuXHRcdFx0XHRcdFx0XHRpbnN0YW5jZS5jb250YWluZXIpLnN0b3AoKTtcclxuXHRcdFx0XHRcdFx0Y2xlYXJJbnRlcnZhbChpbnN0YW5jZS50cmFuc2l0aW9uVGltZXJJZCk7XHJcblx0XHRcdFx0XHRcdGluc3RhbmNlLnRyYW5zaXRpb25UaW1lcklkID0gbnVsbFxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0sIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdGluc3RhbmNlLm1vdXNlUGF1c2VkID0gZmFsc2U7XHJcblx0XHRcdFx0XHRpZiAoIWluc3RhbmNlLmlzUGF1c2VkKSBpbnN0YW5jZS5zbGlkZXJUaW1lb3V0LnJlc3VtZSgpO1xyXG5cdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMuY29udGludW91cykge1xyXG5cdFx0XHRcdFx0XHQkKFwidWwuYW1hemluZ2Nhcm91c2VsLWxpc3RcIiwgaW5zdGFuY2UuY29udGFpbmVyKS5hbmltYXRlKGluc3RhbmNlLmFuaW1Qcm9wLCBpbnN0YW5jZS50cmFuc2l0aW9uVGltaW5nLCBpbnN0YW5jZS5vcHRpb25zLnRyYW5zaXRpb25lYXNpbmcsIGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0XHRpbnN0YW5jZS5hbmltYXRpb25Eb25lKClcclxuXHRcdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHRcdGluc3RhbmNlLnRyYW5zaXRpb25UaW1lcklkID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRcdGluc3RhbmNlLnRyYW5zaXRpb25UaW1pbmcgLT0gMTAwXHJcblx0XHRcdFx0XHRcdH0sIDEwMClcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRjcmVhdGVJdGVtQm90dG9tU2hhZG93OiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0aWYgKCF0aGlzLm9wdGlvbnMuc2hvd2l0ZW1ib3R0b21zaGFkb3cpIHJldHVybjtcclxuXHRcdFx0XHR2YXIgbCA9ICgxMDAgLSB0aGlzLm9wdGlvbnMuaXRlbWJvdHRvbXNoYWRvd2ltYWdld2lkdGgpIC8gMjtcclxuXHRcdFx0XHR2YXIgc2hhZG93ID0gXCI8ZGl2IGNsYXNzPSdhbWF6aW5nY2Fyb3VzZWwtaXRlbS1ib3R0b20tc2hhZG93JyBcIiArIFwic3R5bGU9J2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7bGVmdDpcIiArIGwgKyBcIiU7dG9wOlwiICsgdGhpcy5vcHRpb25zLml0ZW1ib3R0b21zaGFkb3dpbWFnZXRvcCArIFwiJTtcIiArIFwid2lkdGg6XCIgKyB0aGlzLm9wdGlvbnMuaXRlbWJvdHRvbXNoYWRvd2ltYWdld2lkdGggKyBcIiU7aGVpZ2h0OmF1dG87Jz5cIiArIFwiPGltZyBzcmM9J1wiICsgdGhpcy5vcHRpb25zLnNraW5zZm9sZGVyICsgdGhpcy5vcHRpb25zLml0ZW1ib3R0b21zaGFkb3dpbWFnZSArIFwiJyBzdHlsZT0nZGlzcGxheTpibG9jaztwb3NpdGlvbjpyZWxhdGl2ZTt3aWR0aDoxMDAlO2hlaWdodDphdXRvO1wiICsgXCJib3JkZXI6MDtib3gtc2hhZG93Om5vbmU7LW1vei1ib3gtc2hhZG93Om5vbmU7LXdlYmtpdC1ib3gtc2hhZG93Om5vbmU7Ym9yZGVyLXJhZGl1czowOy1tb3otYm9yZGVyLXJhZGl1czowOy13ZWJraXQtYm9yZGVyLXJhZGl1czowO1wiICtcclxuXHRcdFx0XHRcdFwiJyAvPlwiICsgXCI8L2Rpdj5cIjtcclxuXHRcdFx0XHQkKFwibGkuYW1hemluZ2Nhcm91c2VsLWl0ZW1cIiwgdGhpcy5jb250YWluZXIpLnByZXBlbmQoc2hhZG93KVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRjcmVhdGVCb3R0b21TaGFkb3c6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRpZiAoIXRoaXMub3B0aW9ucy5zaG93Ym90dG9tc2hhZG93KSByZXR1cm47XHJcblx0XHRcdFx0dmFyIGwgPSAoMTAwIC0gdGhpcy5vcHRpb25zLmJvdHRvbXNoYWRvd2ltYWdld2lkdGgpIC8gMjtcclxuXHRcdFx0XHR2YXIgc2hhZG93ID0gXCI8ZGl2IGNsYXNzPSdhbWF6aW5nY2Fyb3VzZWwtYm90dG9tLXNoYWRvdycgXCIgKyBcInN0eWxlPSdkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6XCIgKyBsICsgXCIlO3RvcDpcIiArIHRoaXMub3B0aW9ucy5ib3R0b21zaGFkb3dpbWFnZXRvcCArIFwiJTtcIiArIFwid2lkdGg6XCIgKyB0aGlzLm9wdGlvbnMuYm90dG9tc2hhZG93aW1hZ2V3aWR0aCArIFwiJTtoZWlnaHQ6YXV0bzsnPlwiICsgXCI8aW1nIHNyYz0nXCIgKyB0aGlzLm9wdGlvbnMuc2tpbnNmb2xkZXIgKyB0aGlzLm9wdGlvbnMuYm90dG9tc2hhZG93aW1hZ2UgKyBcIicgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtoZWlnaHQ6YXV0bztcIiArXHJcblx0XHRcdFx0XHRcImJvcmRlcjowO2JveC1zaGFkb3c6bm9uZTstbW96LWJveC1zaGFkb3c6bm9uZTstd2Via2l0LWJveC1zaGFkb3c6bm9uZTtib3JkZXItcmFkaXVzOjA7LW1vei1ib3JkZXItcmFkaXVzOjA7LXdlYmtpdC1ib3JkZXItcmFkaXVzOjA7XCIgKyBcIicgLz5cIiArIFwiPC9kaXY+XCI7XHJcblx0XHRcdFx0JChcIi5hbWF6aW5nY2Fyb3VzZWwtbGlzdC1jb250YWluZXJcIiwgdGhpcy5jb250YWluZXIpLnByZXBlbmQoc2hhZG93KVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRjcmVhdGVJdGVtQmFja2dyb3VuZEltYWdlOiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0aWYgKCF0aGlzLm9wdGlvbnMuc2hvd2l0ZW1iYWNrZ3JvdW5kaW1hZ2UgfHwgIXRoaXMub3B0aW9ucy5pdGVtYmFja2dyb3VuZGltYWdlKSByZXR1cm47XHJcblx0XHRcdFx0dmFyIGwgPSAoMTAwIC0gdGhpcy5vcHRpb25zLml0ZW1iYWNrZ3JvdW5kaW1hZ2V3aWR0aCkgLyAyO1xyXG5cdFx0XHRcdHZhciBiYWNrZ3JvdW5kID0gXCI8ZGl2IGNsYXNzPSdhbWF6aW5nY2Fyb3VzZWwtYmFja2dyb3VuZC1pbWFnZScgXCIgKyBcInN0eWxlPSdkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO2xlZnQ6XCIgK1xyXG5cdFx0XHRcdFx0bCArIFwiJTt0b3A6XCIgKyB0aGlzLm9wdGlvbnMuaXRlbWJhY2tncm91bmRpbWFnZXRvcCArIFwiJTt3aWR0aDpcIiArIHRoaXMub3B0aW9ucy5pdGVtYmFja2dyb3VuZGltYWdld2lkdGggKyBcIiU7aGVpZ2h0OmF1dG87Jz5cIiArIFwiPGltZyBzcmM9J1wiICsgdGhpcy5vcHRpb25zLnNraW5zZm9sZGVyICsgdGhpcy5vcHRpb25zLml0ZW1iYWNrZ3JvdW5kaW1hZ2UgKyBcIicgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtoZWlnaHQ6YXV0bztcIiArIFwiYm9yZGVyOjA7Ym94LXNoYWRvdzpub25lOy1tb3otYm94LXNoYWRvdzpub25lOy13ZWJraXQtYm94LXNoYWRvdzpub25lO2JvcmRlci1yYWRpdXM6MDstbW96LWJvcmRlci1yYWRpdXM6MDstd2Via2l0LWJvcmRlci1yYWRpdXM6MDtcIiArIFwiJyAvPlwiICsgXCI8L2Rpdj5cIjtcclxuXHRcdFx0XHQkKFwibGkuYW1hemluZ2Nhcm91c2VsLWl0ZW1cIiwgdGhpcy5jb250YWluZXIpLnByZXBlbmQoYmFja2dyb3VuZClcclxuXHRcdFx0fSxcclxuXHRcdFx0Y3JlYXRlQmFja2dyb3VuZEltYWdlOiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0aWYgKCF0aGlzLm9wdGlvbnMuc2hvd2JhY2tncm91bmRpbWFnZSB8fFxyXG5cdFx0XHRcdFx0IXRoaXMub3B0aW9ucy5iYWNrZ3JvdW5kaW1hZ2UpIHJldHVybjtcclxuXHRcdFx0XHR2YXIgbCA9ICgxMDAgLSB0aGlzLm9wdGlvbnMuYmFja2dyb3VuZGltYWdld2lkdGgpIC8gMjtcclxuXHRcdFx0XHR2YXIgYmFja2dyb3VuZCA9IFwiPGRpdiBjbGFzcz0nYW1hemluZ2Nhcm91c2VsLWJhY2tncm91bmQtaW1hZ2UnIFwiICsgXCJzdHlsZT0nZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0OlwiICsgbCArIFwiJTt0b3A6XCIgKyB0aGlzLm9wdGlvbnMuYmFja2dyb3VuZGltYWdldG9wICsgXCIlO3dpZHRoOlwiICsgdGhpcy5vcHRpb25zLmJhY2tncm91bmRpbWFnZXdpZHRoICsgXCIlO2hlaWdodDphdXRvOyc+XCIgKyBcIjxpbWcgc3JjPSdcIiArIHRoaXMub3B0aW9ucy5za2luc2ZvbGRlciArIHRoaXMub3B0aW9ucy5iYWNrZ3JvdW5kaW1hZ2UgKyBcIicgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6MTAwJTtoZWlnaHQ6YXV0bztcIiArIFwiYm9yZGVyOjA7Ym94LXNoYWRvdzpub25lOy1tb3otYm94LXNoYWRvdzpub25lOy13ZWJraXQtYm94LXNoYWRvdzpub25lO2JvcmRlci1yYWRpdXM6MDstbW96LWJvcmRlci1yYWRpdXM6MDstd2Via2l0LWJvcmRlci1yYWRpdXM6MDtcIiArXHJcblx0XHRcdFx0XHRcIicgLz5cIiArIFwiPC9kaXY+XCI7XHJcblx0XHRcdFx0dGhpcy5jb250YWluZXIucHJlcGVuZChiYWNrZ3JvdW5kKVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRjcmVhdGVBcnJvd3M6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLmFycm93c3R5bGUgPT0gXCJub25lXCIpIHJldHVybjtcclxuXHRcdFx0XHR2YXIgaW5zdGFuY2UgPSB0aGlzO1xyXG5cdFx0XHRcdHZhciAkcHJldkFycm93ID0gJChcIi5hbWF6aW5nY2Fyb3VzZWwtcHJldlwiLCB0aGlzLmNvbnRhaW5lcik7XHJcblx0XHRcdFx0dmFyICRuZXh0QXJyb3cgPSAkKFwiLmFtYXppbmdjYXJvdXNlbC1uZXh0XCIsIHRoaXMuY29udGFpbmVyKTtcclxuXHRcdFx0XHQkcHJldkFycm93LmNzcyh7XHJcblx0XHRcdFx0XHRvdmVyZmxvdzogXCJoaWRkZW5cIixcclxuXHRcdFx0XHRcdHBvc2l0aW9uOiBcImFic29sdXRlXCIsXHJcblx0XHRcdFx0XHRjdXJzb3I6IFwicG9pbnRlclwiLFxyXG5cdFx0XHRcdFx0d2lkdGg6IHRoaXMub3B0aW9ucy5hcnJvd3dpZHRoICsgXCJweFwiLFxyXG5cdFx0XHRcdFx0aGVpZ2h0OiB0aGlzLm9wdGlvbnMuYXJyb3doZWlnaHQgKyBcInB4XCIsXHJcblx0XHRcdFx0XHRiYWNrZ3JvdW5kOiBcInVybCgnXCIgKyB0aGlzLm9wdGlvbnMuYXJyb3dpbWFnZSArIFwiJykgbm8tcmVwZWF0IGxlZnQgdG9wXCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpZiAoQUNQbGF0Zm9ybXMuaXNJRTY3OCgpKSAkcHJldkFycm93LmNzcyh7XHJcblx0XHRcdFx0XHRvcGFjaXR5OiBcImluaGVyaXRcIixcclxuXHRcdFx0XHRcdGZpbHRlcjogXCJpbmhlcml0XCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHQkbmV4dEFycm93LmNzcyh7XHJcblx0XHRcdFx0XHRvdmVyZmxvdzogXCJoaWRkZW5cIixcclxuXHRcdFx0XHRcdHBvc2l0aW9uOiBcImFic29sdXRlXCIsXHJcblx0XHRcdFx0XHRjdXJzb3I6IFwicG9pbnRlclwiLFxyXG5cdFx0XHRcdFx0d2lkdGg6IHRoaXMub3B0aW9ucy5hcnJvd3dpZHRoICsgXCJweFwiLFxyXG5cdFx0XHRcdFx0aGVpZ2h0OiB0aGlzLm9wdGlvbnMuYXJyb3doZWlnaHQgKyBcInB4XCIsXHJcblx0XHRcdFx0XHRiYWNrZ3JvdW5kOiBcInVybCgnXCIgKyB0aGlzLm9wdGlvbnMuYXJyb3dpbWFnZSArIFwiJykgbm8tcmVwZWF0IHJpZ2h0IHRvcFwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aWYgKEFDUGxhdGZvcm1zLmlzSUU2NzgoKSkgJG5leHRBcnJvdy5jc3Moe1xyXG5cdFx0XHRcdFx0b3BhY2l0eTogXCJpbmhlcml0XCIsXHJcblx0XHRcdFx0XHRmaWx0ZXI6IFwiaW5oZXJpdFwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0JHByZXZBcnJvdy5ob3ZlcihmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHQkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XHRcdFwiYmFja2dyb3VuZC1wb3NpdGlvblwiOiBcImxlZnQgYm90dG9tXCJcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fSwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0JCh0aGlzKS5jc3Moe1xyXG5cdFx0XHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogXCJsZWZ0IHRvcFwiXHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdCRuZXh0QXJyb3cuaG92ZXIoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHQkKHRoaXMpLmNzcyh7XHJcblx0XHRcdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCI6IFwicmlnaHQgYm90dG9tXCJcclxuXHRcdFx0XHRcdFx0fSlcclxuXHRcdFx0XHRcdH0sXHJcblx0XHRcdFx0XHRmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRcdCQodGhpcykuY3NzKHtcclxuXHRcdFx0XHRcdFx0XHRcImJhY2tncm91bmQtcG9zaXRpb25cIjogXCJyaWdodCB0b3BcIlxyXG5cdFx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5hcnJvd3N0eWxlID09IFwiYWx3YXlzXCIpIHtcclxuXHRcdFx0XHRcdCRwcmV2QXJyb3cuY3NzKHtcclxuXHRcdFx0XHRcdFx0ZGlzcGxheTogXCJibG9ja1wiXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdCRuZXh0QXJyb3cuY3NzKHtcclxuXHRcdFx0XHRcdFx0ZGlzcGxheTogXCJibG9ja1wiXHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHQkcHJldkFycm93LmNzcyh7XHJcblx0XHRcdFx0XHRcdGRpc3BsYXk6IFwibm9uZVwiXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdCRuZXh0QXJyb3cuY3NzKHtcclxuXHRcdFx0XHRcdFx0ZGlzcGxheTogXCJub25lXCJcclxuXHRcdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFx0dGhpcy5jb250YWluZXIuaG92ZXIoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRjbGVhclRpbWVvdXQoaW5zdGFuY2UuYXJyb3dUaW1lb3V0KTtcclxuXHRcdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMuY2lyY3VsYXIgfHwgaW5zdGFuY2UuY3VycmVudEl0ZW0gPiAwKVxyXG5cdFx0XHRcdFx0XHRcdGlmIChBQ1BsYXRmb3Jtcy5pc0lFNjc4KCkpICRwcmV2QXJyb3cuc2hvdygpO1xyXG5cdFx0XHRcdFx0XHRcdGVsc2UgJHByZXZBcnJvdy5mYWRlSW4oKTtcclxuXHRcdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMuY2lyY3VsYXIgfHwgaW5zdGFuY2UuY3VycmVudEl0ZW0gPCBpbnN0YW5jZS5lbGVtTGVuZ3RoIC0gaW5zdGFuY2UudmlzaWJsZUl0ZW1zKVxyXG5cdFx0XHRcdFx0XHRcdGlmIChBQ1BsYXRmb3Jtcy5pc0lFNjc4KCkpICRuZXh0QXJyb3cuc2hvdygpO1xyXG5cdFx0XHRcdFx0XHRcdGVsc2UgJG5leHRBcnJvdy5mYWRlSW4oKVxyXG5cdFx0XHRcdFx0fSwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHRpbnN0YW5jZS5hcnJvd1RpbWVvdXQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0XHRpZiAoQUNQbGF0Zm9ybXMuaXNJRTY3OCgpKSB7XHJcblx0XHRcdFx0XHRcdFx0XHQkcHJldkFycm93LmhpZGUoKTtcclxuXHRcdFx0XHRcdFx0XHRcdCRuZXh0QXJyb3cuaGlkZSgpXHJcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRcdCRwcmV2QXJyb3cuZmFkZU91dCgpO1xyXG5cdFx0XHRcdFx0XHRcdFx0JG5leHRBcnJvdy5mYWRlT3V0KClcclxuXHRcdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdH0sIGluc3RhbmNlLm9wdGlvbnMuYXJyb3doaWRlb25tb3VzZWxlYXZlKVxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHR9XHJcblx0XHRcdFx0JHByZXZBcnJvdy5jbGljayhmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRpbnN0YW5jZS5zbGlkZVJ1bigtMilcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHQkbmV4dEFycm93LmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdGluc3RhbmNlLnNsaWRlUnVuKC0xKVxyXG5cdFx0XHRcdH0pXHJcblx0XHRcdH0sXHJcblx0XHRcdGhpZGVBcnJvd3M6IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHR2YXIgJHByZXZBcnJvdyA9ICQoXCIuYW1hemluZ2Nhcm91c2VsLXByZXZcIiwgdGhpcy5jb250YWluZXIpO1xyXG5cdFx0XHRcdHZhciAkbmV4dEFycm93ID0gJChcIi5hbWF6aW5nY2Fyb3VzZWwtbmV4dFwiLCB0aGlzLmNvbnRhaW5lcik7XHJcblx0XHRcdFx0aWYgKCF0aGlzLm9wdGlvbnMuY2lyY3VsYXIgJiZcclxuXHRcdFx0XHRcdHRoaXMuY3VycmVudEl0ZW0gPD0gMCkgJHByZXZBcnJvdy5oaWRlKCk7XHJcblx0XHRcdFx0ZWxzZSBpZiAodGhpcy5vcHRpb25zLmFycm93c3R5bGUgPT0gXCJhbHdheXNcIikgJHByZXZBcnJvdy5zaG93KCk7XHJcblx0XHRcdFx0aWYgKCF0aGlzLm9wdGlvbnMuY2lyY3VsYXIgJiYgdGhpcy5jdXJyZW50SXRlbSA+PSB0aGlzLmVsZW1MZW5ndGggLSB0aGlzLnZpc2libGVJdGVtcykgJG5leHRBcnJvdy5oaWRlKCk7XHJcblx0XHRcdFx0ZWxzZSBpZiAodGhpcy5vcHRpb25zLmFycm93c3R5bGUgPT0gXCJhbHdheXNcIikgJG5leHRBcnJvdy5zaG93KClcclxuXHRcdFx0fSxcclxuXHRcdFx0Y3JlYXRlTmF2OiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5uYXZzdHlsZSA9PSBcIm5vbmVcIikgcmV0dXJuO1xyXG5cdFx0XHRcdHZhciAkbmF2ID0gJChcIi5hbWF6aW5nY2Fyb3VzZWwtbmF2XCIsIHRoaXMuY29udGFpbmVyKTtcclxuXHRcdFx0XHR2YXIgJGJ1bGxldFdyYXBwZXIgPSAkKFwiPGRpdiBjbGFzcz0nYW1hemluZ2Nhcm91c2VsLWJ1bGxldC13cmFwcGVyJz48L2Rpdj5cIik7XHJcblx0XHRcdFx0JGJ1bGxldFdyYXBwZXIuYXBwZW5kVG8oJG5hdik7XHJcblx0XHRcdFx0dmFyICRidWxsZXRMaXN0ID0gJChcIjxkaXYgY2xhc3M9J2FtYXppbmdjYXJvdXNlbC1idWxsZXQtbGlzdCc+PC9kaXY+XCIpO1xyXG5cdFx0XHRcdCRidWxsZXRMaXN0LmFwcGVuZFRvKCRidWxsZXRXcmFwcGVyKTtcclxuXHRcdFx0XHR2YXIgYnVsbGV0U2l6ZSA9IHRoaXMub3B0aW9ucy5uYXZkaXJlY3Rpb24gPT0gXCJ2ZXJ0aWNhbFwiID8gdGhpcy5vcHRpb25zLm5hdndpZHRoIDogdGhpcy5vcHRpb25zLm5hdmhlaWdodDtcclxuXHRcdFx0XHR2YXIgbGVuID0gdGhpcy5lbGVtTGVuZ3RoICogYnVsbGV0U2l6ZSArICh0aGlzLmVsZW1MZW5ndGggLSAxKSAqIHRoaXMub3B0aW9ucy5uYXZzcGFjaW5nO1xyXG5cdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMubmF2ZGlyZWN0aW9uID09IFwidmVydGljYWxcIikge1xyXG5cdFx0XHRcdFx0JGJ1bGxldFdyYXBwZXIuY3NzKHtcclxuXHRcdFx0XHRcdFx0aGVpZ2h0OiBsZW4gKyBcInB4XCIsXHJcblx0XHRcdFx0XHRcdHdpZHRoOiBcImF1dG9cIlxyXG5cdFx0XHRcdFx0fSk7XHJcblx0XHRcdFx0XHQkYnVsbGV0TGlzdC5jc3Moe1xyXG5cdFx0XHRcdFx0XHRoZWlnaHQ6IGxlbiArIFwicHhcIixcclxuXHRcdFx0XHRcdFx0d2lkdGg6IFwiYXV0b1wiXHJcblx0XHRcdFx0XHR9KVxyXG5cdFx0XHRcdH0gZWxzZSB7XHJcblx0XHRcdFx0XHQkYnVsbGV0V3JhcHBlci5jc3Moe1xyXG5cdFx0XHRcdFx0XHR3aWR0aDogbGVuICsgXCJweFwiLFxyXG5cdFx0XHRcdFx0XHRoZWlnaHQ6IFwiYXV0b1wiXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdCRidWxsZXRMaXN0LmNzcyh7XHJcblx0XHRcdFx0XHRcdHdpZHRoOiBsZW4gKyBcInB4XCIsXHJcblx0XHRcdFx0XHRcdGhlaWdodDogXCJhdXRvXCJcclxuXHRcdFx0XHRcdH0pXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHZhciAkYnVsbGV0O1xyXG5cdFx0XHRcdGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5lbGVtTGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0XHRcdCRidWxsZXQgPVxyXG5cdFx0XHRcdFx0XHR0aGlzLmNyZWF0ZU5hdkJ1bGxldChpKTtcclxuXHRcdFx0XHRcdCRidWxsZXRMaXN0LmFwcGVuZCgkYnVsbGV0KVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR2YXIgaW5zdGFuY2UgPSB0aGlzO1xyXG5cdFx0XHRcdHRoaXMuY29udGFpbmVyLmJpbmQoXCJhbWF6aW5nY2Fyb3VzZWwuc3dpdGNoXCIsIGZ1bmN0aW9uIChldmVudCwgcHJldiwgY3VyKSB7XHJcblx0XHRcdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGluc3RhbmNlLmVsZW1MZW5ndGg7IGkrKykgJChcIi5hbWF6aW5nY2Fyb3VzZWwtYnVsbGV0LVwiICsgaSwgaW5zdGFuY2UuY29udGFpbmVyKVtcImJ1bGxldE5vcm1hbFwiICsgaW5zdGFuY2UuaWRdKCk7XHJcblx0XHRcdFx0XHRpZiAoY3VyID49IDApIHtcclxuXHRcdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMubmF2bW9kZSA9PSBcInBhZ2VcIikgY3VyID0gTWF0aC5mbG9vcihjdXIgLyBpbnN0YW5jZS52aXNpYmxlSXRlbXMpO1xyXG5cdFx0XHRcdFx0XHQkKFwiLmFtYXppbmdjYXJvdXNlbC1idWxsZXQtXCIgKyBjdXIsIGluc3RhbmNlLmNvbnRhaW5lcilbXCJidWxsZXRTZWxlY3RlZFwiICsgaW5zdGFuY2UuaWRdKClcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRjcmVhdGVOYXZCdWxsZXQ6IGZ1bmN0aW9uIChpbmRleCkge1xyXG5cdFx0XHRcdHZhciBmID0gdGhpcy5vcHRpb25zLm5hdmRpcmVjdGlvbiA9PVxyXG5cdFx0XHRcdFx0XCJ2ZXJ0aWNhbFwiID8gXCJ0b3BcIiA6IFwibGVmdFwiO1xyXG5cdFx0XHRcdHZhciBtYXJnaW5GID0gdGhpcy5vcHRpb25zLm5hdmRpcmVjdGlvbiA9PSBcInZlcnRpY2FsXCIgPyBcImJvdHRvbVwiIDogXCJyaWdodFwiO1xyXG5cdFx0XHRcdHZhciBzcGFjaW5nID0gaW5kZXggPT0gdGhpcy5lbGVtTGVuZ3RoIC0gMSA/IDAgOiB0aGlzLm9wdGlvbnMubmF2c3BhY2luZztcclxuXHRcdFx0XHR2YXIgdyA9IHRoaXMub3B0aW9ucy5uYXZ3aWR0aDtcclxuXHRcdFx0XHR2YXIgaCA9IHRoaXMub3B0aW9ucy5uYXZoZWlnaHQ7XHJcblx0XHRcdFx0dmFyICRidWxsZXQgPSAkKFwiPGRpdiBjbGFzcz0nYW1hemluZ2Nhcm91c2VsLWJ1bGxldC1cIiArIGluZGV4ICsgXCInIHN0eWxlPSdwb3NpdGlvbjpyZWxhdGl2ZTtmbG9hdDpcIiArIGYgKyBcIjttYXJnaW4tXCIgKyBtYXJnaW5GICsgXCI6XCIgKyBzcGFjaW5nICsgXCJweDt3aWR0aDpcIiArIHcgKyBcInB4O2hlaWdodDpcIiArIGggKyBcInB4O2N1cnNvcjpwb2ludGVyOyc+PC9kaXY+XCIpO1xyXG5cdFx0XHRcdCRidWxsZXQuZGF0YShcImluZGV4XCIsIGluZGV4KTtcclxuXHRcdFx0XHR2YXIgaW5zdGFuY2UgPSB0aGlzO1xyXG5cdFx0XHRcdCRidWxsZXQuaG92ZXIoZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0dmFyIGJ1bGxldEluZGV4ID0gJCh0aGlzKS5kYXRhKFwiaW5kZXhcIik7XHJcblx0XHRcdFx0XHRpZiAoYnVsbGV0SW5kZXggIT0gaW5zdGFuY2UuY3VycmVudEl0ZW0pICQodGhpcylbXCJidWxsZXRIaWdobGlnaHRcIiArIGluc3RhbmNlLmlkXSgpO1xyXG5cdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMubmF2c3dpdGNob25tb3VzZW92ZXIpIHtcclxuXHRcdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMubmF2bW9kZSA9PSBcInBhZ2VcIikgYnVsbGV0SW5kZXggPSBpbnN0YW5jZS52aXNpYmxlSXRlbXMgKiBidWxsZXRJbmRleDtcclxuXHRcdFx0XHRcdFx0aW5zdGFuY2Uuc2xpZGVSdW4oYnVsbGV0SW5kZXgpXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fSwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0dmFyIGN1ciA9IGluc3RhbmNlLmN1cnJlbnRJdGVtO1xyXG5cdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMubmF2bW9kZSA9PSBcInBhZ2VcIikgY3VyID0gTWF0aC5mbG9vcihjdXIgLyBpbnN0YW5jZS52aXNpYmxlSXRlbXMpO1xyXG5cdFx0XHRcdFx0aWYgKCQodGhpcykuZGF0YShcImluZGV4XCIpICE9IGN1cikgJCh0aGlzKVtcImJ1bGxldE5vcm1hbFwiICsgaW5zdGFuY2UuaWRdKClcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHQkYnVsbGV0LmNsaWNrKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdHZhciBidWxsZXRJbmRleCA9ICQodGhpcykuZGF0YShcImluZGV4XCIpO1xyXG5cdFx0XHRcdFx0aWYgKGluc3RhbmNlLm9wdGlvbnMubmF2bW9kZSA9PVxyXG5cdFx0XHRcdFx0XHRcInBhZ2VcIikgYnVsbGV0SW5kZXggPSBpbnN0YW5jZS52aXNpYmxlSXRlbXMgKiBidWxsZXRJbmRleDtcclxuXHRcdFx0XHRcdGluc3RhbmNlLnNsaWRlUnVuKGJ1bGxldEluZGV4KVxyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdCRidWxsZXQuY3NzKHtcclxuXHRcdFx0XHRcdGJhY2tncm91bmQ6IFwidXJsKCdcIiArIHRoaXMub3B0aW9ucy5uYXZpbWFnZSArIFwiJykgbm8tcmVwZWF0IGxlZnQgdG9wXCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHQkLmZuW1wiYnVsbGV0Tm9ybWFsXCIgKyB0aGlzLmlkXSA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdCQodGhpcykuY3NzKHtcclxuXHRcdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCI6IFwibGVmdCB0b3BcIlxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHRcdCQuZm5bXCJidWxsZXRIaWdobGlnaHRcIiArIHRoaXMuaWRdID0gJC5mbltcImJ1bGxldFNlbGVjdGVkXCIgKyB0aGlzLmlkXSA9IGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdCQodGhpcykuY3NzKHtcclxuXHRcdFx0XHRcdFx0XCJiYWNrZ3JvdW5kLXBvc2l0aW9uXCI6IFwibGVmdCBib3R0b21cIlxyXG5cdFx0XHRcdFx0fSlcclxuXHRcdFx0XHR9O1xyXG5cdFx0XHRcdHJldHVybiAkYnVsbGV0XHJcblx0XHRcdH0sXHJcblx0XHRcdHJlc2l6ZU5hdjogZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMubmF2c3R5bGUgPT0gXCJub25lXCIgfHwgdGhpcy5vcHRpb25zLm5hdm1vZGUgPT0gXCJpdGVtXCIpIHJldHVybjtcclxuXHRcdFx0XHR2YXIgcGFnZSA9IE1hdGguY2VpbCh0aGlzLmVsZW1MZW5ndGggL1xyXG5cdFx0XHRcdFx0dGhpcy52aXNpYmxlSXRlbXMpO1xyXG5cdFx0XHRcdHZhciBpO1xyXG5cdFx0XHRcdGZvciAoaSA9IDA7IGkgPCBwYWdlOyBpKyspICQoXCIuYW1hemluZ2Nhcm91c2VsLWJ1bGxldC1cIiArIGksIHRoaXMuY29udGFpbmVyKS5jc3Moe1xyXG5cdFx0XHRcdFx0ZGlzcGxheTogXCJibG9ja1wiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0Zm9yIChpID0gcGFnZTsgaSA8IHRoaXMuZWxlbUxlbmd0aDsgaSsrKSAkKFwiLmFtYXppbmdjYXJvdXNlbC1idWxsZXQtXCIgKyBpLCB0aGlzLmNvbnRhaW5lcikuY3NzKHtcclxuXHRcdFx0XHRcdGRpc3BsYXk6IFwibm9uZVwiXHJcblx0XHRcdFx0fSk7XHJcblx0XHRcdFx0dmFyIGN1clBhZ2UgPSBNYXRoLmZsb29yKHRoaXMuY3VycmVudEl0ZW0gLyB0aGlzLnZpc2libGVJdGVtcyk7XHJcblx0XHRcdFx0Zm9yIChpID0gMDsgaSA8IHRoaXMuZWxlbUxlbmd0aDsgaSsrKSAkKFwiLmFtYXppbmdjYXJvdXNlbC1idWxsZXQtXCIgKyBpLCB0aGlzLmNvbnRhaW5lcilbXCJidWxsZXROb3JtYWxcIiArIHRoaXMuaWRdO1xyXG5cdFx0XHRcdCQoXCIuYW1hemluZ2Nhcm91c2VsLWJ1bGxldC1cIiArIGN1clBhZ2UsIHRoaXMuY29udGFpbmVyKVtcImJ1bGxldEhpZ2hsaWdodFwiICsgdGhpcy5pZF07XHJcblx0XHRcdFx0dmFyIGJ1bGxldFNpemUgPSB0aGlzLm9wdGlvbnMubmF2ZGlyZWN0aW9uID09IFwidmVydGljYWxcIiA/XHJcblx0XHRcdFx0XHR0aGlzLm9wdGlvbnMubmF2d2lkdGggOiB0aGlzLm9wdGlvbnMubmF2aGVpZ2h0O1xyXG5cdFx0XHRcdHZhciBsZW4gPSBwYWdlICogYnVsbGV0U2l6ZSArIChwYWdlIC0gMSkgKiB0aGlzLm9wdGlvbnMubmF2c3BhY2luZztcclxuXHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLm5hdmRpcmVjdGlvbiA9PSBcInZlcnRpY2FsXCIpICQoXCIuYW1hemluZ2Nhcm91c2VsLWJ1bGxldC13cmFwcGVyXCIsIHRoaXMuY29udGFpbmVyKS5jc3Moe1xyXG5cdFx0XHRcdFx0aGVpZ2h0OiBsZW4gKyBcInB4XCIsXHJcblx0XHRcdFx0XHR3aWR0aDogXCJhdXRvXCJcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRlbHNlICQoXCIuYW1hemluZ2Nhcm91c2VsLWJ1bGxldC13cmFwcGVyXCIsIHRoaXMuY29udGFpbmVyKS5jc3Moe1xyXG5cdFx0XHRcdFx0d2lkdGg6IGxlbiArIFwicHhcIixcclxuXHRcdFx0XHRcdGhlaWdodDogXCJhdXRvXCJcclxuXHRcdFx0XHR9KVxyXG5cdFx0XHR9LFxyXG5cdFx0XHRhbmltYXRpb25Eb25lOiBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0Y2xlYXJJbnRlcnZhbCh0aGlzLnRyYW5zaXRpb25UaW1lcklkKTtcclxuXHRcdFx0XHR0aGlzLnRyYW5zaXRpb25UaW1lcklkID0gbnVsbDtcclxuXHRcdFx0XHR0aGlzLnRyYW5zaXRpb25UaW1pbmcgPSAwO1xyXG5cdFx0XHRcdHRoaXMuaXNBbmltYXRpbmcgPSBmYWxzZTtcclxuXHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLmxvb3AgPiAwKVxyXG5cdFx0XHRcdFx0aWYgKHRoaXMuY3VycmVudEl0ZW0gK1xyXG5cdFx0XHRcdFx0XHR0aGlzLnZpc2libGVJdGVtcyA+PSB0aGlzLmVsZW1MZW5ndGgpIHtcclxuXHRcdFx0XHRcdFx0dGhpcy5sb29wQ291bnQrKztcclxuXHRcdFx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5sb29wIDw9IHRoaXMubG9vcENvdW50KSB0aGlzLmlzUGF1c2VkID0gdHJ1ZVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdGlmICghdGhpcy5pc1BhdXNlZCAmJiAhdGhpcy50ZW1wUGF1c2VkICYmICF0aGlzLm1vdXNlUGF1c2VkKSB0aGlzLnNsaWRlclRpbWVvdXQuc3RhcnQoKTtcclxuXHRcdFx0XHRlbHNlIHRoaXMuc2xpZGVyVGltZW91dC5zdG9wKClcclxuXHRcdFx0fSxcclxuXHRcdFx0c2xpZGVSdW46IGZ1bmN0aW9uIChpbmRleCkge1xyXG5cdFx0XHRcdGlmICh0aGlzLmlzQW5pbWF0aW5nKSByZXR1cm47XHJcblx0XHRcdFx0aWYgKGluZGV4ID09IHRoaXMuY3VycmVudEl0ZW0gfHwgaW5kZXggPCAtMiB8fCBpbmRleCA+PSB0aGlzLmVsZW1MZW5ndGgpIHJldHVybjtcclxuXHRcdFx0XHR2YXIgc2Nyb2xsSXRlbXM7XHJcblx0XHRcdFx0aWYgKGluZGV4ID49IDApIHNjcm9sbEl0ZW1zID0gMTtcclxuXHRcdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRcdHNjcm9sbEl0ZW1zID0gdGhpcy52aXNpYmxlSXRlbXM7XHJcblx0XHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLnNjcm9sbG1vZGUgPT0gXCJpdGVtXCIpXHJcblx0XHRcdFx0XHRcdGlmIChzY3JvbGxJdGVtcyA+IHRoaXMub3B0aW9ucy5zY3JvbGxpdGVtcykgc2Nyb2xsSXRlbXMgPVxyXG5cdFx0XHRcdFx0XHRcdHRoaXMub3B0aW9ucy5zY3JvbGxpdGVtc1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHR2YXIgbmV4dEl0ZW0sIGRpcjtcclxuXHRcdFx0XHRpZiAoaW5kZXggPT0gLTIpIHtcclxuXHRcdFx0XHRcdGRpciA9IC0xO1xyXG5cdFx0XHRcdFx0bmV4dEl0ZW0gPSB0aGlzLmN1cnJlbnRJdGVtIC0gc2Nyb2xsSXRlbXNcclxuXHRcdFx0XHR9IGVsc2UgaWYgKGluZGV4ID09IC0xKSB7XHJcblx0XHRcdFx0XHRkaXIgPSAxO1xyXG5cdFx0XHRcdFx0bmV4dEl0ZW0gPSB0aGlzLmN1cnJlbnRJdGVtICsgc2Nyb2xsSXRlbXNcclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0ZGlyID0gaW5kZXggPiB0aGlzLmN1cnJlbnRJdGVtID8gMSA6IC0xO1xyXG5cdFx0XHRcdFx0bmV4dEl0ZW0gPSBpbmRleFxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRpZiAoZGlyIDwgMCkge1xyXG5cdFx0XHRcdFx0aWYgKG5leHRJdGVtIDwgMCkgbmV4dEl0ZW0gPSB0aGlzLm9wdGlvbnMuY2lyY3VsYXIgPyB0aGlzLmVsZW1MZW5ndGggKyBuZXh0SXRlbSA6IDBcclxuXHRcdFx0XHR9IGVsc2UgaWYgKHRoaXMub3B0aW9ucy5jaXJjdWxhcikge1xyXG5cdFx0XHRcdFx0aWYgKG5leHRJdGVtID49IHRoaXMuZWxlbUxlbmd0aCkgbmV4dEl0ZW0gPSBuZXh0SXRlbSAtIHRoaXMuZWxlbUxlbmd0aFxyXG5cdFx0XHRcdH0gZWxzZSBpZiAobmV4dEl0ZW0gPiB0aGlzLmVsZW1MZW5ndGggLSB0aGlzLnZpc2libGVJdGVtcykgbmV4dEl0ZW0gPSB0aGlzLmVsZW1MZW5ndGggLSB0aGlzLnZpc2libGVJdGVtcztcclxuXHRcdFx0XHRpZiAobmV4dEl0ZW0gPT0gdGhpcy5jdXJyZW50SXRlbSkgcmV0dXJuO1xyXG5cdFx0XHRcdHRoaXMuaXNBbmltYXRpbmcgPSB0cnVlO1xyXG5cdFx0XHRcdHRoaXMuc2xpZGVyVGltZW91dC5zdG9wKCk7XHJcblx0XHRcdFx0dGhpcy50ZW1wUGF1c2VkID0gZmFsc2U7XHJcblx0XHRcdFx0dmFyIGFuaW1Dc3MgPSB0aGlzLm9wdGlvbnMuZGlyZWN0aW9uID09IFwiaG9yaXpvbnRhbFwiID8gXCJtYXJnaW4tbGVmdFwiIDogXCJtYXJnaW4tdG9wXCI7XHJcblx0XHRcdFx0dmFyIGFuaW1JdGVtU2l6ZSA9IHRoaXMuaXRlbVNpemU7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5kaXJlY3Rpb24gPT0gXCJ2ZXJ0aWNhbFwiKSBhbmltSXRlbVNpemUgKz0gdGhpcy5vcHRpb25zLnNwYWNpbmc7XHJcblx0XHRcdFx0aWYgKHRoaXMub3B0aW9ucy5zYW1laGVpZ2h0ICYmIHRoaXMub3B0aW9ucy5jb250aW51b3VzICYmIHRoaXMub3B0aW9ucy5kaXJlY3Rpb24gPT0gXCJob3Jpem9udGFsXCIpIHtcclxuXHRcdFx0XHRcdHZhciB0b3RhbFdpZHRoID0gMDtcclxuXHRcdFx0XHRcdCQoXCJsaS5hbWF6aW5nY2Fyb3VzZWwtaXRlbVwiLCB0aGlzLmNvbnRhaW5lcikuZWFjaChmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRcdHRvdGFsV2lkdGggKz0gJCh0aGlzKS5vdXRlcldpZHRoKHRydWUpXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGlmICh0b3RhbFdpZHRoID4gMCAmJiAkKFwibGkuYW1hemluZ2Nhcm91c2VsLWl0ZW1cIixcclxuXHRcdFx0XHRcdFx0XHR0aGlzLmNvbnRhaW5lcikubGVuZ3RoID4gMCkgYW5pbUl0ZW1TaXplID0gdG90YWxXaWR0aCAvICQoXCJsaS5hbWF6aW5nY2Fyb3VzZWwtaXRlbVwiLCB0aGlzLmNvbnRhaW5lcikubGVuZ3RoXHJcblx0XHRcdFx0fSBlbHNlIGlmICh0aGlzLm9wdGlvbnMuZGlyZWN0aW9uID09IFwidmVydGljYWxcIikge1xyXG5cdFx0XHRcdFx0YW5pbUl0ZW1TaXplID0gdGhpcy5vcHRpb25zLmhlaWdodCArIHRoaXMub3B0aW9ucy5zcGFjaW5nO1xyXG5cdFx0XHRcdFx0dmFyIHRvdGFsSGVpZ2h0ID0gMDtcclxuXHRcdFx0XHRcdHZhciBpbnN0YW5jZSA9IHRoaXM7XHJcblx0XHRcdFx0XHQkKFwibGkuYW1hemluZ2Nhcm91c2VsLWl0ZW1cIiwgdGhpcy5jb250YWluZXIpLmVhY2goZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRcdFx0XHR0b3RhbEhlaWdodCArPSAkKHRoaXMpLmhlaWdodCgpICsgaW5zdGFuY2Uub3B0aW9ucy5zcGFjaW5nXHJcblx0XHRcdFx0XHR9KTtcclxuXHRcdFx0XHRcdGlmICh0b3RhbEhlaWdodCA+IDAgJiYgJChcImxpLmFtYXppbmdjYXJvdXNlbC1pdGVtXCIsIHRoaXMuY29udGFpbmVyKS5sZW5ndGggPiAwKSBhbmltSXRlbVNpemUgPSB0b3RhbEhlaWdodCAvICQoXCJsaS5hbWF6aW5nY2Fyb3VzZWwtaXRlbVwiLCB0aGlzLmNvbnRhaW5lcikubGVuZ3RoXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdHZhciBhbmltSW5pdFBvcyA9XHJcblx0XHRcdFx0XHRhbmltSXRlbVNpemUgKiB0aGlzLmN1cnJlbnRJdGVtO1xyXG5cdFx0XHRcdHZhciBhbmltVGFyZ2V0UG9zID0gYW5pbUl0ZW1TaXplICogbmV4dEl0ZW07XHJcblx0XHRcdFx0dmFyIHNob3dTdGFydCA9IG5leHRJdGVtO1xyXG5cdFx0XHRcdGlmICh0aGlzLm9wdGlvbnMuY2lyY3VsYXIpXHJcblx0XHRcdFx0XHRpZiAoZGlyIDwgMCkge1xyXG5cdFx0XHRcdFx0XHRpZiAobmV4dEl0ZW0gPiB0aGlzLmN1cnJlbnRJdGVtKSBhbmltSW5pdFBvcyA9IGFuaW1JdGVtU2l6ZSAqICh0aGlzLmVsZW1MZW5ndGggKyB0aGlzLmN1cnJlbnRJdGVtKVxyXG5cdFx0XHRcdFx0fSBlbHNlIGlmIChuZXh0SXRlbSA+IHRoaXMuZWxlbUxlbmd0aCAtIHNjcm9sbEl0ZW1zICYmIHRoaXMuZWxlbUxlbmd0aCA8IDIgKiBzY3JvbGxJdGVtcykgYW5pbUluaXRQb3MgPSBhbmltSXRlbVNpemUgKiAobmV4dEl0ZW0gLSBzY3JvbGxJdGVtcyk7XHJcblx0XHRcdFx0ZWxzZSBpZiAobmV4dEl0ZW0gPCB0aGlzLmN1cnJlbnRJdGVtKSB7XHJcblx0XHRcdFx0XHRhbmltVGFyZ2V0UG9zID0gYW5pbUl0ZW1TaXplICogKHRoaXMuZWxlbUxlbmd0aCArIG5leHRJdGVtKTtcclxuXHRcdFx0XHRcdHNob3dTdGFydCA9IHRoaXMuZWxlbUxlbmd0aCArIG5leHRJdGVtXHJcblx0XHRcdFx0fVxyXG5cdFx0XHRcdGFuaW1Jbml0UG9zID0gLWFuaW1Jbml0UG9zO1xyXG5cdFx0XHRcdGFuaW1UYXJnZXRQb3MgPSAtYW5pbVRhcmdldFBvcztcclxuXHRcdFx0XHQkKFwidWwuYW1hemluZ2Nhcm91c2VsLWxpc3RcIiwgdGhpcy5jb250YWluZXIpLmNzcyhhbmltQ3NzLCBhbmltSW5pdFBvcyArIFwicHhcIik7XHJcblx0XHRcdFx0dGhpcy5hbmltUHJvcCA9IHt9O1xyXG5cdFx0XHRcdHRoaXMuYW5pbVByb3BbYW5pbUNzc10gPSBhbmltVGFyZ2V0UG9zICsgXCJweFwiO1xyXG5cdFx0XHRcdHZhciBwcmV2SXRlbSA9IHRoaXMuY3VycmVudEl0ZW07XHJcblx0XHRcdFx0dGhpcy5jdXJyZW50SXRlbSA9IG5leHRJdGVtO1xyXG5cdFx0XHRcdHRoaXMuY29udGFpbmVyLnRyaWdnZXIoXCJhbWF6aW5nY2Fyb3VzZWwuc3dpdGNoXCIsIFtwcmV2SXRlbSwgbmV4dEl0ZW1dKTtcclxuXHRcdFx0XHR0aGlzLmhpZGVWaWRlbyhzaG93U3RhcnQpO1xyXG5cdFx0XHRcdHRoaXMuaGlkZUFycm93cygpO1xyXG5cdFx0XHRcdHZhciBpbnN0YW5jZSA9IHRoaXM7XHJcblx0XHRcdFx0JChcInVsLmFtYXppbmdjYXJvdXNlbC1saXN0XCIsIHRoaXMuY29udGFpbmVyKS5hbmltYXRlKHRoaXMuYW5pbVByb3AsIHRoaXMub3B0aW9ucy50cmFuc2l0aW9uZHVyYXRpb24sIHRoaXMub3B0aW9ucy50cmFuc2l0aW9uZWFzaW5nLCBmdW5jdGlvbiAoKSB7XHJcblx0XHRcdFx0XHRpbnN0YW5jZS5hbmltYXRpb25Eb25lKClcclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0XHRpZiAodGhpcy5vcHRpb25zLmNvbnRpbnVvdXMpIHtcclxuXHRcdFx0XHRcdGlmICh0aGlzLnRyYW5zaXRpb25UaW1lcklkKSB7XHJcblx0XHRcdFx0XHRcdGNsZWFySW50ZXJ2YWwodGhpcy50cmFuc2l0aW9uVGltZXJJZCk7XHJcblx0XHRcdFx0XHRcdHRoaXMudHJhbnNpdGlvblRpbWVySWQgPSBudWxsXHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHR0aGlzLnRyYW5zaXRpb25UaW1pbmcgPSB0aGlzLm9wdGlvbnMudHJhbnNpdGlvbmR1cmF0aW9uO1xyXG5cdFx0XHRcdFx0dGhpcy50cmFuc2l0aW9uVGltZXJJZCA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0XHRcdFx0aW5zdGFuY2UudHJhbnNpdGlvblRpbWluZyAtPSAxMDBcclxuXHRcdFx0XHRcdH0sIDEwMClcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0XHRvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcclxuXHRcdGZvciAodmFyIGtleSBpbiBvcHRpb25zKVxyXG5cdFx0XHRpZiAoa2V5LnRvTG93ZXJDYXNlKCkgIT09IGtleSkge1xyXG5cdFx0XHRcdG9wdGlvbnNba2V5LnRvTG93ZXJDYXNlKCldID0gb3B0aW9uc1trZXldO1xyXG5cdFx0XHRcdGRlbGV0ZSBvcHRpb25zW2tleV1cclxuXHRcdFx0fVxyXG5cdFx0dGhpcy5lYWNoKGZ1bmN0aW9uICgpIHtcclxuXHRcdFx0dGhpcy5vcHRpb25zID0gJC5leHRlbmQoe30sIG9wdGlvbnMpO1xyXG5cdFx0XHRpZiAoJCh0aGlzKS5kYXRhKFwic2tpblwiKSAmJiB0eXBlb2YgQU1BWklOR0NBUk9VU0VMX1NLSU5fT1BUSU9OUyAhPT1cclxuXHRcdFx0XHRcInVuZGVmaW5lZFwiKVxyXG5cdFx0XHRcdGlmICgkKHRoaXMpLmRhdGEoXCJza2luXCIpIGluIEFNQVpJTkdDQVJPVVNFTF9TS0lOX09QVElPTlMpIHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHt9LCBBTUFaSU5HQ0FST1VTRUxfU0tJTl9PUFRJT05TWyQodGhpcykuZGF0YShcInNraW5cIildLCB0aGlzLm9wdGlvbnMpO1xyXG5cdFx0XHR2YXIgaW5zdGFuY2UgPSB0aGlzO1xyXG5cdFx0XHQkLmVhY2goJCh0aGlzKS5kYXRhKCksIGZ1bmN0aW9uIChrZXksIHZhbHVlKSB7XHJcblx0XHRcdFx0aW5zdGFuY2Uub3B0aW9uc1trZXkudG9Mb3dlckNhc2UoKV0gPSB2YWx1ZVxyXG5cdFx0XHR9KTtcclxuXHRcdFx0dmFyIHNlYXJjaG9wdGlvbnMgPSB7fTtcclxuXHRcdFx0dmFyIHNlYXJjaHN0cmluZyA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3Vic3RyaW5nKDEpLnNwbGl0KFwiJlwiKTtcclxuXHRcdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzZWFyY2hzdHJpbmcubGVuZ3RoOyBpKyspIHtcclxuXHRcdFx0XHR2YXIga2V5dmFsdWUgPSBzZWFyY2hzdHJpbmdbaV0uc3BsaXQoXCI9XCIpO1xyXG5cdFx0XHRcdGlmIChrZXl2YWx1ZSAmJiBrZXl2YWx1ZS5sZW5ndGggPT0gMikge1xyXG5cdFx0XHRcdFx0dmFyIGtleSA9IGtleXZhbHVlWzBdLnRvTG93ZXJDYXNlKCk7XHJcblx0XHRcdFx0XHR2YXIgdmFsdWUgPVxyXG5cdFx0XHRcdFx0XHR1bmVzY2FwZShrZXl2YWx1ZVsxXSkudG9Mb3dlckNhc2UoKTtcclxuXHRcdFx0XHRcdGlmICh2YWx1ZSA9PSBcInRydWVcIikgc2VhcmNob3B0aW9uc1trZXldID0gdHJ1ZTtcclxuXHRcdFx0XHRcdGVsc2UgaWYgKHZhbHVlID09IFwiZmFsc2VcIikgc2VhcmNob3B0aW9uc1trZXldID0gZmFsc2U7XHJcblx0XHRcdFx0XHRlbHNlIHNlYXJjaG9wdGlvbnNba2V5XSA9IHZhbHVlXHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9XHJcblx0XHRcdHRoaXMub3B0aW9ucyA9ICQuZXh0ZW5kKHRoaXMub3B0aW9ucywgc2VhcmNob3B0aW9ucyk7XHJcblx0XHRcdHZhciBkZWZhdWx0T3B0aW9ucyA9IHtcclxuXHRcdFx0XHRzaG93Y29udGFpbmVyb25pbml0OiB0cnVlLFxyXG5cdFx0XHRcdHdhdGVybWFya2xpbmtkZWZhdWx0OiBcImh0dHA6Ly9hbWF6aW5nY2Fyb3VzZWwuY29tXCIsXHJcblx0XHRcdFx0d2F0ZXJtYXJrdGFyZ2V0ZGVmYXVsdDogXCJfYmxhbmtcIixcclxuXHRcdFx0XHRwcmV2aWV3bW9kZTogZmFsc2UsXHJcblx0XHRcdFx0ZGlyZWN0aW9uOiBcImhvcml6b250YWxcIixcclxuXHRcdFx0XHRhdXRvcGxheTogZmFsc2UsXHJcblx0XHRcdFx0cGF1c2Vvbm1vdXNlb3ZlcjogdHJ1ZSxcclxuXHRcdFx0XHRpbnRlcnZhbDogM0UzLFxyXG5cdFx0XHRcdGxvb3A6IDAsXHJcblx0XHRcdFx0cmFuZG9tOiB0cnVlLFxyXG5cdFx0XHRcdGZpeGFzcGVjdHJhdGlvOiBmYWxzZSxcclxuXHRcdFx0XHRjZW50ZXJpbWFnZTogZmFsc2UsXHJcblx0XHRcdFx0c2FtZWhlaWdodDogZmFsc2UsXHJcblx0XHRcdFx0c2FtZWhlaWdodHJlc3BvbnNpdmU6IGZhbHNlLFxyXG5cdFx0XHRcdHNhbWVoZWlnaHRtZWRpdW1zY3JlZW46IDc2OSxcclxuXHRcdFx0XHRzYW1laGVpZ2h0bWVkaXVtaGVpZ2h0OiAyMDAsXHJcblx0XHRcdFx0c2FtZWhlaWdodHNtYWxsc2NyZWVuOiA0MTUsXHJcblx0XHRcdFx0c2FtZWhlaWdodHNtYWxsaGVpZ2h0OiAyMDAsXHJcblx0XHRcdFx0bmF0aXZlaHRtbDVjb250cm9sczogZmFsc2UsXHJcblx0XHRcdFx0dmlkZW9oaWRlY29udHJvbHM6IGZhbHNlLFxyXG5cdFx0XHRcdHZpZGVvaGlkZXBsYXlidXR0b246IGZhbHNlLFxyXG5cdFx0XHRcdGRlZmF1bHR2aWRlb3ZvbHVtZTogMSxcclxuXHRcdFx0XHRjaXJjdWxhcjogdHJ1ZSxcclxuXHRcdFx0XHRzY3JvbGxtb2RlOiBcInBhZ2VcIixcclxuXHRcdFx0XHRzY3JvbGxpdGVtczogMSxcclxuXHRcdFx0XHRza2luc2ZvbGRlcm5hbWU6IFwic2tpbnNcIixcclxuXHRcdFx0XHRzaG93cGxheXZpZGVvOiBmYWxzZSxcclxuXHRcdFx0XHRwbGF5dmlkZW9pbWFnZTogXCJpbWcvcGxheXZpZGVvLTY0LTY0LTAucG5nXCIsXHJcblx0XHRcdFx0cGxheXZpZGVvaW1hZ2Vwb3M6IFwiY2VudGVyXCIsXHJcblx0XHRcdFx0c2hvd2hvdmVyb3ZlcmxheTogdHJ1ZSxcclxuXHRcdFx0XHRob3Zlcm92ZXJsYXlpbWFnZTogXCJpbWcvaG92ZXJvdmVybGF5LTY0LTY0LTAucG5nXCIsXHJcblx0XHRcdFx0c2hvd2hvdmVyb3ZlcmxheWFsd2F5czogZmFsc2UsXHJcblx0XHRcdFx0aGlkZWhvdmVyb3ZlcmxheW9udG91Y2g6IGZhbHNlLFxyXG5cdFx0XHRcdGVuYWJsZXRvdWNoc3dpcGU6IHRydWUsXHJcblx0XHRcdFx0cmVzcG9uc2l2ZTogZmFsc2UsXHJcblx0XHRcdFx0dXNlc2NyZWVucXVlcnk6IHRydWUsXHJcblx0XHRcdFx0c3BhY2luZzogMjQsXHJcblx0XHRcdFx0c2hvd2JhY2tncm91bmRpbWFnZTogZmFsc2UsXHJcblx0XHRcdFx0YmFja2dyb3VuZGltYWdlOiBcImJhY2tncm91bmQucG5nXCIsXHJcblx0XHRcdFx0YmFja2dyb3VuZGltYWdld2lkdGg6IDExMCxcclxuXHRcdFx0XHRiYWNrZ3JvdW5kaW1hZ2V0b3A6IC00MCxcclxuXHRcdFx0XHRzaG93aXRlbWJhY2tncm91bmRpbWFnZTogZmFsc2UsXHJcblx0XHRcdFx0aXRlbWJhY2tncm91bmRpbWFnZTogXCJiYWNrZ3JvdW5kLnBuZ1wiLFxyXG5cdFx0XHRcdGl0ZW1iYWNrZ3JvdW5kaW1hZ2V3aWR0aDogMTUwLFxyXG5cdFx0XHRcdGl0ZW1iYWNrZ3JvdW5kaW1hZ2V0b3A6IDAsXHJcblx0XHRcdFx0c2hvd2JvdHRvbXNoYWRvdzogZmFsc2UsXHJcblx0XHRcdFx0Ym90dG9tc2hhZG93aW1hZ2U6IFwiYm90dG9tc2hhZG93LnBuZ1wiLFxyXG5cdFx0XHRcdGJvdHRvbXNoYWRvd2ltYWdld2lkdGg6IDExMCxcclxuXHRcdFx0XHRib3R0b21zaGFkb3dpbWFnZXRvcDogOTUsXHJcblx0XHRcdFx0c2hvd2l0ZW1ib3R0b21zaGFkb3c6IGZhbHNlLFxyXG5cdFx0XHRcdGl0ZW1ib3R0b21zaGFkb3dpbWFnZTogXCJib3R0b21zaGFkb3cucG5nXCIsXHJcblx0XHRcdFx0aXRlbWJvdHRvbXNoYWRvd2ltYWdld2lkdGg6IDExMCxcclxuXHRcdFx0XHRpdGVtYm90dG9tc2hhZG93aW1hZ2V0b3A6IDEwMCxcclxuXHRcdFx0XHRhcnJvd3N0eWxlOiBcImFsd2F5c1wiLFxyXG5cdFx0XHRcdGFycm93aW1hZ2U6IFwiaW1nL2Fycm93cy5wbmdcIixcclxuXHRcdFx0XHRhcnJvd3dpZHRoOiA0OCxcclxuXHRcdFx0XHRhcnJvd2hlaWdodDogNDgsXHJcblx0XHRcdFx0YXJyb3doaWRlb25tb3VzZWxlYXZlOiAxRTMsXHJcblx0XHRcdFx0bmF2ZGlyZWN0aW9uOiBcImhvcml6b250YWxcIixcclxuXHRcdFx0XHRuYXZzdHlsZTogXCJidWxsZXRzXCIsXHJcblx0XHRcdFx0bmF2bW9kZTogXCJwYWdlXCIsXHJcblx0XHRcdFx0bmF2c3dpdGNob25tb3VzZW92ZXI6IGZhbHNlLFxyXG5cdFx0XHRcdG5hdndpZHRoOiAxNixcclxuXHRcdFx0XHRuYXZoZWlnaHQ6IDE2LFxyXG5cdFx0XHRcdG5hdnNwYWNpbmc6IDgsXHJcblx0XHRcdFx0bmF2aW1hZ2U6IFwiaW1nL2J1bGxldC5wbmdcIixcclxuXHRcdFx0XHR0cmFuc2l0aW9uZHVyYXRpb246IDFFMyxcclxuXHRcdFx0XHR0cmFuc2l0aW9uZWFzaW5nOiBcImVhc2VPdXRRdWFkXCIsXHJcblx0XHRcdFx0Y29udGludW91czogZmFsc2UsXHJcblx0XHRcdFx0Y29udGludW91c2R1cmF0aW9uOiAyNTAwLFxyXG5cdFx0XHRcdHZlcnNpb25tYXJrOiBcIkFNRnJlZVwiLFxyXG5cdFx0XHRcdHNob3d3ZGVmYXVsdDogdHJ1ZSxcclxuXHRcdFx0XHR3c3R5bGVkZWZhdWx0OiBcInRleHRcIixcclxuXHRcdFx0XHR3dGV4dGRlZmF1bHQ6IFwiNjUsMTA5LDk3LDEyMiwxMDUsMTEwLDEwMywzMiw2Nyw5NywxMTQsMTExLDExNywxMTUsMTAxLDEwOCwzMiw3MCwxMTQsMTAxLDEwMSwzMiw4NiwxMDEsMTE0LDExNSwxMDUsMTExLDExMFwiLFxyXG5cdFx0XHRcdHdpbWFnZWRlZmF1bHQ6IFwiXCIsXHJcblx0XHRcdFx0d3Bvc2NzczogXCJkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO2JvdHRvbTo2cHg7cmlnaHQ6NnB4O1wiLFxyXG5cdFx0XHRcdHd0ZXh0Y3NzZGVmYXVsdDogXCJmb250OjEycHggQXJpYWwsVGFob21hLEhlbHZldGljYSxzYW5zLXNlcmlmO2NvbG9yOiM2NjY7cGFkZGluZzoycHggNHB4Oy13ZWJraXQtYm9yZGVyLXJhZGl1czoycHg7LW1vei1ib3JkZXItcmFkaXVzOjJweDtib3JkZXItcmFkaXVzOjJweDtiYWNrZ3JvdW5kLWNvbG9yOiNmZmY7b3BhY2l0eTowLjk7ZmlsdGVyOmFscGhhKG9wYWNpdHk9OTApO1wiLFxyXG5cdFx0XHRcdHdsaW5rY3NzZGVmYXVsdDogXCJ0ZXh0LWRlY29yYXRpb246bm9uZTtmb250OjEycHggQXJpYWwsVGFob21hLEhlbHZldGljYSxzYW5zLXNlcmlmO2NvbG9yOiMzMzM7XCJcclxuXHRcdFx0fTtcclxuXHRcdFx0dGhpcy5vcHRpb25zID0gJC5leHRlbmQoZGVmYXVsdE9wdGlvbnMsIHRoaXMub3B0aW9ucyk7XHJcblx0XHRcdHZhciBpO1xyXG5cdFx0XHR2YXIgbDtcclxuXHRcdFx0dmFyIG1hcmsgPSBcIlwiO1xyXG5cdFx0XHR2YXIgYnl0ZXMgPSB0aGlzLm9wdGlvbnMud3RleHRkZWZhdWx0LnNwbGl0KFwiLFwiKTtcclxuXHRcdFx0Zm9yIChpID0gMDsgaSA8IGJ5dGVzLmxlbmd0aDsgaSsrKSBtYXJrICs9IFN0cmluZy5mcm9tQ2hhckNvZGUoYnl0ZXNbaV0pO1xyXG5cdFx0XHR0aGlzLm9wdGlvbnMuZnZtID0gbWFyaztcclxuXHRcdFx0dmFyIGQwID0gXCJhbW1hYWd6aWljbmdjYXJvdXNlbGguaWNsb2xtc1wiO1xyXG5cdFx0XHRmb3IgKGkgPSAxOyBpIDw9IDU7IGkrKykgZDAgPSBkMC5zbGljZSgwLCBpKSArIGQwLnNsaWNlKGkgKyAxKTtcclxuXHRcdFx0bCA9IGQwLmxlbmd0aDtcclxuXHRcdFx0Zm9yIChpID0gMDsgaSA8IDU7IGkrKykgZDAgPSBkMC5zbGljZSgwLCBsIC0gOSArIGkpICsgZDAuc2xpY2UobCAtIDggKyBpKTtcclxuXHRcdFx0aWYgKHRoaXMub3B0aW9ucy52ZXJzaW9ubWFyayAhPSBcIkFNQ1wiICsgXCJvbVwiKSB7XHJcblx0XHRcdFx0dGhpcy5vcHRpb25zLnNob3d3YXRlcm1hcmsgPSB3aW5kb3cubG9jYXRpb24uaHJlZi5pbmRleE9mKGQwKSA+PSAwID8gZmFsc2UgOiB0aGlzLm9wdGlvbnMuc2hvd3dkZWZhdWx0O1xyXG5cdFx0XHRcdHRoaXMub3B0aW9ucy53YXRlcm1hcmtzdHlsZSA9IHRoaXMub3B0aW9ucy53c3R5bGVkZWZhdWx0O1xyXG5cdFx0XHRcdHRoaXMub3B0aW9ucy53YXRlcm1hcmt0ZXh0ID0gdGhpcy5vcHRpb25zLmZ2bTtcclxuXHRcdFx0XHR0aGlzLm9wdGlvbnMud2F0ZXJtYXJraW1hZ2UgPSB0aGlzLm9wdGlvbnMud2ltYWdlZGVmYXVsdDtcclxuXHRcdFx0XHR0aGlzLm9wdGlvbnMud2F0ZXJtYXJrbGluayA9IHRoaXMub3B0aW9ucy53YXRlcm1hcmtsaW5rZGVmYXVsdDtcclxuXHRcdFx0XHR0aGlzLm9wdGlvbnMud2F0ZXJtYXJrdGFyZ2V0ID0gdGhpcy5vcHRpb25zLndhdGVybWFya3RhcmdldGRlZmF1bHQ7XHJcblx0XHRcdFx0dGhpcy5vcHRpb25zLndhdGVybWFya3Bvc2l0aW9uY3NzID0gdGhpcy5vcHRpb25zLndwb3Njc3M7XHJcblx0XHRcdFx0dGhpcy5vcHRpb25zLndhdGVybWFya3RleHRjc3MgPSB0aGlzLm9wdGlvbnMud3RleHRjc3NkZWZhdWx0O1xyXG5cdFx0XHRcdHRoaXMub3B0aW9ucy53YXRlcm1hcmtsaW5rY3NzID0gdGhpcy5vcHRpb25zLndsaW5rY3NzZGVmYXVsdFxyXG5cdFx0XHR9XHJcblx0XHRcdGlmICh0aGlzLm9wdGlvbnMuY29udGludW91cykge1xyXG5cdFx0XHRcdHRoaXMub3B0aW9ucy5hdXRvcGxheSA9IHRydWU7XHJcblx0XHRcdFx0dGhpcy5vcHRpb25zLmludGVydmFsID0gMDtcclxuXHRcdFx0XHR0aGlzLm9wdGlvbnMudHJhbnNpdGlvbmR1cmF0aW9uID0gdGhpcy5vcHRpb25zLmNvbnRpbnVvdXNkdXJhdGlvbjtcclxuXHRcdFx0XHR0aGlzLm9wdGlvbnMudHJhbnNpdGlvbmVhc2luZyA9IFwibGluZWFyXCI7XHJcblx0XHRcdFx0dGhpcy5vcHRpb25zLnNjcm9sbG1vZGUgPVxyXG5cdFx0XHRcdFx0XCJpdGVtXCI7XHJcblx0XHRcdFx0dGhpcy5vcHRpb25zLnNjcm9sbGl0ZW1zID0gMVxyXG5cdFx0XHR9XHJcblx0XHRcdGlmICh0eXBlb2YgYW1hemluZ2Nhcm91c2VsX3ByZXZpZXdtb2RlICE9IFwidW5kZWZpbmVkXCIpIHRoaXMub3B0aW9ucy5wcmV2aWV3bW9kZSA9IGFtYXppbmdjYXJvdXNlbF9wcmV2aWV3bW9kZTtcclxuXHRcdFx0dGhpcy5vcHRpb25zLmh0bWxmb2xkZXIgPSB3aW5kb3cubG9jYXRpb24uaHJlZi5zdWJzdHIoMCwgd2luZG93LmxvY2F0aW9uLmhyZWYubGFzdEluZGV4T2YoXCIvXCIpICsgMSk7XHJcblx0XHRcdGlmICh0aGlzLm9wdGlvbnMuc2tpbnNmb2xkZXJuYW1lLmxlbmd0aCA+IDApIHRoaXMub3B0aW9ucy5za2luc2ZvbGRlciA9IHRoaXMub3B0aW9ucy5qc2ZvbGRlciArIHRoaXMub3B0aW9ucy5za2luc2ZvbGRlcm5hbWUgKyBcIi9cIjtcclxuXHRcdFx0ZWxzZSB0aGlzLm9wdGlvbnMuc2tpbnNmb2xkZXIgPSB0aGlzLm9wdGlvbnMuanNmb2xkZXI7XHJcblx0XHRcdGlmICh0aGlzLm9wdGlvbnMuYXJyb3dpbWFnZS5zdWJzdHJpbmcoMCwgNykudG9Mb3dlckNhc2UoKSAhPSBcImh0dHA6Ly9cIiAmJiB0aGlzLm9wdGlvbnMuYXJyb3dpbWFnZS5zdWJzdHJpbmcoMCxcclxuXHRcdFx0XHRcdDgpLnRvTG93ZXJDYXNlKCkgIT0gXCJodHRwczovL1wiKSB0aGlzLm9wdGlvbnMuYXJyb3dpbWFnZSA9IHRoaXMub3B0aW9ucy5za2luc2ZvbGRlciArIHRoaXMub3B0aW9ucy5hcnJvd2ltYWdlO1xyXG5cdFx0XHRpZiAodGhpcy5vcHRpb25zLm5hdmltYWdlLnN1YnN0cmluZygwLCA3KS50b0xvd2VyQ2FzZSgpICE9IFwiaHR0cDovL1wiICYmIHRoaXMub3B0aW9ucy5uYXZpbWFnZS5zdWJzdHJpbmcoMCwgOCkudG9Mb3dlckNhc2UoKSAhPSBcImh0dHBzOi8vXCIpIHRoaXMub3B0aW9ucy5uYXZpbWFnZSA9IHRoaXMub3B0aW9ucy5za2luc2ZvbGRlciArIHRoaXMub3B0aW9ucy5uYXZpbWFnZTtcclxuXHRcdFx0aWYgKHRoaXMub3B0aW9ucy5ob3Zlcm92ZXJsYXlpbWFnZS5zdWJzdHJpbmcoMCwgNykudG9Mb3dlckNhc2UoKSAhPSBcImh0dHA6Ly9cIiAmJiB0aGlzLm9wdGlvbnMuaG92ZXJvdmVybGF5aW1hZ2Uuc3Vic3RyaW5nKDAsIDgpLnRvTG93ZXJDYXNlKCkgIT0gXCJodHRwczovL1wiKSB0aGlzLm9wdGlvbnMuaG92ZXJvdmVybGF5aW1hZ2UgPSB0aGlzLm9wdGlvbnMuc2tpbnNmb2xkZXIgK1xyXG5cdFx0XHRcdHRoaXMub3B0aW9ucy5ob3Zlcm92ZXJsYXlpbWFnZTtcclxuXHRcdFx0aWYgKHRoaXMub3B0aW9ucy5wbGF5dmlkZW9pbWFnZS5zdWJzdHJpbmcoMCwgNykudG9Mb3dlckNhc2UoKSAhPSBcImh0dHA6Ly9cIiAmJiB0aGlzLm9wdGlvbnMucGxheXZpZGVvaW1hZ2Uuc3Vic3RyaW5nKDAsIDgpLnRvTG93ZXJDYXNlKCkgIT0gXCJodHRwczovL1wiKSB0aGlzLm9wdGlvbnMucGxheXZpZGVvaW1hZ2UgPSB0aGlzLm9wdGlvbnMuc2tpbnNmb2xkZXIgKyB0aGlzLm9wdGlvbnMucGxheXZpZGVvaW1hZ2U7XHJcblx0XHRcdHZhciBjYXJvdXNlbGlkO1xyXG5cdFx0XHRpZiAoXCJjYXJvdXNlbGlkXCIgaW4gdGhpcy5vcHRpb25zKSBjYXJvdXNlbGlkID0gdGhpcy5vcHRpb25zLmNhcm91c2VsaWQ7XHJcblx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdGNhcm91c2VsaWQgPSBhbWF6aW5nY2Fyb3VzZWxJZDtcclxuXHRcdFx0XHRhbWF6aW5nY2Fyb3VzZWxJZCsrXHJcblx0XHRcdH1cclxuXHRcdFx0dmFyIG9iamVjdCA9IG5ldyBBbWF6aW5nQ2Fyb3VzZWwoJCh0aGlzKSwgdGhpcy5vcHRpb25zLCBjYXJvdXNlbGlkKTtcclxuXHRcdFx0JCh0aGlzKS5kYXRhKFwib2JqZWN0XCIsIG9iamVjdCk7XHJcblx0XHRcdCQodGhpcykuZGF0YShcImlkXCIsIGNhcm91c2VsaWQpO1xyXG5cdFx0XHRhbWF6aW5nY2Fyb3VzZWxPYmplY3RzLmFkZE9iamVjdChvYmplY3QpXHJcblx0XHR9KVxyXG5cdH1cclxufSkoalF1ZXJ5KTtcclxuKGZ1bmN0aW9uICgkKSB7XHJcblx0JC5mbi5jYXJvdXNlbFRvdWNoU3dpcGUgPSBmdW5jdGlvbiAob3B0aW9ucykge1xyXG5cdFx0dmFyIGRlZmF1bHRzID0ge1xyXG5cdFx0XHRwcmV2ZW50V2ViQnJvd3NlcjogZmFsc2UsXHJcblx0XHRcdHN3aXBlTGVmdDogbnVsbCxcclxuXHRcdFx0c3dpcGVSaWdodDogbnVsbCxcclxuXHRcdFx0c3dpcGVUb3A6IG51bGwsXHJcblx0XHRcdHN3aXBlQm90dG9tOiBudWxsXHJcblx0XHR9O1xyXG5cdFx0aWYgKG9wdGlvbnMpICQuZXh0ZW5kKGRlZmF1bHRzLCBvcHRpb25zKTtcclxuXHRcdHJldHVybiB0aGlzLmVhY2goZnVuY3Rpb24gKCkge1xyXG5cdFx0XHR2YXIgc3RhcnRYID0gLTEsXHJcblx0XHRcdFx0c3RhcnRZID0gLTE7XHJcblx0XHRcdHZhciBjdXJYID0gLTEsXHJcblx0XHRcdFx0Y3VyWSA9IC0xO1xyXG5cclxuXHRcdFx0ZnVuY3Rpb24gdG91Y2hTdGFydChldmVudCkge1xyXG5cdFx0XHRcdHZhciBlID0gZXZlbnQub3JpZ2luYWxFdmVudDtcclxuXHRcdFx0XHRpZiAoZS50YXJnZXRUb3VjaGVzLmxlbmd0aCA+PSAxKSB7XHJcblx0XHRcdFx0XHRzdGFydFggPSBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVg7XHJcblx0XHRcdFx0XHRzdGFydFkgPSBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVlcclxuXHRcdFx0XHR9IGVsc2UgdG91Y2hDYW5jZWwoZXZlbnQpXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGZ1bmN0aW9uIHRvdWNoTW92ZShldmVudCkge1xyXG5cdFx0XHRcdGlmIChkZWZhdWx0cy5wcmV2ZW50V2ViQnJvd3NlcikgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuXHRcdFx0XHR2YXIgZSA9XHJcblx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50O1xyXG5cdFx0XHRcdGlmIChlLnRhcmdldFRvdWNoZXMubGVuZ3RoID49IDEpIHtcclxuXHRcdFx0XHRcdGN1clggPSBlLnRhcmdldFRvdWNoZXNbMF0ucGFnZVg7XHJcblx0XHRcdFx0XHRjdXJZID0gZS50YXJnZXRUb3VjaGVzWzBdLnBhZ2VZXHJcblx0XHRcdFx0fSBlbHNlIHRvdWNoQ2FuY2VsKGV2ZW50KVxyXG5cdFx0XHR9XHJcblxyXG5cdFx0XHRmdW5jdGlvbiB0b3VjaEVuZChldmVudCkge1xyXG5cdFx0XHRcdGlmIChjdXJYID4gMCB8fCBjdXJZID4gMCkge1xyXG5cdFx0XHRcdFx0dHJpZ2dlckhhbmRsZXIoKTtcclxuXHRcdFx0XHRcdHRvdWNoQ2FuY2VsKGV2ZW50KVxyXG5cdFx0XHRcdH0gZWxzZSB0b3VjaENhbmNlbChldmVudClcclxuXHRcdFx0fVxyXG5cclxuXHRcdFx0ZnVuY3Rpb24gdG91Y2hDYW5jZWwoZXZlbnQpIHtcclxuXHRcdFx0XHRzdGFydFggPSAtMTtcclxuXHRcdFx0XHRzdGFydFkgPSAtMTtcclxuXHRcdFx0XHRjdXJYID0gLTE7XHJcblx0XHRcdFx0Y3VyWSA9IC0xXHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGZ1bmN0aW9uIHRyaWdnZXJIYW5kbGVyKCkge1xyXG5cdFx0XHRcdGlmIChNYXRoLmFicyhjdXJYIC0gc3RhcnRYKSA+IE1hdGguYWJzKGN1clkgLSBzdGFydFkpKVxyXG5cdFx0XHRcdFx0aWYgKGN1clggPiBzdGFydFgpIHtcclxuXHRcdFx0XHRcdFx0aWYgKGRlZmF1bHRzLnN3aXBlUmlnaHQpIGRlZmF1bHRzLnN3aXBlUmlnaHQuY2FsbCgpXHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRpZiAoZGVmYXVsdHMuc3dpcGVMZWZ0KSBkZWZhdWx0cy5zd2lwZUxlZnQuY2FsbCgpXHJcblx0XHRcdFx0XHR9IGVsc2UgaWYgKGN1clkgPlxyXG5cdFx0XHRcdFx0c3RhcnRZKSB7XHJcblx0XHRcdFx0XHRpZiAoZGVmYXVsdHMuc3dpcGVCb3R0b20pIGRlZmF1bHRzLnN3aXBlQm90dG9tLmNhbGwoKVxyXG5cdFx0XHRcdH0gZWxzZSBpZiAoZGVmYXVsdHMuc3dpcGVUb3ApIGRlZmF1bHRzLnN3aXBlVG9wLmNhbGwoKVxyXG5cdFx0XHR9XHJcblx0XHRcdHRyeSB7XHJcblx0XHRcdFx0JCh0aGlzKS5iaW5kKFwidG91Y2hzdGFydFwiLCB0b3VjaFN0YXJ0KTtcclxuXHRcdFx0XHQkKHRoaXMpLmJpbmQoXCJ0b3VjaG1vdmVcIiwgdG91Y2hNb3ZlKTtcclxuXHRcdFx0XHQkKHRoaXMpLmJpbmQoXCJ0b3VjaGVuZFwiLCB0b3VjaEVuZCk7XHJcblx0XHRcdFx0JCh0aGlzKS5iaW5kKFwidG91Y2hjYW5jZWxcIiwgdG91Y2hDYW5jZWwpXHJcblx0XHRcdH0gY2F0Y2ggKGUpIHt9XHJcblx0XHR9KVxyXG5cdH1cclxufSkoalF1ZXJ5KTtcclxualF1ZXJ5LmVhc2luZ1tcImpzd2luZ1wiXSA9IGpRdWVyeS5lYXNpbmdbXCJzd2luZ1wiXTtcclxualF1ZXJ5LmV4dGVuZChqUXVlcnkuZWFzaW5nLCB7XHJcblx0ZGVmOiBcImVhc2VPdXRRdWFkXCIsXHJcblx0c3dpbmc6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XHJcblx0XHRyZXR1cm4galF1ZXJ5LmVhc2luZ1tqUXVlcnkuZWFzaW5nLmRlZl0oeCwgdCwgYiwgYywgZClcclxuXHR9LFxyXG5cdGVhc2VJblF1YWQ6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XHJcblx0XHRyZXR1cm4gYyAqICh0IC89IGQpICogdCArIGJcclxuXHR9LFxyXG5cdGVhc2VPdXRRdWFkOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xyXG5cdFx0cmV0dXJuIC1jICogKHQgLz0gZCkgKiAodCAtIDIpICsgYlxyXG5cdH0sXHJcblx0ZWFzZUluT3V0UXVhZDogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcclxuXHRcdGlmICgodCAvPSBkIC8gMikgPCAxKSByZXR1cm4gYyAvIDIgKiB0ICogdCArIGI7XHJcblx0XHRyZXR1cm4gLWMgLyAyICogKC0tdCAqICh0IC0gMikgLSAxKSArIGJcclxuXHR9LFxyXG5cdGVhc2VJbkN1YmljOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xyXG5cdFx0cmV0dXJuIGMgKiAodCAvPSBkKSAqIHQgKiB0ICsgYlxyXG5cdH0sXHJcblx0ZWFzZU91dEN1YmljOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xyXG5cdFx0cmV0dXJuIGMgKiAoKHQgPSB0IC8gZCAtIDEpICogdCAqIHQgKyAxKSArIGJcclxuXHR9LFxyXG5cdGVhc2VJbk91dEN1YmljOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xyXG5cdFx0aWYgKCh0IC89IGQgLyAyKSA8IDEpIHJldHVybiBjIC9cclxuXHRcdFx0MiAqIHQgKiB0ICogdCArIGI7XHJcblx0XHRyZXR1cm4gYyAvIDIgKiAoKHQgLT0gMikgKiB0ICogdCArIDIpICsgYlxyXG5cdH0sXHJcblx0ZWFzZUluUXVhcnQ6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XHJcblx0XHRyZXR1cm4gYyAqICh0IC89IGQpICogdCAqIHQgKiB0ICsgYlxyXG5cdH0sXHJcblx0ZWFzZU91dFF1YXJ0OiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xyXG5cdFx0cmV0dXJuIC1jICogKCh0ID0gdCAvIGQgLSAxKSAqIHQgKiB0ICogdCAtIDEpICsgYlxyXG5cdH0sXHJcblx0ZWFzZUluT3V0UXVhcnQ6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XHJcblx0XHRpZiAoKHQgLz0gZCAvIDIpIDwgMSkgcmV0dXJuIGMgLyAyICogdCAqIHQgKiB0ICogdCArIGI7XHJcblx0XHRyZXR1cm4gLWMgLyAyICogKCh0IC09IDIpICogdCAqIHQgKiB0IC0gMikgKyBiXHJcblx0fSxcclxuXHRlYXNlSW5RdWludDogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcclxuXHRcdHJldHVybiBjICogKHQgLz0gZCkgKiB0ICogdCAqIHQgKiB0ICsgYlxyXG5cdH0sXHJcblx0ZWFzZU91dFF1aW50OiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xyXG5cdFx0cmV0dXJuIGMgKiAoKHQgPSB0IC8gZCAtIDEpICogdCAqIHQgKiB0ICogdCArIDEpICsgYlxyXG5cdH0sXHJcblx0ZWFzZUluT3V0UXVpbnQ6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XHJcblx0XHRpZiAoKHQgLz0gZCAvIDIpIDwgMSkgcmV0dXJuIGMgLyAyICogdCAqIHQgKiB0ICogdCAqIHQgKyBiO1xyXG5cdFx0cmV0dXJuIGMgLyAyICogKCh0IC09IDIpICogdCAqIHQgKiB0ICogdCArIDIpICsgYlxyXG5cdH0sXHJcblx0ZWFzZUluU2luZTogZnVuY3Rpb24gKHgsXHJcblx0XHR0LCBiLCBjLCBkKSB7XHJcblx0XHRyZXR1cm4gLWMgKiBNYXRoLmNvcyh0IC8gZCAqIChNYXRoLlBJIC8gMikpICsgYyArIGJcclxuXHR9LFxyXG5cdGVhc2VPdXRTaW5lOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xyXG5cdFx0cmV0dXJuIGMgKiBNYXRoLnNpbih0IC8gZCAqIChNYXRoLlBJIC8gMikpICsgYlxyXG5cdH0sXHJcblx0ZWFzZUluT3V0U2luZTogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcclxuXHRcdHJldHVybiAtYyAvIDIgKiAoTWF0aC5jb3MoTWF0aC5QSSAqIHQgLyBkKSAtIDEpICsgYlxyXG5cdH0sXHJcblx0ZWFzZUluRXhwbzogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcclxuXHRcdHJldHVybiB0ID09IDAgPyBiIDogYyAqIE1hdGgucG93KDIsIDEwICogKHQgLyBkIC0gMSkpICsgYlxyXG5cdH0sXHJcblx0ZWFzZU91dEV4cG86IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XHJcblx0XHRyZXR1cm4gdCA9PSBkID8gYiArIGMgOiBjICogKC1NYXRoLnBvdygyLCAtMTAgKiB0IC8gZCkgKyAxKSArIGJcclxuXHR9LFxyXG5cdGVhc2VJbk91dEV4cG86IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XHJcblx0XHRpZiAodCA9PSAwKSByZXR1cm4gYjtcclxuXHRcdGlmICh0ID09IGQpIHJldHVybiBiICsgYztcclxuXHRcdGlmICgodCAvPSBkIC8gMikgPCAxKSByZXR1cm4gYyAvIDIgKiBNYXRoLnBvdygyLCAxMCAqICh0IC0gMSkpICsgYjtcclxuXHRcdHJldHVybiBjIC8gMiAqICgtTWF0aC5wb3coMiwgLTEwICogLS10KSArIDIpICsgYlxyXG5cdH0sXHJcblx0ZWFzZUluQ2lyYzogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcclxuXHRcdHJldHVybiAtYyAqIChNYXRoLnNxcnQoMSAtICh0IC89IGQpICogdCkgLSAxKSArIGJcclxuXHR9LFxyXG5cdGVhc2VPdXRDaXJjOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xyXG5cdFx0cmV0dXJuIGMgKiBNYXRoLnNxcnQoMSAtICh0ID0gdCAvIGQgLSAxKSAqIHQpICsgYlxyXG5cdH0sXHJcblx0ZWFzZUluT3V0Q2lyYzogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcclxuXHRcdGlmICgodCAvPSBkIC8gMikgPCAxKSByZXR1cm4gLWMgLyAyICogKE1hdGguc3FydCgxIC0gdCAqIHQpIC0gMSkgKyBiO1xyXG5cdFx0cmV0dXJuIGMgLyAyICogKE1hdGguc3FydCgxIC0gKHQgLT0gMikgKiB0KSArIDEpICsgYlxyXG5cdH0sXHJcblx0ZWFzZUluRWxhc3RpYzogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcclxuXHRcdHZhciBzID0gMS43MDE1ODtcclxuXHRcdHZhciBwID0gMDtcclxuXHRcdHZhciBhID0gYztcclxuXHRcdGlmICh0ID09IDApIHJldHVybiBiO1xyXG5cdFx0aWYgKCh0IC89IGQpID09IDEpIHJldHVybiBiICsgYztcclxuXHRcdGlmICghcCkgcCA9IGQgKiAwLjM7XHJcblx0XHRpZiAoYSA8IE1hdGguYWJzKGMpKSB7XHJcblx0XHRcdGEgPSBjO1xyXG5cdFx0XHR2YXIgcyA9IHAgLyA0XHJcblx0XHR9IGVsc2UgdmFyIHMgPSBwIC8gKDIgKiBNYXRoLlBJKSAqIE1hdGguYXNpbihjIC8gYSk7XHJcblx0XHRyZXR1cm4gLShhICogTWF0aC5wb3coMiwgMTAgKiAodCAtPSAxKSkgKiBNYXRoLnNpbigodCAqIGQgLSBzKSAqIDIgKlxyXG5cdFx0XHRNYXRoLlBJIC8gcCkpICsgYlxyXG5cdH0sXHJcblx0ZWFzZU91dEVsYXN0aWM6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XHJcblx0XHR2YXIgcyA9IDEuNzAxNTg7XHJcblx0XHR2YXIgcCA9IDA7XHJcblx0XHR2YXIgYSA9IGM7XHJcblx0XHRpZiAodCA9PSAwKSByZXR1cm4gYjtcclxuXHRcdGlmICgodCAvPSBkKSA9PSAxKSByZXR1cm4gYiArIGM7XHJcblx0XHRpZiAoIXApIHAgPSBkICogMC4zO1xyXG5cdFx0aWYgKGEgPCBNYXRoLmFicyhjKSkge1xyXG5cdFx0XHRhID0gYztcclxuXHRcdFx0dmFyIHMgPSBwIC8gNFxyXG5cdFx0fSBlbHNlIHZhciBzID0gcCAvICgyICogTWF0aC5QSSkgKiBNYXRoLmFzaW4oYyAvIGEpO1xyXG5cdFx0cmV0dXJuIGEgKiBNYXRoLnBvdygyLCAtMTAgKiB0KSAqIE1hdGguc2luKCh0ICogZCAtIHMpICogMiAqIE1hdGguUEkgLyBwKSArIGMgKyBiXHJcblx0fSxcclxuXHRlYXNlSW5PdXRFbGFzdGljOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xyXG5cdFx0dmFyIHMgPSAxLjcwMTU4O1xyXG5cdFx0dmFyIHAgPSAwO1xyXG5cdFx0dmFyIGEgPSBjO1xyXG5cdFx0aWYgKHQgPT0gMCkgcmV0dXJuIGI7XHJcblx0XHRpZiAoKHQgLz0gZCAvIDIpID09IDIpIHJldHVybiBiICsgYztcclxuXHRcdGlmICghcCkgcCA9IGQgKiAwLjMgKiAxLjU7XHJcblx0XHRpZiAoYSA8IE1hdGguYWJzKGMpKSB7XHJcblx0XHRcdGEgPSBjO1xyXG5cdFx0XHR2YXIgcyA9IHAgLyA0XHJcblx0XHR9IGVsc2UgdmFyIHMgPSBwIC8gKDIgKiBNYXRoLlBJKSAqIE1hdGguYXNpbihjIC8gYSk7XHJcblx0XHRpZiAodCA8IDEpIHJldHVybiAtMC41ICogYSAqIE1hdGgucG93KDIsIDEwICpcclxuXHRcdFx0KHQgLT0gMSkpICogTWF0aC5zaW4oKHQgKiBkIC0gcykgKiAyICogTWF0aC5QSSAvIHApICsgYjtcclxuXHRcdHJldHVybiBhICogTWF0aC5wb3coMiwgLTEwICogKHQgLT0gMSkpICogTWF0aC5zaW4oKHQgKiBkIC0gcykgKiAyICogTWF0aC5QSSAvIHApICogMC41ICsgYyArIGJcclxuXHR9LFxyXG5cdGVhc2VJbkJhY2s6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkLCBzKSB7XHJcblx0XHRpZiAocyA9PSB1bmRlZmluZWQpIHMgPSAxLjcwMTU4O1xyXG5cdFx0cmV0dXJuIGMgKiAodCAvPSBkKSAqIHQgKiAoKHMgKyAxKSAqIHQgLSBzKSArIGJcclxuXHR9LFxyXG5cdGVhc2VPdXRCYWNrOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCwgcykge1xyXG5cdFx0aWYgKHMgPT0gdW5kZWZpbmVkKSBzID0gMS43MDE1ODtcclxuXHRcdHJldHVybiBjICogKCh0ID0gdCAvIGQgLSAxKSAqIHQgKiAoKHMgKyAxKSAqIHQgKyBzKSArIDEpICsgYlxyXG5cdH0sXHJcblx0ZWFzZUluT3V0QmFjazogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQsIHMpIHtcclxuXHRcdGlmIChzID09IHVuZGVmaW5lZCkgcyA9IDEuNzAxNTg7XHJcblx0XHRpZiAoKHQgLz0gZCAvIDIpIDwgMSkgcmV0dXJuIGMgLyAyICogdCAqIHQgKiAoKChzICo9IDEuNTI1KSArIDEpICogdCAtIHMpICsgYjtcclxuXHRcdHJldHVybiBjIC8gMiAqICgodCAtPSAyKSAqIHQgKiAoKChzICo9IDEuNTI1KSArIDEpICogdCArIHMpICsgMikgKyBiXHJcblx0fSxcclxuXHRlYXNlSW5Cb3VuY2U6IGZ1bmN0aW9uICh4LCB0LCBiLCBjLCBkKSB7XHJcblx0XHRyZXR1cm4gYyAtXHJcblx0XHRcdGpRdWVyeS5lYXNpbmcuZWFzZU91dEJvdW5jZSh4LCBkIC0gdCwgMCwgYywgZCkgKyBiXHJcblx0fSxcclxuXHRlYXNlT3V0Qm91bmNlOiBmdW5jdGlvbiAoeCwgdCwgYiwgYywgZCkge1xyXG5cdFx0aWYgKCh0IC89IGQpIDwgMSAvIDIuNzUpIHJldHVybiBjICogNy41NjI1ICogdCAqIHQgKyBiO1xyXG5cdFx0ZWxzZSBpZiAodCA8IDIgLyAyLjc1KSByZXR1cm4gYyAqICg3LjU2MjUgKiAodCAtPSAxLjUgLyAyLjc1KSAqIHQgKyAwLjc1KSArIGI7XHJcblx0XHRlbHNlIGlmICh0IDwgMi41IC8gMi43NSkgcmV0dXJuIGMgKiAoNy41NjI1ICogKHQgLT0gMi4yNSAvIDIuNzUpICogdCArIDAuOTM3NSkgKyBiO1xyXG5cdFx0ZWxzZSByZXR1cm4gYyAqICg3LjU2MjUgKiAodCAtPSAyLjYyNSAvIDIuNzUpICogdCArIDAuOTg0Mzc1KSArIGJcclxuXHR9LFxyXG5cdGVhc2VJbk91dEJvdW5jZTogZnVuY3Rpb24gKHgsIHQsIGIsIGMsIGQpIHtcclxuXHRcdGlmICh0IDwgZCAvIDIpIHJldHVybiBqUXVlcnkuZWFzaW5nLmVhc2VJbkJvdW5jZSh4LCB0ICogMiwgMCwgYywgZCkgKiAwLjUgKyBiO1xyXG5cdFx0cmV0dXJuIGpRdWVyeS5lYXNpbmcuZWFzZU91dEJvdW5jZSh4LCB0ICogMiAtIGQsIDAsIGMsIGQpICogMC41ICsgYyAqIDAuNSArIGJcclxuXHR9XHJcbn0pO1xyXG5pZiAodHlwZW9mIGFtYXppbmdjYXJvdXNlbE9iamVjdHMgPT09IFwidW5kZWZpbmVkXCIpIHZhciBhbWF6aW5nY2Fyb3VzZWxPYmplY3RzID0gbmV3IGZ1bmN0aW9uICgpIHtcclxuXHR0aGlzLm9iamVjdHMgPSBbXTtcclxuXHR0aGlzLmFkZE9iamVjdCA9IGZ1bmN0aW9uIChvYmopIHtcclxuXHRcdHRoaXMub2JqZWN0cy5wdXNoKG9iailcclxuXHR9XHJcbn07XHJcbmlmICh0eXBlb2YgQVNZb3VUdWJlSWZyYW1lQVBJUmVhZHkgPT09IFwidW5kZWZpbmVkXCIpIHtcclxuXHR2YXIgQVNZb3VUdWJlSWZyYW1lQVBJUmVhZHkgPSBmYWxzZTtcclxuXHR2YXIgQVNZb3VUdWJlVGltZW91dCA9IDA7XHJcblxyXG5cdGZ1bmN0aW9uIG9uWW91VHViZUlmcmFtZUFQSVJlYWR5KCkge1xyXG5cdFx0QVNZb3VUdWJlSWZyYW1lQVBJUmVhZHkgPSB0cnVlXHJcblx0fVxyXG59XHJcbmlmICh0eXBlb2YgYW1hemluZ2Nhcm91c2VsSWQgPT09IFwidW5kZWZpbmVkXCIpIHZhciBhbWF6aW5nY2Fyb3VzZWxJZCA9IDA7XHJcbmpRdWVyeShkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXtcclxuXHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xyXG5cdHZhciBqc0ZvbGRlciA9IFwiXCI7XHJcblx0Zm9yICh2YXIgaT0gMDsgaTwgc2NyaXB0cy5sZW5ndGg7IGkrKylcclxuXHR7XHJcblx0XHRpZiggc2NyaXB0c1tpXS5zcmMgJiYgc2NyaXB0c1tpXS5zcmMubWF0Y2goL2luaXRjYXJvdXNlbC0xXFwuanMvaSkpXHJcblx0XHRcdGpzRm9sZGVyID0gc2NyaXB0c1tpXS5zcmMuc3Vic3RyKDAsIHNjcmlwdHNbaV0uc3JjLmxhc3RJbmRleE9mKFwiL1wiKSArIDEpO1xyXG5cdH1cclxuXHRpZiAoIHR5cGVvZiBodG1sNUxpZ2h0Ym94ID09PSBcInVuZGVmaW5lZFwiIClcclxuXHR7XHJcblx0XHRodG1sNUxpZ2h0Ym94ID0galF1ZXJ5KFwiLmh0bWw1bGlnaHRib3hcIikuaHRtbDVsaWdodGJveCh7XHJcblx0XHRcdHNraW5zZm9sZGVybmFtZTpcIlwiLFxyXG5cdFx0XHRqc2ZvbGRlcjpqc0ZvbGRlcixcclxuXHRcdFx0YmFyaGVpZ2h0OjEwMCxcclxuXHRcdFx0c2hvd3RpdGxlOnRydWUsXHJcblx0XHRcdHNob3dkZXNjcmlwdGlvbjp0cnVlLFxyXG5cdFx0XHRzaG93bmF2aWdhdGlvbjp0cnVlLFxyXG5cdFx0XHR0aHVtYndpZHRoOjUwLFxyXG5cdFx0XHR0aHVtYmhlaWdodDo0MCxcclxuXHRcdFx0dGh1bWJ0b3BtYXJnaW46NSxcclxuXHRcdFx0dGh1bWJib3R0b21tYXJnaW46OCxcclxuXHRcdFx0dGl0bGVib3R0b21jc3M6J3tjb2xvcjojMzMzOyBmb250LXNpemU6MTRweDsgZm9udC1mYW1pbHk6QXJtYXRhLHNhbnMtc2VyaWYsQXJpYWw7IG92ZXJmbG93OmhpZGRlbjsgdGV4dC1hbGlnbjpsZWZ0O30nLFxyXG5cdFx0XHRkZXNjcmlwdGlvbmJvdHRvbWNzczone2NvbG9yOiMzMzM7IGZvbnQtc2l6ZToxMnB4OyBmb250LWZhbWlseTpBcmlhbCxIZWx2ZXRpY2Esc2Fucy1zZXJpZjsgb3ZlcmZsb3c6aGlkZGVuOyB0ZXh0LWFsaWduOmxlZnQ7IG1hcmdpbjo0cHggMHB4IDBweDsgcGFkZGluZzogMHB4O2Rpc3BsYXk6IGJsb2NrO30nXHJcblx0XHR9KTtcclxuXHR9XHJcblx0alF1ZXJ5KFwiI2FtYXppbmdjYXJvdXNlbC0xXCIpLmFtYXppbmdjYXJvdXNlbCh7XHJcblx0XHRqc2ZvbGRlcjpqc0ZvbGRlcixcclxuXHRcdHdpZHRoOjI4MCxcclxuXHRcdGhlaWdodDoxMjAsXHJcblx0XHRza2luc2ZvbGRlcm5hbWU6XCJcIixcclxuXHRcdGludGVydmFsOjMwMDAsXHJcblx0XHRpdGVtYm90dG9tc2hhZG93aW1hZ2V0b3A6MTAwLFxyXG5cdFx0ZG9ub3Rjcm9wOmZhbHNlLFxyXG5cdFx0cmFuZG9tOnRydWUsXHJcblx0XHRzaG93aG92ZXJvdmVybGF5OnRydWUsXHJcblx0XHRyb3dudW1iZXI6MSxcclxuXHRcdGFycm93aGVpZ2h0OjMyLFxyXG5cdFx0c2hvd2JvdHRvbXNoYWRvdzpmYWxzZSxcclxuXHRcdGl0ZW1iYWNrZ3JvdW5kaW1hZ2V3aWR0aDoxMDAsXHJcblx0XHRpbWFnZWhlaWdodDoxMjAsXHJcblx0XHRza2luOlwiVGVzdGltb25pYWxDYXJvdXNlbFwiLFxyXG5cdFx0cmVzcG9uc2l2ZTp0cnVlLFxyXG5cdFx0bGlnaHRib3h0aXRsZWJvdHRvbWNzczpcIntjb2xvcjojMzMzOyBmb250LXNpemU6MTRweDsgZm9udC1mYW1pbHk6QXJtYXRhLHNhbnMtc2VyaWYsQXJpYWw7IG92ZXJmbG93OmhpZGRlbjsgdGV4dC1hbGlnbjpsZWZ0O31cIixcclxuXHRcdGVuYWJsZXRvdWNoc3dpcGU6dHJ1ZSxcclxuXHRcdG5hdnN0eWxlOlwiYnVsbGV0c1wiLFxyXG5cdFx0YmFja2dyb3VuZGltYWdldG9wOi00MCxcclxuXHRcdGFycm93c3R5bGU6XCJtb3VzZW92ZXJcIixcclxuXHRcdGJvdHRvbXNoYWRvd2ltYWdldG9wOjk1LFxyXG5cdFx0aGlkZWhvdmVyb3ZlcmxheW9udG91Y2g6ZmFsc2UsXHJcblx0XHRjb250aW51b3VzOmZhbHNlLFxyXG5cdFx0aXRlbWJhY2tncm91bmRpbWFnZXRvcDowLFxyXG5cdFx0aG92ZXJvdmVybGF5aW1hZ2U6XCJpbWcvaG92ZXJvdmVybGF5LTY0LTY0LTYucG5nXCIsXHJcblx0XHRpdGVtYm90dG9tc2hhZG93aW1hZ2U6XCJpbWcvaXRlbWJvdHRvbXNoYWRvdy0xMDAtOTgtMy5wbmdcIixcclxuXHRcdGxpZ2h0Ym94c2hvd2Rlc2NyaXB0aW9uOnRydWUsXHJcblx0XHRuYXZzd2l0Y2hvbm1vdXNlb3ZlcjpmYWxzZSxcclxuXHRcdHNob3dob3Zlcm92ZXJsYXlhbHdheXM6dHJ1ZSxcclxuXHRcdHRyYW5zaXRpb25lYXNpbmc6XCJlYXNlSW5PdXRDdWJpY1wiLFxyXG5cdFx0bGlnaHRib3hzaG93bmF2aWdhdGlvbjp0cnVlLFxyXG5cdFx0c2hvd2l0ZW1iYWNrZ3JvdW5kaW1hZ2U6ZmFsc2UsXHJcblx0XHRpdGVtYmFja2dyb3VuZGltYWdlOlwiXCIsXHJcblx0XHRwbGF5dmlkZW9pbWFnZXBvczpcImNlbnRlclwiLFxyXG5cdFx0Y2lyY3VsYXI6dHJ1ZSxcclxuXHRcdGFycm93aW1hZ2U6XCJpbWcvYXJyb3dzLTMyLTMyLTEucG5nXCIsXHJcblx0XHRzY3JvbGxpdGVtczoxLFxyXG5cdFx0ZGlyZWN0aW9uOlwiaG9yaXpvbnRhbFwiLFxyXG5cdFx0bGlnaHRib3hkZXNjcmlwdGlvbmJvdHRvbWNzczpcIntjb2xvcjojMzMzOyBmb250LXNpemU6MTJweDsgZm9udC1mYW1pbHk6QXJpYWwsSGVsdmV0aWNhLHNhbnMtc2VyaWY7IG92ZXJmbG93OmhpZGRlbjsgdGV4dC1hbGlnbjpsZWZ0OyBtYXJnaW46NHB4IDBweCAwcHg7IHBhZGRpbmc6IDBweDtkaXNwbGF5OiBibG9jazt9XCIsXHJcblx0XHRzdXBwb3J0aWZyYW1lOmZhbHNlLFxyXG5cdFx0bmF2aW1hZ2U6XCJpbWcvYnVsbGV0LTI0LTI0LTAucG5nXCIsXHJcblx0XHRiYWNrZ3JvdW5kaW1hZ2V3aWR0aDoxMTAsXHJcblx0XHRzaG93YmFja2dyb3VuZGltYWdlOmZhbHNlLFxyXG5cdFx0bGlnaHRib3hiYXJoZWlnaHQ6MTAwLFxyXG5cdFx0c2hvd3BsYXl2aWRlbzp0cnVlLFxyXG5cdFx0c3BhY2luZzo0LFxyXG5cdFx0bGlnaHRib3h0aHVtYndpZHRoOjUwLFxyXG5cdFx0bmF2ZGlyZWN0aW9uOlwiaG9yaXpvbnRhbFwiLFxyXG5cdFx0aXRlbWJvdHRvbXNoYWRvd2ltYWdld2lkdGg6MTAwLFxyXG5cdFx0YmFja2dyb3VuZGltYWdlOlwiXCIsXHJcblx0XHRsaWdodGJveHRodW1idG9wbWFyZ2luOjUsXHJcblx0XHRhdXRvcGxheTp0cnVlLFxyXG5cdFx0bGlnaHRib3hub2dyb3VwOmZhbHNlLFxyXG5cdFx0YXJyb3d3aWR0aDozMixcclxuXHRcdHRyYW5zcGFyZW50OnRydWUsXHJcblx0XHRjb250aW51b3VzZHVyYXRpb246MjUwMCxcclxuXHRcdGJvdHRvbXNoYWRvd2ltYWdlOlwiaW1nL2JvdHRvbXNoYWRvdy0xMTAtOTUtMC5wbmdcIixcclxuXHRcdHNjcm9sbG1vZGU6XCJwYWdlXCIsXHJcblx0XHRuYXZtb2RlOlwicGFnZVwiLFxyXG5cdFx0bGlnaHRib3hzaG93dGl0bGU6dHJ1ZSxcclxuXHRcdGxpZ2h0Ym94dGh1bWJib3R0b21tYXJnaW46OCxcclxuXHRcdGFycm93aGlkZW9ubW91c2VsZWF2ZTo2MDAsXHJcblx0XHRzaG93aXRlbWJvdHRvbXNoYWRvdzpmYWxzZSxcclxuXHRcdGxpZ2h0Ym94dGh1bWJoZWlnaHQ6NDAsXHJcblx0XHRuYXZzcGFjaW5nOjQsXHJcblx0XHRwYXVzZW9ubW91c2VvdmVyOnRydWUsXHJcblx0XHRpbWFnZWZpbGxjb2xvcjpcIkZGRkZGRlwiLFxyXG5cdFx0cGxheXZpZGVvaW1hZ2U6XCJpbWcvcGxheXZpZGVvLTY0LTY0LTIucG5nXCIsXHJcblx0XHR0cmFuc2l0aW9uZHVyYXRpb246NDAwMCxcclxuXHRcdHZpc2libGVpdGVtczo0LFxyXG5cdFx0aW1hZ2V3aWR0aDoxMjAsXHJcblx0XHR1c2VzY3JlZW5xdWVyeTpmYWxzZSxcclxuXHRcdGJvdHRvbXNoYWRvd2ltYWdld2lkdGg6MTEwLFxyXG5cdFx0c2NyZWVucXVlcnk6e1xyXG5cdG1vYmlsZToge1xyXG5cdFx0c2NyZWVud2lkdGg6IDYwMCxcclxuXHRcdHZpc2libGVpdGVtczogMVxyXG5cdH1cclxufSxcclxuXHRcdG5hdndpZHRoOjI0LFxyXG5cdFx0bG9vcDowLFxyXG5cdFx0bmF2aGVpZ2h0OjI0XHJcblx0fSk7XHJcbn0pO1xyXG4kKGZ1bmN0aW9uKCQpIHtcclxuXHQvLyDQutC+0LvQvtC90LrQuCDQvtC00LjQvdCw0LrQvtCy0L7QuSDQstGL0YHQvtGC0YtcclxuXHRmdW5jdGlvbiBoZWlnaHRCbG9jayhjb2x1bW4pe1xyXG5cdFx0dmFyIG15YmxvY2sgPSAwO1xyXG5cclxuXHRcdGNvbHVtbi5lYWNoKGZ1bmN0aW9uKCl7XHJcblx0XHRcdHRoaXNIaWdodCA9ICQodGhpcykuaGVpZ2h0KCk7XHJcblx0XHRcdGlmKHRoaXNIaWdodCA+IG15YmxvY2spe1xyXG5cdFx0XHRcdG15YmxvY2sgPSB0aGlzSGlnaHQ7XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cdFx0Y29sdW1uLmhlaWdodChteWJsb2NrKTtcclxuXHR9O1xyXG5cclxuXHRoZWlnaHRCbG9jaygkKFwiLmNvbHVtbnMgPiBkaXZcIikpO1xyXG5cclxuXHJcblxyXG4vL1x00LfQsNC/0YPRgdC60LDQtdC8INC80L7QtNCw0LvRjNC90L7QtSDQvtC60L3QviDQtNC70Y8g0LjRgdGC0L7RgNC40LhcclxuXHQkKFwiI2hpc3RvcnlfaGlkZGVuXCIpLmFuaW1hdGVkTW9kYWwoe1xyXG5cdFx0YW5pbWF0ZWRJbjonZmFkZUluJyxcclxuXHRcdGFuaW1hdGVkT3V0OidmYWRlT3V0JyxcclxuXHRcdGFuaW1hdGlvbkR1cmF0aW9uOicxLjVzJ1xyXG5cdH0pO1xyXG5cclxuXHJcblxyXG4vL9C/0L7QutCw0LfRi9Cy0LDQtdC8INC4INC/0YDRj9GH0LXQvCDQtNCw0L3QvdGL0LUg0YfRgtC+INCx0LTRg9GCINCy0LjQstC+0LTQuNGB0Y8g0LIg0LzQvtC00LDQu9GM0L3QvtC1INC+0LrQvdC+INC40YHRgtC+0YDQuNC4XHJcblx0JChcIiNoaXN0b3J5X2hpZGRlblwiICkuY2xpY2soZnVuY3Rpb24oKSB7XHJcblx0XHQkKFwiLm1vZGFsLWNvbnRlbnQgYXJ0aWNsZVwiICkudG9nZ2xlKCk7XHJcblx0fSk7XHJcblx0JChcIiNjbG9zZWJ0LWNvbnRhaW5lclwiICkuY2xpY2soZnVuY3Rpb24oKSB7XHJcblx0XHQkKFwiLm1vZGFsLWNvbnRlbnQgYXJ0aWNsZVwiICkudG9nZ2xlKCk7XHJcblx0fSk7XHJcblxyXG5cclxuXHJcbi8v0L/QvtC60LDQt9GL0LLQsNC10Lwg0Lgg0L/RgNGP0YfQtdC8INC00LDQvdC90YvQtSDRh9GC0L4g0LHQtNGD0YIg0LLQuNCy0L7QtNC40YHRjyDQsiDQvNC+0LTQsNC70YzQvdC+0LUg0L7QutC90L4g0LPQu9C10YDQtdC4XHJcblx0JChcIiNnYWxsZXJ5X2hpZGVuXCIgKS5jbGljayhmdW5jdGlvbigpIHtcclxuXHRcdCQoXCIuZ2FsbGVyeV9tb2RhbC1jb250ZW50XCIgKS50b2dnbGUoKTtcclxuXHR9KTtcclxuXHQkKFwiI2Nsb3NlYnQtY29udGFpbmVyMlwiICkuY2xpY2soZnVuY3Rpb24oKSB7XHJcblx0XHQkKFwiLmdhbGxlcnlfbW9kYWwtY29udGVudFwiICkudG9nZ2xlKCBcInNsb3dcIiwgZnVuY3Rpb24oKSB7XHJcblx0XHRcdC8vIEFuaW1hdGlvbiBjb21wbGV0ZS5cclxuXHRcdH0pO1xyXG5cdH0pO1xyXG5cclxuXHJcbi8v0LfQsNC/0YPRgdC60LDQtdC8INC80L7QtNCw0LvRjNC90L7QtSDQvtC60L3QviDQtNC70Y8g0LPQsNC70LXRgNC10LhcclxuXHQkKFwiI2dhbGxlcnlfaGlkZW5cIikuYW5pbWF0ZWRNb2RhbCh7XHJcblx0XHRtb2RhbFRhcmdldDonZ2FsbGVyeV9tb2RhbCcsXHJcblx0XHRhbmltYXRlZEluOidmYWRlSW4nLFxyXG5cdFx0YW5pbWF0ZWRPdXQ6J2ZhZGVPdXQnLFxyXG5cdFx0Y29sb3I6ICdoc2xhKDAsIDAlLCAwJSwgMC43KScsXHJcblx0XHRhbmltYXRpb25EdXJhdGlvbjonMS41cydcclxuXHR9KTtcclxuXHJcblxyXG4vL1x00LfQsNC/0YPRgdC6INCz0LDQu9C10YDQtdC4INC00LvRjyDQutCw0LbQtNC+0LPQviDQsdC70L7QutCwINC60LDRgNGC0LjQvdC+0LpcclxuXHQkKFwiLmdhbGxlcnlfbW9kYWwtZ3V0cyA+IGRpdlwiKS5lYWNoKGZ1bmN0aW9uKCkge1xyXG5cdFx0YWxsSWQgPSAkKHRoaXMpLmF0dHIoJ2lkJylcclxuXHR9KS5saWdodEdhbGxlcnkoe1xyXG5cdFx0dGh1bWJuYWlsOnRydWUsXHJcblx0XHRzaG93VGh1bWJCeURlZmF1bHQ6IGZhbHNlXHJcblx0fSk7XHJcblxyXG5cclxuXHJcblxyXG5cclxuXHJcblxyXG5cdC8vXHQgc21vb3RoIHNjcm9sbGluZ1xyXG4vL1x0JCgnYVtocmVmXj1cIiNcIl0nKS5iaW5kKCdjbGljay5zbW9vdGhzY3JvbGwnLGZ1bmN0aW9uIChlKSB7XHJcbi8vXHRcdGUucHJldmVudERlZmF1bHQoKTtcclxuLy9cclxuLy9cdFx0dmFyIHRhcmdldCA9IHRoaXMuaGFzaCxcclxuLy9cdFx0XHQkdGFyZ2V0ID0gJCh0YXJnZXQpO1xyXG4vL1xyXG4vL1x0XHQkKCdodG1sLCBib2R5Jykuc3RvcCgpLmFuaW1hdGUoe1xyXG4vL1x0XHRcdCdzY3JvbGxUb3AnOiAkdGFyZ2V0Lm9mZnNldCgpLnRvcFxyXG4vL1x0XHR9LCA5MDAsICdzd2luZycsIGZ1bmN0aW9uICgpIHtcclxuLy9cdFx0XHR3aW5kb3cubG9jYXRpb24uaGFzaCA9IHRhcmdldDtcclxuLy9cdFx0fSk7XHJcbi8vXHR9KTtcclxuXHJcblx0Ly9iYWNrIHRvIEhvbWVcclxuLy9cdCQod2luZG93KS5zY3JvbGwoZnVuY3Rpb24gKCkge2lmICgkKHRoaXMpLnNjcm9sbFRvcCgpID4gMCkgeyQoJyNzY3JvbGxlcicpLmZhZGVJbigpO30gZWxzZSB7JCgnI3Njcm9sbGVyJykuZmFkZU91dCgpO319KTtcclxuLy9cdCQoJyNzY3JvbGxlcicpLmNsaWNrKGZ1bmN0aW9uICgpIHskKCdib2R5LGh0bWwnKS5hbmltYXRlKHtzY3JvbGxUb3A6IDB9LCA0MDApOyByZXR1cm4gZmFsc2U7fSk7XHJcbi8vXHJcblxyXG5cclxufSk7XHJcbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCkge1xyXG5cclxuXHQkKCcucmVzaXplJykud2lkdGgoJCgnLndyYXBwZXInKS53aWR0aCgpKzEpO1xyXG5cdCQoJy5oZWFkZXInKS5oZWlnaHQoJCgnLmhlYWRlcicpLndpZHRoKCkvMy40MTMzMzMzMzMzMzMzMzMpO1xyXG5cclxuXHQkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKCkge1xyXG5cdFx0JCgnLnJlc2l6ZScpLndpZHRoKCQoJy53cmFwcGVyJykud2lkdGgoKSk7XHJcblx0XHQkKCcuaGVhZGVyJykuaGVpZ2h0KCQoJy5oZWFkZXInKS53aWR0aCgpLzMuNDEzMzMzMzMzMzMzMzMzKTtcclxuXHRcdCB9KVxyXG5cdH0pO1xyXG4vKiFcclxuICogY2xhc3NpZSAtIGNsYXNzIGhlbHBlciBmdW5jdGlvbnNcclxuICogZnJvbSBib256byBodHRwczovL2dpdGh1Yi5jb20vZGVkL2JvbnpvXHJcbiAqXHJcbiAqIGNsYXNzaWUuaGFzKCBlbGVtLCAnbXktY2xhc3MnICkgLT4gdHJ1ZS9mYWxzZVxyXG4gKiBjbGFzc2llLmFkZCggZWxlbSwgJ215LW5ldy1jbGFzcycgKVxyXG4gKiBjbGFzc2llLnJlbW92ZSggZWxlbSwgJ215LXVud2FudGVkLWNsYXNzJyApXHJcbiAqIGNsYXNzaWUudG9nZ2xlKCBlbGVtLCAnbXktY2xhc3MnIClcclxuICovXHJcblxyXG4vKmpzaGludCBicm93c2VyOiB0cnVlLCBzdHJpY3Q6IHRydWUsIHVuZGVmOiB0cnVlICovXHJcblxyXG4oIGZ1bmN0aW9uKCB3aW5kb3cgKSB7XHJcblxyXG4ndXNlIHN0cmljdCc7XHJcblxyXG4vLyBjbGFzcyBoZWxwZXIgZnVuY3Rpb25zIGZyb20gYm9uem8gaHR0cHM6Ly9naXRodWIuY29tL2RlZC9ib256b1xyXG5cclxuZnVuY3Rpb24gY2xhc3NSZWcoIGNsYXNzTmFtZSApIHtcclxuICByZXR1cm4gbmV3IFJlZ0V4cChcIihefFxcXFxzKylcIiArIGNsYXNzTmFtZSArIFwiKFxcXFxzK3wkKVwiKTtcclxufVxyXG5cclxuLy8gY2xhc3NMaXN0IHN1cHBvcnQgZm9yIGNsYXNzIG1hbmFnZW1lbnRcclxuLy8gYWx0aG8gdG8gYmUgZmFpciwgdGhlIGFwaSBzdWNrcyBiZWNhdXNlIGl0IHdvbid0IGFjY2VwdCBtdWx0aXBsZSBjbGFzc2VzIGF0IG9uY2VcclxudmFyIGhhc0NsYXNzLCBhZGRDbGFzcywgcmVtb3ZlQ2xhc3M7XHJcblxyXG5pZiAoICdjbGFzc0xpc3QnIGluIGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCApIHtcclxuICBoYXNDbGFzcyA9IGZ1bmN0aW9uKCBlbGVtLCBjICkge1xyXG5cdHJldHVybiBlbGVtLmNsYXNzTGlzdC5jb250YWlucyggYyApO1xyXG4gIH07XHJcbiAgYWRkQ2xhc3MgPSBmdW5jdGlvbiggZWxlbSwgYyApIHtcclxuXHRlbGVtLmNsYXNzTGlzdC5hZGQoIGMgKTtcclxuICB9O1xyXG4gIHJlbW92ZUNsYXNzID0gZnVuY3Rpb24oIGVsZW0sIGMgKSB7XHJcblx0ZWxlbS5jbGFzc0xpc3QucmVtb3ZlKCBjICk7XHJcbiAgfTtcclxufVxyXG5lbHNlIHtcclxuICBoYXNDbGFzcyA9IGZ1bmN0aW9uKCBlbGVtLCBjICkge1xyXG5cdHJldHVybiBjbGFzc1JlZyggYyApLnRlc3QoIGVsZW0uY2xhc3NOYW1lICk7XHJcbiAgfTtcclxuICBhZGRDbGFzcyA9IGZ1bmN0aW9uKCBlbGVtLCBjICkge1xyXG5cdGlmICggIWhhc0NsYXNzKCBlbGVtLCBjICkgKSB7XHJcblx0ICBlbGVtLmNsYXNzTmFtZSA9IGVsZW0uY2xhc3NOYW1lICsgJyAnICsgYztcclxuXHR9XHJcbiAgfTtcclxuICByZW1vdmVDbGFzcyA9IGZ1bmN0aW9uKCBlbGVtLCBjICkge1xyXG5cdGVsZW0uY2xhc3NOYW1lID0gZWxlbS5jbGFzc05hbWUucmVwbGFjZSggY2xhc3NSZWcoIGMgKSwgJyAnICk7XHJcbiAgfTtcclxufVxyXG5cclxuZnVuY3Rpb24gdG9nZ2xlQ2xhc3MoIGVsZW0sIGMgKSB7XHJcbiAgdmFyIGZuID0gaGFzQ2xhc3MoIGVsZW0sIGMgKSA/IHJlbW92ZUNsYXNzIDogYWRkQ2xhc3M7XHJcbiAgZm4oIGVsZW0sIGMgKTtcclxufVxyXG5cclxud2luZG93LmNsYXNzaWUgPSB7XHJcbiAgLy8gZnVsbCBuYW1lc1xyXG4gIGhhc0NsYXNzOiBoYXNDbGFzcyxcclxuICBhZGRDbGFzczogYWRkQ2xhc3MsXHJcbiAgcmVtb3ZlQ2xhc3M6IHJlbW92ZUNsYXNzLFxyXG4gIHRvZ2dsZUNsYXNzOiB0b2dnbGVDbGFzcyxcclxuICAvLyBzaG9ydCBuYW1lc1xyXG4gIGhhczogaGFzQ2xhc3MsXHJcbiAgYWRkOiBhZGRDbGFzcyxcclxuICByZW1vdmU6IHJlbW92ZUNsYXNzLFxyXG4gIHRvZ2dsZTogdG9nZ2xlQ2xhc3NcclxufTtcclxuXHJcbn0pKCB3aW5kb3cgKTtcclxuJChmdW5jdGlvbigkKSB7XHJcblxyXG5cdC8vXHRhZGQgY2xhc3MgYWN0aXZlIHRvIG1lbnUgbGlua1xyXG5cdHZhciAkbWVudUxpbmsgPSAkKCcubWVudV9fbGluaycpO1xyXG5cdCRtZW51TGluay5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XHJcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHQkKHRoaXMpXHJcblx0XHRcdC5hZGRDbGFzcygnYWN0aXZlJylcclxuXHRcdFx0LnBhcmVudCgpLnNpYmxpbmdzKCkuZmluZCgnLmFjdGl2ZScpXHJcblx0XHRcdC5yZW1vdmVDbGFzcygnYWN0aXZlJyk7XHJcblxyXG5cdH0pO1xyXG5cdHZhciAkbWVudUFsbExpbmsgPSAkKCcubWNkLW1lbnUgYScpO1xyXG5cdCRtZW51QWxsTGluay5vbignY2xpY2snLCBmdW5jdGlvbihlKSB7XHJcblx0XHRlLnByZXZlbnREZWZhdWx0KCk7XHJcblxyXG5cdH0pO1xyXG59KTtcclxuLyo9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gKiBhbmltYXRlZE1vZGFsLmpzOiBWZXJzaW9uIDEuMFxyXG4gKiBhdXRob3I6IEpvw6NvIFBlcmVpcmFcclxuICogd2Vic2l0ZTogaHR0cDovL3d3dy5qb2FvcGVyZWlyYS5wdFxyXG4gKiBlbWFpbDogam9hb3BlcmVpcmF3ZEBnbWFpbC5jb21cclxuICogTGljZW5zZWQgTUlUXHJcbj09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09Ki9cclxuXHJcbihmdW5jdGlvbiAoJCkge1xyXG5cclxuXHQkLmZuLmFuaW1hdGVkTW9kYWwgPSBmdW5jdGlvbihvcHRpb25zKSB7XHJcblx0XHR2YXIgbW9kYWwgPSAkKHRoaXMpO1xyXG5cclxuXHRcdC8vRGVmYXVsdHNcclxuXHRcdHZhciBzZXR0aW5ncyA9ICQuZXh0ZW5kKHtcclxuXHRcdFx0bW9kYWxUYXJnZXQ6J2FuaW1hdGVkTW9kYWwnLFxyXG5cdFx0XHRwb3NpdGlvbjonZml4ZWQnLFxyXG5cdFx0XHR3aWR0aDonMTAwJScsXHJcblx0XHRcdGhlaWdodDonMTAwJScsXHJcblx0XHRcdHRvcDonMHB4JyxcclxuXHRcdFx0bGVmdDonMHB4JyxcclxuXHRcdFx0ekluZGV4SW46ICc1JyxcclxuXHRcdFx0ekluZGV4T3V0OiAnLTk5OTknLFxyXG5cdFx0XHRjb2xvcjogJ2hzbGEoMCwgMCUsIDAlLCAwLjcpJyxcclxuXHRcdFx0b3BhY2l0eUluOicxJyxcclxuXHRcdFx0b3BhY2l0eU91dDonMCcsXHJcblx0XHRcdGFuaW1hdGVkSW46J3pvb21JbicsXHJcblx0XHRcdGFuaW1hdGVkT3V0Oid6b29tT3V0JyxcclxuXHRcdFx0YW5pbWF0aW9uRHVyYXRpb246Jy42cycsXHJcblx0XHRcdG92ZXJmbG93OidhdXRvJyxcclxuXHRcdFx0Ly8gQ2FsbGJhY2tzXHJcblx0XHRcdGJlZm9yZU9wZW46IGZ1bmN0aW9uKCkge30sXHJcblx0XHRcdGFmdGVyT3BlbjogZnVuY3Rpb24oKSB7fSxcclxuXHRcdFx0YmVmb3JlQ2xvc2U6IGZ1bmN0aW9uKCkge30sXHJcblx0XHRcdGFmdGVyQ2xvc2U6IGZ1bmN0aW9uKCkge31cclxuXHJcblxyXG5cclxuXHRcdH0sIG9wdGlvbnMpO1xyXG5cclxuXHRcdHZhciBjbG9zZUJ0ID0gJCgnLmNsb3NlLScrc2V0dGluZ3MubW9kYWxUYXJnZXQpO1xyXG5cclxuXHRcdC8vY29uc29sZS5sb2coY2xvc2VCdClcclxuXHJcblx0XHR2YXIgaHJlZiA9ICQobW9kYWwpLmF0dHIoJ2hyZWYnKSxcclxuXHRcdFx0aWQgPSAkKCdib2R5JykuZmluZCgnIycrc2V0dGluZ3MubW9kYWxUYXJnZXQpLFxyXG5cdFx0XHRpZENvbmMgPSAnIycraWQuYXR0cignaWQnKTtcclxuXHRcdFx0Ly9jb25zb2xlLmxvZyhpZENvbmMpO1xyXG5cdFx0XHQvLyBEZWZhdWx0IENsYXNzZXNcclxuXHRcdFx0aWQuYWRkQ2xhc3MoJ2FuaW1hdGVkJyk7XHJcblx0XHRcdGlkLmFkZENsYXNzKHNldHRpbmdzLm1vZGFsVGFyZ2V0Kyctb2ZmJyk7XHJcblxyXG5cdFx0Ly9Jbml0IHN0eWxlc1xyXG5cdFx0dmFyIGluaXRTdHlsZXMgPSB7XHJcblx0XHRcdCdwb3NpdGlvbic6c2V0dGluZ3MucG9zaXRpb24sXHJcblx0XHRcdCd3aWR0aCc6c2V0dGluZ3Mud2lkdGgsXHJcblx0XHRcdCdoZWlnaHQnOnNldHRpbmdzLmhlaWdodCxcclxuXHRcdFx0J3RvcCc6c2V0dGluZ3MudG9wLFxyXG5cdFx0XHQnbGVmdCc6c2V0dGluZ3MubGVmdCxcclxuXHRcdFx0J2JhY2tncm91bmQtY29sb3InOnNldHRpbmdzLmNvbG9yLFxyXG5cdFx0XHQnb3ZlcmZsb3cteSc6c2V0dGluZ3Mub3ZlcmZsb3csXHJcblx0XHRcdCd6LWluZGV4JzpzZXR0aW5ncy56SW5kZXhPdXQsXHJcblx0XHRcdCdvcGFjaXR5JzpzZXR0aW5ncy5vcGFjaXR5T3V0LFxyXG5cdFx0XHQnLXdlYmtpdC1hbmltYXRpb24tZHVyYXRpb24nOnNldHRpbmdzLmFuaW1hdGlvbkR1cmF0aW9uLFxyXG5cdFx0XHQnLW1vei1hbmltYXRpb24tZHVyYXRpb24nOnNldHRpbmdzLmFuaW1hdGlvbkR1cmF0aW9uLFxyXG5cdFx0XHQnLW1zLWFuaW1hdGlvbi1kdXJhdGlvbic6c2V0dGluZ3MuYW5pbWF0aW9uRHVyYXRpb24sXHJcblx0XHRcdCdhbmltYXRpb24tZHVyYXRpb24nOnNldHRpbmdzLmFuaW1hdGlvbkR1cmF0aW9uXHJcblx0XHR9O1xyXG5cdFx0Ly9BcHBseSBzdGxlc1xyXG5cdFx0aWQuY3NzKGluaXRTdHlsZXMpO1xyXG5cclxuXHRcdG1vZGFsLmNsaWNrKGZ1bmN0aW9uKGV2ZW50KSB7XHJcblx0XHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHRcdCQoJ2JvZHksIGh0bWwnKS5jc3MoeydvdmVyZmxvdyc6J2hpZGRlbid9KTtcclxuXHRcdFx0aWYgKGhyZWYgPT0gaWRDb25jKSB7XHJcblx0XHRcdFx0aWYgKGlkLmhhc0NsYXNzKHNldHRpbmdzLm1vZGFsVGFyZ2V0Kyctb2ZmJykpIHtcclxuXHRcdFx0XHRcdGlkLnJlbW92ZUNsYXNzKHNldHRpbmdzLmFuaW1hdGVkT3V0KTtcclxuXHRcdFx0XHRcdGlkLnJlbW92ZUNsYXNzKHNldHRpbmdzLm1vZGFsVGFyZ2V0Kyctb2ZmJyk7XHJcblx0XHRcdFx0XHRpZC5hZGRDbGFzcyhzZXR0aW5ncy5tb2RhbFRhcmdldCsnLW9uJyk7XHJcblx0XHRcdFx0fVxyXG5cclxuXHRcdFx0XHQgaWYgKGlkLmhhc0NsYXNzKHNldHRpbmdzLm1vZGFsVGFyZ2V0Kyctb24nKSkge1xyXG5cdFx0XHRcdFx0c2V0dGluZ3MuYmVmb3JlT3BlbigpO1xyXG5cdFx0XHRcdFx0aWQuY3NzKHsnb3BhY2l0eSc6c2V0dGluZ3Mub3BhY2l0eUluLCd6LWluZGV4JzpzZXR0aW5ncy56SW5kZXhJbn0pO1xyXG5cdFx0XHRcdFx0aWQuYWRkQ2xhc3Moc2V0dGluZ3MuYW5pbWF0ZWRJbik7XHJcblx0XHRcdFx0XHRpZC5vbmUoJ3dlYmtpdEFuaW1hdGlvbkVuZCBtb3pBbmltYXRpb25FbmQgTVNBbmltYXRpb25FbmQgb2FuaW1hdGlvbmVuZCBhbmltYXRpb25lbmQnLCBhZnRlck9wZW4pO1xyXG5cdFx0XHRcdH07XHJcblx0XHRcdH1cclxuXHRcdH0pO1xyXG5cclxuXHJcblxyXG5cdFx0Y2xvc2VCdC5jbGljayhmdW5jdGlvbihldmVudCkge1xyXG5cdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0XHQkKCdib2R5LCBodG1sJykuY3NzKHsnb3ZlcmZsb3cnOidhdXRvJ30pO1xyXG5cclxuXHRcdFx0c2V0dGluZ3MuYmVmb3JlQ2xvc2UoKTsgLy9iZWZvcmVDbG9zZVxyXG5cdFx0XHRpZiAoaWQuaGFzQ2xhc3Moc2V0dGluZ3MubW9kYWxUYXJnZXQrJy1vbicpKSB7XHJcblx0XHRcdFx0aWQucmVtb3ZlQ2xhc3Moc2V0dGluZ3MubW9kYWxUYXJnZXQrJy1vbicpO1xyXG5cdFx0XHRcdGlkLmFkZENsYXNzKHNldHRpbmdzLm1vZGFsVGFyZ2V0Kyctb2ZmJyk7XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdGlmIChpZC5oYXNDbGFzcyhzZXR0aW5ncy5tb2RhbFRhcmdldCsnLW9mZicpKSB7XHJcblx0XHRcdFx0aWQucmVtb3ZlQ2xhc3Moc2V0dGluZ3MuYW5pbWF0ZWRJbik7XHJcblx0XHRcdFx0aWQuYWRkQ2xhc3Moc2V0dGluZ3MuYW5pbWF0ZWRPdXQpO1xyXG5cdFx0XHRcdGlkLm9uZSgnd2Via2l0QW5pbWF0aW9uRW5kIG1vekFuaW1hdGlvbkVuZCBNU0FuaW1hdGlvbkVuZCBvYW5pbWF0aW9uZW5kIGFuaW1hdGlvbmVuZCcsIGFmdGVyQ2xvc2UpO1xyXG5cdFx0XHR9O1xyXG5cclxuXHRcdH0pO1xyXG5cclxuXHRcdGZ1bmN0aW9uIGFmdGVyQ2xvc2UgKCkge1xyXG5cdFx0XHRpZC5jc3Moeyd6LWluZGV4JzpzZXR0aW5ncy56SW5kZXhPdXR9KTtcclxuXHRcdFx0c2V0dGluZ3MuYWZ0ZXJDbG9zZSgpOyAvL2FmdGVyQ2xvc2VcclxuXHRcdH1cclxuXHJcblx0XHRmdW5jdGlvbiBhZnRlck9wZW4gKCkge1xyXG5cdFx0XHRzZXR0aW5ncy5hZnRlck9wZW4oKTsgLy9hZnRlck9wZW5cclxuXHRcdH1cclxuXHJcblx0fTsgLy8gRW5kIGFuaW1hdGVkTW9kYWwuanNcclxuXHJcbn0oalF1ZXJ5KSk7XHJcbnZhciBqc29uID0ge1xyXG5cdGJsb2NrczpbXHJcblx0XHR7XHJcblx0XHRcdGlkOiBcImFuaW1hdGVkLXRodW1ibmlhbHNfMVwiLFxyXG5cdFx0XHRkYXRhQ291bnQ6IFwiMTZcIixcclxuXHRcdFx0bGlua3M6W1xyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzEtbGlnaHRib3guanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzEuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwiXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzItbGlnaHRib3guanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzIuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwiXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzMtbGlnaHRib3guanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzMuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwiXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzQtbGlnaHRib3guanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzQuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwiXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzUtbGlnaHRib3guanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzUuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwiXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzYtbGlnaHRib3guanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzYuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwiXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzctbGlnaHRib3guanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzcuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwiXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzgtbGlnaHRib3guanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzguanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwiXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzktbGlnaHRib3guanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzkuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwiXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzEwLWxpZ2h0Ym94LmpwZ1wiLFxyXG5cdFx0XHRcdFx0c3JjOiBcImltZy9jbGVhbl9lbnZpcm9ubWVudC8xMC5qcGdcIixcclxuXHRcdFx0XHRcdGFsdDogXCJcIlxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0aHJlZjogXCJpbWcvY2xlYW5fZW52aXJvbm1lbnQvMTEtbGlnaHRib3guanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzExLmpwZ1wiLFxyXG5cdFx0XHRcdFx0YWx0OiBcIlwiXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRocmVmOiBcImltZy9jbGVhbl9lbnZpcm9ubWVudC8xMi1saWdodGJveC5qcGdcIixcclxuXHRcdFx0XHRcdHNyYzogXCJpbWcvY2xlYW5fZW52aXJvbm1lbnQvMTIuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwiXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzEzLWxpZ2h0Ym94LmpwZ1wiLFxyXG5cdFx0XHRcdFx0c3JjOiBcImltZy9jbGVhbl9lbnZpcm9ubWVudC8xMy5qcGdcIixcclxuXHRcdFx0XHRcdGFsdDogXCJcIlxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0aHJlZjogXCJpbWcvY2xlYW5fZW52aXJvbm1lbnQvMTQtbGlnaHRib3guanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzE0LmpwZ1wiLFxyXG5cdFx0XHRcdFx0YWx0OiBcIlwiXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRocmVmOiBcImltZy9jbGVhbl9lbnZpcm9ubWVudC8xNS1saWdodGJveC5qcGdcIixcclxuXHRcdFx0XHRcdHNyYzogXCJpbWcvY2xlYW5fZW52aXJvbm1lbnQvMTUuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwiXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL2NsZWFuX2Vudmlyb25tZW50LzE2LWxpZ2h0Ym94LmpwZ1wiLFxyXG5cdFx0XHRcdFx0c3JjOiBcImltZy9jbGVhbl9lbnZpcm9ubWVudC8xNi5qcGdcIixcclxuXHRcdFx0XHRcdGFsdDogXCJcIlxyXG5cdFx0XHRcdH0sXHJcblxyXG5cclxuXHRcdFx0XVxyXG5cdFx0fSxcclxuXHRcdHtcclxuXHRcdFx0aWQ6IFwiYW5pbWF0ZWQtdGh1bWJuaWFsc18yXCIsXHJcblx0XHRcdGRhdGFDb3VudDogXCI3XCIsXHJcblx0XHRcdGxpbmtzOltcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRocmVmOiBcImltZy9zcG9ydC8xLmpwZ1wiLFxyXG5cdFx0XHRcdFx0c3JjOiBcImltZy9zcG9ydC8xX3RiLmpwZ1wiLFxyXG5cdFx0XHRcdFx0YWx0OiBcItCd0LAg0YHRgtCw0YDRgiwg0YPQstCw0LPQsCAsINCg0YPRiCFcIlxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0aHJlZjogXCJpbWcvc3BvcnQvMi5qcGdcIixcclxuXHRcdFx0XHRcdHNyYzogXCJpbWcvc3BvcnQvMl90Yi5qcGdcIixcclxuXHRcdFx0XHRcdGFsdDogXCLQotCw0LosINGPINC90LAg0LrQvtC90ZZcIlxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0aHJlZjogXCJpbWcvc3BvcnQvMy5qcGdcIixcclxuXHRcdFx0XHRcdHNyYzogXCJpbWcvc3BvcnQvM190Yi5qcGdcIixcclxuXHRcdFx0XHRcdGFsdDogXCLQpdC+0L8g0YXQtdC5INC70LAt0LvQsC3Qu9C10LksINGC0YDQuCDQtNC10LLRh9C10L3QutC4ICwg0YHQtdC80Ywg0L/QtdCw0YDQvdC10LlcIlxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0aHJlZjogXCJpbWcvc3BvcnQvNC5qcGdcIixcclxuXHRcdFx0XHRcdHNyYzogXCJpbWcvc3BvcnQvNF90Yi5qcGdcIixcclxuXHRcdFx0XHRcdGFsdDogXCLQn9Cw0YDQsCDQvdCw0LLQtdC5Li4uXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL3Nwb3J0LzUuanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL3Nwb3J0LzVfdGIuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwi0JrQvtC90LXQvCDRhdC+0LTQuC4uLlwiXHJcblx0XHRcdFx0fSxcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRocmVmOiBcImltZy9zcG9ydC82LmpwZ1wiLFxyXG5cdFx0XHRcdFx0c3JjOiBcImltZy9zcG9ydC82X3RiLmpwZ1wiLFxyXG5cdFx0XHRcdFx0YWx0OiBcItCi0LjRhdGI0LUg0ZfQtNC10YggLSDQtNCw0LvRliDQsdGD0LTQtdGIXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL3Nwb3J0LzcuanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL3Nwb3J0LzdfdGIuanBnXCIsXHJcblx0XHRcdFx0XHRhbHQ6IFwi0KHQsifRj9GC0LrQvtCy0ZYg0L3QsNCz0L7RgNC+0LTQuFwiXHJcblx0XHRcdFx0fSxcclxuXHJcblx0XHRcdF1cclxuXHRcdH0sXHJcblx0XHR7XHJcblx0XHRcdGlkOiBcImFuaW1hdGVkLXRodW1ibmlhbHNfM1wiLFxyXG5cdFx0XHRkYXRhQ291bnQ6IFwiNVwiLFxyXG5cdFx0XHRsaW5rczpbXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0aHJlZjogXCJpbWcvTmljaG9sYXNfZGF5LzEuanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL05pY2hvbGFzX2RheS8xX3RiLmpwZ1wiLFxyXG5cdFx0XHRcdFx0YWx0OiBcIk5pa29sYXNcIlxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0aHJlZjogXCJpbWcvTmljaG9sYXNfZGF5LzIuanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL05pY2hvbGFzX2RheS8yX3RiLmpwZ1wiLFxyXG5cdFx0XHRcdFx0YWx0OiBcImNyb3VkXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL05pY2hvbGFzX2RheS8zLmpwZ1wiLFxyXG5cdFx0XHRcdFx0c3JjOiBcImltZy9OaWNob2xhc19kYXkvM190Yi5qcGdcIixcclxuXHRcdFx0XHRcdGFsdDogXCJOaWtvbGFzIGFuZCBnaXJsXCJcclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdGhyZWY6IFwiaW1nL05pY2hvbGFzX2RheS80LmpwZ1wiLFxyXG5cdFx0XHRcdFx0c3JjOiBcImltZy9OaWNob2xhc19kYXkvNF90Yi5qcGdcIixcclxuXHRcdFx0XHRcdGFsdDogXCJOaWtvbGFzIGluIHBhcmtcIlxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0e1xyXG5cdFx0XHRcdFx0aHJlZjogXCJpbWcvTmljaG9sYXNfZGF5LzUuanBnXCIsXHJcblx0XHRcdFx0XHRzcmM6IFwiaW1nL05pY2hvbGFzX2RheS81X3RiLmpwZ1wiLFxyXG5cdFx0XHRcdFx0YWx0OiBcIk5pa29sYXMgaG9yc2VcIlxyXG5cdFx0XHRcdH0sXHJcblxyXG5cdFx0XHRdXHJcblx0XHR9XHJcblx0XVxyXG59XHJcblxyXG4vL3ZhciBibG9ja3NJRCA9IE9iamVjdC5rZXlzKCBqc29uLmJsb2NrcykubGVuZ3RoO1xyXG4vL3ZhciBsaW5rczEgPSBPYmplY3Qua2V5cygganNvbi5ibG9ja3NbMF0ubGlua3MpLmxlbmd0aDtcclxuLy92YXIgbGlua3MyID0gT2JqZWN0LmtleXMoIGpzb24uYmxvY2tzWzFdLmxpbmtzKS5sZW5ndGg7XHJcbi8vdmFyIGxpbmtzMyA9IE9iamVjdC5rZXlzKCBqc29uLmJsb2Nrc1syXS5saW5rcykubGVuZ3RoO1xyXG4vL1xyXG4vL3ZhciBiYXNlID0gW107XHJcbi8vanNvbi5ibG9ja3MuZm9yRWFjaChmdW5jdGlvbihpdGVtLCBpLCBibG9ja3MpIHtcclxuLy9cdGNvbnNvbGUubG9nKCBpKzEgKTtcclxuLy9cdGJhc2UgKz0gKGkpO1xyXG4vL30pO1xyXG4vL2NvbnNvbGUubG9nKCdiYXNlOicsIGJhc2UpO1xyXG4vL1xyXG4vL2NvbnNvbGUubG9nKCdibG9ja3NJRDonLCBibG9ja3NJRCk7XHJcbi8vY29uc29sZS5sb2coJ2xpbmtzMTonLCBsaW5rczEpO1xyXG4vL2NvbnNvbGUubG9nKCdsaW5rczI6JywgbGlua3MyKTtcclxuLy9jb25zb2xlLmxvZygnbGlua3MzOicsIGxpbmtzMyk7XHJcblxyXG5cclxudmFyIHRlbXBsYXRlSW5mbyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ2FsbGVyeS10ZW1wbGF0ZVwiKS5pbm5lckhUTUw7XHJcbnZhciB0ZW1wbGF0ZSA9IEhhbmRsZWJhcnMuY29tcGlsZSh0ZW1wbGF0ZUluZm8pO1xyXG5cclxudmFyIHRlbXBsYXRlRGF0YSA9IHRlbXBsYXRlKGpzb24pO1xyXG5kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ2FsbGVyeV9jb250ZW50JykuaW5uZXJIVE1MICs9IHRlbXBsYXRlRGF0YTsiXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
