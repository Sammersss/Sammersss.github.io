function getDate(){var t,e=new Array("неділя","понеділок","вівторок","середа","четвер","пятниця","субота"),i=new Array("січня","лютого","березня","квітня","травня","червня","липня","серпня","вересня","жовтня","листопа","грудня"),o=new Date,n=e[o.getDay()],r=i[o.getMonth()],s=o.getDate(),a=o.getFullYear(),l=o.getHours(),c=o.getMinutes(),u=o.getSeconds();10>l&&(l="0"+l),10>c&&(c="0"+c),10>u&&(u="0"+u),l>=5&&12>l?t="Доброго ранку ! ":l>=12&&18>l?t="Доброго дня ! ":l>=18&&24>l?t="Доброго вечора ! ":l>=0&&5>l&&(t="Доброї ночі ! "),document.getElementById("daydisplay").innerHTML=t+'&nbsp; &nbsp;<span class="fa fa-calendar"></span> &nbsp;Сьогодні &nbsp;:&nbsp;'+n+"&nbsp;"+s+"&nbsp;"+r+"&nbsp;"+a+"&nbsp; року",document.getElementById("timedisplay").innerHTML='<span class="fa fa-clock-o"></span>&nbsp;&nbsp;'+l+":"+c+":"+u}function ASTimer(t,e,i){var o=50,n=null,r=0;this.pause=function(){clearInterval(n)},this.resume=function(){clearInterval(n),t>0?n=setInterval(function(){r+=o,r>t&&(clearInterval(n),e&&e()),i&&i(r/t)},o):e&&e()},this.stop=function(){clearInterval(n),i&&i(-1),r=0},this.start=function(){r=0,clearInterval(n),t>0?n=setInterval(function(){r+=o,r>t&&(clearInterval(n),e&&e()),i&&i(r/t)},o):e&&e()}}function onYouTubeIframeAPIReady(){ASYouTubeIframeAPIReady=!0}!function(t,e){"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){function i(t){var e=!!t&&"length"in t&&t.length,i=pt.type(t);return"function"===i||pt.isWindow(t)?!1:"array"===i||0===e||"number"==typeof e&&e>0&&e-1 in t}function o(t,e,i){if(pt.isFunction(e))return pt.grep(t,function(t,o){return!!e.call(t,o,t)!==i});if(e.nodeType)return pt.grep(t,function(t){return t===e!==i});if("string"==typeof e){if(Tt.test(e))return pt.filter(e,t,i);e=pt.filter(e,t)}return pt.grep(t,function(t){return pt.inArray(t,e)>-1!==i})}function n(t,e){do t=t[e];while(t&&1!==t.nodeType);return t}function r(t){var e={};return pt.each(t.match(zt)||[],function(t,i){e[i]=!0}),e}function s(){ot.addEventListener?(ot.removeEventListener("DOMContentLoaded",a),t.removeEventListener("load",a)):(ot.detachEvent("onreadystatechange",a),t.detachEvent("onload",a))}function a(){(ot.addEventListener||"load"===t.event.type||"complete"===ot.readyState)&&(s(),pt.ready())}function l(t,e,i){if(void 0===i&&1===t.nodeType){var o="data-"+e.replace(Dt,"-$1").toLowerCase();if(i=t.getAttribute(o),"string"==typeof i){try{i="true"===i?!0:"false"===i?!1:"null"===i?null:+i+""===i?+i:jt.test(i)?pt.parseJSON(i):i}catch(n){}pt.data(t,e,i)}else i=void 0}return i}function c(t){var e;for(e in t)if(("data"!==e||!pt.isEmptyObject(t[e]))&&"toJSON"!==e)return!1;return!0}function u(t,e,i,o){if(Lt(t)){var n,r,s=pt.expando,a=t.nodeType,l=a?pt.cache:t,c=a?t[s]:t[s]&&s;if(c&&l[c]&&(o||l[c].data)||void 0!==i||"string"!=typeof e)return c||(c=a?t[s]=it.pop()||pt.guid++:s),l[c]||(l[c]=a?{}:{toJSON:pt.noop}),"object"!=typeof e&&"function"!=typeof e||(o?l[c]=pt.extend(l[c],e):l[c].data=pt.extend(l[c].data,e)),r=l[c],o||(r.data||(r.data={}),r=r.data),void 0!==i&&(r[pt.camelCase(e)]=i),"string"==typeof e?(n=r[e],null==n&&(n=r[pt.camelCase(e)])):n=r,n}}function h(t,e,i){if(Lt(t)){var o,n,r=t.nodeType,s=r?pt.cache:t,a=r?t[pt.expando]:pt.expando;if(s[a]){if(e&&(o=i?s[a]:s[a].data)){pt.isArray(e)?e=e.concat(pt.map(e,pt.camelCase)):e in o?e=[e]:(e=pt.camelCase(e),e=e in o?[e]:e.split(" ")),n=e.length;for(;n--;)delete o[e[n]];if(i?!c(o):!pt.isEmptyObject(o))return}(i||(delete s[a].data,c(s[a])))&&(r?pt.cleanData([t],!0):ht.deleteExpando||s!=s.window?delete s[a]:s[a]=void 0)}}}function d(t,e,i,o){var n,r=1,s=20,a=o?function(){return o.cur()}:function(){return pt.css(t,e,"")},l=a(),c=i&&i[3]||(pt.cssNumber[e]?"":"px"),u=(pt.cssNumber[e]||"px"!==c&&+l)&&Pt.exec(pt.css(t,e));if(u&&u[3]!==c){c=c||u[3],i=i||[],u=+l||1;do r=r||".5",u/=r,pt.style(t,e,u+c);while(r!==(r=a()/l)&&1!==r&&--s)}return i&&(u=+u||+l||0,n=i[1]?u+(i[1]+1)*i[2]:+i[2],o&&(o.unit=c,o.start=u,o.end=n)),n}function p(t){var e=Wt.split("|"),i=t.createDocumentFragment();if(i.createElement)for(;e.length;)i.createElement(e.pop());return i}function f(t,e){var i,o,n=0,r="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):void 0;if(!r)for(r=[],i=t.childNodes||t;null!=(o=i[n]);n++)!e||pt.nodeName(o,e)?r.push(o):pt.merge(r,f(o,e));return void 0===e||e&&pt.nodeName(t,e)?pt.merge([t],r):r}function m(t,e){for(var i,o=0;null!=(i=t[o]);o++)pt._data(i,"globalEval",!e||pt._data(e[o],"globalEval"))}function g(t){qt.test(t.type)&&(t.defaultChecked=t.checked)}function v(t,e,i,o,n){for(var r,s,a,l,c,u,h,d=t.length,v=p(e),b=[],w=0;d>w;w++)if(s=t[w],s||0===s)if("object"===pt.type(s))pt.merge(b,s.nodeType?[s]:s);else if(Xt.test(s)){for(l=l||v.appendChild(e.createElement("div")),c=(Bt.exec(s)||["",""])[1].toLowerCase(),h=Vt[c]||Vt._default,l.innerHTML=h[1]+pt.htmlPrefilter(s)+h[2],r=h[0];r--;)l=l.lastChild;if(!ht.leadingWhitespace&&Rt.test(s)&&b.push(e.createTextNode(Rt.exec(s)[0])),!ht.tbody)for(s="table"!==c||Qt.test(s)?"<table>"!==h[1]||Qt.test(s)?0:l:l.firstChild,r=s&&s.childNodes.length;r--;)pt.nodeName(u=s.childNodes[r],"tbody")&&!u.childNodes.length&&s.removeChild(u);for(pt.merge(b,l.childNodes),l.textContent="";l.firstChild;)l.removeChild(l.firstChild);l=v.lastChild}else b.push(e.createTextNode(s));for(l&&v.removeChild(l),ht.appendChecked||pt.grep(f(b,"input"),g),w=0;s=b[w++];)if(o&&pt.inArray(s,o)>-1)n&&n.push(s);else if(a=pt.contains(s.ownerDocument,s),l=f(v.appendChild(s),"script"),a&&m(l),i)for(r=0;s=l[r++];)_t.test(s.type||"")&&i.push(s);return l=null,v}function b(){return!0}function w(){return!1}function y(){try{return ot.activeElement}catch(t){}}function x(t,e,i,o,n,r){var s,a;if("object"==typeof e){"string"!=typeof i&&(o=o||i,i=void 0);for(a in e)x(t,a,i,o,e[a],r);return t}if(null==o&&null==n?(n=i,o=i=void 0):null==n&&("string"==typeof i?(n=o,o=void 0):(n=o,o=i,i=void 0)),n===!1)n=w;else if(!n)return t;return 1===r&&(s=n,n=function(t){return pt().off(t),s.apply(this,arguments)},n.guid=s.guid||(s.guid=pt.guid++)),t.each(function(){pt.event.add(this,e,n,o,i)})}function k(t,e){return pt.nodeName(t,"table")&&pt.nodeName(11!==e.nodeType?e:e.firstChild,"tr")?t.getElementsByTagName("tbody")[0]||t.appendChild(t.ownerDocument.createElement("tbody")):t}function T(t){return t.type=(null!==pt.find.attr(t,"type"))+"/"+t.type,t}function E(t){var e=ne.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function C(t,e){if(1===e.nodeType&&pt.hasData(t)){var i,o,n,r=pt._data(t),s=pt._data(e,r),a=r.events;if(a){delete s.handle,s.events={};for(i in a)for(o=0,n=a[i].length;n>o;o++)pt.event.add(e,i,a[i][o])}s.data&&(s.data=pt.extend({},s.data))}}function S(t,e){var i,o,n;if(1===e.nodeType){if(i=e.nodeName.toLowerCase(),!ht.noCloneEvent&&e[pt.expando]){n=pt._data(e);for(o in n.events)pt.removeEvent(e,o,n.handle);e.removeAttribute(pt.expando)}"script"===i&&e.text!==t.text?(T(e).text=t.text,E(e)):"object"===i?(e.parentNode&&(e.outerHTML=t.outerHTML),ht.html5Clone&&t.innerHTML&&!pt.trim(e.innerHTML)&&(e.innerHTML=t.innerHTML)):"input"===i&&qt.test(t.type)?(e.defaultChecked=e.checked=t.checked,e.value!==t.value&&(e.value=t.value)):"option"===i?e.defaultSelected=e.selected=t.defaultSelected:"input"!==i&&"textarea"!==i||(e.defaultValue=t.defaultValue)}}function A(t,e,i,o){e=rt.apply([],e);var n,r,s,a,l,c,u=0,h=t.length,d=h-1,p=e[0],m=pt.isFunction(p);if(m||h>1&&"string"==typeof p&&!ht.checkClone&&oe.test(p))return t.each(function(n){var r=t.eq(n);m&&(e[0]=p.call(this,n,r.html())),A(r,e,i,o)});if(h&&(c=v(e,t[0].ownerDocument,!1,t,o),n=c.firstChild,1===c.childNodes.length&&(c=n),n||o)){for(a=pt.map(f(c,"script"),T),s=a.length;h>u;u++)r=c,u!==d&&(r=pt.clone(r,!0,!0),s&&pt.merge(a,f(r,"script"))),i.call(t[u],r,u);if(s)for(l=a[a.length-1].ownerDocument,pt.map(a,E),u=0;s>u;u++)r=a[u],_t.test(r.type||"")&&!pt._data(r,"globalEval")&&pt.contains(l,r)&&(r.src?pt._evalUrl&&pt._evalUrl(r.src):pt.globalEval((r.text||r.textContent||r.innerHTML||"").replace(re,"")));c=n=null}return t}function I(t,e,i){for(var o,n=e?pt.filter(e,t):t,r=0;null!=(o=n[r]);r++)i||1!==o.nodeType||pt.cleanData(f(o)),o.parentNode&&(i&&pt.contains(o.ownerDocument,o)&&m(f(o,"script")),o.parentNode.removeChild(o));return t}function z(t,e){var i=pt(e.createElement(t)).appendTo(e.body),o=pt.css(i[0],"display");return i.detach(),o}function $(t){var e=ot,i=ce[t];return i||(i=z(t,e),"none"!==i&&i||(le=(le||pt("<iframe frameborder='0' width='0' height='0'/>")).appendTo(e.documentElement),e=(le[0].contentWindow||le[0].contentDocument).document,e.write(),e.close(),i=z(t,e),le.detach()),ce[t]=i),i}function N(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function L(t){if(t in Ee)return t;for(var e=t.charAt(0).toUpperCase()+t.slice(1),i=Te.length;i--;)if(t=Te[i]+e,t in Ee)return t}function j(t,e){for(var i,o,n,r=[],s=0,a=t.length;a>s;s++)o=t[s],o.style&&(r[s]=pt._data(o,"olddisplay"),i=o.style.display,e?(r[s]||"none"!==i||(o.style.display=""),""===o.style.display&&Ht(o)&&(r[s]=pt._data(o,"olddisplay",$(o.nodeName)))):(n=Ht(o),(i&&"none"!==i||!n)&&pt._data(o,"olddisplay",n?i:pt.css(o,"display"))));for(s=0;a>s;s++)o=t[s],o.style&&(e&&"none"!==o.style.display&&""!==o.style.display||(o.style.display=e?r[s]||"":"none"));return t}function D(t,e,i){var o=ye.exec(e);return o?Math.max(0,o[1]-(i||0))+(o[2]||"px"):e}function M(t,e,i,o,n){for(var r=i===(o?"border":"content")?4:"width"===e?1:0,s=0;4>r;r+=2)"margin"===i&&(s+=pt.css(t,i+Ot[r],!0,n)),o?("content"===i&&(s-=pt.css(t,"padding"+Ot[r],!0,n)),"margin"!==i&&(s-=pt.css(t,"border"+Ot[r]+"Width",!0,n))):(s+=pt.css(t,"padding"+Ot[r],!0,n),"padding"!==i&&(s+=pt.css(t,"border"+Ot[r]+"Width",!0,n)));return s}function P(t,e,i){var o=!0,n="width"===e?t.offsetWidth:t.offsetHeight,r=fe(t),s=ht.boxSizing&&"border-box"===pt.css(t,"boxSizing",!1,r);if(0>=n||null==n){if(n=me(t,e,r),(0>n||null==n)&&(n=t.style[e]),he.test(n))return n;o=s&&(ht.boxSizingReliable()||n===t.style[e]),n=parseFloat(n)||0}return n+M(t,e,i||(s?"border":"content"),o,r)+"px"}function O(t,e,i,o,n){return new O.prototype.init(t,e,i,o,n)}function H(){return t.setTimeout(function(){Ce=void 0}),Ce=pt.now()}function F(t,e){var i,o={height:t},n=0;for(e=e?1:0;4>n;n+=2-e)i=Ot[n],o["margin"+i]=o["padding"+i]=t;return e&&(o.opacity=o.width=t),o}function q(t,e,i){for(var o,n=(R.tweeners[e]||[]).concat(R.tweeners["*"]),r=0,s=n.length;s>r;r++)if(o=n[r].call(i,e,t))return o}function B(t,e,i){var o,n,r,s,a,l,c,u,h=this,d={},p=t.style,f=t.nodeType&&Ht(t),m=pt._data(t,"fxshow");i.queue||(a=pt._queueHooks(t,"fx"),null==a.unqueued&&(a.unqueued=0,l=a.empty.fire,a.empty.fire=function(){a.unqueued||l()}),a.unqueued++,h.always(function(){h.always(function(){a.unqueued--,pt.queue(t,"fx").length||a.empty.fire()})})),1===t.nodeType&&("height"in e||"width"in e)&&(i.overflow=[p.overflow,p.overflowX,p.overflowY],c=pt.css(t,"display"),u="none"===c?pt._data(t,"olddisplay")||$(t.nodeName):c,"inline"===u&&"none"===pt.css(t,"float")&&(ht.inlineBlockNeedsLayout&&"inline"!==$(t.nodeName)?p.zoom=1:p.display="inline-block")),i.overflow&&(p.overflow="hidden",ht.shrinkWrapBlocks()||h.always(function(){p.overflow=i.overflow[0],p.overflowX=i.overflow[1],p.overflowY=i.overflow[2]}));for(o in e)if(n=e[o],Ae.exec(n)){if(delete e[o],r=r||"toggle"===n,n===(f?"hide":"show")){if("show"!==n||!m||void 0===m[o])continue;f=!0}d[o]=m&&m[o]||pt.style(t,o)}else c=void 0;if(pt.isEmptyObject(d))"inline"===("none"===c?$(t.nodeName):c)&&(p.display=c);else{m?"hidden"in m&&(f=m.hidden):m=pt._data(t,"fxshow",{}),r&&(m.hidden=!f),f?pt(t).show():h.done(function(){pt(t).hide()}),h.done(function(){var e;pt._removeData(t,"fxshow");for(e in d)pt.style(t,e,d[e])});for(o in d)s=q(f?m[o]:0,o,h),o in m||(m[o]=s.start,f&&(s.end=s.start,s.start="width"===o||"height"===o?1:0))}}function _(t,e){var i,o,n,r,s;for(i in t)if(o=pt.camelCase(i),n=e[o],r=t[i],pt.isArray(r)&&(n=r[1],r=t[i]=r[0]),i!==o&&(t[o]=r,delete t[i]),s=pt.cssHooks[o],s&&"expand"in s){r=s.expand(r),delete t[o];for(i in r)i in t||(t[i]=r[i],e[i]=n)}else e[o]=n}function R(t,e,i){var o,n,r=0,s=R.prefilters.length,a=pt.Deferred().always(function(){delete l.elem}),l=function(){if(n)return!1;for(var e=Ce||H(),i=Math.max(0,c.startTime+c.duration-e),o=i/c.duration||0,r=1-o,s=0,l=c.tweens.length;l>s;s++)c.tweens[s].run(r);return a.notifyWith(t,[c,r,i]),1>r&&l?i:(a.resolveWith(t,[c]),!1)},c=a.promise({elem:t,props:pt.extend({},e),opts:pt.extend(!0,{specialEasing:{},easing:pt.easing._default},i),originalProperties:e,originalOptions:i,startTime:Ce||H(),duration:i.duration,tweens:[],createTween:function(e,i){var o=pt.Tween(t,c.opts,e,i,c.opts.specialEasing[e]||c.opts.easing);return c.tweens.push(o),o},stop:function(e){var i=0,o=e?c.tweens.length:0;if(n)return this;for(n=!0;o>i;i++)c.tweens[i].run(1);return e?(a.notifyWith(t,[c,1,0]),a.resolveWith(t,[c,e])):a.rejectWith(t,[c,e]),this}}),u=c.props;for(_(u,c.opts.specialEasing);s>r;r++)if(o=R.prefilters[r].call(c,t,u,c.opts))return pt.isFunction(o.stop)&&(pt._queueHooks(c.elem,c.opts.queue).stop=pt.proxy(o.stop,o)),o;return pt.map(u,q,c),pt.isFunction(c.opts.start)&&c.opts.start.call(t,c),pt.fx.timer(pt.extend(l,{elem:t,anim:c,queue:c.opts.queue})),c.progress(c.opts.progress).done(c.opts.done,c.opts.complete).fail(c.opts.fail).always(c.opts.always)}function W(t){return pt.attr(t,"class")||""}function V(t){return function(e,i){"string"!=typeof e&&(i=e,e="*");var o,n=0,r=e.toLowerCase().match(zt)||[];if(pt.isFunction(i))for(;o=r[n++];)"+"===o.charAt(0)?(o=o.slice(1)||"*",(t[o]=t[o]||[]).unshift(i)):(t[o]=t[o]||[]).push(i)}}function X(t,e,i,o){function n(a){var l;return r[a]=!0,pt.each(t[a]||[],function(t,a){var c=a(e,i,o);return"string"!=typeof c||s||r[c]?s?!(l=c):void 0:(e.dataTypes.unshift(c),n(c),!1)}),l}var r={},s=t===Ke;return n(e.dataTypes[0])||!r["*"]&&n("*")}function Q(t,e){var i,o,n=pt.ajaxSettings.flatOptions||{};for(o in e)void 0!==e[o]&&((n[o]?t:i||(i={}))[o]=e[o]);return i&&pt.extend(!0,t,i),t}function Y(t,e,i){for(var o,n,r,s,a=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===n&&(n=t.mimeType||e.getResponseHeader("Content-Type"));if(n)for(s in a)if(a[s]&&a[s].test(n)){l.unshift(s);break}if(l[0]in i)r=l[0];else{for(s in i){if(!l[0]||t.converters[s+" "+l[0]]){r=s;break}o||(o=s)}r=r||o}return r?(r!==l[0]&&l.unshift(r),i[r]):void 0}function G(t,e,i,o){var n,r,s,a,l,c={},u=t.dataTypes.slice();if(u[1])for(s in t.converters)c[s.toLowerCase()]=t.converters[s];for(r=u.shift();r;)if(t.responseFields[r]&&(i[t.responseFields[r]]=e),!l&&o&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=r,r=u.shift())if("*"===r)r=l;else if("*"!==l&&l!==r){if(s=c[l+" "+r]||c["* "+r],!s)for(n in c)if(a=n.split(" "),a[1]===r&&(s=c[l+" "+a[0]]||c["* "+a[0]])){s===!0?s=c[n]:c[n]!==!0&&(r=a[0],u.unshift(a[1]));break}if(s!==!0)if(s&&t["throws"])e=s(e);else try{e=s(e)}catch(h){return{state:"parsererror",error:s?h:"No conversion from "+l+" to "+r}}}return{state:"success",data:e}}function U(t){return t.style&&t.style.display||pt.css(t,"display")}function J(t){if(!pt.contains(t.ownerDocument||ot,t))return!0;for(;t&&1===t.nodeType;){if("none"===U(t)||"hidden"===t.type)return!0;t=t.parentNode}return!1}function K(t,e,i,o){var n;if(pt.isArray(e))pt.each(e,function(e,n){i||oi.test(t)?o(t,n):K(t+"["+("object"==typeof n&&null!=n?e:"")+"]",n,i,o)});else if(i||"object"!==pt.type(e))o(t,e);else for(n in e)K(t+"["+n+"]",e[n],i,o)}function Z(){try{return new t.XMLHttpRequest}catch(e){}}function tt(){try{return new t.ActiveXObject("Microsoft.XMLHTTP")}catch(e){}}function et(t){return pt.isWindow(t)?t:9===t.nodeType?t.defaultView||t.parentWindow:!1}var it=[],ot=t.document,nt=it.slice,rt=it.concat,st=it.push,at=it.indexOf,lt={},ct=lt.toString,ut=lt.hasOwnProperty,ht={},dt="1.12.4",pt=function(t,e){return new pt.fn.init(t,e)},ft=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,mt=/^-ms-/,gt=/-([\da-z])/gi,vt=function(t,e){return e.toUpperCase()};pt.fn=pt.prototype={jquery:dt,constructor:pt,selector:"",length:0,toArray:function(){return nt.call(this)},get:function(t){return null!=t?0>t?this[t+this.length]:this[t]:nt.call(this)},pushStack:function(t){var e=pt.merge(this.constructor(),t);return e.prevObject=this,e.context=this.context,e},each:function(t){return pt.each(this,t)},map:function(t){return this.pushStack(pt.map(this,function(e,i){return t.call(e,i,e)}))},slice:function(){return this.pushStack(nt.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,i=+t+(0>t?e:0);return this.pushStack(i>=0&&e>i?[this[i]]:[])},end:function(){return this.prevObject||this.constructor()},push:st,sort:it.sort,splice:it.splice},pt.extend=pt.fn.extend=function(){var t,e,i,o,n,r,s=arguments[0]||{},a=1,l=arguments.length,c=!1;for("boolean"==typeof s&&(c=s,s=arguments[a]||{},a++),"object"==typeof s||pt.isFunction(s)||(s={}),a===l&&(s=this,a--);l>a;a++)if(null!=(n=arguments[a]))for(o in n)t=s[o],i=n[o],s!==i&&(c&&i&&(pt.isPlainObject(i)||(e=pt.isArray(i)))?(e?(e=!1,r=t&&pt.isArray(t)?t:[]):r=t&&pt.isPlainObject(t)?t:{},s[o]=pt.extend(c,r,i)):void 0!==i&&(s[o]=i));return s},pt.extend({expando:"jQuery"+(dt+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===pt.type(t)},isArray:Array.isArray||function(t){return"array"===pt.type(t)},isWindow:function(t){return null!=t&&t==t.window},isNumeric:function(t){var e=t&&t.toString();return!pt.isArray(t)&&e-parseFloat(e)+1>=0},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},isPlainObject:function(t){var e;if(!t||"object"!==pt.type(t)||t.nodeType||pt.isWindow(t))return!1;try{if(t.constructor&&!ut.call(t,"constructor")&&!ut.call(t.constructor.prototype,"isPrototypeOf"))return!1}catch(i){return!1}if(!ht.ownFirst)for(e in t)return ut.call(t,e);for(e in t);return void 0===e||ut.call(t,e)},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?lt[ct.call(t)]||"object":typeof t},globalEval:function(e){e&&pt.trim(e)&&(t.execScript||function(e){t.eval.call(t,e)})(e)},camelCase:function(t){return t.replace(mt,"ms-").replace(gt,vt)},nodeName:function(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()},each:function(t,e){var o,n=0;if(i(t))for(o=t.length;o>n&&e.call(t[n],n,t[n])!==!1;n++);else for(n in t)if(e.call(t[n],n,t[n])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(ft,"")},makeArray:function(t,e){var o=e||[];return null!=t&&(i(Object(t))?pt.merge(o,"string"==typeof t?[t]:t):st.call(o,t)),o},inArray:function(t,e,i){var o;if(e){if(at)return at.call(e,t,i);for(o=e.length,i=i?0>i?Math.max(0,o+i):i:0;o>i;i++)if(i in e&&e[i]===t)return i}return-1},merge:function(t,e){for(var i=+e.length,o=0,n=t.length;i>o;)t[n++]=e[o++];if(i!==i)for(;void 0!==e[o];)t[n++]=e[o++];return t.length=n,t},grep:function(t,e,i){for(var o,n=[],r=0,s=t.length,a=!i;s>r;r++)o=!e(t[r],r),o!==a&&n.push(t[r]);return n},map:function(t,e,o){var n,r,s=0,a=[];if(i(t))for(n=t.length;n>s;s++)r=e(t[s],s,o),null!=r&&a.push(r);else for(s in t)r=e(t[s],s,o),null!=r&&a.push(r);return rt.apply([],a)},guid:1,proxy:function(t,e){var i,o,n;return"string"==typeof e&&(n=t[e],e=t,t=n),pt.isFunction(t)?(i=nt.call(arguments,2),o=function(){return t.apply(e||this,i.concat(nt.call(arguments)))},o.guid=t.guid=t.guid||pt.guid++,o):void 0},now:function(){return+new Date},support:ht}),"function"==typeof Symbol&&(pt.fn[Symbol.iterator]=it[Symbol.iterator]),pt.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){lt["[object "+e+"]"]=e.toLowerCase()});var bt=function(t){function e(t,e,i,o){var n,r,s,a,l,c,h,p,f=e&&e.ownerDocument,m=e?e.nodeType:9;if(i=i||[],"string"!=typeof t||!t||1!==m&&9!==m&&11!==m)return i;if(!o&&((e?e.ownerDocument||e:q)!==L&&N(e),e=e||L,D)){if(11!==m&&(c=vt.exec(t)))if(n=c[1]){if(9===m){if(!(s=e.getElementById(n)))return i;if(s.id===n)return i.push(s),i}else if(f&&(s=f.getElementById(n))&&H(e,s)&&s.id===n)return i.push(s),i}else{if(c[2])return K.apply(i,e.getElementsByTagName(t)),i;if((n=c[3])&&x.getElementsByClassName&&e.getElementsByClassName)return K.apply(i,e.getElementsByClassName(n)),i}if(x.qsa&&!V[t+" "]&&(!M||!M.test(t))){if(1!==m)f=e,p=t;else if("object"!==e.nodeName.toLowerCase()){for((a=e.getAttribute("id"))?a=a.replace(wt,"\\$&"):e.setAttribute("id",a=F),h=C(t),r=h.length,l=dt.test(a)?"#"+a:"[id='"+a+"']";r--;)h[r]=l+" "+d(h[r]);p=h.join(","),f=bt.test(t)&&u(e.parentNode)||e}if(p)try{return K.apply(i,f.querySelectorAll(p)),i}catch(g){}finally{a===F&&e.removeAttribute("id")}}}return A(t.replace(at,"$1"),e,i,o)}function i(){function t(i,o){return e.push(i+" ")>k.cacheLength&&delete t[e.shift()],t[i+" "]=o}var e=[];return t}function o(t){return t[F]=!0,t}function n(t){var e=L.createElement("div");try{return!!t(e)}catch(i){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function r(t,e){for(var i=t.split("|"),o=i.length;o--;)k.attrHandle[i[o]]=e}function s(t,e){var i=e&&t,o=i&&1===t.nodeType&&1===e.nodeType&&(~e.sourceIndex||Q)-(~t.sourceIndex||Q);if(o)return o;if(i)for(;i=i.nextSibling;)if(i===e)return-1;return t?1:-1}function a(t){return function(e){var i=e.nodeName.toLowerCase();return"input"===i&&e.type===t}}function l(t){return function(e){var i=e.nodeName.toLowerCase();return("input"===i||"button"===i)&&e.type===t}}function c(t){return o(function(e){return e=+e,o(function(i,o){for(var n,r=t([],i.length,e),s=r.length;s--;)i[n=r[s]]&&(i[n]=!(o[n]=i[n]))})})}function u(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function h(){}function d(t){for(var e=0,i=t.length,o="";i>e;e++)o+=t[e].value;return o}function p(t,e,i){var o=e.dir,n=i&&"parentNode"===o,r=_++;return e.first?function(e,i,r){for(;e=e[o];)if(1===e.nodeType||n)return t(e,i,r)}:function(e,i,s){var a,l,c,u=[B,r];if(s){for(;e=e[o];)if((1===e.nodeType||n)&&t(e,i,s))return!0}else for(;e=e[o];)if(1===e.nodeType||n){if(c=e[F]||(e[F]={}),l=c[e.uniqueID]||(c[e.uniqueID]={}),(a=l[o])&&a[0]===B&&a[1]===r)return u[2]=a[2];if(l[o]=u,u[2]=t(e,i,s))return!0}}}function f(t){return t.length>1?function(e,i,o){for(var n=t.length;n--;)if(!t[n](e,i,o))return!1;return!0}:t[0]}function m(t,i,o){for(var n=0,r=i.length;r>n;n++)e(t,i[n],o);return o}function g(t,e,i,o,n){for(var r,s=[],a=0,l=t.length,c=null!=e;l>a;a++)(r=t[a])&&(i&&!i(r,o,n)||(s.push(r),c&&e.push(a)));return s}function v(t,e,i,n,r,s){return n&&!n[F]&&(n=v(n)),r&&!r[F]&&(r=v(r,s)),o(function(o,s,a,l){var c,u,h,d=[],p=[],f=s.length,v=o||m(e||"*",a.nodeType?[a]:a,[]),b=!t||!o&&e?v:g(v,d,t,a,l),w=i?r||(o?t:f||n)?[]:s:b;if(i&&i(b,w,a,l),n)for(c=g(w,p),n(c,[],a,l),u=c.length;u--;)(h=c[u])&&(w[p[u]]=!(b[p[u]]=h));if(o){if(r||t){if(r){for(c=[],u=w.length;u--;)(h=w[u])&&c.push(b[u]=h);r(null,w=[],c,l)}for(u=w.length;u--;)(h=w[u])&&(c=r?tt(o,h):d[u])>-1&&(o[c]=!(s[c]=h))}}else w=g(w===s?w.splice(f,w.length):w),r?r(null,s,w,l):K.apply(s,w)})}function b(t){for(var e,i,o,n=t.length,r=k.relative[t[0].type],s=r||k.relative[" "],a=r?1:0,l=p(function(t){return t===e},s,!0),c=p(function(t){return tt(e,t)>-1},s,!0),u=[function(t,i,o){var n=!r&&(o||i!==I)||((e=i).nodeType?l(t,i,o):c(t,i,o));return e=null,n}];n>a;a++)if(i=k.relative[t[a].type])u=[p(f(u),i)];else{if(i=k.filter[t[a].type].apply(null,t[a].matches),i[F]){for(o=++a;n>o&&!k.relative[t[o].type];o++);return v(a>1&&f(u),a>1&&d(t.slice(0,a-1).concat({value:" "===t[a-2].type?"*":""})).replace(at,"$1"),i,o>a&&b(t.slice(a,o)),n>o&&b(t=t.slice(o)),n>o&&d(t))}u.push(i)}return f(u)}function w(t,i){var n=i.length>0,r=t.length>0,s=function(o,s,a,l,c){var u,h,d,p=0,f="0",m=o&&[],v=[],b=I,w=o||r&&k.find.TAG("*",c),y=B+=null==b?1:Math.random()||.1,x=w.length;for(c&&(I=s===L||s||c);f!==x&&null!=(u=w[f]);f++){if(r&&u){for(h=0,s||u.ownerDocument===L||(N(u),a=!D);d=t[h++];)if(d(u,s||L,a)){l.push(u);break}c&&(B=y)}n&&((u=!d&&u)&&p--,o&&m.push(u))}if(p+=f,n&&f!==p){for(h=0;d=i[h++];)d(m,v,s,a);if(o){if(p>0)for(;f--;)m[f]||v[f]||(v[f]=U.call(l));v=g(v)}K.apply(l,v),c&&!o&&v.length>0&&p+i.length>1&&e.uniqueSort(l)}return c&&(B=y,I=b),m};return n?o(s):s}var y,x,k,T,E,C,S,A,I,z,$,N,L,j,D,M,P,O,H,F="sizzle"+1*new Date,q=t.document,B=0,_=0,R=i(),W=i(),V=i(),X=function(t,e){return t===e&&($=!0),0},Q=1<<31,Y={}.hasOwnProperty,G=[],U=G.pop,J=G.push,K=G.push,Z=G.slice,tt=function(t,e){for(var i=0,o=t.length;o>i;i++)if(t[i]===e)return i;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",it="[\\x20\\t\\r\\n\\f]",ot="(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+",nt="\\["+it+"*("+ot+")(?:"+it+"*([*^$|!~]?=)"+it+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+ot+"))|)"+it+"*\\]",rt=":("+ot+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+nt+")*)|.*)\\)|)",st=new RegExp(it+"+","g"),at=new RegExp("^"+it+"+|((?:^|[^\\\\])(?:\\\\.)*)"+it+"+$","g"),lt=new RegExp("^"+it+"*,"+it+"*"),ct=new RegExp("^"+it+"*([>+~]|"+it+")"+it+"*"),ut=new RegExp("="+it+"*([^\\]'\"]*?)"+it+"*\\]","g"),ht=new RegExp(rt),dt=new RegExp("^"+ot+"$"),pt={ID:new RegExp("^#("+ot+")"),CLASS:new RegExp("^\\.("+ot+")"),TAG:new RegExp("^("+ot+"|[*])"),ATTR:new RegExp("^"+nt),PSEUDO:new RegExp("^"+rt),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+it+"*(even|odd|(([+-]|)(\\d*)n|)"+it+"*(?:([+-]|)"+it+"*(\\d+)|))"+it+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+it+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+it+"*((?:-\\d)?\\d*)"+it+"*\\)|)(?=[^-]|$)","i")},ft=/^(?:input|select|textarea|button)$/i,mt=/^h\d$/i,gt=/^[^{]+\{\s*\[native \w/,vt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,bt=/[+~]/,wt=/'|\\/g,yt=new RegExp("\\\\([\\da-f]{1,6}"+it+"?|("+it+")|.)","ig"),xt=function(t,e,i){var o="0x"+e-65536;return o!==o||i?e:0>o?String.fromCharCode(o+65536):String.fromCharCode(o>>10|55296,1023&o|56320)},kt=function(){N()};try{K.apply(G=Z.call(q.childNodes),q.childNodes),G[q.childNodes.length].nodeType}catch(Tt){K={apply:G.length?function(t,e){J.apply(t,Z.call(e))}:function(t,e){for(var i=t.length,o=0;t[i++]=e[o++];);t.length=i-1}}}x=e.support={},E=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return e?"HTML"!==e.nodeName:!1},N=e.setDocument=function(t){var e,i,o=t?t.ownerDocument||t:q;return o!==L&&9===o.nodeType&&o.documentElement?(L=o,j=L.documentElement,D=!E(L),(i=L.defaultView)&&i.top!==i&&(i.addEventListener?i.addEventListener("unload",kt,!1):i.attachEvent&&i.attachEvent("onunload",kt)),x.attributes=n(function(t){return t.className="i",!t.getAttribute("className")}),x.getElementsByTagName=n(function(t){return t.appendChild(L.createComment("")),!t.getElementsByTagName("*").length}),x.getElementsByClassName=gt.test(L.getElementsByClassName),x.getById=n(function(t){return j.appendChild(t).id=F,!L.getElementsByName||!L.getElementsByName(F).length}),x.getById?(k.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&D){var i=e.getElementById(t);return i?[i]:[]}},k.filter.ID=function(t){var e=t.replace(yt,xt);return function(t){return t.getAttribute("id")===e}}):(delete k.find.ID,k.filter.ID=function(t){var e=t.replace(yt,xt);return function(t){var i="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return i&&i.value===e}}),k.find.TAG=x.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):x.qsa?e.querySelectorAll(t):void 0}:function(t,e){var i,o=[],n=0,r=e.getElementsByTagName(t);if("*"===t){for(;i=r[n++];)1===i.nodeType&&o.push(i);return o}return r},k.find.CLASS=x.getElementsByClassName&&function(t,e){return"undefined"!=typeof e.getElementsByClassName&&D?e.getElementsByClassName(t):void 0},P=[],M=[],(x.qsa=gt.test(L.querySelectorAll))&&(n(function(t){j.appendChild(t).innerHTML="<a id='"+F+"'></a><select id='"+F+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&M.push("[*^$]="+it+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||M.push("\\["+it+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+F+"-]").length||M.push("~="),t.querySelectorAll(":checked").length||M.push(":checked"),t.querySelectorAll("a#"+F+"+*").length||M.push(".#.+[+~]")}),n(function(t){var e=L.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&M.push("name"+it+"*[*^$|!~]?="),t.querySelectorAll(":enabled").length||M.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),M.push(",.*:")})),(x.matchesSelector=gt.test(O=j.matches||j.webkitMatchesSelector||j.mozMatchesSelector||j.oMatchesSelector||j.msMatchesSelector))&&n(function(t){x.disconnectedMatch=O.call(t,"div"),O.call(t,"[s!='']:x"),P.push("!=",rt)}),M=M.length&&new RegExp(M.join("|")),P=P.length&&new RegExp(P.join("|")),e=gt.test(j.compareDocumentPosition),H=e||gt.test(j.contains)?function(t,e){var i=9===t.nodeType?t.documentElement:t,o=e&&e.parentNode;return t===o||!(!o||1!==o.nodeType||!(i.contains?i.contains(o):t.compareDocumentPosition&&16&t.compareDocumentPosition(o)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},X=e?function(t,e){if(t===e)return $=!0,0;var i=!t.compareDocumentPosition-!e.compareDocumentPosition;return i?i:(i=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&i||!x.sortDetached&&e.compareDocumentPosition(t)===i?t===L||t.ownerDocument===q&&H(q,t)?-1:e===L||e.ownerDocument===q&&H(q,e)?1:z?tt(z,t)-tt(z,e):0:4&i?-1:1)}:function(t,e){if(t===e)return $=!0,0;var i,o=0,n=t.parentNode,r=e.parentNode,a=[t],l=[e];if(!n||!r)return t===L?-1:e===L?1:n?-1:r?1:z?tt(z,t)-tt(z,e):0;if(n===r)return s(t,e);for(i=t;i=i.parentNode;)a.unshift(i);for(i=e;i=i.parentNode;)l.unshift(i);for(;a[o]===l[o];)o++;return o?s(a[o],l[o]):a[o]===q?-1:l[o]===q?1:0},L):L},e.matches=function(t,i){return e(t,null,null,i)},e.matchesSelector=function(t,i){if((t.ownerDocument||t)!==L&&N(t),i=i.replace(ut,"='$1']"),x.matchesSelector&&D&&!V[i+" "]&&(!P||!P.test(i))&&(!M||!M.test(i)))try{var o=O.call(t,i);if(o||x.disconnectedMatch||t.document&&11!==t.document.nodeType)return o}catch(n){}return e(i,L,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==L&&N(t),H(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==L&&N(t);var i=k.attrHandle[e.toLowerCase()],o=i&&Y.call(k.attrHandle,e.toLowerCase())?i(t,e,!D):void 0;return void 0!==o?o:x.attributes||!D?t.getAttribute(e):(o=t.getAttributeNode(e))&&o.specified?o.value:null},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,i=[],o=0,n=0;if($=!x.detectDuplicates,z=!x.sortStable&&t.slice(0),t.sort(X),$){for(;e=t[n++];)e===t[n]&&(o=i.push(n));for(;o--;)t.splice(i[o],1)}return z=null,t},T=e.getText=function(t){var e,i="",o=0,n=t.nodeType;if(n){if(1===n||9===n||11===n){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)i+=T(t)}else if(3===n||4===n)return t.nodeValue}else for(;e=t[o++];)i+=T(e);return i},k=e.selectors={cacheLength:50,createPseudo:o,match:pt,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(yt,xt),t[3]=(t[3]||t[4]||t[5]||"").replace(yt,xt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,i=!t[6]&&t[2];return pt.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":i&&ht.test(i)&&(e=C(i,!0))&&(e=i.indexOf(")",i.length-e)-i.length)&&(t[0]=t[0].slice(0,e),
t[2]=i.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(yt,xt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=R[t+" "];return e||(e=new RegExp("(^|"+it+")"+t+"("+it+"|$)"))&&R(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,i,o){return function(n){var r=e.attr(n,t);return null==r?"!="===i:i?(r+="","="===i?r===o:"!="===i?r!==o:"^="===i?o&&0===r.indexOf(o):"*="===i?o&&r.indexOf(o)>-1:"$="===i?o&&r.slice(-o.length)===o:"~="===i?(" "+r.replace(st," ")+" ").indexOf(o)>-1:"|="===i?r===o||r.slice(0,o.length+1)===o+"-":!1):!0}},CHILD:function(t,e,i,o,n){var r="nth"!==t.slice(0,3),s="last"!==t.slice(-4),a="of-type"===e;return 1===o&&0===n?function(t){return!!t.parentNode}:function(e,i,l){var c,u,h,d,p,f,m=r!==s?"nextSibling":"previousSibling",g=e.parentNode,v=a&&e.nodeName.toLowerCase(),b=!l&&!a,w=!1;if(g){if(r){for(;m;){for(d=e;d=d[m];)if(a?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;f=m="only"===t&&!f&&"nextSibling"}return!0}if(f=[s?g.firstChild:g.lastChild],s&&b){for(d=g,h=d[F]||(d[F]={}),u=h[d.uniqueID]||(h[d.uniqueID]={}),c=u[t]||[],p=c[0]===B&&c[1],w=p&&c[2],d=p&&g.childNodes[p];d=++p&&d&&d[m]||(w=p=0)||f.pop();)if(1===d.nodeType&&++w&&d===e){u[t]=[B,p,w];break}}else if(b&&(d=e,h=d[F]||(d[F]={}),u=h[d.uniqueID]||(h[d.uniqueID]={}),c=u[t]||[],p=c[0]===B&&c[1],w=p),w===!1)for(;(d=++p&&d&&d[m]||(w=p=0)||f.pop())&&((a?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++w||(b&&(h=d[F]||(d[F]={}),u=h[d.uniqueID]||(h[d.uniqueID]={}),u[t]=[B,w]),d!==e)););return w-=n,w===o||w%o===0&&w/o>=0}}},PSEUDO:function(t,i){var n,r=k.pseudos[t]||k.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return r[F]?r(i):r.length>1?(n=[t,t,"",i],k.setFilters.hasOwnProperty(t.toLowerCase())?o(function(t,e){for(var o,n=r(t,i),s=n.length;s--;)o=tt(t,n[s]),t[o]=!(e[o]=n[s])}):function(t){return r(t,0,n)}):r}},pseudos:{not:o(function(t){var e=[],i=[],n=S(t.replace(at,"$1"));return n[F]?o(function(t,e,i,o){for(var r,s=n(t,null,o,[]),a=t.length;a--;)(r=s[a])&&(t[a]=!(e[a]=r))}):function(t,o,r){return e[0]=t,n(e,null,r,i),e[0]=null,!i.pop()}}),has:o(function(t){return function(i){return e(t,i).length>0}}),contains:o(function(t){return t=t.replace(yt,xt),function(e){return(e.textContent||e.innerText||T(e)).indexOf(t)>-1}}),lang:o(function(t){return dt.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(yt,xt).toLowerCase(),function(e){var i;do if(i=D?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return i=i.toLowerCase(),i===t||0===i.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var i=t.location&&t.location.hash;return i&&i.slice(1)===e.id},root:function(t){return t===j},focus:function(t){return t===L.activeElement&&(!L.hasFocus||L.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:function(t){return t.disabled===!1},disabled:function(t){return t.disabled===!0},checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!k.pseudos.empty(t)},header:function(t){return mt.test(t.nodeName)},input:function(t){return ft.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:c(function(){return[0]}),last:c(function(t,e){return[e-1]}),eq:c(function(t,e,i){return[0>i?i+e:i]}),even:c(function(t,e){for(var i=0;e>i;i+=2)t.push(i);return t}),odd:c(function(t,e){for(var i=1;e>i;i+=2)t.push(i);return t}),lt:c(function(t,e,i){for(var o=0>i?i+e:i;--o>=0;)t.push(o);return t}),gt:c(function(t,e,i){for(var o=0>i?i+e:i;++o<e;)t.push(o);return t})}},k.pseudos.nth=k.pseudos.eq;for(y in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})k.pseudos[y]=a(y);for(y in{submit:!0,reset:!0})k.pseudos[y]=l(y);return h.prototype=k.filters=k.pseudos,k.setFilters=new h,C=e.tokenize=function(t,i){var o,n,r,s,a,l,c,u=W[t+" "];if(u)return i?0:u.slice(0);for(a=t,l=[],c=k.preFilter;a;){o&&!(n=lt.exec(a))||(n&&(a=a.slice(n[0].length)||a),l.push(r=[])),o=!1,(n=ct.exec(a))&&(o=n.shift(),r.push({value:o,type:n[0].replace(at," ")}),a=a.slice(o.length));for(s in k.filter)!(n=pt[s].exec(a))||c[s]&&!(n=c[s](n))||(o=n.shift(),r.push({value:o,type:s,matches:n}),a=a.slice(o.length));if(!o)break}return i?a.length:a?e.error(t):W(t,l).slice(0)},S=e.compile=function(t,e){var i,o=[],n=[],r=V[t+" "];if(!r){for(e||(e=C(t)),i=e.length;i--;)r=b(e[i]),r[F]?o.push(r):n.push(r);r=V(t,w(n,o)),r.selector=t}return r},A=e.select=function(t,e,i,o){var n,r,s,a,l,c="function"==typeof t&&t,h=!o&&C(t=c.selector||t);if(i=i||[],1===h.length){if(r=h[0]=h[0].slice(0),r.length>2&&"ID"===(s=r[0]).type&&x.getById&&9===e.nodeType&&D&&k.relative[r[1].type]){if(e=(k.find.ID(s.matches[0].replace(yt,xt),e)||[])[0],!e)return i;c&&(e=e.parentNode),t=t.slice(r.shift().value.length)}for(n=pt.needsContext.test(t)?0:r.length;n--&&(s=r[n],!k.relative[a=s.type]);)if((l=k.find[a])&&(o=l(s.matches[0].replace(yt,xt),bt.test(r[0].type)&&u(e.parentNode)||e))){if(r.splice(n,1),t=o.length&&d(r),!t)return K.apply(i,o),i;break}}return(c||S(t,h))(o,e,!D,i,!e||bt.test(t)&&u(e.parentNode)||e),i},x.sortStable=F.split("").sort(X).join("")===F,x.detectDuplicates=!!$,N(),x.sortDetached=n(function(t){return 1&t.compareDocumentPosition(L.createElement("div"))}),n(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||r("type|href|height|width",function(t,e,i){return i?void 0:t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),x.attributes&&n(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||r("value",function(t,e,i){return i||"input"!==t.nodeName.toLowerCase()?void 0:t.defaultValue}),n(function(t){return null==t.getAttribute("disabled")})||r(et,function(t,e,i){var o;return i?void 0:t[e]===!0?e.toLowerCase():(o=t.getAttributeNode(e))&&o.specified?o.value:null}),e}(t);pt.find=bt,pt.expr=bt.selectors,pt.expr[":"]=pt.expr.pseudos,pt.uniqueSort=pt.unique=bt.uniqueSort,pt.text=bt.getText,pt.isXMLDoc=bt.isXML,pt.contains=bt.contains;var wt=function(t,e,i){for(var o=[],n=void 0!==i;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(n&&pt(t).is(i))break;o.push(t)}return o},yt=function(t,e){for(var i=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&i.push(t);return i},xt=pt.expr.match.needsContext,kt=/^<([\w-]+)\s*\/?>(?:<\/\1>|)$/,Tt=/^.[^:#\[\.,]*$/;pt.filter=function(t,e,i){var o=e[0];return i&&(t=":not("+t+")"),1===e.length&&1===o.nodeType?pt.find.matchesSelector(o,t)?[o]:[]:pt.find.matches(t,pt.grep(e,function(t){return 1===t.nodeType}))},pt.fn.extend({find:function(t){var e,i=[],o=this,n=o.length;if("string"!=typeof t)return this.pushStack(pt(t).filter(function(){for(e=0;n>e;e++)if(pt.contains(o[e],this))return!0}));for(e=0;n>e;e++)pt.find(t,o[e],i);return i=this.pushStack(n>1?pt.unique(i):i),i.selector=this.selector?this.selector+" "+t:t,i},filter:function(t){return this.pushStack(o(this,t||[],!1))},not:function(t){return this.pushStack(o(this,t||[],!0))},is:function(t){return!!o(this,"string"==typeof t&&xt.test(t)?pt(t):t||[],!1).length}});var Et,Ct=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]*))$/,St=pt.fn.init=function(t,e,i){var o,n;if(!t)return this;if(i=i||Et,"string"==typeof t){if(o="<"===t.charAt(0)&&">"===t.charAt(t.length-1)&&t.length>=3?[null,t,null]:Ct.exec(t),!o||!o[1]&&e)return!e||e.jquery?(e||i).find(t):this.constructor(e).find(t);if(o[1]){if(e=e instanceof pt?e[0]:e,pt.merge(this,pt.parseHTML(o[1],e&&e.nodeType?e.ownerDocument||e:ot,!0)),kt.test(o[1])&&pt.isPlainObject(e))for(o in e)pt.isFunction(this[o])?this[o](e[o]):this.attr(o,e[o]);return this}if(n=ot.getElementById(o[2]),n&&n.parentNode){if(n.id!==o[2])return Et.find(t);this.length=1,this[0]=n}return this.context=ot,this.selector=t,this}return t.nodeType?(this.context=this[0]=t,this.length=1,this):pt.isFunction(t)?"undefined"!=typeof i.ready?i.ready(t):t(pt):(void 0!==t.selector&&(this.selector=t.selector,this.context=t.context),pt.makeArray(t,this))};St.prototype=pt.fn,Et=pt(ot);var At=/^(?:parents|prev(?:Until|All))/,It={children:!0,contents:!0,next:!0,prev:!0};pt.fn.extend({has:function(t){var e,i=pt(t,this),o=i.length;return this.filter(function(){for(e=0;o>e;e++)if(pt.contains(this,i[e]))return!0})},closest:function(t,e){for(var i,o=0,n=this.length,r=[],s=xt.test(t)||"string"!=typeof t?pt(t,e||this.context):0;n>o;o++)for(i=this[o];i&&i!==e;i=i.parentNode)if(i.nodeType<11&&(s?s.index(i)>-1:1===i.nodeType&&pt.find.matchesSelector(i,t))){r.push(i);break}return this.pushStack(r.length>1?pt.uniqueSort(r):r)},index:function(t){return t?"string"==typeof t?pt.inArray(this[0],pt(t)):pt.inArray(t.jquery?t[0]:t,this):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(pt.uniqueSort(pt.merge(this.get(),pt(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),pt.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return wt(t,"parentNode")},parentsUntil:function(t,e,i){return wt(t,"parentNode",i)},next:function(t){return n(t,"nextSibling")},prev:function(t){return n(t,"previousSibling")},nextAll:function(t){return wt(t,"nextSibling")},prevAll:function(t){return wt(t,"previousSibling")},nextUntil:function(t,e,i){return wt(t,"nextSibling",i)},prevUntil:function(t,e,i){return wt(t,"previousSibling",i)},siblings:function(t){return yt((t.parentNode||{}).firstChild,t)},children:function(t){return yt(t.firstChild)},contents:function(t){return pt.nodeName(t,"iframe")?t.contentDocument||t.contentWindow.document:pt.merge([],t.childNodes)}},function(t,e){pt.fn[t]=function(i,o){var n=pt.map(this,e,i);return"Until"!==t.slice(-5)&&(o=i),o&&"string"==typeof o&&(n=pt.filter(o,n)),this.length>1&&(It[t]||(n=pt.uniqueSort(n)),At.test(t)&&(n=n.reverse())),this.pushStack(n)}});var zt=/\S+/g;pt.Callbacks=function(t){t="string"==typeof t?r(t):pt.extend({},t);var e,i,o,n,s=[],a=[],l=-1,c=function(){for(n=t.once,o=e=!0;a.length;l=-1)for(i=a.shift();++l<s.length;)s[l].apply(i[0],i[1])===!1&&t.stopOnFalse&&(l=s.length,i=!1);t.memory||(i=!1),e=!1,n&&(s=i?[]:"")},u={add:function(){return s&&(i&&!e&&(l=s.length-1,a.push(i)),function o(e){pt.each(e,function(e,i){pt.isFunction(i)?t.unique&&u.has(i)||s.push(i):i&&i.length&&"string"!==pt.type(i)&&o(i)})}(arguments),i&&!e&&c()),this},remove:function(){return pt.each(arguments,function(t,e){for(var i;(i=pt.inArray(e,s,i))>-1;)s.splice(i,1),l>=i&&l--}),this},has:function(t){return t?pt.inArray(t,s)>-1:s.length>0},empty:function(){return s&&(s=[]),this},disable:function(){return n=a=[],s=i="",this},disabled:function(){return!s},lock:function(){return n=!0,i||u.disable(),this},locked:function(){return!!n},fireWith:function(t,i){return n||(i=i||[],i=[t,i.slice?i.slice():i],a.push(i),e||c()),this},fire:function(){return u.fireWith(this,arguments),this},fired:function(){return!!o}};return u},pt.extend({Deferred:function(t){var e=[["resolve","done",pt.Callbacks("once memory"),"resolved"],["reject","fail",pt.Callbacks("once memory"),"rejected"],["notify","progress",pt.Callbacks("memory")]],i="pending",o={state:function(){return i},always:function(){return n.done(arguments).fail(arguments),this},then:function(){var t=arguments;return pt.Deferred(function(i){pt.each(e,function(e,r){var s=pt.isFunction(t[e])&&t[e];n[r[1]](function(){var t=s&&s.apply(this,arguments);t&&pt.isFunction(t.promise)?t.promise().progress(i.notify).done(i.resolve).fail(i.reject):i[r[0]+"With"](this===o?i.promise():this,s?[t]:arguments)})}),t=null}).promise()},promise:function(t){return null!=t?pt.extend(t,o):o}},n={};return o.pipe=o.then,pt.each(e,function(t,r){var s=r[2],a=r[3];o[r[1]]=s.add,a&&s.add(function(){i=a},e[1^t][2].disable,e[2][2].lock),n[r[0]]=function(){return n[r[0]+"With"](this===n?o:this,arguments),this},n[r[0]+"With"]=s.fireWith}),o.promise(n),t&&t.call(n,n),n},when:function(t){var e,i,o,n=0,r=nt.call(arguments),s=r.length,a=1!==s||t&&pt.isFunction(t.promise)?s:0,l=1===a?t:pt.Deferred(),c=function(t,i,o){return function(n){i[t]=this,o[t]=arguments.length>1?nt.call(arguments):n,o===e?l.notifyWith(i,o):--a||l.resolveWith(i,o)}};if(s>1)for(e=new Array(s),i=new Array(s),o=new Array(s);s>n;n++)r[n]&&pt.isFunction(r[n].promise)?r[n].promise().progress(c(n,i,e)).done(c(n,o,r)).fail(l.reject):--a;return a||l.resolveWith(o,r),l.promise()}});var $t;pt.fn.ready=function(t){return pt.ready.promise().done(t),this},pt.extend({isReady:!1,readyWait:1,holdReady:function(t){t?pt.readyWait++:pt.ready(!0)},ready:function(t){(t===!0?--pt.readyWait:pt.isReady)||(pt.isReady=!0,t!==!0&&--pt.readyWait>0||($t.resolveWith(ot,[pt]),pt.fn.triggerHandler&&(pt(ot).triggerHandler("ready"),pt(ot).off("ready"))))}}),pt.ready.promise=function(e){if(!$t)if($t=pt.Deferred(),"complete"===ot.readyState||"loading"!==ot.readyState&&!ot.documentElement.doScroll)t.setTimeout(pt.ready);else if(ot.addEventListener)ot.addEventListener("DOMContentLoaded",a),t.addEventListener("load",a);else{ot.attachEvent("onreadystatechange",a),t.attachEvent("onload",a);var i=!1;try{i=null==t.frameElement&&ot.documentElement}catch(o){}i&&i.doScroll&&!function n(){if(!pt.isReady){try{i.doScroll("left")}catch(e){return t.setTimeout(n,50)}s(),pt.ready()}}()}return $t.promise(e)},pt.ready.promise();var Nt;for(Nt in pt(ht))break;ht.ownFirst="0"===Nt,ht.inlineBlockNeedsLayout=!1,pt(function(){var t,e,i,o;i=ot.getElementsByTagName("body")[0],i&&i.style&&(e=ot.createElement("div"),o=ot.createElement("div"),o.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(o).appendChild(e),"undefined"!=typeof e.style.zoom&&(e.style.cssText="display:inline;margin:0;border:0;padding:1px;width:1px;zoom:1",ht.inlineBlockNeedsLayout=t=3===e.offsetWidth,t&&(i.style.zoom=1)),i.removeChild(o))}),function(){var t=ot.createElement("div");ht.deleteExpando=!0;try{delete t.test}catch(e){ht.deleteExpando=!1}t=null}();var Lt=function(t){var e=pt.noData[(t.nodeName+" ").toLowerCase()],i=+t.nodeType||1;return 1!==i&&9!==i?!1:!e||e!==!0&&t.getAttribute("classid")===e},jt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,Dt=/([A-Z])/g;pt.extend({cache:{},noData:{"applet ":!0,"embed ":!0,"object ":"clsid:D27CDB6E-AE6D-11cf-96B8-444553540000"},hasData:function(t){return t=t.nodeType?pt.cache[t[pt.expando]]:t[pt.expando],!!t&&!c(t)},data:function(t,e,i){return u(t,e,i)},removeData:function(t,e){return h(t,e)},_data:function(t,e,i){return u(t,e,i,!0)},_removeData:function(t,e){return h(t,e,!0)}}),pt.fn.extend({data:function(t,e){var i,o,n,r=this[0],s=r&&r.attributes;if(void 0===t){if(this.length&&(n=pt.data(r),1===r.nodeType&&!pt._data(r,"parsedAttrs"))){for(i=s.length;i--;)s[i]&&(o=s[i].name,0===o.indexOf("data-")&&(o=pt.camelCase(o.slice(5)),l(r,o,n[o])));pt._data(r,"parsedAttrs",!0)}return n}return"object"==typeof t?this.each(function(){pt.data(this,t)}):arguments.length>1?this.each(function(){pt.data(this,t,e)}):r?l(r,t,pt.data(r,t)):void 0},removeData:function(t){return this.each(function(){pt.removeData(this,t)})}}),pt.extend({queue:function(t,e,i){var o;return t?(e=(e||"fx")+"queue",o=pt._data(t,e),i&&(!o||pt.isArray(i)?o=pt._data(t,e,pt.makeArray(i)):o.push(i)),o||[]):void 0},dequeue:function(t,e){e=e||"fx";var i=pt.queue(t,e),o=i.length,n=i.shift(),r=pt._queueHooks(t,e),s=function(){pt.dequeue(t,e)};"inprogress"===n&&(n=i.shift(),o--),n&&("fx"===e&&i.unshift("inprogress"),delete r.stop,n.call(t,s,r)),!o&&r&&r.empty.fire()},_queueHooks:function(t,e){var i=e+"queueHooks";return pt._data(t,i)||pt._data(t,i,{empty:pt.Callbacks("once memory").add(function(){pt._removeData(t,e+"queue"),pt._removeData(t,i)})})}}),pt.fn.extend({queue:function(t,e){var i=2;return"string"!=typeof t&&(e=t,t="fx",i--),arguments.length<i?pt.queue(this[0],t):void 0===e?this:this.each(function(){var i=pt.queue(this,t,e);pt._queueHooks(this,t),"fx"===t&&"inprogress"!==i[0]&&pt.dequeue(this,t)})},dequeue:function(t){return this.each(function(){pt.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var i,o=1,n=pt.Deferred(),r=this,s=this.length,a=function(){--o||n.resolveWith(r,[r])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";s--;)i=pt._data(r[s],t+"queueHooks"),i&&i.empty&&(o++,i.empty.add(a));return a(),n.promise(e)}}),function(){var t;ht.shrinkWrapBlocks=function(){if(null!=t)return t;t=!1;var e,i,o;return i=ot.getElementsByTagName("body")[0],i&&i.style?(e=ot.createElement("div"),o=ot.createElement("div"),o.style.cssText="position:absolute;border:0;width:0;height:0;top:0;left:-9999px",i.appendChild(o).appendChild(e),"undefined"!=typeof e.style.zoom&&(e.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:1px;width:1px;zoom:1",e.appendChild(ot.createElement("div")).style.width="5px",t=3!==e.offsetWidth),i.removeChild(o),t):void 0}}();var Mt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Pt=new RegExp("^(?:([+-])=|)("+Mt+")([a-z%]*)$","i"),Ot=["Top","Right","Bottom","Left"],Ht=function(t,e){return t=e||t,"none"===pt.css(t,"display")||!pt.contains(t.ownerDocument,t)},Ft=function(t,e,i,o,n,r,s){var a=0,l=t.length,c=null==i;if("object"===pt.type(i)){n=!0;for(a in i)Ft(t,e,a,i[a],!0,r,s)}else if(void 0!==o&&(n=!0,pt.isFunction(o)||(s=!0),c&&(s?(e.call(t,o),e=null):(c=e,e=function(t,e,i){return c.call(pt(t),i)})),e))for(;l>a;a++)e(t[a],i,s?o:o.call(t[a],a,e(t[a],i)));return n?t:c?e.call(t):l?e(t[0],i):r},qt=/^(?:checkbox|radio)$/i,Bt=/<([\w:-]+)/,_t=/^$|\/(?:java|ecma)script/i,Rt=/^\s+/,Wt="abbr|article|aside|audio|bdi|canvas|data|datalist|details|dialog|figcaption|figure|footer|header|hgroup|main|mark|meter|nav|output|picture|progress|section|summary|template|time|video";!function(){var t=ot.createElement("div"),e=ot.createDocumentFragment(),i=ot.createElement("input");t.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",ht.leadingWhitespace=3===t.firstChild.nodeType,ht.tbody=!t.getElementsByTagName("tbody").length,ht.htmlSerialize=!!t.getElementsByTagName("link").length,ht.html5Clone="<:nav></:nav>"!==ot.createElement("nav").cloneNode(!0).outerHTML,i.type="checkbox",i.checked=!0,e.appendChild(i),ht.appendChecked=i.checked,t.innerHTML="<textarea>x</textarea>",ht.noCloneChecked=!!t.cloneNode(!0).lastChild.defaultValue,e.appendChild(t),i=ot.createElement("input"),i.setAttribute("type","radio"),i.setAttribute("checked","checked"),i.setAttribute("name","t"),t.appendChild(i),ht.checkClone=t.cloneNode(!0).cloneNode(!0).lastChild.checked,ht.noCloneEvent=!!t.addEventListener,t[pt.expando]=1,ht.attributes=!t.getAttribute(pt.expando)}();var Vt={option:[1,"<select multiple='multiple'>","</select>"],legend:[1,"<fieldset>","</fieldset>"],area:[1,"<map>","</map>"],param:[1,"<object>","</object>"],thead:[1,"<table>","</table>"],tr:[2,"<table><tbody>","</tbody></table>"],col:[2,"<table><tbody></tbody><colgroup>","</colgroup></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:ht.htmlSerialize?[0,"",""]:[1,"X<div>","</div>"]};Vt.optgroup=Vt.option,Vt.tbody=Vt.tfoot=Vt.colgroup=Vt.caption=Vt.thead,Vt.th=Vt.td;var Xt=/<|&#?\w+;/,Qt=/<tbody/i;!function(){var e,i,o=ot.createElement("div");for(e in{submit:!0,change:!0,focusin:!0})i="on"+e,(ht[e]=i in t)||(o.setAttribute(i,"t"),ht[e]=o.attributes[i].expando===!1);o=null}();var Yt=/^(?:input|select|textarea)$/i,Gt=/^key/,Ut=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,Jt=/^(?:focusinfocus|focusoutblur)$/,Kt=/^([^.]*)(?:\.(.+)|)/;pt.event={global:{},add:function(t,e,i,o,n){var r,s,a,l,c,u,h,d,p,f,m,g=pt._data(t);if(g){for(i.handler&&(l=i,i=l.handler,n=l.selector),i.guid||(i.guid=pt.guid++),(s=g.events)||(s=g.events={}),(u=g.handle)||(u=g.handle=function(t){return"undefined"==typeof pt||t&&pt.event.triggered===t.type?void 0:pt.event.dispatch.apply(u.elem,arguments)},u.elem=t),e=(e||"").match(zt)||[""],a=e.length;a--;)r=Kt.exec(e[a])||[],p=m=r[1],f=(r[2]||"").split(".").sort(),p&&(c=pt.event.special[p]||{},p=(n?c.delegateType:c.bindType)||p,c=pt.event.special[p]||{},h=pt.extend({type:p,origType:m,data:o,handler:i,guid:i.guid,selector:n,needsContext:n&&pt.expr.match.needsContext.test(n),namespace:f.join(".")},l),(d=s[p])||(d=s[p]=[],d.delegateCount=0,c.setup&&c.setup.call(t,o,f,u)!==!1||(t.addEventListener?t.addEventListener(p,u,!1):t.attachEvent&&t.attachEvent("on"+p,u))),c.add&&(c.add.call(t,h),h.handler.guid||(h.handler.guid=i.guid)),n?d.splice(d.delegateCount++,0,h):d.push(h),pt.event.global[p]=!0);t=null}},remove:function(t,e,i,o,n){var r,s,a,l,c,u,h,d,p,f,m,g=pt.hasData(t)&&pt._data(t);if(g&&(u=g.events)){for(e=(e||"").match(zt)||[""],c=e.length;c--;)if(a=Kt.exec(e[c])||[],p=m=a[1],f=(a[2]||"").split(".").sort(),p){for(h=pt.event.special[p]||{},p=(o?h.delegateType:h.bindType)||p,d=u[p]||[],a=a[2]&&new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"),l=r=d.length;r--;)s=d[r],!n&&m!==s.origType||i&&i.guid!==s.guid||a&&!a.test(s.namespace)||o&&o!==s.selector&&("**"!==o||!s.selector)||(d.splice(r,1),s.selector&&d.delegateCount--,h.remove&&h.remove.call(t,s));l&&!d.length&&(h.teardown&&h.teardown.call(t,f,g.handle)!==!1||pt.removeEvent(t,p,g.handle),delete u[p])}else for(p in u)pt.event.remove(t,p+e[c],i,o,!0);pt.isEmptyObject(u)&&(delete g.handle,pt._removeData(t,"events"))}},trigger:function(e,i,o,n){var r,s,a,l,c,u,h,d=[o||ot],p=ut.call(e,"type")?e.type:e,f=ut.call(e,"namespace")?e.namespace.split("."):[];if(a=u=o=o||ot,3!==o.nodeType&&8!==o.nodeType&&!Jt.test(p+pt.event.triggered)&&(p.indexOf(".")>-1&&(f=p.split("."),p=f.shift(),f.sort()),s=p.indexOf(":")<0&&"on"+p,e=e[pt.expando]?e:new pt.Event(p,"object"==typeof e&&e),e.isTrigger=n?2:3,e.namespace=f.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+f.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=o),i=null==i?[e]:pt.makeArray(i,[e]),c=pt.event.special[p]||{},n||!c.trigger||c.trigger.apply(o,i)!==!1)){if(!n&&!c.noBubble&&!pt.isWindow(o)){for(l=c.delegateType||p,Jt.test(l+p)||(a=a.parentNode);a;a=a.parentNode)d.push(a),u=a;u===(o.ownerDocument||ot)&&d.push(u.defaultView||u.parentWindow||t)}for(h=0;(a=d[h++])&&!e.isPropagationStopped();)e.type=h>1?l:c.bindType||p,r=(pt._data(a,"events")||{})[e.type]&&pt._data(a,"handle"),r&&r.apply(a,i),r=s&&a[s],r&&r.apply&&Lt(a)&&(e.result=r.apply(a,i),e.result===!1&&e.preventDefault());if(e.type=p,!n&&!e.isDefaultPrevented()&&(!c._default||c._default.apply(d.pop(),i)===!1)&&Lt(o)&&s&&o[p]&&!pt.isWindow(o)){u=o[s],u&&(o[s]=null),pt.event.triggered=p;try{o[p]()}catch(m){}pt.event.triggered=void 0,u&&(o[s]=u)}return e.result}},dispatch:function(t){t=pt.event.fix(t);var e,i,o,n,r,s=[],a=nt.call(arguments),l=(pt._data(this,"events")||{})[t.type]||[],c=pt.event.special[t.type]||{};if(a[0]=t,t.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,t)!==!1){for(s=pt.event.handlers.call(this,t,l),e=0;(n=s[e++])&&!t.isPropagationStopped();)for(t.currentTarget=n.elem,i=0;(r=n.handlers[i++])&&!t.isImmediatePropagationStopped();)t.rnamespace&&!t.rnamespace.test(r.namespace)||(t.handleObj=r,t.data=r.data,o=((pt.event.special[r.origType]||{}).handle||r.handler).apply(n.elem,a),void 0!==o&&(t.result=o)===!1&&(t.preventDefault(),t.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,t),t.result}},handlers:function(t,e){var i,o,n,r,s=[],a=e.delegateCount,l=t.target;if(a&&l.nodeType&&("click"!==t.type||isNaN(t.button)||t.button<1))for(;l!=this;l=l.parentNode||this)if(1===l.nodeType&&(l.disabled!==!0||"click"!==t.type)){for(o=[],i=0;a>i;i++)r=e[i],n=r.selector+" ",void 0===o[n]&&(o[n]=r.needsContext?pt(n,this).index(l)>-1:pt.find(n,this,null,[l]).length),o[n]&&o.push(r);o.length&&s.push({elem:l,handlers:o})}return a<e.length&&s.push({elem:this,handlers:e.slice(a)}),s},fix:function(t){if(t[pt.expando])return t;var e,i,o,n=t.type,r=t,s=this.fixHooks[n];for(s||(this.fixHooks[n]=s=Ut.test(n)?this.mouseHooks:Gt.test(n)?this.keyHooks:{}),o=s.props?this.props.concat(s.props):this.props,t=new pt.Event(r),e=o.length;e--;)i=o[e],t[i]=r[i];return t.target||(t.target=r.srcElement||ot),3===t.target.nodeType&&(t.target=t.target.parentNode),t.metaKey=!!t.metaKey,s.filter?s.filter(t,r):t},props:"altKey bubbles cancelable ctrlKey currentTarget detail eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),fixHooks:{},keyHooks:{props:"char charCode key keyCode".split(" "),filter:function(t,e){return null==t.which&&(t.which=null!=e.charCode?e.charCode:e.keyCode),t}},mouseHooks:{props:"button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),filter:function(t,e){var i,o,n,r=e.button,s=e.fromElement;return null==t.pageX&&null!=e.clientX&&(o=t.target.ownerDocument||ot,n=o.documentElement,i=o.body,t.pageX=e.clientX+(n&&n.scrollLeft||i&&i.scrollLeft||0)-(n&&n.clientLeft||i&&i.clientLeft||0),t.pageY=e.clientY+(n&&n.scrollTop||i&&i.scrollTop||0)-(n&&n.clientTop||i&&i.clientTop||0)),!t.relatedTarget&&s&&(t.relatedTarget=s===t.target?e.toElement:s),t.which||void 0===r||(t.which=1&r?1:2&r?3:4&r?2:0),t}},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==y()&&this.focus)try{return this.focus(),!1}catch(t){}},delegateType:"focusin"},blur:{trigger:function(){return this===y()&&this.blur?(this.blur(),!1):void 0},delegateType:"focusout"},click:{trigger:function(){return pt.nodeName(this,"input")&&"checkbox"===this.type&&this.click?(this.click(),!1):void 0},_default:function(t){return pt.nodeName(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}},simulate:function(t,e,i){var o=pt.extend(new pt.Event,i,{type:t,isSimulated:!0});pt.event.trigger(o,null,e),o.isDefaultPrevented()&&i.preventDefault()}},pt.removeEvent=ot.removeEventListener?function(t,e,i){t.removeEventListener&&t.removeEventListener(e,i)}:function(t,e,i){var o="on"+e;t.detachEvent&&("undefined"==typeof t[o]&&(t[o]=null),t.detachEvent(o,i))},pt.Event=function(t,e){return this instanceof pt.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?b:w):this.type=t,e&&pt.extend(this,e),this.timeStamp=t&&t.timeStamp||pt.now(),void(this[pt.expando]=!0)):new pt.Event(t,e)},pt.Event.prototype={constructor:pt.Event,isDefaultPrevented:w,isPropagationStopped:w,isImmediatePropagationStopped:w,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=b,t&&(t.preventDefault?t.preventDefault():t.returnValue=!1)},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=b,t&&!this.isSimulated&&(t.stopPropagation&&t.stopPropagation(),t.cancelBubble=!0)},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=b,t&&t.stopImmediatePropagation&&t.stopImmediatePropagation(),this.stopPropagation()}},pt.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){pt.event.special[t]={delegateType:e,bindType:e,handle:function(t){var i,o=this,n=t.relatedTarget,r=t.handleObj;return n&&(n===o||pt.contains(o,n))||(t.type=r.origType,i=r.handler.apply(this,arguments),t.type=e),i}}}),ht.submit||(pt.event.special.submit={setup:function(){return pt.nodeName(this,"form")?!1:void pt.event.add(this,"click._submit keypress._submit",function(t){var e=t.target,i=pt.nodeName(e,"input")||pt.nodeName(e,"button")?pt.prop(e,"form"):void 0;i&&!pt._data(i,"submit")&&(pt.event.add(i,"submit._submit",function(t){t._submitBubble=!0}),pt._data(i,"submit",!0))})},postDispatch:function(t){t._submitBubble&&(delete t._submitBubble,this.parentNode&&!t.isTrigger&&pt.event.simulate("submit",this.parentNode,t))},teardown:function(){return pt.nodeName(this,"form")?!1:void pt.event.remove(this,"._submit")}}),ht.change||(pt.event.special.change={setup:function(){return Yt.test(this.nodeName)?("checkbox"!==this.type&&"radio"!==this.type||(pt.event.add(this,"propertychange._change",function(t){"checked"===t.originalEvent.propertyName&&(this._justChanged=!0)}),pt.event.add(this,"click._change",function(t){this._justChanged&&!t.isTrigger&&(this._justChanged=!1),pt.event.simulate("change",this,t)})),!1):void pt.event.add(this,"beforeactivate._change",function(t){var e=t.target;Yt.test(e.nodeName)&&!pt._data(e,"change")&&(pt.event.add(e,"change._change",function(t){!this.parentNode||t.isSimulated||t.isTrigger||pt.event.simulate("change",this.parentNode,t)}),pt._data(e,"change",!0))})},handle:function(t){var e=t.target;return this!==e||t.isSimulated||t.isTrigger||"radio"!==e.type&&"checkbox"!==e.type?t.handleObj.handler.apply(this,arguments):void 0},teardown:function(){return pt.event.remove(this,"._change"),!Yt.test(this.nodeName)}}),ht.focusin||pt.each({focus:"focusin",blur:"focusout"},function(t,e){var i=function(t){pt.event.simulate(e,t.target,pt.event.fix(t))};pt.event.special[e]={setup:function(){var o=this.ownerDocument||this,n=pt._data(o,e);n||o.addEventListener(t,i,!0),pt._data(o,e,(n||0)+1)},teardown:function(){var o=this.ownerDocument||this,n=pt._data(o,e)-1;n?pt._data(o,e,n):(o.removeEventListener(t,i,!0),pt._removeData(o,e))}}}),pt.fn.extend({on:function(t,e,i,o){return x(this,t,e,i,o)},one:function(t,e,i,o){return x(this,t,e,i,o,1)},off:function(t,e,i){var o,n;if(t&&t.preventDefault&&t.handleObj)return o=t.handleObj,pt(t.delegateTarget).off(o.namespace?o.origType+"."+o.namespace:o.origType,o.selector,o.handler),this;if("object"==typeof t){for(n in t)this.off(n,e,t[n]);return this}return e!==!1&&"function"!=typeof e||(i=e,e=void 0),i===!1&&(i=w),this.each(function(){pt.event.remove(this,t,i,e)})},trigger:function(t,e){return this.each(function(){pt.event.trigger(t,e,this)})},triggerHandler:function(t,e){var i=this[0];return i?pt.event.trigger(t,e,i,!0):void 0}});var Zt=/ jQuery\d+="(?:null|\d+)"/g,te=new RegExp("<(?:"+Wt+")[\\s/>]","i"),ee=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:-]+)[^>]*)\/>/gi,ie=/<script|<style|<link/i,oe=/checked\s*(?:[^=]|=\s*.checked.)/i,ne=/^true\/(.*)/,re=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g,se=p(ot),ae=se.appendChild(ot.createElement("div"));pt.extend({htmlPrefilter:function(t){return t.replace(ee,"<$1></$2>")},clone:function(t,e,i){var o,n,r,s,a,l=pt.contains(t.ownerDocument,t);if(ht.html5Clone||pt.isXMLDoc(t)||!te.test("<"+t.nodeName+">")?r=t.cloneNode(!0):(ae.innerHTML=t.outerHTML,ae.removeChild(r=ae.firstChild)),!(ht.noCloneEvent&&ht.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||pt.isXMLDoc(t)))for(o=f(r),a=f(t),s=0;null!=(n=a[s]);++s)o[s]&&S(n,o[s]);if(e)if(i)for(a=a||f(t),o=o||f(r),s=0;null!=(n=a[s]);s++)C(n,o[s]);else C(t,r);return o=f(r,"script"),o.length>0&&m(o,!l&&f(t,"script")),o=a=n=null,r},cleanData:function(t,e){for(var i,o,n,r,s=0,a=pt.expando,l=pt.cache,c=ht.attributes,u=pt.event.special;null!=(i=t[s]);s++)if((e||Lt(i))&&(n=i[a],r=n&&l[n])){if(r.events)for(o in r.events)u[o]?pt.event.remove(i,o):pt.removeEvent(i,o,r.handle);l[n]&&(delete l[n],c||"undefined"==typeof i.removeAttribute?i[a]=void 0:i.removeAttribute(a),it.push(n))}}}),pt.fn.extend({domManip:A,detach:function(t){return I(this,t,!0)},remove:function(t){return I(this,t)},text:function(t){return Ft(this,function(t){return void 0===t?pt.text(this):this.empty().append((this[0]&&this[0].ownerDocument||ot).createTextNode(t))},null,t,arguments.length)},append:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=k(this,t);e.appendChild(t)}})},
prepend:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=k(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++){for(1===t.nodeType&&pt.cleanData(f(t,!1));t.firstChild;)t.removeChild(t.firstChild);t.options&&pt.nodeName(t,"select")&&(t.options.length=0)}return this},clone:function(t,e){return t=null==t?!1:t,e=null==e?t:e,this.map(function(){return pt.clone(this,t,e)})},html:function(t){return Ft(this,function(t){var e=this[0]||{},i=0,o=this.length;if(void 0===t)return 1===e.nodeType?e.innerHTML.replace(Zt,""):void 0;if("string"==typeof t&&!ie.test(t)&&(ht.htmlSerialize||!te.test(t))&&(ht.leadingWhitespace||!Rt.test(t))&&!Vt[(Bt.exec(t)||["",""])[1].toLowerCase()]){t=pt.htmlPrefilter(t);try{for(;o>i;i++)e=this[i]||{},1===e.nodeType&&(pt.cleanData(f(e,!1)),e.innerHTML=t);e=0}catch(n){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return A(this,arguments,function(e){var i=this.parentNode;pt.inArray(this,t)<0&&(pt.cleanData(f(this)),i&&i.replaceChild(e,this))},t)}}),pt.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){pt.fn[t]=function(t){for(var i,o=0,n=[],r=pt(t),s=r.length-1;s>=o;o++)i=o===s?this:this.clone(!0),pt(r[o])[e](i),st.apply(n,i.get());return this.pushStack(n)}});var le,ce={HTML:"block",BODY:"block"},ue=/^margin/,he=new RegExp("^("+Mt+")(?!px)[a-z%]+$","i"),de=function(t,e,i,o){var n,r,s={};for(r in e)s[r]=t.style[r],t.style[r]=e[r];n=i.apply(t,o||[]);for(r in e)t.style[r]=s[r];return n},pe=ot.documentElement;!function(){function e(){var e,u,h=ot.documentElement;h.appendChild(l),c.style.cssText="-webkit-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",i=n=a=!1,o=s=!0,t.getComputedStyle&&(u=t.getComputedStyle(c),i="1%"!==(u||{}).top,a="2px"===(u||{}).marginLeft,n="4px"===(u||{width:"4px"}).width,c.style.marginRight="50%",o="4px"===(u||{marginRight:"4px"}).marginRight,e=c.appendChild(ot.createElement("div")),e.style.cssText=c.style.cssText="-webkit-box-sizing:content-box;-moz-box-sizing:content-box;box-sizing:content-box;display:block;margin:0;border:0;padding:0",e.style.marginRight=e.style.width="0",c.style.width="1px",s=!parseFloat((t.getComputedStyle(e)||{}).marginRight),c.removeChild(e)),c.style.display="none",r=0===c.getClientRects().length,r&&(c.style.display="",c.innerHTML="<table><tr><td></td><td>t</td></tr></table>",c.childNodes[0].style.borderCollapse="separate",e=c.getElementsByTagName("td"),e[0].style.cssText="margin:0;border:0;padding:0;display:none",r=0===e[0].offsetHeight,r&&(e[0].style.display="",e[1].style.display="none",r=0===e[0].offsetHeight)),h.removeChild(l)}var i,o,n,r,s,a,l=ot.createElement("div"),c=ot.createElement("div");c.style&&(c.style.cssText="float:left;opacity:.5",ht.opacity="0.5"===c.style.opacity,ht.cssFloat=!!c.style.cssFloat,c.style.backgroundClip="content-box",c.cloneNode(!0).style.backgroundClip="",ht.clearCloneStyle="content-box"===c.style.backgroundClip,l=ot.createElement("div"),l.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",c.innerHTML="",l.appendChild(c),ht.boxSizing=""===c.style.boxSizing||""===c.style.MozBoxSizing||""===c.style.WebkitBoxSizing,pt.extend(ht,{reliableHiddenOffsets:function(){return null==i&&e(),r},boxSizingReliable:function(){return null==i&&e(),n},pixelMarginRight:function(){return null==i&&e(),o},pixelPosition:function(){return null==i&&e(),i},reliableMarginRight:function(){return null==i&&e(),s},reliableMarginLeft:function(){return null==i&&e(),a}}))}();var fe,me,ge=/^(top|right|bottom|left)$/;t.getComputedStyle?(fe=function(e){var i=e.ownerDocument.defaultView;return i&&i.opener||(i=t),i.getComputedStyle(e)},me=function(t,e,i){var o,n,r,s,a=t.style;return i=i||fe(t),s=i?i.getPropertyValue(e)||i[e]:void 0,""!==s&&void 0!==s||pt.contains(t.ownerDocument,t)||(s=pt.style(t,e)),i&&!ht.pixelMarginRight()&&he.test(s)&&ue.test(e)&&(o=a.width,n=a.minWidth,r=a.maxWidth,a.minWidth=a.maxWidth=a.width=s,s=i.width,a.width=o,a.minWidth=n,a.maxWidth=r),void 0===s?s:s+""}):pe.currentStyle&&(fe=function(t){return t.currentStyle},me=function(t,e,i){var o,n,r,s,a=t.style;return i=i||fe(t),s=i?i[e]:void 0,null==s&&a&&a[e]&&(s=a[e]),he.test(s)&&!ge.test(e)&&(o=a.left,n=t.runtimeStyle,r=n&&n.left,r&&(n.left=t.currentStyle.left),a.left="fontSize"===e?"1em":s,s=a.pixelLeft+"px",a.left=o,r&&(n.left=r)),void 0===s?s:s+""||"auto"});var ve=/alpha\([^)]*\)/i,be=/opacity\s*=\s*([^)]*)/i,we=/^(none|table(?!-c[ea]).+)/,ye=new RegExp("^("+Mt+")(.*)$","i"),xe={position:"absolute",visibility:"hidden",display:"block"},ke={letterSpacing:"0",fontWeight:"400"},Te=["Webkit","O","Moz","ms"],Ee=ot.createElement("div").style;pt.extend({cssHooks:{opacity:{get:function(t,e){if(e){var i=me(t,"opacity");return""===i?"1":i}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":ht.cssFloat?"cssFloat":"styleFloat"},style:function(t,e,i,o){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var n,r,s,a=pt.camelCase(e),l=t.style;if(e=pt.cssProps[a]||(pt.cssProps[a]=L(a)||a),s=pt.cssHooks[e]||pt.cssHooks[a],void 0===i)return s&&"get"in s&&void 0!==(n=s.get(t,!1,o))?n:l[e];if(r=typeof i,"string"===r&&(n=Pt.exec(i))&&n[1]&&(i=d(t,e,n),r="number"),null!=i&&i===i&&("number"===r&&(i+=n&&n[3]||(pt.cssNumber[a]?"":"px")),ht.clearCloneStyle||""!==i||0!==e.indexOf("background")||(l[e]="inherit"),!(s&&"set"in s&&void 0===(i=s.set(t,i,o)))))try{l[e]=i}catch(c){}}},css:function(t,e,i,o){var n,r,s,a=pt.camelCase(e);return e=pt.cssProps[a]||(pt.cssProps[a]=L(a)||a),s=pt.cssHooks[e]||pt.cssHooks[a],s&&"get"in s&&(r=s.get(t,!0,i)),void 0===r&&(r=me(t,e,o)),"normal"===r&&e in ke&&(r=ke[e]),""===i||i?(n=parseFloat(r),i===!0||isFinite(n)?n||0:r):r}}),pt.each(["height","width"],function(t,e){pt.cssHooks[e]={get:function(t,i,o){return i?we.test(pt.css(t,"display"))&&0===t.offsetWidth?de(t,xe,function(){return P(t,e,o)}):P(t,e,o):void 0},set:function(t,i,o){var n=o&&fe(t);return D(t,i,o?M(t,e,o,ht.boxSizing&&"border-box"===pt.css(t,"boxSizing",!1,n),n):0)}}}),ht.opacity||(pt.cssHooks.opacity={get:function(t,e){return be.test((e&&t.currentStyle?t.currentStyle.filter:t.style.filter)||"")?.01*parseFloat(RegExp.$1)+"":e?"1":""},set:function(t,e){var i=t.style,o=t.currentStyle,n=pt.isNumeric(e)?"alpha(opacity="+100*e+")":"",r=o&&o.filter||i.filter||"";i.zoom=1,(e>=1||""===e)&&""===pt.trim(r.replace(ve,""))&&i.removeAttribute&&(i.removeAttribute("filter"),""===e||o&&!o.filter)||(i.filter=ve.test(r)?r.replace(ve,n):r+" "+n)}}),pt.cssHooks.marginRight=N(ht.reliableMarginRight,function(t,e){return e?de(t,{display:"inline-block"},me,[t,"marginRight"]):void 0}),pt.cssHooks.marginLeft=N(ht.reliableMarginLeft,function(t,e){return e?(parseFloat(me(t,"marginLeft"))||(pt.contains(t.ownerDocument,t)?t.getBoundingClientRect().left-de(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}):0))+"px":void 0}),pt.each({margin:"",padding:"",border:"Width"},function(t,e){pt.cssHooks[t+e]={expand:function(i){for(var o=0,n={},r="string"==typeof i?i.split(" "):[i];4>o;o++)n[t+Ot[o]+e]=r[o]||r[o-2]||r[0];return n}},ue.test(t)||(pt.cssHooks[t+e].set=D)}),pt.fn.extend({css:function(t,e){return Ft(this,function(t,e,i){var o,n,r={},s=0;if(pt.isArray(e)){for(o=fe(t),n=e.length;n>s;s++)r[e[s]]=pt.css(t,e[s],!1,o);return r}return void 0!==i?pt.style(t,e,i):pt.css(t,e)},t,e,arguments.length>1)},show:function(){return j(this,!0)},hide:function(){return j(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){Ht(this)?pt(this).show():pt(this).hide()})}}),pt.Tween=O,O.prototype={constructor:O,init:function(t,e,i,o,n,r){this.elem=t,this.prop=i,this.easing=n||pt.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=o,this.unit=r||(pt.cssNumber[i]?"":"px")},cur:function(){var t=O.propHooks[this.prop];return t&&t.get?t.get(this):O.propHooks._default.get(this)},run:function(t){var e,i=O.propHooks[this.prop];return this.options.duration?this.pos=e=pt.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),i&&i.set?i.set(this):O.propHooks._default.set(this),this}},O.prototype.init.prototype=O.prototype,O.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=pt.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){pt.fx.step[t.prop]?pt.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[pt.cssProps[t.prop]]&&!pt.cssHooks[t.prop]?t.elem[t.prop]=t.now:pt.style(t.elem,t.prop,t.now+t.unit)}}},O.propHooks.scrollTop=O.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},pt.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},pt.fx=O.prototype.init,pt.fx.step={};var Ce,Se,Ae=/^(?:toggle|show|hide)$/,Ie=/queueHooks$/;pt.Animation=pt.extend(R,{tweeners:{"*":[function(t,e){var i=this.createTween(t,e);return d(i.elem,t,Pt.exec(e),i),i}]},tweener:function(t,e){pt.isFunction(t)?(e=t,t=["*"]):t=t.match(zt);for(var i,o=0,n=t.length;n>o;o++)i=t[o],R.tweeners[i]=R.tweeners[i]||[],R.tweeners[i].unshift(e)},prefilters:[B],prefilter:function(t,e){e?R.prefilters.unshift(t):R.prefilters.push(t)}}),pt.speed=function(t,e,i){var o=t&&"object"==typeof t?pt.extend({},t):{complete:i||!i&&e||pt.isFunction(t)&&t,duration:t,easing:i&&e||e&&!pt.isFunction(e)&&e};return o.duration=pt.fx.off?0:"number"==typeof o.duration?o.duration:o.duration in pt.fx.speeds?pt.fx.speeds[o.duration]:pt.fx.speeds._default,null!=o.queue&&o.queue!==!0||(o.queue="fx"),o.old=o.complete,o.complete=function(){pt.isFunction(o.old)&&o.old.call(this),o.queue&&pt.dequeue(this,o.queue)},o},pt.fn.extend({fadeTo:function(t,e,i,o){return this.filter(Ht).css("opacity",0).show().end().animate({opacity:e},t,i,o)},animate:function(t,e,i,o){var n=pt.isEmptyObject(t),r=pt.speed(e,i,o),s=function(){var e=R(this,pt.extend({},t),r);(n||pt._data(this,"finish"))&&e.stop(!0)};return s.finish=s,n||r.queue===!1?this.each(s):this.queue(r.queue,s)},stop:function(t,e,i){var o=function(t){var e=t.stop;delete t.stop,e(i)};return"string"!=typeof t&&(i=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,n=null!=t&&t+"queueHooks",r=pt.timers,s=pt._data(this);if(n)s[n]&&s[n].stop&&o(s[n]);else for(n in s)s[n]&&s[n].stop&&Ie.test(n)&&o(s[n]);for(n=r.length;n--;)r[n].elem!==this||null!=t&&r[n].queue!==t||(r[n].anim.stop(i),e=!1,r.splice(n,1));!e&&i||pt.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,i=pt._data(this),o=i[t+"queue"],n=i[t+"queueHooks"],r=pt.timers,s=o?o.length:0;for(i.finish=!0,pt.queue(this,t,[]),n&&n.stop&&n.stop.call(this,!0),e=r.length;e--;)r[e].elem===this&&r[e].queue===t&&(r[e].anim.stop(!0),r.splice(e,1));for(e=0;s>e;e++)o[e]&&o[e].finish&&o[e].finish.call(this);delete i.finish})}}),pt.each(["toggle","show","hide"],function(t,e){var i=pt.fn[e];pt.fn[e]=function(t,o,n){return null==t||"boolean"==typeof t?i.apply(this,arguments):this.animate(F(e,!0),t,o,n)}}),pt.each({slideDown:F("show"),slideUp:F("hide"),slideToggle:F("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){pt.fn[t]=function(t,i,o){return this.animate(e,t,i,o)}}),pt.timers=[],pt.fx.tick=function(){var t,e=pt.timers,i=0;for(Ce=pt.now();i<e.length;i++)t=e[i],t()||e[i]!==t||e.splice(i--,1);e.length||pt.fx.stop(),Ce=void 0},pt.fx.timer=function(t){pt.timers.push(t),t()?pt.fx.start():pt.timers.pop()},pt.fx.interval=13,pt.fx.start=function(){Se||(Se=t.setInterval(pt.fx.tick,pt.fx.interval))},pt.fx.stop=function(){t.clearInterval(Se),Se=null},pt.fx.speeds={slow:600,fast:200,_default:400},pt.fn.delay=function(e,i){return e=pt.fx?pt.fx.speeds[e]||e:e,i=i||"fx",this.queue(i,function(i,o){var n=t.setTimeout(i,e);o.stop=function(){t.clearTimeout(n)}})},function(){var t,e=ot.createElement("input"),i=ot.createElement("div"),o=ot.createElement("select"),n=o.appendChild(ot.createElement("option"));i=ot.createElement("div"),i.setAttribute("className","t"),i.innerHTML="  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>",t=i.getElementsByTagName("a")[0],e.setAttribute("type","checkbox"),i.appendChild(e),t=i.getElementsByTagName("a")[0],t.style.cssText="top:1px",ht.getSetAttribute="t"!==i.className,ht.style=/top/.test(t.getAttribute("style")),ht.hrefNormalized="/a"===t.getAttribute("href"),ht.checkOn=!!e.value,ht.optSelected=n.selected,ht.enctype=!!ot.createElement("form").enctype,o.disabled=!0,ht.optDisabled=!n.disabled,e=ot.createElement("input"),e.setAttribute("value",""),ht.input=""===e.getAttribute("value"),e.value="t",e.setAttribute("type","radio"),ht.radioValue="t"===e.value}();var ze=/\r/g,$e=/[\x20\t\r\n\f]+/g;pt.fn.extend({val:function(t){var e,i,o,n=this[0];{if(arguments.length)return o=pt.isFunction(t),this.each(function(i){var n;1===this.nodeType&&(n=o?t.call(this,i,pt(this).val()):t,null==n?n="":"number"==typeof n?n+="":pt.isArray(n)&&(n=pt.map(n,function(t){return null==t?"":t+""})),e=pt.valHooks[this.type]||pt.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,n,"value")||(this.value=n))});if(n)return e=pt.valHooks[n.type]||pt.valHooks[n.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(i=e.get(n,"value"))?i:(i=n.value,"string"==typeof i?i.replace(ze,""):null==i?"":i)}}}),pt.extend({valHooks:{option:{get:function(t){var e=pt.find.attr(t,"value");return null!=e?e:pt.trim(pt.text(t)).replace($e," ")}},select:{get:function(t){for(var e,i,o=t.options,n=t.selectedIndex,r="select-one"===t.type||0>n,s=r?null:[],a=r?n+1:o.length,l=0>n?a:r?n:0;a>l;l++)if(i=o[l],(i.selected||l===n)&&(ht.optDisabled?!i.disabled:null===i.getAttribute("disabled"))&&(!i.parentNode.disabled||!pt.nodeName(i.parentNode,"optgroup"))){if(e=pt(i).val(),r)return e;s.push(e)}return s},set:function(t,e){for(var i,o,n=t.options,r=pt.makeArray(e),s=n.length;s--;)if(o=n[s],pt.inArray(pt.valHooks.option.get(o),r)>-1)try{o.selected=i=!0}catch(a){o.scrollHeight}else o.selected=!1;return i||(t.selectedIndex=-1),n}}}}),pt.each(["radio","checkbox"],function(){pt.valHooks[this]={set:function(t,e){return pt.isArray(e)?t.checked=pt.inArray(pt(t).val(),e)>-1:void 0}},ht.checkOn||(pt.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var Ne,Le,je=pt.expr.attrHandle,De=/^(?:checked|selected)$/i,Me=ht.getSetAttribute,Pe=ht.input;pt.fn.extend({attr:function(t,e){return Ft(this,pt.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){pt.removeAttr(this,t)})}}),pt.extend({attr:function(t,e,i){var o,n,r=t.nodeType;if(3!==r&&8!==r&&2!==r)return"undefined"==typeof t.getAttribute?pt.prop(t,e,i):(1===r&&pt.isXMLDoc(t)||(e=e.toLowerCase(),n=pt.attrHooks[e]||(pt.expr.match.bool.test(e)?Le:Ne)),void 0!==i?null===i?void pt.removeAttr(t,e):n&&"set"in n&&void 0!==(o=n.set(t,i,e))?o:(t.setAttribute(e,i+""),i):n&&"get"in n&&null!==(o=n.get(t,e))?o:(o=pt.find.attr(t,e),null==o?void 0:o))},attrHooks:{type:{set:function(t,e){if(!ht.radioValue&&"radio"===e&&pt.nodeName(t,"input")){var i=t.value;return t.setAttribute("type",e),i&&(t.value=i),e}}}},removeAttr:function(t,e){var i,o,n=0,r=e&&e.match(zt);if(r&&1===t.nodeType)for(;i=r[n++];)o=pt.propFix[i]||i,pt.expr.match.bool.test(i)?Pe&&Me||!De.test(i)?t[o]=!1:t[pt.camelCase("default-"+i)]=t[o]=!1:pt.attr(t,i,""),t.removeAttribute(Me?i:o)}}),Le={set:function(t,e,i){return e===!1?pt.removeAttr(t,i):Pe&&Me||!De.test(i)?t.setAttribute(!Me&&pt.propFix[i]||i,i):t[pt.camelCase("default-"+i)]=t[i]=!0,i}},pt.each(pt.expr.match.bool.source.match(/\w+/g),function(t,e){var i=je[e]||pt.find.attr;Pe&&Me||!De.test(e)?je[e]=function(t,e,o){var n,r;return o||(r=je[e],je[e]=n,n=null!=i(t,e,o)?e.toLowerCase():null,je[e]=r),n}:je[e]=function(t,e,i){return i?void 0:t[pt.camelCase("default-"+e)]?e.toLowerCase():null}}),Pe&&Me||(pt.attrHooks.value={set:function(t,e,i){return pt.nodeName(t,"input")?void(t.defaultValue=e):Ne&&Ne.set(t,e,i)}}),Me||(Ne={set:function(t,e,i){var o=t.getAttributeNode(i);return o||t.setAttributeNode(o=t.ownerDocument.createAttribute(i)),o.value=e+="","value"===i||e===t.getAttribute(i)?e:void 0}},je.id=je.name=je.coords=function(t,e,i){var o;return i?void 0:(o=t.getAttributeNode(e))&&""!==o.value?o.value:null},pt.valHooks.button={get:function(t,e){var i=t.getAttributeNode(e);return i&&i.specified?i.value:void 0},set:Ne.set},pt.attrHooks.contenteditable={set:function(t,e,i){Ne.set(t,""===e?!1:e,i)}},pt.each(["width","height"],function(t,e){pt.attrHooks[e]={set:function(t,i){return""===i?(t.setAttribute(e,"auto"),i):void 0}}})),ht.style||(pt.attrHooks.style={get:function(t){return t.style.cssText||void 0},set:function(t,e){return t.style.cssText=e+""}});var Oe=/^(?:input|select|textarea|button|object)$/i,He=/^(?:a|area)$/i;pt.fn.extend({prop:function(t,e){return Ft(this,pt.prop,t,e,arguments.length>1)},removeProp:function(t){return t=pt.propFix[t]||t,this.each(function(){try{this[t]=void 0,delete this[t]}catch(e){}})}}),pt.extend({prop:function(t,e,i){var o,n,r=t.nodeType;if(3!==r&&8!==r&&2!==r)return 1===r&&pt.isXMLDoc(t)||(e=pt.propFix[e]||e,n=pt.propHooks[e]),void 0!==i?n&&"set"in n&&void 0!==(o=n.set(t,i,e))?o:t[e]=i:n&&"get"in n&&null!==(o=n.get(t,e))?o:t[e]},propHooks:{tabIndex:{get:function(t){var e=pt.find.attr(t,"tabindex");return e?parseInt(e,10):Oe.test(t.nodeName)||He.test(t.nodeName)&&t.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),ht.hrefNormalized||pt.each(["href","src"],function(t,e){pt.propHooks[e]={get:function(t){return t.getAttribute(e,4)}}}),ht.optSelected||(pt.propHooks.selected={get:function(t){var e=t.parentNode;return e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex),null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),pt.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){pt.propFix[this.toLowerCase()]=this}),ht.enctype||(pt.propFix.enctype="encoding");var Fe=/[\t\r\n\f]/g;pt.fn.extend({addClass:function(t){var e,i,o,n,r,s,a,l=0;if(pt.isFunction(t))return this.each(function(e){pt(this).addClass(t.call(this,e,W(this)))});if("string"==typeof t&&t)for(e=t.match(zt)||[];i=this[l++];)if(n=W(i),o=1===i.nodeType&&(" "+n+" ").replace(Fe," ")){for(s=0;r=e[s++];)o.indexOf(" "+r+" ")<0&&(o+=r+" ");a=pt.trim(o),n!==a&&pt.attr(i,"class",a)}return this},removeClass:function(t){var e,i,o,n,r,s,a,l=0;if(pt.isFunction(t))return this.each(function(e){pt(this).removeClass(t.call(this,e,W(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(zt)||[];i=this[l++];)if(n=W(i),o=1===i.nodeType&&(" "+n+" ").replace(Fe," ")){for(s=0;r=e[s++];)for(;o.indexOf(" "+r+" ")>-1;)o=o.replace(" "+r+" "," ");a=pt.trim(o),n!==a&&pt.attr(i,"class",a)}return this},toggleClass:function(t,e){var i=typeof t;return"boolean"==typeof e&&"string"===i?e?this.addClass(t):this.removeClass(t):pt.isFunction(t)?this.each(function(i){pt(this).toggleClass(t.call(this,i,W(this),e),e)}):this.each(function(){var e,o,n,r;if("string"===i)for(o=0,n=pt(this),r=t.match(zt)||[];e=r[o++];)n.hasClass(e)?n.removeClass(e):n.addClass(e);else void 0!==t&&"boolean"!==i||(e=W(this),e&&pt._data(this,"__className__",e),pt.attr(this,"class",e||t===!1?"":pt._data(this,"__className__")||""))})},hasClass:function(t){var e,i,o=0;for(e=" "+t+" ";i=this[o++];)if(1===i.nodeType&&(" "+W(i)+" ").replace(Fe," ").indexOf(e)>-1)return!0;return!1}}),pt.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "),function(t,e){pt.fn[e]=function(t,i){return arguments.length>0?this.on(e,null,t,i):this.trigger(e)}}),pt.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}});var qe=t.location,Be=pt.now(),_e=/\?/,Re=/(,)|(\[|{)|(}|])|"(?:[^"\\\r\n]|\\["\\\/bfnrt]|\\u[\da-fA-F]{4})*"\s*:?|true|false|null|-?(?!0\d)\d+(?:\.\d+|)(?:[eE][+-]?\d+|)/g;pt.parseJSON=function(e){if(t.JSON&&t.JSON.parse)return t.JSON.parse(e+"");var i,o=null,n=pt.trim(e+"");return n&&!pt.trim(n.replace(Re,function(t,e,n,r){return i&&e&&(o=0),0===o?t:(i=n||e,o+=!r-!n,"")}))?Function("return "+n)():pt.error("Invalid JSON: "+e)},pt.parseXML=function(e){var i,o;if(!e||"string"!=typeof e)return null;try{t.DOMParser?(o=new t.DOMParser,i=o.parseFromString(e,"text/xml")):(i=new t.ActiveXObject("Microsoft.XMLDOM"),i.async="false",i.loadXML(e))}catch(n){i=void 0}return i&&i.documentElement&&!i.getElementsByTagName("parsererror").length||pt.error("Invalid XML: "+e),i};var We=/#.*$/,Ve=/([?&])_=[^&]*/,Xe=/^(.*?):[ \t]*([^\r\n]*)\r?$/gm,Qe=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ye=/^(?:GET|HEAD)$/,Ge=/^\/\//,Ue=/^([\w.+-]+:)(?:\/\/(?:[^\/?#]*@|)([^\/?#:]*)(?::(\d+)|)|)/,Je={},Ke={},Ze="*/".concat("*"),ti=qe.href,ei=Ue.exec(ti.toLowerCase())||[];pt.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:ti,type:"GET",isLocal:Qe.test(ei[1]),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Ze,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":pt.parseJSON,"text xml":pt.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?Q(Q(t,pt.ajaxSettings),e):Q(pt.ajaxSettings,t)},ajaxPrefilter:V(Je),ajaxTransport:V(Ke),ajax:function(e,i){function o(e,i,o,n){var r,h,b,w,x,T=i;2!==y&&(y=2,l&&t.clearTimeout(l),u=void 0,a=n||"",k.readyState=e>0?4:0,r=e>=200&&300>e||304===e,o&&(w=Y(d,k,o)),w=G(d,w,k,r),r?(d.ifModified&&(x=k.getResponseHeader("Last-Modified"),x&&(pt.lastModified[s]=x),x=k.getResponseHeader("etag"),x&&(pt.etag[s]=x)),204===e||"HEAD"===d.type?T="nocontent":304===e?T="notmodified":(T=w.state,h=w.data,b=w.error,r=!b)):(b=T,!e&&T||(T="error",0>e&&(e=0))),k.status=e,k.statusText=(i||T)+"",r?m.resolveWith(p,[h,T,k]):m.rejectWith(p,[k,T,b]),k.statusCode(v),v=void 0,c&&f.trigger(r?"ajaxSuccess":"ajaxError",[k,d,r?h:b]),g.fireWith(p,[k,T]),c&&(f.trigger("ajaxComplete",[k,d]),--pt.active||pt.event.trigger("ajaxStop")))}"object"==typeof e&&(i=e,e=void 0),i=i||{};var n,r,s,a,l,c,u,h,d=pt.ajaxSetup({},i),p=d.context||d,f=d.context&&(p.nodeType||p.jquery)?pt(p):pt.event,m=pt.Deferred(),g=pt.Callbacks("once memory"),v=d.statusCode||{},b={},w={},y=0,x="canceled",k={readyState:0,getResponseHeader:function(t){var e;if(2===y){if(!h)for(h={};e=Xe.exec(a);)h[e[1].toLowerCase()]=e[2];e=h[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return 2===y?a:null},setRequestHeader:function(t,e){var i=t.toLowerCase();return y||(t=w[i]=w[i]||t,b[t]=e),this},overrideMimeType:function(t){return y||(d.mimeType=t),this},statusCode:function(t){var e;if(t)if(2>y)for(e in t)v[e]=[v[e],t[e]];else k.always(t[k.status]);return this},abort:function(t){var e=t||x;return u&&u.abort(e),o(0,e),this}};if(m.promise(k).complete=g.add,k.success=k.done,k.error=k.fail,d.url=((e||d.url||ti)+"").replace(We,"").replace(Ge,ei[1]+"//"),d.type=i.method||i.type||d.method||d.type,d.dataTypes=pt.trim(d.dataType||"*").toLowerCase().match(zt)||[""],null==d.crossDomain&&(n=Ue.exec(d.url.toLowerCase()),d.crossDomain=!(!n||n[1]===ei[1]&&n[2]===ei[2]&&(n[3]||("http:"===n[1]?"80":"443"))===(ei[3]||("http:"===ei[1]?"80":"443")))),d.data&&d.processData&&"string"!=typeof d.data&&(d.data=pt.param(d.data,d.traditional)),X(Je,d,i,k),2===y)return k;c=pt.event&&d.global,c&&0===pt.active++&&pt.event.trigger("ajaxStart"),d.type=d.type.toUpperCase(),d.hasContent=!Ye.test(d.type),s=d.url,d.hasContent||(d.data&&(s=d.url+=(_e.test(s)?"&":"?")+d.data,delete d.data),d.cache===!1&&(d.url=Ve.test(s)?s.replace(Ve,"$1_="+Be++):s+(_e.test(s)?"&":"?")+"_="+Be++)),d.ifModified&&(pt.lastModified[s]&&k.setRequestHeader("If-Modified-Since",pt.lastModified[s]),pt.etag[s]&&k.setRequestHeader("If-None-Match",pt.etag[s])),(d.data&&d.hasContent&&d.contentType!==!1||i.contentType)&&k.setRequestHeader("Content-Type",d.contentType),k.setRequestHeader("Accept",d.dataTypes[0]&&d.accepts[d.dataTypes[0]]?d.accepts[d.dataTypes[0]]+("*"!==d.dataTypes[0]?", "+Ze+"; q=0.01":""):d.accepts["*"]);for(r in d.headers)k.setRequestHeader(r,d.headers[r]);if(d.beforeSend&&(d.beforeSend.call(p,k,d)===!1||2===y))return k.abort();x="abort";for(r in{success:1,error:1,complete:1})k[r](d[r]);if(u=X(Ke,d,i,k)){if(k.readyState=1,c&&f.trigger("ajaxSend",[k,d]),2===y)return k;d.async&&d.timeout>0&&(l=t.setTimeout(function(){k.abort("timeout")},d.timeout));try{y=1,u.send(b,o)}catch(T){if(!(2>y))throw T;o(-1,T)}}else o(-1,"No Transport");return k},getJSON:function(t,e,i){return pt.get(t,e,i,"json")},getScript:function(t,e){return pt.get(t,void 0,e,"script")}}),pt.each(["get","post"],function(t,e){pt[e]=function(t,i,o,n){return pt.isFunction(i)&&(n=n||o,o=i,i=void 0),pt.ajax(pt.extend({url:t,type:e,dataType:n,data:i,success:o},pt.isPlainObject(t)&&t))}}),pt._evalUrl=function(t){return pt.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},pt.fn.extend({wrapAll:function(t){if(pt.isFunction(t))return this.each(function(e){pt(this).wrapAll(t.call(this,e))});if(this[0]){var e=pt(t,this[0].ownerDocument).eq(0).clone(!0);this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstChild&&1===t.firstChild.nodeType;)t=t.firstChild;return t}).append(this)}return this},wrapInner:function(t){return pt.isFunction(t)?this.each(function(e){pt(this).wrapInner(t.call(this,e))}):this.each(function(){var e=pt(this),i=e.contents();i.length?i.wrapAll(t):e.append(t)})},wrap:function(t){var e=pt.isFunction(t);return this.each(function(i){pt(this).wrapAll(e?t.call(this,i):t)})},unwrap:function(){return this.parent().each(function(){pt.nodeName(this,"body")||pt(this).replaceWith(this.childNodes)}).end()}}),pt.expr.filters.hidden=function(t){return ht.reliableHiddenOffsets()?t.offsetWidth<=0&&t.offsetHeight<=0&&!t.getClientRects().length:J(t)},pt.expr.filters.visible=function(t){return!pt.expr.filters.hidden(t)};var ii=/%20/g,oi=/\[\]$/,ni=/\r?\n/g,ri=/^(?:submit|button|image|reset|file)$/i,si=/^(?:input|select|textarea|keygen)/i;pt.param=function(t,e){var i,o=[],n=function(t,e){e=pt.isFunction(e)?e():null==e?"":e,o[o.length]=encodeURIComponent(t)+"="+encodeURIComponent(e)};if(void 0===e&&(e=pt.ajaxSettings&&pt.ajaxSettings.traditional),pt.isArray(t)||t.jquery&&!pt.isPlainObject(t))pt.each(t,function(){n(this.name,this.value)});else for(i in t)K(i,t[i],e,n);return o.join("&").replace(ii,"+")},pt.fn.extend({serialize:function(){return pt.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=pt.prop(this,"elements");return t?pt.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!pt(this).is(":disabled")&&si.test(this.nodeName)&&!ri.test(t)&&(this.checked||!qt.test(t))}).map(function(t,e){var i=pt(this).val();return null==i?null:pt.isArray(i)?pt.map(i,function(t){return{name:e.name,value:t.replace(ni,"\r\n")}}):{name:e.name,value:i.replace(ni,"\r\n")}}).get()}}),pt.ajaxSettings.xhr=void 0!==t.ActiveXObject?function(){return this.isLocal?tt():ot.documentMode>8?Z():/^(get|post|head|put|delete|options)$/i.test(this.type)&&Z()||tt()}:Z;var ai=0,li={},ci=pt.ajaxSettings.xhr();t.attachEvent&&t.attachEvent("onunload",function(){for(var t in li)li[t](void 0,!0)}),ht.cors=!!ci&&"withCredentials"in ci,ci=ht.ajax=!!ci,ci&&pt.ajaxTransport(function(e){if(!e.crossDomain||ht.cors){var i;return{send:function(o,n){var r,s=e.xhr(),a=++ai;if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(r in e.xhrFields)s[r]=e.xhrFields[r];e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||o["X-Requested-With"]||(o["X-Requested-With"]="XMLHttpRequest");for(r in o)void 0!==o[r]&&s.setRequestHeader(r,o[r]+"");s.send(e.hasContent&&e.data||null),i=function(t,o){var r,l,c;if(i&&(o||4===s.readyState))if(delete li[a],i=void 0,s.onreadystatechange=pt.noop,o)4!==s.readyState&&s.abort();else{c={},r=s.status,"string"==typeof s.responseText&&(c.text=s.responseText);try{l=s.statusText}catch(u){l=""}r||!e.isLocal||e.crossDomain?1223===r&&(r=204):r=c.text?200:404}c&&n(r,l,c,s.getAllResponseHeaders())},e.async?4===s.readyState?t.setTimeout(i):s.onreadystatechange=li[a]=i:i()},abort:function(){i&&i(void 0,!0)}}}}),pt.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return pt.globalEval(t),t}}}),pt.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET",t.global=!1)}),pt.ajaxTransport("script",function(t){if(t.crossDomain){var e,i=ot.head||pt("head")[0]||ot.documentElement;return{send:function(o,n){e=ot.createElement("script"),e.async=!0,t.scriptCharset&&(e.charset=t.scriptCharset),e.src=t.url,e.onload=e.onreadystatechange=function(t,i){(i||!e.readyState||/loaded|complete/.test(e.readyState))&&(e.onload=e.onreadystatechange=null,e.parentNode&&e.parentNode.removeChild(e),e=null,i||n(200,"success"))},i.insertBefore(e,i.firstChild)},abort:function(){e&&e.onload(void 0,!0)}}}});var ui=[],hi=/(=)\?(?=&|$)|\?\?/;pt.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=ui.pop()||pt.expando+"_"+Be++;return this[t]=!0,t}}),pt.ajaxPrefilter("json jsonp",function(e,i,o){var n,r,s,a=e.jsonp!==!1&&(hi.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&hi.test(e.data)&&"data");return a||"jsonp"===e.dataTypes[0]?(n=e.jsonpCallback=pt.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,a?e[a]=e[a].replace(hi,"$1"+n):e.jsonp!==!1&&(e.url+=(_e.test(e.url)?"&":"?")+e.jsonp+"="+n),e.converters["script json"]=function(){return s||pt.error(n+" was not called"),s[0]},e.dataTypes[0]="json",r=t[n],t[n]=function(){s=arguments},o.always(function(){void 0===r?pt(t).removeProp(n):t[n]=r,e[n]&&(e.jsonpCallback=i.jsonpCallback,ui.push(n)),s&&pt.isFunction(r)&&r(s[0]),s=r=void 0}),"script"):void 0}),pt.parseHTML=function(t,e,i){if(!t||"string"!=typeof t)return null;"boolean"==typeof e&&(i=e,e=!1),e=e||ot;var o=kt.exec(t),n=!i&&[];return o?[e.createElement(o[1])]:(o=v([t],e,n),n&&n.length&&pt(n).remove(),pt.merge([],o.childNodes))};var di=pt.fn.load;pt.fn.load=function(t,e,i){if("string"!=typeof t&&di)return di.apply(this,arguments);var o,n,r,s=this,a=t.indexOf(" ");return a>-1&&(o=pt.trim(t.slice(a,t.length)),t=t.slice(0,a)),pt.isFunction(e)?(i=e,e=void 0):e&&"object"==typeof e&&(n="POST"),s.length>0&&pt.ajax({url:t,type:n||"GET",dataType:"html",data:e}).done(function(t){r=arguments,s.html(o?pt("<div>").append(pt.parseHTML(t)).find(o):t)}).always(i&&function(t,e){s.each(function(){i.apply(this,r||[t.responseText,e,t])})}),this},pt.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){pt.fn[e]=function(t){return this.on(e,t)}}),pt.expr.filters.animated=function(t){return pt.grep(pt.timers,function(e){
return t===e.elem}).length},pt.offset={setOffset:function(t,e,i){var o,n,r,s,a,l,c,u=pt.css(t,"position"),h=pt(t),d={};"static"===u&&(t.style.position="relative"),a=h.offset(),r=pt.css(t,"top"),l=pt.css(t,"left"),c=("absolute"===u||"fixed"===u)&&pt.inArray("auto",[r,l])>-1,c?(o=h.position(),s=o.top,n=o.left):(s=parseFloat(r)||0,n=parseFloat(l)||0),pt.isFunction(e)&&(e=e.call(t,i,pt.extend({},a))),null!=e.top&&(d.top=e.top-a.top+s),null!=e.left&&(d.left=e.left-a.left+n),"using"in e?e.using.call(t,d):h.css(d)}},pt.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){pt.offset.setOffset(this,t,e)});var e,i,o={top:0,left:0},n=this[0],r=n&&n.ownerDocument;if(r)return e=r.documentElement,pt.contains(e,n)?("undefined"!=typeof n.getBoundingClientRect&&(o=n.getBoundingClientRect()),i=et(r),{top:o.top+(i.pageYOffset||e.scrollTop)-(e.clientTop||0),left:o.left+(i.pageXOffset||e.scrollLeft)-(e.clientLeft||0)}):o},position:function(){if(this[0]){var t,e,i={top:0,left:0},o=this[0];return"fixed"===pt.css(o,"position")?e=o.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),pt.nodeName(t[0],"html")||(i=t.offset()),i.top+=pt.css(t[0],"borderTopWidth",!0),i.left+=pt.css(t[0],"borderLeftWidth",!0)),{top:e.top-i.top-pt.css(o,"marginTop",!0),left:e.left-i.left-pt.css(o,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&!pt.nodeName(t,"html")&&"static"===pt.css(t,"position");)t=t.offsetParent;return t||pe})}}),pt.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var i=/Y/.test(e);pt.fn[t]=function(o){return Ft(this,function(t,o,n){var r=et(t);return void 0===n?r?e in r?r[e]:r.document.documentElement[o]:t[o]:void(r?r.scrollTo(i?pt(r).scrollLeft():n,i?n:pt(r).scrollTop()):t[o]=n)},t,o,arguments.length,null)}}),pt.each(["top","left"],function(t,e){pt.cssHooks[e]=N(ht.pixelPosition,function(t,i){return i?(i=me(t,e),he.test(i)?pt(t).position()[e]+"px":i):void 0})}),pt.each({Height:"height",Width:"width"},function(t,e){pt.each({padding:"inner"+t,content:e,"":"outer"+t},function(i,o){pt.fn[o]=function(o,n){var r=arguments.length&&(i||"boolean"!=typeof o),s=i||(o===!0||n===!0?"margin":"border");return Ft(this,function(e,i,o){var n;return pt.isWindow(e)?e.document.documentElement["client"+t]:9===e.nodeType?(n=e.documentElement,Math.max(e.body["scroll"+t],n["scroll"+t],e.body["offset"+t],n["offset"+t],n["client"+t])):void 0===o?pt.css(e,i,s):pt.style(e,i,o,s)},e,r?o:void 0,r,null)}})}),pt.fn.extend({bind:function(t,e,i){return this.on(t,null,e,i)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,i,o){return this.on(e,t,i,o)},undelegate:function(t,e,i){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",i)}}),pt.fn.size=function(){return this.length},pt.fn.andSelf=pt.fn.addBack,"function"==typeof define&&define.amd&&define("jquery",[],function(){return pt});var pi=t.jQuery,fi=t.$;return pt.noConflict=function(e){return t.$===pt&&(t.$=fi),e&&t.jQuery===pt&&(t.jQuery=pi),pt},e||(t.jQuery=t.$=pt),pt}),setInterval(getDate,0),function(t){t.fn.html5lightbox=function(e){var i=this;i.options=t.extend({freelink:"http://html5box.com/",defaultvideovolume:1,autoplay:!0,html5player:!0,responsive:!0,nativehtml5controls:!1,videohidecontrols:!1,useflashonie9:!0,useflashonie10:!1,useflashonie11:!1,googleanalyticsaccount:"",arrowloop:!0,shownavigation:!0,thumbwidth:96,thumbheight:72,thumbgap:4,thumbtopmargin:12,thumbbottommargin:12,thumbborder:1,thumbbordercolor:"transparent",thumbhighlightbordercolor:"#fff",thumbopacity:1,navbuttonwidth:32,overlaybgcolor:"#000",overlayopacity:.9,bgcolor:"#fff",bordersize:8,borderradius:0,bordermargin:16,bordertopmargin:16,bordertopmarginsmall:48,barautoheight:!0,barheight:64,loadingwidth:64,loadingheight:64,resizespeed:400,fadespeed:400,jsfolder:"",skinsfoldername:"skins",loadingimage:"img/lightbox-loading.gif",nextimage:"img/lightbox-next.png",previmage:"img/lightbox-prev.png",closeimage:"img/lightbox-close.png",playvideoimage:"img/lightbox-playvideo.png",titlebgimage:"img/lightbox-titlebg.png",navarrowsprevimage:"img/lightbox-navprev.png",navarrowsnextimage:"img/lightbox-navnext.png",navarrowsalwaysshowontouch:!0,navarrowsbottomscreenwidth:479,closeonoverlay:!0,alwaysshownavarrows:!1,showplaybutton:!0,playimage:"img/lightbox-play.png",pauseimage:"img/lightbox-pause.png",fullscreenmode:!1,fullscreencloseimage:"img/lightbox-close-fullscreen.png",fullscreennextimage:"img/lightbox-next-fullscreen.png",fullscreenprevimage:"img/lightbox-prev-fullscreen.png",videobgcolor:"#fff",showtitle:!0,titlestyle:"bottom",titleinsidecss:"color:#fff; font-size:16px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left;",titlebottomcss:"color:#333; font-size:16px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left;",showdescription:!0,descriptioninsidecss:"color:#fff; font-size:12px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left; margin:4px 0px 0px; padding: 0px;",descriptionbottomcss:"color:#333; font-size:12px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left; margin:4px 0px 0px; padding: 0px;",showtitleprefix:!0,titleprefix:"%NUM / %TOTAL",autoslide:!1,slideinterval:5e3,showtimer:!0,timerposition:"bottom",timerheight:2,timercolor:"#dc572e",timeropacity:1,initvimeo:!0,inityoutube:!0,imagepercentage:75,sidetobottomscreenwidth:479,errorwidth:280,errorheight:48,errorcss:"text-align:center; color:#ff0000; font-size:14px; font-family:Arial, sans-serif;",enabletouchswipe:!0,supportesckey:!0,supportarrowkeys:!0,version:"3.3",stamp:!1,freemark:"72,84,77,76,53,32,76,105,103,104,116,98,111,120,32,70,114,101,101,32,86,101,114,115,105,111,110",watermark:"",watermarklink:""},e),"undefined"!=typeof html5lightbox_options&&html5lightbox_options&&t.extend(i.options,html5lightbox_options),t("div#html5lightbox_options").length&&t.each(t("div#html5lightbox_options").data(),function(t,e){i.options[t.toLowerCase()]=e});var o=960,n=540,r=0,s=1,a=2,l=3,c=4,u=5,h=6,d=7,p=8,f=9;i.options.types=["IMAGE","FLASH","VIDEO","YOUTUBE","VIMEO","PDF","MP3","WEB","FLV","DAILYMOTION","DIV"],i.options.htmlfolder=window.location.href.substr(0,window.location.href.lastIndexOf("/")+1),i.options.skinsfolder=i.options.skinsfoldername,i.options.skinsfolder.length>0&&"/"!=i.options.skinsfolder[i.options.skinsfolder.length-1]&&(i.options.skinsfolder+="/"),"/"!=i.options.skinsfolder.charAt(0)&&"http:"!=i.options.skinsfolder.substring(0,5)&&"https:"!=i.options.skinsfolder.substring(0,6)&&(i.options.skinsfolder=i.options.jsfolder+i.options.skinsfolder);var m,g,v="",b=i.options.freemark.split(",");for(m=0;m<b.length;m++)v+=String.fromCharCode(b[m]);i.options.freemark=v;var w="hmtamgli5cboxh.iclolms";for(m=1;5>=m;m++)w=w.slice(0,m)+w.slice(m+1);for(g=w.length,m=0;5>m;m++)w=w.slice(0,g-9+m)+w.slice(g-8+m);-1!=i.options.htmlfolder.indexOf(w)&&(i.options.stamp=!1),i.options.flashInstalled=!1;try{new ActiveXObject("ShockwaveFlash.ShockwaveFlash")&&(i.options.flashInstalled=!0)}catch(y){navigator.mimeTypes["application/x-shockwave-flash"]&&(i.options.flashInstalled=!0)}if(i.options.html5VideoSupported=!!document.createElement("video").canPlayType,i.options.isChrome=null!=navigator.userAgent.match(/Chrome/i),i.options.isFirefox=null!=navigator.userAgent.match(/Firefox/i),i.options.isOpera=null!=navigator.userAgent.match(/Opera/i)||null!=navigator.userAgent.match(/OPR\//i),i.options.isSafari=null!=navigator.userAgent.match(/Safari/i),i.options.isIE11=null!=navigator.userAgent.match(/Trident\/7/)&&null!=navigator.userAgent.match(/rv:11/),i.options.isIE=null!=navigator.userAgent.match(/MSIE/i)&&!i.options.isOpera,i.options.isIE10=null!=navigator.userAgent.match(/MSIE 10/i)&&!this.options.isOpera,i.options.isIE9=null!=navigator.userAgent.match(/MSIE 9/i)&&!i.options.isOpera,i.options.isIE8=null!=navigator.userAgent.match(/MSIE 8/i)&&!i.options.isOpera,i.options.isIE7=null!=navigator.userAgent.match(/MSIE 7/i)&&!i.options.isOpera,i.options.isIE6=null!=navigator.userAgent.match(/MSIE 6/i)&&!i.options.isOpera,i.options.isIE678=i.options.isIE6||i.options.isIE7||i.options.isIE8,i.options.isIE6789=i.options.isIE6||i.options.isIE7||i.options.isIE8||i.options.isIE9,i.options.isAndroid=null!=navigator.userAgent.match(/Android/i),i.options.isIPad=null!=navigator.userAgent.match(/iPad/i),i.options.isIPhone=null!=navigator.userAgent.match(/iPod/i)||null!=navigator.userAgent.match(/iPhone/i),i.options.isIOS=i.options.isIPad||i.options.isIPhone,i.options.isMobile=i.options.isAndroid||i.options.isIPad||i.options.isIPhone,i.options.isIOSLess5=i.options.isIPad&&i.options.isIPhone&&(null!=navigator.userAgent.match(/OS 4/i)||null!=navigator.userAgent.match(/OS 3/i)),i.options.supportCSSPositionFixed=!i.options.isIE6&&!i.options.isIOSLess5,i.options.iequirksmode=i.options.isIE6789&&"CSS1Compat"!=document.compatMode,i.options.isTouch="ontouchstart"in window,i.options.isMobile&&(i.options.autoplay=!1),i.options.navheight=0,i.options.thumbgap+=2*i.options.thumbborder,i.options.resizeTimeout=-1,i.slideTimeout=null,i.autosliding=!1,i.elemArray=new Array,i.options.curElem=-1,i.defaultoptions=t.extend({},i.options),i.options.googleanalyticsaccount&&!window._gaq&&(window._gaq=window._gaq||[],window._gaq.push(["_setAccount",i.options.googleanalyticsaccount]),window._gaq.push(["_trackPageview"]),t.getScript(("https:"==document.location.protocol?"https://ssl":"http://www")+".google-analytics.com/ga.js")),i.options.initvimeo){var x=document.createElement("script");x.src=i.options.jsfolder+"froogaloop2.min.js";var k=document.getElementsByTagName("script")[0];k.parentNode.insertBefore(x,k)}if(i.options.inityoutube){var x=document.createElement("script");x.src=("https:"==document.location.protocol?"https":"http")+"://www.youtube.com/iframe_api";var k=document.getElementsByTagName("script")[0];k.parentNode.insertBefore(x,k)}return i.init=function(){i.showing=!1,i.readData(),i.createMarkup(),i.supportKeyboard(),i.initSlide()},i.readData=function(){i.each(function(){if("a"==this.nodeName.toLowerCase()||"area"==this.nodeName.toLowerCase()){var e=t(this),o="mediatype"in e.data()?e.data("mediatype"):i.checkType(e.attr("href"));if(!(0>o)){for(var n=0;n<i.elemArray.length;n++)if(e.attr("href")==i.elemArray[n][s])return;i.elemArray.push(new Array(o,e.attr("href"),e.attr("title"),e.data("group"),e.data("width"),e.data("height"),e.data("webm"),e.data("ogg"),e.data("thumbnail"),e.data("description")))}}})},i.createMarkup=function(){i.options.titlecss||(i.options.titlecss="inside"==i.options.titlestyle?i.options.titleinsidecss:i.options.titlebottomcss),i.options.descriptioncss||(i.options.descriptioncss="inside"==i.options.titlestyle?i.options.descriptioninsidecss:i.options.descriptionbottomcss),i.options.titlecss=t.trim(i.options.titlecss),i.options.titlecss.length>1&&("{"==i.options.titlecss.charAt(0)&&(i.options.titlecss=i.options.titlecss.substring(1)),"}"==i.options.titlecss.charAt(i.options.titlecss.length-1)&&(i.options.titlecss=i.options.titlecss.substring(0,i.options.titlecss.length-1))),i.options.descriptioncss=t.trim(i.options.descriptioncss),i.options.descriptioncss.length>1&&("{"==i.options.descriptioncss.charAt(0)&&(i.options.descriptioncss=i.options.descriptioncss.substring(1)),"}"==i.options.descriptioncss.charAt(i.options.descriptioncss.length-1)&&(i.options.descriptioncss=i.options.descriptioncss.substring(0,i.options.descriptioncss.length-1))),i.options.errorcss=t.trim(i.options.errorcss),i.options.errorcss.length>1&&("{"==i.options.errorcss.charAt(0)&&(i.options.errorcss=i.options.errorcss.substring(1)),"}"==i.options.errorcss.charAt(i.options.errorcss.length-1)&&(i.options.errorcss=i.options.errorcss.substring(0,i.options.errorcss.length-1)));var e=".html5-hide {display:none !important;} #carousel-html5-lightbox #html5-text {"+i.options.titlecss+"}";e+="#carousel-html5-lightbox .html5-description {"+i.options.descriptioncss+"}",e+="#carousel-html5-lightbox .html5-error {"+i.options.errorcss+"}",(i.options.navarrowsalwaysshowontouch||i.options.alwaysshownavarrows)&&(e+="#carousel-html5-lightbox .html5-prev-touch {left:0px;top:50%;margin-top:-16px;margin-left:-32px;} #carousel-html5-lightbox .html5-next-touch {right:0px;top:50%;margin-top:-16px;margin-right:-32px;}",e+="@media (max-width: "+i.options.navarrowsbottomscreenwidth+"px) { #carousel-html5-lightbox .html5-prev-touch {top:100%;left:0;margin:0;} #carousel-html5-lightbox .html5-next-touch {top:100%;right:0;margin:0;} }"),e+="#carousel-html5-lightbox .html5-prev-fullscreen {display:block;} #carousel-html5-lightbox .html5-next-fullscreen {display:block;} #carousel-html5-lightbox .html5-prev-bottom-fullscreen {display:none;} #carousel-html5-lightbox .html5-next-bottom-fullscreen {display:none;}",e+="@media (max-width: "+i.options.navarrowsbottomscreenwidth+"px) {#carousel-html5-lightbox .html5-prev-fullscreen {display:none;} #carousel-html5-lightbox .html5-next-fullscreen {display:none;} #carousel-html5-lightbox .html5-prev-bottom-fullscreen {display:block;} #carousel-html5-lightbox .html5-next-bottom-fullscreen {display:block;} }","right"==i.options.titlestyle?(e+="#carousel-html5-lightbox #html5-elem-wrap {width:"+i.options.imagepercentage+"%;height:100%;} #carousel-html5-lightbox #html5-elem-data-box {min-height:100%;}",e+="@media (max-width: "+i.options.sidetobottomscreenwidth+"px) {#carousel-html5-lightbox #html5-elem-wrap {width:100%;height:auto;} #carousel-html5-lightbox #html5-elem-data-box {width:100%;height:auto;min-height:0;}}"):"left"==i.options.titlestyle&&(e+="#carousel-html5-lightbox #html5-elem-wrap {height:100%;} #carousel-html5-lightbox #html5-elem-data-box {width:"+String(100-i.options.imagepercentage)+"%;min-height:100%;}",e+="@media (max-width: "+i.options.sidetobottomscreenwidth+"px) {#carousel-html5-lightbox #html5-elem-wrap {width:100%;height:auto;} #carousel-html5-lightbox #html5-elem-data-box {width:100%;height:auto;min-height:0;}}"),t("head").append("<style type='text/css' data-creator='carousel-html5-lightbox'>"+e+"</style>"),i.$lightbox=t("<div id='carousel-html5-lightbox' style='display:none;top:0px;left:0px;width:100%;height:100%;z-index:9999998;text-align:center;'><div id='html5-lightbox-overlay' style='display:block;position:absolute;top:0px;left:0px;width:100%;min-height:100%;background-color:"+i.options.overlaybgcolor+";opacity:"+i.options.overlayopacity+";filter:alpha(opacity="+Math.round(100*i.options.overlayopacity)+");'></div><div id='html5-lightbox-box' style='display:block;position:relative;margin:0px auto;'><div id='html5-elem-box' style='display:block;position:relative;width:100%;overflow-x:hidden;overflow-y:auto;height:100%;margin:0px auto;text-align:center;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;'><div id='html5-elem-wrap' style='display:block;position:relative;margin:0px auto;text-align:center;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;background-color:"+i.options.bgcolor+";'><div id='html5-loading' style='display:none;position:absolute;top:0px;left:0px;text-align:center;width:100%;height:100%;background:url(\""+i.options.skinsfolder+i.options.loadingimage+"\") no-repeat center center;'></div><div id='html5-error' class='html5-error' style='display:none;position:absolute;padding:"+i.options.bordersize+"px;text-align:center;width:"+i.options.errorwidth+"px;height:"+i.options.errorheight+"px;'>The requested content cannot be loaded.<br />Please try again later.</div><div id='html5-image' style='display:none;position:relative;top:0px;left:0px;width:100%;height:100%;"+(i.options.iequirksmode?"margin":"padding")+":"+i.options.bordersize+"px;text-align:center;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;'></div></div></div><div id='html5-watermark' style='display:none;position:absolute;left:"+String(i.options.bordersize+2)+"px;top:"+String(i.options.bordersize+2)+"px;'></div></div></div>"),i.$lightbox.css({position:i.options.supportCSSPositionFixed&&i.options.responsive&&!i.options.iequirksmode?"fixed":"absolute"}),i.$lightbox.appendTo("body"),i.$lightboxBox=t("#html5-lightbox-box",i.$lightbox),i.$elem=t("#html5-elem-box",i.$lightbox),i.$elemWrap=t("#html5-elem-wrap",i.$lightbox),i.$loading=t("#html5-loading",i.$lightbox),i.$error=t("#html5-error",i.$lightbox),i.$image=t("#html5-image",i.$lightbox);var o="<div id='html5-elem-data-box' style='display:none;box-sizing:border-box;'><div id='html5-text' style='display:block;overflow:hidden;'></div></div>";if("left"==i.options.titlestyle?i.$elem.prepend(o):i.$elem.append(o),i.$elemData=t("#html5-elem-data-box",i.$lightbox),i.$text=t("#html5-text",i.$lightbox),i.options.borderradius>0&&(i.$elem.css({"border-radius":i.options.borderradius+"px","-moz-border-radius":i.options.borderradius+"px","-webkit-border-radius":i.options.borderradius+"px"}),"inside"==i.options.titlestyle?i.$elemWrap.css({"border-radius":i.options.borderradius+"px","-moz-border-radius":i.options.borderradius+"px","-webkit-border-radius":i.options.borderradius+"px"}):"bottom"==i.options.titlestyle&&(i.$elemWrap.css({"border-top-left-radius":i.options.borderradius+"px","-moz-top-left-border-radius":i.options.borderradius+"px","-webkit-top-left-border-radius":i.options.borderradius+"px","border-top-right-radius":i.options.borderradius+"px","-moz-top-right-border-radius":i.options.borderradius+"px","-webkit-top-right-border-radius":i.options.borderradius+"px"}),i.$elemData.css({"border-bottom-left-radius":i.options.borderradius+"px","-moz-top-bottom-border-radius":i.options.borderradius+"px","-webkit-bottom-left-border-radius":i.options.borderradius+"px","border-bottom-right-radius":i.options.borderradius+"px","-moz-bottom-right-border-radius":i.options.borderradius+"px","-webkit-bottom-right-border-radius":i.options.borderradius+"px"}))),"right"==i.options.titlestyle||"left"==i.options.titlestyle?(i.$lightboxBox.css({"background-color":i.options.bgcolor}),"right"==i.options.titlestyle?(i.$elemWrap.css({position:"relative","float":"left"}),i.$elemData.css({position:"relative",overflow:"hidden",padding:i.options.bordersize+"px"})):(i.$elemWrap.css({position:"relative",overflow:"hidden"}),i.$elemData.css({position:"relative","float":"left",padding:i.options.bordersize+"px"}))):"inside"==i.options.titlestyle?(i.$elemData.css({position:"absolute",margin:i.options.bordersize+"px",bottom:0,left:0,"background-color":"#333","background-color":"rgba(51, 51, 51, 0.6)"}),i.$text.css({padding:i.options.bordersize+"px "+2*i.options.bordersize+"px"})):(i.$elemData.css({position:"relative",width:"100%",height:i.options.barautoheight?"auto":i.options.barheight+"px",padding:"0 0 "+i.options.bordersize+"px 0","background-color":i.options.bgcolor,"text-align":"left"}),i.$text.css({margin:"0 "+i.options.bordersize+"px"})),i.options.fullscreenmode?(i.$lightbox.append("<div class='html5-next-fullscreen' style='cursor:pointer;position:absolute;right:"+i.options.bordersize+"px;top:50%;margin-top:-16px;'><img src='"+i.options.skinsfolder+i.options.fullscreennextimage+"'></div><div class='html5-prev-fullscreen' style='cursor:pointer;position:absolute;left:"+i.options.bordersize+"px;top:50%;margin-top:-16px;'><img src='"+i.options.skinsfolder+i.options.fullscreenprevimage+"'></div>"),i.$next=t(".html5-next-fullscreen",i.$lightbox),i.$prev=t(".html5-prev-fullscreen",i.$lightbox),i.$lightboxBox.append("<div class='html5-next-bottom-fullscreen' style='cursor:pointer;position:absolute;top:100%;right:0;margin-top:8px;'><img src='"+i.options.skinsfolder+i.options.fullscreennextimage+"'></div><div class='html5-prev-bottom-fullscreen' style='cursor:pointer;position:absolute;top:100%;left:0;margin-top:8px;'><img src='"+i.options.skinsfolder+i.options.fullscreenprevimage+"'></div>"),i.$nextbottom=t(".html5-next-bottom-fullscreen",i.$lightbox),i.$prevbottom=t(".html5-prev-bottom-fullscreen",i.$lightbox),i.$nextbottom.click(function(){i.nextArrowClicked()}),i.$prevbottom.click(function(){i.prevArrowClicked()}),i.$lightbox.append("<div id='html5-close-fullscreen' style='display:block;cursor:pointer;position:absolute;top:0;right:0;margin-top:0;margin-right:0;'><img src='"+i.options.skinsfolder+i.options.fullscreencloseimage+"'></div>"),i.$close=t("#html5-close-fullscreen",i.$lightbox)):(i.$elemWrap.append("<div id='html5-next' style='display:none;cursor:pointer;position:absolute;right:"+i.options.bordersize+"px;top:50%;margin-top:-16px;'><img src='"+i.options.skinsfolder+i.options.nextimage+"'></div><div id='html5-prev' style='display:none;cursor:pointer;position:absolute;left:"+i.options.bordersize+"px;top:50%;margin-top:-16px;'><img src='"+i.options.skinsfolder+i.options.previmage+"'></div>"),i.$next=t("#html5-next",i.$lightbox),i.$prev=t("#html5-prev",i.$lightbox),(i.options.isTouch&&i.options.navarrowsalwaysshowontouch||i.options.alwaysshownavarrows)&&(i.$lightboxBox.append("<div class='html5-next-touch' style='display:block;cursor:pointer;position:absolute;'><img src='"+i.options.skinsfolder+i.options.nextimage+"'></div><div class='html5-prev-touch' style='display:block;cursor:pointer;position:absolute;'><img src='"+i.options.skinsfolder+i.options.previmage+"'></div>"),i.$nexttouch=t(".html5-next-touch",i.$lightbox),i.$prevtouch=t(".html5-prev-touch",i.$lightbox),i.$nexttouch.click(function(){i.nextArrowClicked()}),i.$prevtouch.click(function(){i.prevArrowClicked()})),i.$lightboxBox.append("<div id='html5-close' style='display:none;cursor:pointer;position:absolute;top:0;right:0;margin-top:-16px;margin-right:-16px;'><img src='"+i.options.skinsfolder+i.options.closeimage+"'></div>"),i.$close=t("#html5-close",i.$lightbox)),i.$watermark=t("#html5-watermark",i.$lightbox),i.options.stamp)i.$watermark.html("<a href='"+i.options.freelink+"' style='text-decoration:none;' title='jQuery Lightbox'><div style='display:block;width:170px;height:20px;text-align:center;border-radius:3px;-moz-border-radius:3px;-webkit-border-radius:3px;background-color:#fff;color:#333;font:12px Arial,sans-serif;'><div style='line-height:20px;'>"+i.options.freemark+"</div></div></a>");else if(i.options.watermark){var n="<img src='"+i.options.watermark+"' style='border:none;' />";i.options.watermarklink&&(n="<a href='"+i.options.watermarklink+"' target='_blank'>"+n+"</a>"),i.$watermark.html(n)}i.options.closeonoverlay&&t("#html5-lightbox-overlay",i.$lightbox).click(i.finish),i.$close.click(i.finish),i.$next.click(function(){i.nextArrowClicked()}),i.$prev.click(function(){i.prevArrowClicked()}),t(window).resize(function(){clearTimeout(i.options.resizeTimeout),i.options.resizeTimeout=setTimeout(function(){i.resizeWindow()},500)}),t(window).scroll(function(){i.scrollBox()}),t(window).bind("orientationchange",function(t){i.options.isMobile&&i.resizeWindow()}),i.options.isIPhone&&(i.options.windowInnerHeight=window.innerHeight,setInterval(function(){i.options.windowInnerHeight!=window.innerHeight&&(i.options.windowInnerHeight=window.innerHeight,i.resizeWindow())},500)),i.options.enabletouchswipe&&i.enableSwipe()},i.slideTimer=function(t,e,i){var o=this;o.timeout=t;var n=50,r=null,s=0,a=!1,l=!1,c=!1;return this.pause=function(){l&&(a=!0,clearInterval(r))},this.resume=function(t){c&&!t||(c=!1,l&&a&&(a=!1,r=setInterval(function(){s+=n,s>o.timeout&&(clearInterval(r),e&&e()),i&&i(s/o.timeout)},n)))},this.stop=function(){clearInterval(r),i&&i(-1),s=0,a=!1,l=!1},this.start=function(){s=0,a=!1,l=!0,r=setInterval(function(){s+=n,s>o.timeout&&(clearInterval(r),e&&e()),i&&i(s/o.timeout)},n)},this.startandpause=function(){s=0,a=!0,l=!0,c=!0},this},i.updateTimer=function(e){var o=Math.round(100*e);o>100&&(o=100),0>o&&(o=0),t("#html5-timer",i.$lightbox).css({display:"block",width:o+"%"})},i.initSlide=function(){i.autosliding=!1,i.slideTimeout=i.slideTimer(i.options.slideinterval,function(){i.gotoSlide(-1)},i.options.showtimer?function(t){i.updateTimer(t)}:null),i.options.autoslide&&(i.slideTimeout.stop(),i.autosliding=!0)},i.nextArrowClicked=function(){i.options.nextElem<=i.options.curElem&&i.options.onlastarrowclicked&&window[i.options.onlastarrowclicked]&&"function"==typeof window[i.options.onlastarrowclicked]&&window[i.options.onlastarrowclicked](),i.gotoSlide(-1)},i.prevArrowClicked=function(){i.options.prevElem>=i.options.curElem&&i.options.onfirstarrowclicked&&window[i.options.onfirstarrowclicked]&&"function"==typeof window[i.options.onfirstarrowclicked]&&window[i.options.onfirstarrowclicked](),i.gotoSlide(-2)},i.calcNextPrevElem=function(){i.options.nextElem=-1,i.options.prevElem=-1,i.options.inGroup=!1,i.options.groupIndex=0,i.options.groupCount=0;for(var t=i.elemArray[i.options.curElem][l],e=0;e<i.elemArray.length;e++)i.matchGroup(t,i.elemArray[e][l])&&(e==i.options.curElem&&(i.options.groupIndex=i.options.groupCount),i.options.groupCount++);var o,n=i.elemArray[i.options.curElem][l];if(void 0!=n&&null!=n){for(o=i.options.curElem+1;o<i.elemArray.length;o++)if(i.matchGroup(n,i.elemArray[o][l])){i.options.nextElem=o;break}if(i.options.nextElem<0)for(o=0;o<i.options.curElem;o++)if(i.matchGroup(n,i.elemArray[o][l])){i.options.nextElem=o;break}if(i.options.nextElem>=0){for(o=i.options.curElem-1;o>=0;o--)if(i.matchGroup(n,i.elemArray[o][l])){i.options.prevElem=o;break}if(i.options.prevElem<0)for(o=i.elemArray.length-1;o>i.options.curElem;o--)if(i.matchGroup(n,i.elemArray[o][l])){i.options.prevElem=o;break}}}(i.options.nextElem>=0||i.options.prevElem>=0)&&(i.options.inGroup=!0)},i.calcBoxPosition=function(e,o){var n=e+2*i.options.bordersize,r=o+2*i.options.bordersize,s=window.innerHeight?window.innerHeight:t(window).height(),a=Math.round((s-i.options.navheight)/2-r/2);"bottom"==i.options.titlestyle&&(a-=Math.round(i.options.barheight/2));var l=t(window).width()<i.options.navarrowsbottomscreenwidth?i.options.bordertopmarginsmall:i.options.bordertopmargin;if(l>a&&(a=l),window.self!=window.top&&parent.window.jQuery&&parent.window.jQuery("#"+i.options.iframeid).length){var c=parent.window.jQuery("#"+i.options.iframeid).offset().top,u=parent.window.document.body.scrollTop;a=l,a+=u>c?u-c:0}return[n,r,a]},i.hideNavArrows=function(){var t=!1,e=!1;i.options.inGroup&&((i.options.arrowloop||!i.options.arrowloop&&i.options.prevElem<i.options.curElem)&&(t=!0),(i.options.arrowloop||!i.options.arrowloop&&i.options.prevElem<i.options.curElem)&&(e=!0)),t?(i.$prev.removeClass("html5-hide"),i.$prevbottom&&i.$prevbottom.removeClass("html5-hide"),i.$prevtouch&&i.$prevtouch.removeClass("html5-hide")):(i.$prev.addClass("html5-hide"),i.$prevbottom&&i.$prevbottom.addClass("html5-hide"),i.$prevtouch&&i.$prevtouch.addClass("html5-hide")),e?(i.$next.removeClass("html5-hide"),i.$nextbottom&&i.$nextbottom.removeClass("html5-hide"),i.$nexttouch&&i.$nexttouch.removeClass("html5-hide")):(i.$next.addClass("html5-hide"),i.$nextbottom&&i.$nextbottom.addClass("html5-hide"),i.$nexttouch&&i.$nexttouch.addClass("html5-hide"))},i.clickHandler=function(){var e=t(this),o={};if(t.each(e.data(),function(t,e){o[t.toLowerCase()]=e}),i.options=t.extend(i.options,i.defaultoptions,o),i.init(),i.elemArray.length<=0)return!0;i.hideObjects();for(var n=0;n<i.elemArray.length&&i.elemArray[n][s]!=e.attr("href");n++);if(n==i.elemArray.length)return!0;i.options.curElem=n,i.calcNextPrevElem(),i.reset(),i.$lightbox.show(),i.options.supportCSSPositionFixed||i.$lightbox.css("top",t(window).scrollTop());var r=i.calcBoxPosition(i.options.loadingwidth,i.options.loadingheight),a=r[0],l=r[1],c=r[2];return i.options.iequirksmode?i.$lightboxBox.css({top:c}):i.$lightboxBox.css({"margin-top":c}),"left"==i.options.titlestyle||"right"==i.options.titlestyle?i.$lightboxBox.css({width:a,height:l}):(i.$lightboxBox.css({width:a,height:"auto"}),i.$elemWrap.css({width:a,height:l})),i.loadCurElem(),!1},i.loadThumbnail=function(e,o){var n=new Image;t(n).load(function(){var n;n=this.width/this.height<=i.options.thumbwidth/i.options.thumbheight?"width:100%;":"height:100%;",t(".html5-nav-thumb").eq(o).html("<img style='"+n+"' src='"+e+"' />")}),n.src=e},i.matchGroup=function(e,i){if(!e||!i)return!1;var o=e.split(":"),n=i.split(":"),r=!1;for(var s in o)if(t.inArray(o[s],n)>-1){r=!0;break}return r},i.showNavigation=function(){if(i.options.shownavigation&&i.currentElem&&i.currentElem[l]){var e,o=!1,n=i.currentElem[l];for(e=0;e<i.elemArray.length;e++)if(i.matchGroup(n,i.elemArray[e][l])&&i.elemArray[e][p]&&i.elemArray[e][p].length>0){o=!0;break}if(o&&(i.options.navheight=i.options.thumbheight+i.options.thumbtopmargin+i.options.thumbbottommargin,!(t(".html5-nav").length>0))){t("body").append("<div class='html5-nav' style='display:block;position:fixed;bottom:0;left:0;width:100%;height:"+i.options.navheight+"px;z-index:9999999;'><div class='html5-nav-container' style='position:relative;margin:"+i.options.thumbtopmargin+"px auto "+i.options.thumbbottommargin+"px;'><div class='html5-nav-prev' style='display:block;position:absolute;cursor:pointer;width:"+i.options.navbuttonwidth+'px;height:100%;left:0;top:0;background:url("'+i.options.skinsfolder+i.options.navarrowsprevimage+"\") no-repeat left center;'></div><div class='html5-nav-mask' style='display:block;position:relative;margin:0 auto;overflow:hidden;'><div class='html5-nav-list'></div></div><div class='html5-nav-next' style='display:block;position:absolute;cursor:pointer;width:"+i.options.navbuttonwidth+'px;height:100%;right:0;top:0;background:url("'+i.options.skinsfolder+i.options.navarrowsnextimage+"\") no-repeat right center;'></div></div></div>");var r=0;for(e=0;e<i.elemArray.length;e++)i.matchGroup(n,i.elemArray[e][l])&&i.elemArray[e][p]&&i.elemArray[e][p].length>0&&(t(".html5-nav-list").append("<div class='html5-nav-thumb' data-arrayindex='"+e+"' style='float:left;overflow:hidden;cursor:pointer;opacity:"+i.options.thumbopacity+";margin: 0 "+i.options.thumbgap/2+"px;width:"+i.options.thumbwidth+"px;height:"+i.options.thumbheight+"px;border:"+i.options.thumbborder+"px solid "+i.options.thumbbordercolor+";'></div>"),this.loadThumbnail(i.elemArray[e][p],r),r++);t(".html5-nav-thumb").hover(function(){t(this).css({opacity:1}),t(this).css({border:i.options.thumbborder+"px solid "+i.options.thumbhighlightbordercolor})},function(){t(this).css({opacity:i.options.thumbopacity}),t(this).css({border:i.options.thumbborder+"px solid "+i.options.thumbbordercolor})}),t(".html5-nav-thumb").click(function(){var e=t(this).data("arrayindex");e>=0&&i.gotoSlide(e)}),i.options.totalwidth=r*(i.options.thumbgap+i.options.thumbwidth+2*i.options.thumbborder),t(".html5-nav-list").css({display:"block",position:"relative","margin-left":0,width:i.options.totalwidth+"px"}).append("<div style='clear:both;'></div>");var s=t(".html5-nav-mask"),a=t(".html5-nav-prev"),c=t(".html5-nav-next");a.click(function(){var e=t(".html5-nav-list"),o=t(".html5-nav-next"),n=t(window).width(),r=n-2*i.options.navbuttonwidth,s=parseInt(e.css("margin-left"))+r;s>=0?(s=0,t(this).css({"background-position":"center left"})):t(this).css({"background-position":"center right"}),s<=r-i.options.totalwidth?o.css({"background-position":"center left"}):o.css({"background-position":"center right"}),e.animate({"margin-left":s})}),c.click(function(){var e=t(".html5-nav-list"),o=t(".html5-nav-prev"),n=t(window).width(),r=n-2*i.options.navbuttonwidth,s=parseInt(e.css("margin-left"))-r;s<=r-i.options.totalwidth?(s=r-i.options.totalwidth,t(this).css({"background-position":"center left"})):t(this).css({"background-position":"center right"}),s>=0?o.css({"background-position":"center left"}):o.css({"background-position":"center right"}),e.animate({"margin-left":s})});var u=t(window).width();i.options.totalwidth<=u?(s.css({width:i.options.totalwidth+"px"}),a.hide(),c.hide()):(s.css({width:u-2*i.options.navbuttonwidth+"px"}),a.show(),c.show())}}},i.loadElem=function(e){switch(i.currentElem=e,i.showing=!0,i.showNavigation(),i.$elem.unbind("mouseenter").unbind("mouseleave").unbind("mousemove"),i.$loading.show(),i.options.onshowitem&&window[i.options.onshowitem]&&"function"==typeof window[i.options.onshowitem]&&window[i.options.onshowitem](e),
e[r]){case 0:var o=new Image;t(o).load(function(){i.showImage(e,o.width,o.height)}),t(o).error(function(){i.showError()}),o.src=e[s];break;case 1:i.showSWF(e);break;case 2:case 8:i.showVideo(e);break;case 3:case 4:case 9:i.showYoutubeVimeo(e);break;case 5:i.showPDF(e);break;case 6:i.showMP3(e);break;case 7:i.showWeb(e);break;case 10:i.showDiv(e)}i.options.googleanalyticsaccount&&window._gaq&&window._gaq.push(["_trackEvent","Lightbox","Open",e[s]])},i.loadCurElem=function(){i.loadElem(i.elemArray[i.options.curElem])},i.showError=function(){i.$loading.hide(),i.resizeLightbox(i.options.errorwidth,i.options.errorheight,!0,function(){i.$error.show(),i.$elem.fadeIn(i.options.fadespeed,function(){i.showData()})})},i.calcTextWidth=function(t){return t-36},i.showTitle=function(e,o,n){"inside"==i.options.titlestyle&&i.$elemData.css({width:e+"px"});var r="";i.options.showtitle&&o&&o.length>0&&(r+=o),i.options.inGroup&&(i.options.showtitleprefix&&(r=i.options.titleprefix.replace("%NUM",i.options.groupIndex+1).replace("%TOTAL",i.options.groupCount)+" "+r),i.options.showplaybutton&&(r="<div id='html5-playpause' style='display:inline-block;cursor:pointer;vertical-align:middle;'><div id='html5-play' style='display:block;'><img src='"+i.options.skinsfolder+i.options.playimage+"'></div><div id='html5-pause' style='display:none;'><img src='"+i.options.skinsfolder+i.options.pauseimage+"'></div></div> "+r)),i.options.showdescription&&n&&n.length>0&&(r+='<p class="html5-description">'+n+"</p>"),i.$text.html(r),i.options.inGroup&&i.options.showplaybutton&&(i.autosliding?(t("#html5-play",i.$lightbox).hide(),t("#html5-pause",i.$lightbox).show()):(t("#html5-play",i.$lightbox).show(),t("#html5-pause",i.$lightbox).hide()),t("#html5-play",i.$lightbox).click(function(){t("#html5-play",i.$lightbox).hide(),t("#html5-pause",i.$lightbox).show(),i.slideTimeout&&(i.slideTimeout.stop(),i.slideTimeout.start(),i.autosliding=!0)}),t("#html5-pause",i.$lightbox).click(function(){t("#html5-play",i.$lightbox).show(),t("#html5-pause",i.$lightbox).hide(),i.slideTimeout&&(i.slideTimeout.stop(),i.autosliding=!1)}))},i.showImage=function(t,e,o){var n,r;t[c]?n=t[c]:(n=e,t[c]=e),t[u]?r=t[u]:(r=o,t[u]=o);var l=i.calcElemSize({w:n,h:r},!0);i.resizeLightbox(l.w,l.h,!0,function(){i.showTitle(l.w,t[a],t[f]);var e=i.options.showtimer&&i.options.inGroup?"<div id='html5-timer' style='display:none;position:absolute;"+i.options.timerposition+":0;left:0;width:0;height:"+i.options.timerheight+"px;background-color:"+i.options.timercolor+";opacity:"+i.options.timeropacity+";'></div>":"";i.$image.show(),i.$image.html("<div id='html5-image-container' style='display:block;position:relative;width:100%;height:100%;'><img src='"+t[s]+"' width='100%' height='100%' />"+e+"</div>"),i.$elem.fadeIn(i.options.fadespeed,function(){i.showData()}),i.autosliding&&(i.slideTimeout.stop(),i.slideTimeout.start())})},i.showSWF=function(e){var r=e[c]?e[c]:o,l=e[u]?e[u]:n,h=i.calcElemSize({w:r,h:l},!0);r=h.w,l=h.h,i.resizeLightbox(r,l,!0,function(){i.showTitle(h.w,e[a],e[f]),i.$image.html("<div id='html5lightbox-swf' style='display:block;width:100%;height:100%;'></div>").show(),i.embedFlash(t("#html5lightbox-swf"),e[s],"window",{width:r,height:l}),i.$elem.show(),i.showData(),i.autosliding&&(i.slideTimeout.stop(),i.slideTimeout.start())})},i.showVideo=function(e){i.slideTimeout.stop();var l=e[c]?e[c]:o,p=e[u]?e[u]:n,m=i.calcElemSize({w:l,h:p},!0);l=m.w,p=m.h,i.resizeLightbox(l,p,!0,function(){i.showTitle(m.w,e[a],e[f]),i.$image.html("<div id='html5lightbox-video' style='display:block;width:100%;height:100%;background-color:"+i.options.videobgcolor+";'></div>").show();var o=!1;if(i.options.isIE678||8==e[r]||i.options.isIE9&&i.options.useflashonie9||i.options.isIE10&&i.options.useflashonie10||i.options.isIE11&&i.options.useflashonie11?o=!1:i.options.isMobile?o=!0:!i.options.html5player&&i.options.flashInstalled||!i.options.html5VideoSupported||(!i.options.isFirefox&&!i.options.isOpera||(i.options.isFirefox||i.options.isOpera)&&(e[d]||e[h]))&&(o=!0),o){var n=e[s];(i.options.isFirefox||i.options.isOpera||!n)&&(n=e[h]?e[h]:e[d]),i.embedHTML5Video(t("#html5lightbox-video"),n,i.options.autoplay)}else{var c=e[s];"/"!=c.charAt(0)&&"http:"!=c.substring(0,5)&&"https:"!=c.substring(0,6)&&(c=i.options.htmlfolder+c),i.embedFlash(t("#html5lightbox-video"),i.options.jsfolder+"html5boxplayer.swf","transparent",{width:l,height:p,jsobjectname:"html5Lightbox",hidecontrols:i.options.videohidecontrols?"1":"0",hideplaybutton:"0",videofile:c,hdfile:"",ishd:"0",defaultvolume:i.options.defaultvideovolume,autoplay:i.options.autoplay?"1":"0",errorcss:".html5box-error"+i.options.errorcss,id:0})}i.$elem.show(),i.showData()})},i.loadNext=function(){t(window).trigger("html5lightbox.videofinished"),i.autosliding&&i.gotoSlide(-1)},i.getYoutubeParams=function(t){var e={};if(t.indexOf("?")<0)return e;for(var i=t.substring(t.indexOf("?")+1).split("&"),o=0;o<i.length;o++){var n=i[o].split("=");n&&2==n.length&&"v"!=n[0].toLowerCase()&&(e[n[0].toLowerCase()]=n[1])}return e},i.prepareYoutubeHref=function(t){var e="",i=/^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\??v?=?))([^#\&\?]*).*/,o=t.match(i);o&&o[7]&&11==o[7].length&&(e=o[7]);var n="https:"==window.location.protocol?"https:":"http:",r=n+"//www.youtube.com/embed/"+e,s=this.getYoutubeParams(t),a=!0;for(var l in s)a?(r+="?",a=!1):r+="&",r+=l+"="+s[l];return r},i.prepareDailymotionHref=function(t){if(t.match(/\:\/\/.*(dai\.ly)/i)){var e="https:"==window.location.protocol?"https:":"http:",i=t.match(/(dai\.ly\/)([a-zA-Z0-9\-\_]+)/)[2];t=e+"//www.dailymotion.com/embed/video/"+i}return t},i.showYoutubeVimeo=function(e){i.slideTimeout.stop();var l=e[c]?e[c]:o,h=e[u]?e[u]:n,d=i.calcElemSize({w:l,h:h},!0);l=d.w,h=d.h,i.resizeLightbox(l,h,!0,function(){i.showTitle(d.w,e[a],e[f]),i.$image.html("<div id='html5lightbox-video' style='display:block;width:100%;height:100%;'></div>").show();var o=e[s];if(3==e[r]&&(o=i.prepareYoutubeHref(o)),9==e[r]&&(o=i.prepareDailymotionHref(o)),i.options.autoplay&&(o+=o.indexOf("?")<0?"?autoplay=1":"&autoplay=1"),3==e[r]?(o+=o.indexOf("?")<0?"?wmode=transparent&rel=0":"&wmode=transparent&rel=0",i.options.videohidecontrols&&(o+="&controls=0&showinfo=0"),o+="&enablejsapi=1&origin="+document.location.protocol+"//"+document.location.hostname):4==e[r]&&(o+=o.indexOf("?")<0?"?":"&",o+="api=1&player_id=html5boxiframevideo"),t("#html5lightbox-video").html("<iframe id='html5boxiframevideo' width='100%' height='100%' src='"+o+"' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>"),i.$elem.show(),i.showData(),3==e[r]&&"object"==typeof YT&&"function"==typeof YT.Player)new YT.Player("html5boxiframevideo",{events:{onStateChange:function(e){e.data==YT.PlayerState.ENDED&&(t(window).trigger("html5lightbox.videofinished"),i.autosliding&&i.gotoSlide(-1))}}});else if(4==e[r]&&"function"==typeof $f){var n=t("#html5boxiframevideo")[0],l=$f(n);l.addEvent("ready",function(){l.addEvent("finish",function(e){t(window).trigger("html5lightbox.videofinished"),i.autosliding&&i.gotoSlide(-1)})})}})},i.showPDF=function(t){},i.showMP3=function(t){},i.showDiv=function(e){var o=t(window).width(),n=window.innerHeight?window.innerHeight:t(window).height(),r=e[c]?e[c]:o,l=e[u]?e[u]:n-i.options.navheight,h=i.calcElemSize({w:r,h:l},!1);r=h.w,l=h.h,i.resizeLightbox(r,l,!0,function(){i.$loading.hide(),i.showTitle(h.w,e[a],e[f]),i.$image.html("<div id='html5lightbox-div' style='display:block;width:100%;height:100%;"+(i.options.isIOS?"-webkit-overflow-scrolling:touch;overflow-y:scroll;":"overflow:auto;")+"'></div>").show();var o=e[s];t(o).length>0?t("#html5lightbox-div").html(t(o).html()):t("#html5lightbox-div").html("<div class='html5-error'>The specified div ID does not exist.</div>"),i.$elem.show(),i.showData(),i.autosliding&&(i.slideTimeout.stop(),i.slideTimeout.start())})},i.showWeb=function(e){var o=t(window).width(),n=window.innerHeight?window.innerHeight:t(window).height(),r=e[c]?e[c]:o,l=e[u]?e[u]:n-i.options.navheight,h=i.calcElemSize({w:r,h:l},!1);r=h.w,l=h.h,i.resizeLightbox(r,l,!0,function(){i.$loading.hide(),i.showTitle(h.w,e[a],e[f]),i.$image.html("<div id='html5lightbox-web' style='display:block;width:100%;height:100%;"+(i.options.isIOS?"-webkit-overflow-scrolling:touch;overflow-y:scroll;":"")+"'></div>").show(),t("#html5lightbox-web").html("<iframe id='html5lightbox-web-iframe' width='100%' height='100%' src='"+e[s]+"' frameborder='0'></iframe>"),i.$elem.show(),i.showData(),i.autosliding&&(i.slideTimeout.stop(),i.slideTimeout.start())})},i.scrollBox=function(){i.options.supportCSSPositionFixed||i.$lightbox.css("top",t(window).scrollTop())},i.resizeWindow=function(){if(i.currentElem&&i.options.responsive){var e,s,a,l=t(window).width(),h=window.innerHeight?window.innerHeight:t(window).height();7==i.currentElem[r]||10==i.currentElem[r]?(e=i.currentElem[c]?i.currentElem[c]:l,s=i.currentElem[u]?i.currentElem[u]:h-i.options.navheight,a=!1):(e=i.currentElem[c]?i.currentElem[c]:o,s=i.currentElem[u]?i.currentElem[u]:n,a=!0);var d=i.calcElemSize({w:e,h:s},a),p=i.calcBoxPosition(d.w,d.h),f=p[0],m=p[1],g=p[2];if(i.$lightboxBox.css({"margin-top":g}),"left"==i.options.titlestyle||"right"==i.options.titlestyle?i.$lightboxBox.css({width:f,height:m}):(i.$lightboxBox.css({width:f,height:"auto"}),i.$elemWrap.css({width:f,height:m})),"inside"==i.options.titlestyle&&i.$elemData.css({width:d.w+"px"}),!(t(".html5-nav").length<=0)){t(".html5-nav-list").css({"margin-left":0});var v=t(".html5-nav-mask"),b=t(".html5-nav-prev"),w=t(".html5-nav-next"),l=t(window).width();i.options.totalwidth<=l?(v.css({width:i.options.totalwidth+"px"}),b.hide(),w.hide()):(v.css({width:l-2*i.options.navbuttonwidth+"px"}),b.show(),w.show())}}},i.calcElemSize=function(e,o){if(!i.options.responsive)return e;var n=t(window).width();n=n?n:t(document).width();var r=window.innerHeight?window.innerHeight:t(window).height();r=r?r:t(document).height(),("left"==i.options.titlestyle||"right"==i.options.titlestyle)&&n>i.options.sidetobottomscreenwidth&&(e.w=100*e.w/i.options.imagepercentage);var s=t(window).width()<i.options.navarrowsbottomscreenwidth?i.options.bordertopmarginsmall:i.options.bordertopmargin,a=r-i.options.navheight-2*i.options.bordersize-2*s;"bottom"==i.options.titlestyle&&(a-=i.options.barheight),("left"==i.options.titlestyle||"right"==i.options.titlestyle)&&n<=i.options.sidetobottomscreenwidth&&(o=!1),e.h>a&&(o&&(e.w=Math.round(e.w*a/e.h)),e.h=a);var l=n-2*i.options.bordersize-2*i.options.bordermargin;return(i.options.fullscreenmode&&n>i.options.navarrowsbottomscreenwidth||(i.options.isTouch&&i.options.navarrowsalwaysshowontouch||i.options.alwaysshownavarrows)&&n>i.options.navarrowsbottomscreenwidth)&&(l-=64),e.w>l&&(o&&(e.h=Math.round(e.h*l/e.w)),e.w=l),e},i.showData=function(){i.$text.text().length>0&&i.$elemData.show(),"bottom"!=i.options.titlestyle&&"inside"!=i.options.titlestyle||i.$lightboxBox.css({height:"auto"}),i.$text.text().length>0&&"bottom"==i.options.titlestyle&&i.$elemData.css({"max-height":i.options.barheight+"px"}),t("#html5-lightbox-overlay",i.$lightbox).css({height:Math.max(t(window).height(),t(document).height())}),t(window).trigger("html5lightbox.lightboxopened")},i.resizeLightbox=function(t,e,o,n){i.hideNavArrows();var r=i.calcBoxPosition(t,e),s=r[0],a=r[1],l=r[2];if(i.$loading.hide(),i.$watermark.hide(),i.options.nextElem<=i.options.curElem&&i.options.onlastitem&&window[i.options.onlastitem]&&"function"==typeof window[i.options.onlastitem]&&window[i.options.onlastitem](i.currentElem),i.options.prevElem>=i.options.curElem&&i.options.onfirstitem&&window[i.options.onfirstitem]&&"function"==typeof window[i.options.onfirstitem]&&window[i.options.onfirstitem](i.currentElem),i.options.fullscreenmode||i.options.isTouch&&i.options.navarrowsalwaysshowontouch||i.options.alwaysshownavarrows||(i.$elem.bind("mouseenter mousemove",function(){(i.options.arrowloop&&i.options.prevElem>=0||!i.options.arrowloop&&i.options.prevElem>=0&&i.options.prevElem<i.options.curElem)&&i.$prev.fadeIn(),(i.options.arrowloop&&i.options.nextElem>=0||!i.options.arrowloop&&i.options.nextElem>=0&&i.options.nextElem>i.options.curElem)&&i.$next.fadeIn()}),i.$elem.bind("mouseleave",function(){i.$next.fadeOut(),i.$prev.fadeOut()})),i.$lightboxBox.css({"margin-top":l}),"left"==i.options.titlestyle||"right"==i.options.titlestyle){var c=o?i.options.resizespeed:0;s==i.$lightboxBox.width()&&a==i.$lightboxBox.height()&&(c=0),i.$lightboxBox.animate({width:s},c).animate({height:a},c,function(){i.onAnimateFinish(n)})}else{var c=o?i.options.resizespeed:0;s==i.$elemWrap.width()&&a==i.$elemWrap.height()&&(c=0),i.$lightboxBox.css({width:s,height:"auto"}),i.$elemWrap.animate({width:s},c).animate({height:a},c,function(){i.onAnimateFinish(n)})}},i.onAnimateFinish=function(t){i.$loading.show(),i.$watermark.show(),i.$close.show(),i.$elem.css({"background-color":i.options.bgcolor}),t()},i.reset=function(){i.options.stamp&&i.$watermark.hide(),i.showing=!1,i.$image.empty(),i.$text.empty(),i.$error.hide(),i.$loading.hide(),i.$image.hide(),"bottom"!=i.options.titlestyle&&"inside"!=i.options.titlestyle||i.$elemData.hide(),i.options.fullscreenmode||i.$close.hide(),i.$elem.css({"background-color":""})},i.resetNavigation=function(){i.options.navheight=0,t(".html5-nav").remove()},i.finish=function(){t("#html5-lightbox-video",i.$lightbox).length&&t("#html5-lightbox-video",i.$lightbox).attr("src",""),t("head").find("style").each(function(){"carousel-html5-lightbox"==t(this).data("creator")&&t(this).remove()}),i.slideTimeout.stop(),i.reset(),i.resetNavigation(),i.$lightbox.remove(),i.showObjects(),i.options.oncloselightbox&&window[i.options.oncloselightbox]&&"function"==typeof window[i.options.oncloselightbox]&&window[i.options.oncloselightbox](i.currentElem),i.onLightboxClosed&&"function"==typeof i.onLightboxClosed&&i.onLightboxClosed(i.currentElem)},i.pauseSlide=function(){},i.playSlide=function(){},i.gotoSlide=function(t){if(-1==t){if(i.options.nextElem<0)return;i.options.curElem=i.options.nextElem}else if(-2==t){if(i.options.prevElem<0)return;i.options.curElem=i.options.prevElem}else t>=0&&(i.options.curElem=t);i.autosliding&&i.slideTimeout.stop(),i.calcNextPrevElem(),i.reset(),i.loadCurElem()},i.supportKeyboard=function(){t(document).keyup(function(t){i.showing&&(i.options.supportesckey&&27==t.keyCode?i.finish():i.options.supportarrowkeys&&(39==t.keyCode?i.gotoSlide(-1):37==t.keyCode&&i.gotoSlide(-2)))})},i.enableSwipe=function(){i.$elem.carouselTouchSwipe({preventWebBrowser:!1,swipeLeft:function(){i.gotoSlide(-1)},swipeRight:function(){i.gotoSlide(-2)}})},i.hideObjects=function(){t("select, embed, object").css({visibility:"hidden"})},i.showObjects=function(){t("select, embed, object").css({visibility:"visible"})},i.embedHTML5Video=function(e,o,n){e.html("<div style='display:block;width:100%;height:100%;position:relative;'><video id='html5-lightbox-video' width='100%' height='100%'"+(n?" autoplay":"")+(i.options.nativehtml5controls&&!i.options.videohidecontrols?" controls='controls'":"")+" src='"+o+"'></div>"),i.options.nativehtml5controls||(t("video",e).data("src",o),t("video",e).acHTML5VideoControls(i.options.skinsfolder,i,i.options.videohidecontrols,!1,i.options.defaultvideovolume)),t("video",e).unbind("ended").bind("ended",function(){t(window).trigger("html5lightbox.videofinished"),i.autosliding&&i.gotoSlide(-1)})},i.embedFlash=function(e,o,n,r){if(i.options.flashInstalled){var s={pluginspage:"http://www.adobe.com/go/getflashplayer",quality:"high",allowFullScreen:"true",allowScriptAccess:"always",type:"application/x-shockwave-flash"};s.width="100%",s.height="100%",s.src=o,s.flashVars=t.param(r),s.wmode=n;var a="";for(var l in s)a+=l+"="+s[l]+" ";e.html("<embed "+a+"/>")}else e.html("<div class='html5lightbox-flash-error' style='display:block; position:relative;text-align:center; width:100%; left:0px; top:40%;'><div class='html5-error'><div>The required Adobe Flash Player plugin is not installed</div><br /><div style='display:block;position:relative;text-align:center;width:112px;height:33px;margin:0px auto;'><a href='http://www.adobe.com/go/getflashplayer'><img src='http://www.adobe.com/images/shared/download_buttons/get_flash_player.gif' alt='Get Adobe Flash player' width='112' height='33'></img></a></div></div>")},i.checkType=function(t){return t?t.match(/\.(jpg|gif|png|bmp|jpeg)(.*)?$/i)?0:t.match(/[^\.]\.(swf)\s*$/i)?1:t.match(/\.(mp4|m4v|ogv|ogg|webm)(.*)?$/i)?2:t.match(/\:\/\/.*(youtube\.com)/i)||t.match(/\:\/\/.*(youtu\.be)/i)?3:t.match(/\:\/\/.*(vimeo\.com)/i)?4:t.match(/\:\/\/.*(dailymotion\.com)/i)||t.match(/\:\/\/.*(dai\.ly)/i)?9:t.match(/[^\.]\.(pdf)\s*$/i)?5:t.match(/[^\.]\.(mp3)\s*$/i)?6:t.match(/[^\.]\.(flv)\s*$/i)?8:t.match(/\#\w+/i)?10:7:-1},i.showLightbox=function(e,o,n,r,s,a,l,c,u){i.options=t.extend(i.options,i.defaultoptions),i.init(),i.reset(),i.$lightbox.show(),i.options.supportCSSPositionFixed||i.$lightbox.css("top",t(window).scrollTop());var h=i.calcBoxPosition(i.options.loadingwidth,i.options.loadingheight),d=h[0],p=h[1],f=h[2];i.$lightboxBox.css({"margin-top":f}),"left"==i.options.titlestyle||"right"==i.options.titlestyle?i.$lightboxBox.css({width:d,height:p}):(i.$lightboxBox.css({width:d,height:"auto"}),i.$elemWrap.css({width:d,height:p})),i.loadElem(new Array(e,o,n,null,r,s,a,l,c,u))},i.addItem=function(t,e,o,n,r,s,a,l,c){type=i.checkType(t),i.elemArray.push(new Array(type,t,e,o,n,r,s,a,l,c))},i.showItem=function(e){if(i.options=t.extend(i.options,i.defaultoptions),i.init(),i.elemArray.length<=0)return!0;i.hideObjects();for(var o=0;o<i.elemArray.length&&i.elemArray[o][s]!=e;o++);if(o==i.elemArray.length)return!0;i.options.curElem=o,i.calcNextPrevElem(),i.reset(),i.$lightbox.show(),i.options.supportCSSPositionFixed||i.$lightbox.css("top",t(window).scrollTop());var n=i.calcBoxPosition(i.options.loadingwidth,i.options.loadingheight),r=n[0],a=n[1],l=n[2];return i.$lightboxBox.css({"margin-top":l}),"left"==i.options.titlestyle||"right"==i.options.titlestyle?i.$lightboxBox.css({width:r,height:a}):(i.$lightboxBox.css({width:r,height:"auto"}),i.$elemWrap.css({width:r,height:a})),i.loadCurElem(),!1},i.unbind("click").click(i.clickHandler)}}(jQuery),function(t){t.fn.acHTML5VideoControls=function(e,i,o,n,r){var s="ontouchstart"in window,a=s?"touchstart":"mousedown",l=s?"touchmove":"mousemove",c=s?"touchcancel":"mouseup",u="click",h=32,d=s?48:36,p=null,f=null,m=!1,g=!1,v=!0,b=null!=navigator.userAgent.match(/iPod/i)||null!=navigator.userAgent.match(/iPhone/i),w=t(this).data("ishd"),y=t(this).data("hd"),x=t(this).data("src"),k=t(this);if(k.get(0).removeAttribute("controls"),b){var T=k.height()-d;k.css({height:T})}var E=t("<div class='html5boxVideoPlay'></div>");b||(k.after(E),E.css({position:"absolute",top:"50%",left:"50%",display:"block",cursor:"pointer",width:64,height:64,"margin-left":-32,"margin-top":-32,"background-image":"url('"+e+"img/html5boxplayer_playvideo.png')","background-position":"center center","background-repeat":"no-repeat"}).bind(u,function(){k.get(0).play()}));var C=t("<div class='html5boxVideoFullscreenBg'></div>"),S=t("<div class='html5boxVideoControls'><div class='html5boxVideoControlsBg'></div><div class='html5boxPlayPause'><div class='html5boxPlay'></div><div class='html5boxPause'></div></div><div class='html5boxTimeCurrent'>--:--</div><div class='html5boxFullscreen'></div><div class='html5boxHD'></div><div class='html5boxVolume'><div class='html5boxVolumeButton'></div><div class='html5boxVolumeBar'><div class='html5boxVolumeBarBg'><div class='html5boxVolumeBarActive'></div></div></div></div><div class='html5boxTimeTotal'>--:--</div><div class='html5boxSeeker'><div class='html5boxSeekerBuffer'></div><div class='html5boxSeekerPlay'></div><div class='html5boxSeekerHandler'></div></div><div style='clear:both;'></div></div>");k.after(S),k.after(C),C.css({display:"none",position:"fixed",left:0,top:0,bottom:0,right:0,"z-index":2147483647}),S.css({display:"block",position:"absolute",width:"100%",height:d,left:0,bottom:0,right:0,"max-width":"640px",margin:"0 auto"});var A=function(){v=!0};k.bind(u,function(){v=!0}).hover(function(){v=!0},function(){v=!1}),o||setInterval(function(){v&&(S.show(),v=!1,clearTimeout(p),p=setTimeout(function(){k.get(0).paused||S.fadeOut()},5e3))},250),t(".html5boxVideoControlsBg",S).css({display:"block",position:"absolute",width:"100%",height:"100%",left:0,top:0,"background-color":"#000000",opacity:.7,filter:"alpha(opacity=70)"}),t(".html5boxPlayPause",S).css({display:"block",position:"relative",width:h+"px",height:h+"px",margin:Math.floor((d-h)/2),"float":"left"});var I=t(".html5boxPlay",S),z=t(".html5boxPause",S);I.css({display:"block",position:"absolute",top:0,left:0,width:h+"px",height:h+"px",cursor:"pointer","background-image":"url('"+e+"img/html5boxplayer_playpause.png')","background-position":"top left"}).hover(function(){t(this).css({"background-position":"bottom left"})},function(){t(this).css({"background-position":"top left"})}).bind(u,function(){k.get(0).play()}),z.css({display:"none",position:"absolute",top:0,left:0,width:h+"px",height:h+"px",cursor:"pointer","background-image":"url('"+e+"img/html5boxplayer_playpause.png')","background-position":"top right"}).hover(function(){t(this).css({"background-position":"bottom right"})},function(){t(this).css({"background-position":"top right"})}).bind(u,function(){k.get(0).pause()});var $=t(".html5boxTimeCurrent",S),N=t(".html5boxTimeTotal",S),L=t(".html5boxSeeker",S),j=t(".html5boxSeekerPlay",S),D=t(".html5boxSeekerBuffer",S),M=t(".html5boxSeekerHandler",S);if($.css({display:"block",position:"relative","float":"left","line-height":d+"px","font-weight":"normal","font-size":"12px",margin:"0 8px","font-family":"Arial, Helvetica, sans-serif",color:"#fff"}),N.css({display:"block",position:"relative","float":"right","line-height":d+"px","font-weight":"normal","font-size":"12px",margin:"0 8px","font-family":"Arial, Helvetica, sans-serif",color:"#fff"}),L.css({display:"block",cursor:"pointer",overflow:"hidden",position:"relative",height:"10px","background-color":"#222",margin:Math.floor((d-10)/2)+"px 4px"}).bind(a,function(t){var e=s?t.originalEvent.touches[0]:t,i=e.pageX-L.offset().left;j.css({width:i}),k.get(0).currentTime=i*k.get(0).duration/L.width(),L.bind(l,function(t){var e=s?t.originalEvent.touches[0]:t,i=e.pageX-L.offset().left;j.css({width:i}),k.get(0).currentTime=i*k.get(0).duration/L.width()})}).bind(c,function(){L.unbind(l)}),D.css({display:"block",position:"absolute",left:0,top:0,height:"100%","background-color":"#444"}),j.css({display:"block",position:"absolute",left:0,top:0,height:"100%","background-color":"#fcc500"}),!b&&(k.get(0).requestFullscreen||k.get(0).webkitRequestFullScreen||k.get(0).mozRequestFullScreen||k.get(0).webkitEnterFullScreen||k.get(0).msRequestFullscreen)){var P=function(t){t?(k.get(0).requestFullscreen?k.get(0).requestFullscreen():k.get(0).webkitRequestFullScreen?k.get(0).webkitRequestFullScreen():k.get(0).mozRequestFullScreen?k.get(0).mozRequestFullScreen():k.get(0).webkitEnterFullScreen&&k.get(0).webkitEnterFullScreen(),k.get(0).msRequestFullscreen&&k.get(0).msRequestFullscreen()):document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen?document.webkitCancelFullScreen():document.webkitExitFullscreen?document.webkitExitFullscreen():document.msExitFullscreen&&document.msExitFullscreen()},O=function(e){S.css({position:e?"fixed":"absolute"});var i=H.css("background-position")?H.css("background-position").split(" ")[1]:H.css("background-position-y");H.css({"background-position":(e?"right":"left")+" "+i}),C.css({display:e?"block":"none"}),e?(t(document).bind("mousemove",A),S.css({"z-index":2147483647})):(t(document).unbind("mousemove",A),S.css({"z-index":""}))};document.addEventListener("fullscreenchange",function(){g=document.fullscreen,O(document.fullscreen)},!1),document.addEventListener("mozfullscreenchange",function(){g=document.mozFullScreen,O(document.mozFullScreen)},!1),document.addEventListener("webkitfullscreenchange",function(){g=document.webkitIsFullScreen,O(document.webkitIsFullScreen)},!1),k.get(0).addEventListener("webkitbeginfullscreen",function(){g=!0},!1),k.get(0).addEventListener("webkitendfullscreen",function(){g=!1},!1),t("head").append("<style type='text/css'>video::-webkit-media-controls { display:none !important; }</style>");var H=t(".html5boxFullscreen",S);H.css({display:"block",position:"relative","float":"right",width:h+"px",height:h+"px",margin:Math.floor((d-h)/2),cursor:"pointer","background-image":"url('"+e+"img/html5boxplayer_fullscreen.png')","background-position":"left top"}).hover(function(){var e=t(this).css("background-position")?t(this).css("background-position").split(" ")[0]:t(this).css("background-position-x");t(this).css({"background-position":e+" bottom"})},function(){var e=t(this).css("background-position")?t(this).css("background-position").split(" ")[0]:t(this).css("background-position-x");t(this).css({"background-position":e+" top"})}).bind(u,function(){g=!g,P(g)})}if(y){var F=t(".html5boxHD",S);F.css({display:"block",position:"relative","float":"right",width:h+"px",height:h+"px",margin:Math.floor((d-h)/2),cursor:"pointer","background-image":"url('"+e+"img/html5boxplayer_hd.png')","background-position":(w?"right":"left")+" center"}).bind(u,function(){w=!w,t(this).css({"background-position":(w?"right":"left")+" center"}),i.isHd=w;var e=k.get(0).isPaused;k.get(0).setAttribute("src",(w?y:x)+"#t="+k.get(0).currentTime),e?b||k.get(0).pause():k.get(0).play()})}k.get(0).volume=r;var q=0==r?1:r,B=k.get(0).volume;if(k.get(0).volume=B/2+.1,k.get(0).volume===B/2+.1){k.get(0).volume=B;var _=t(".html5boxVolume",S),R=t(".html5boxVolumeButton",S),W=t(".html5boxVolumeBar",S),V=t(".html5boxVolumeBarBg",S),X=t(".html5boxVolumeBarActive",S);_.css({display:"block",position:"relative","float":"right",width:h+"px",height:h+"px",margin:Math.floor((d-h)/2)}).hover(function(){clearTimeout(f);var t=k.get(0).volume;X.css({height:Math.round(100*t)+"%"}),W.show()},function(){clearTimeout(f),f=setTimeout(function(){W.hide()},1e3)}),R.css({display:"block",position:"absolute",top:0,left:0,width:h+"px",height:h+"px",cursor:"pointer","background-image":"url('"+e+"html5boxplayer_volume.png')","background-position":"top "+(B>0?"left":"right")}).hover(function(){var e=t(this).css("background-position")?t(this).css("background-position").split(" ")[0]:t(this).css("background-position-x");t(this).css({"background-position":e+" bottom"})},function(){var e=t(this).css("background-position")?t(this).css("background-position").split(" ")[0]:t(this).css("background-position-x");t(this).css({"background-position":e+" top"})}).bind(u,function(){var e=k.get(0).volume;e>0?(q=e,e=0):e=q;var i=t(this).css("background-position")?t(this).css("background-position").split(" ")[1]:t(this).css("background-position-y");R.css({"background-position":(e>0?"left":"right")+" "+i}),k.get(0).volume=e,X.css({height:Math.round(100*e)+"%"})}),W.css({display:"none",position:"absolute",left:4,bottom:"100%",width:24,height:80,"margin-bottom":Math.floor((d-h)/2),"background-color":"#000000",opacity:.7,filter:"alpha(opacity=70)"}),V.css({display:"block",position:"relative",width:10,height:68,margin:7,cursor:"pointer","background-color":"#222"}),X.css({display:"block",position:"absolute",bottom:0,left:0,width:"100%",height:"100%","background-color":"#fcc500"}),V.bind(a,function(t){var e=s?t.originalEvent.touches[0]:t,i=1-(e.pageY-V.offset().top)/V.height();i=i>1?1:0>i?0:i,X.css({height:Math.round(100*i)+"%"}),R.css({"background-position":"left "+(i>0?"top":"bottom")}),k.get(0).volume=i,V.bind(l,function(t){var e=s?t.originalEvent.touches[0]:t,i=1-(e.pageY-V.offset().top)/V.height();i=i>1?1:0>i?0:i,X.css({height:Math.round(100*i)+"%"}),R.css({"background-position":"left "+(i>0?"top":"bottom")}),k.get(0).volume=i})}).bind(c,function(){V.unbind(l)})}var Q=function(t){var e=Math.floor(t/3600),i=10>e?"0"+e:e,o=Math.floor((t-3600*e)/60),n=10>o?"0"+o:o,r=Math.floor(t-(3600*e+60*o)),s=10>r?"0"+r:r,a=n+":"+s;return e>0&&(a=i+":"+a),a};n&&E.hide(),o&&S.hide();var Y=function(){n||E.hide(),o||(I.hide(),z.show())},G=function(){n||E.show(),o||(S.show(),clearTimeout(p),I.show(),z.hide())},U=function(){t(window).trigger("html5lightbox.videoended"),n||E.show(),o||(S.show(),clearTimeout(p),I.show(),z.hide())},J=function(){var t=k.get(0).currentTime;if(t){$.text(Q(t));var e=k.get(0).duration;if(e&&(N.text(Q(e)),!m)){var i=L.width(),o=Math.round(i*t/e);j.css({width:o}),M.css({left:o})}}},K=function(){if(k.get(0).buffered&&k.get(0).buffered.length>0&&!isNaN(k.get(0).buffered.end(0))&&!isNaN(k.get(0).duration)){var t=L.width();D.css({width:Math.round(t*k.get(0).buffered.end(0)/k.get(0).duration)})}};try{k.bind("play",Y),k.bind("pause",G),k.bind("ended",U),k.bind("timeupdate",J),k.bind("progress",K)}catch(Z){}}}(jQuery);var ACPlatforms={flashInstalled:function(){var t=!1;try{new ActiveXObject("ShockwaveFlash.ShockwaveFlash")&&(t=!0)}catch(e){navigator.mimeTypes["application/x-shockwave-flash"]&&(t=!0)}return t},html5VideoSupported:function(){return!!document.createElement("video").canPlayType},isChrome:function(){return null!=navigator.userAgent.match(/Chrome/i)},isFirefox:function(){return null!=navigator.userAgent.match(/Firefox/i)},isOpera:function(){return null!=navigator.userAgent.match(/Opera/i)||null!=navigator.userAgent.match(/OPR\//i)},isSafari:function(){return null!=navigator.userAgent.match(/Safari/i)},isAndroid:function(){return null!=navigator.userAgent.match(/Android/i)},isIPad:function(){return null!=navigator.userAgent.match(/iPad/i)},isIPhone:function(){return null!=navigator.userAgent.match(/iPod/i)||null!=navigator.userAgent.match(/iPhone/i)},isIOS:function(){return this.isIPad()||this.isIPhone()},isIE9:function(){return null!=navigator.userAgent.match(/MSIE/i)&&this.html5VideoSupported()&&!this.isOpera()},isIE8:function(){return null!=navigator.userAgent.match(/MSIE 8/i)&&!this.isOpera()},isIE7:function(){return null!=navigator.userAgent.match(/MSIE 7/i)&&!this.isOpera()},isIE6:function(){return null!=navigator.userAgent.match(/MSIE 6/i)&&!this.isOpera()},isIE678:function(){return this.isIE6()||this.isIE7()||this.isIE8()},isIE6789:function(){return this.isIE6()||this.isIE7()||this.isIE8()||this.isIE9()},css33dTransformSupported:function(){return!(this.isIE6()||this.isIE7()||this.isIE8()||this.isIE9()||this.isOpera())},applyBrowserStyles:function(t,e){var i={};for(var o in t)i[o]=t[o],i["-webkit-"+o]=e?"-webkit-"+t[o]:t[o],i["-moz-"+o]=e?"-moz-"+t[o]:t[o],i["-ms-"+o]=e?"-ms-"+t[o]:t[o],i["-o-"+o]=e?"-o-"+t[o]:t[o];return i}};if(function(t){t.fn.amazingcarousel=function(e){var i=5,o=6,n=7,r=8,s=9,a=10,l=function(e,i,o){this.container=e,this.options=i,this.id=o,this.transitionTimeout=null,this.arrowTimeout=null,t(".amazingcarousel-engine").css({display:"none"}),this.lightboxArray=[],this.visibleItems=this.options.visibleitems,this.itemSize=this.options.width,this.itemHeight=this.options.height,this.currentItem=0,this.elemLength=0,this.elemTotalCount=0,this.animProp={},this.transitionTimerId=null,this.transitionTiming=0,this.initData(this.init)};l.prototype={initData:function(t){this.readTags(),t(this)},readTags:function(){var e=t("li.amazingcarousel-item",this.container);this.elemLength=e.length,this.elemTotalCount=this.elemLength;var i;if(this.options.random){for(i=this.elemLength-1;i>0;i--){var o=Math.floor(Math.random()*i);e.eq(o).insertBefore(e.eq(i)),e.eq(i).insertBefore(e.eq(o))}e=t("li.amazingcarousel-item",this.container)}if(e.each(function(e){t(this).data("itemIndex",e)}),this.elemLength>1&&this.options.circular){var n=Math.min(2*this.options.visibleitems,this.elemLength);for(i=0;n>i;i++)t("ul.amazingcarousel-list",this.container).append(e.eq(i).clone(!0));this.elemTotalCount+=n}t("ul.amazingcarousel-list",this.container).append("<div style='clear:both;'></div>")},init:function(e){if(!(e.elemLength<=0)){
e.container.css({direction:"ltr"}),e.options.showcontaineroninit&&e.container.css({display:"block"}),e.isAnimating=!1,e.isPaused=!e.options.autoplay,e.tempPaused=!1,e.mousePaused=!1,e.loopCount=0,e.firstResize=!1,e.createPlayVideo(),e.createHoverOverlay(),e.createStyle(),e.createNav(),e.createArrows(),e.createBackgroundImage(),e.createItemBackgroundImage(),e.createBottomShadow(),e.createItemBottomShadow(),e.createSliderTimeout(),e.createGoogleFonts(),e.enableSwipe(),e.options.sameheight&&"horizontal"==e.options.direction&&(e.itemHeight=e.calcSameHeight());var i=t(".amazingcarousel-image",e.container).find("img");i.length?(i.one("load",function(){if(e.options.sameheight&&"horizontal"==e.options.direction)t(this).css({width:"auto",height:e.itemHeight+"px","max-width":"none","max-height":"100%","margin-top":"0px","margin-left":"0px"});else if(e.options.fixaspectratio){t(this).wrap('<div class="amazingcarousel-image-fix-wrapper" style="width:100%;height:100%;overflow:hidden;"></div>');var i=t(this).width(),o=t(this).height();if(i>0&&o&&i/o>e.options.width/e.options.height){if(t(this).css({width:"auto",height:"100%","max-width":"none","max-height":"100%","margin-top":"0px","margin-left":"0px"}),e.options.centerimage&&t(this).width()>0){var n=(t(this).closest(".amazingcarousel-image").width()-t(this).width())/2;t(this).css({"margin-left":n+"px"})}}else if(t(this).css({width:"100%",height:"auto","max-width":"100%","max-height":"none","margin-top":"0px","margin-left":"0px"}),e.options.centerimage&&t(this).height()>0){var r=(t(this).closest(".amazingcarousel-image").height()-t(this).height())/2;t(this).css({"margin-top":r+"px"})}}e.firstResize||(e.firstResize=!0,e.resizeCarousel())}),i.each(function(){this.complete&&t(this).load()})):e.resizeCarousel(),e.options.responsive&&t(window).resize(function(){e.resizeCarousel(),e.resizeNav()}),t(window).load(function(){e.resizeCarousel(),e.resizeNav()}),e.resizeNav();var o=e.getParams(),n=0;"firstcarouselid"in o&&o.firstcarouselid>=0&&o.firstcarouselid<e.elemLength&&(n=o.firstcarouselid),e.container.trigger("amazingcarousel.switch",[-1,n]),n>0&&(e.slideRun(n),"clickcarousel"in o&&t(".amazingcarousel-item",e.container).each(function(){return t(this).data("itemIndex")==n?(t(".amazingcarousel-image img",this).click(),!1):void 0})),e.container.trigger("amazingcarousel.initsuccess"),e.isPaused||e.tempPaused||e.sliderTimeout.start()}},getParams:function(){for(var t={},e=window.location.search.substring(1).split("&"),i=0;i<e.length;i++){var o=e[i].split("=");o&&2==o.length&&(t[o[0].toLowerCase()]=unescape(o[1]))}return t},enableSwipe:function(){if(this.options.enabletouchswipe){var e=this;t(".amazingcarousel-list-container",this.container).carouselTouchSwipe({preventWebBrowser:!1,swipeLeft:function(){e.slideRun(-1)},swipeRight:function(){e.slideRun(-2)}})}},createPlayVideo:function(){if(this.options.showplayvideo){var e=this;t(".amazingcarousel-image",this.container).each(function(){var i=t(this),n=!1,l=!1,c="",u="";if(t("img",i).each(function(){if(t(this).data("video"))return c=t(this).data("video"),t(this).data("videowebm")&&(u=t(this).data("videowebm")),n=!0,!1;if("a"==t(this).parent()[0].nodeName.toLowerCase()&&t(this).parent().hasClass("html5lightbox")){var i=e.checkVideoType(t(this).parent().attr("href"));i!=s&&i!=a&&i!=o&&i!=r||(l=!0)}}),n||l){var h="center center";switch(e.options.playvideoimagepos){case"topleft":h="left top";break;case"topright":h="right top";break;case"bottomleft":h="left bottom";break;case"bottomright":h="right bottom"}var d=t('<div class="amazingcarousel-play-video" style="position:absolute;left:0;top:0;width:100%;height:100%;cursor:pointer;background-image:url(\''+e.options.playvideoimage+"');background-repeat:no-repeat;background-position:"+h+';"></div>');if(d.appendTo(i),n)d.click(function(){i.find("img").css({visibility:"hidden"}),e.playVideo(t(this),c,u),t(this).unbind("click")});else{var p=t("img",i);d.click(function(){p.click()})}}})}},playVideo:function(t,e,i){if(!(e.length<=0)){this.sliderTimeout.stop(),this.tempPaused=!0;var n=this.checkVideoType(e);n==s?this.playYoutubeVideo(e,t):n==a?this.playVimeoVideo(e,t):n==o&&this.playMp4Video(e,i,!0,t)}},playMp4Video:function(t,e,i,o){var n=!0;if(ACPlatforms.isIE6789()?n=!1:!ACPlatforms.isFirefox()&&!ACPlatforms.isOpera()||e||(n=!1),n){var r=ACPlatforms.isFirefox()||ACPlatforms.isOpera()?e:t;this.embedHTML5Video(o,r,i)}else{var s=t;"/"!=s.charAt(0)&&"http:"!=s.substring(0,5)&&"https:"!=s.substring(0,6)&&(s=this.options.htmlfolder+s),this.embedFlash(o,"100%","100%",this.options.jsfolder+"html5boxplayer.swf","transparent",{width:"100%",height:"100%",videofile:s,hdfile:"",ishd:"0",autoplay:i?"1":"0",errorcss:".amazingcarousel-error"+this.options.errorcss,id:this.id,hidecontrols:"0",hideplaybutton:"0",defaultvolume:1})}},embedHTML5Video:function(e,i,o){e.html("<div class='amazingcarousel-video-container-"+this.id+"' style='position:relative;display:block;width:100%;height:100%;'><video style='width:100%;height:100%;' controls ></div>"),t("video",e).get(0).setAttribute("src",i),o&&t("video",e).get(0).play(),this.options.nativehtml5controls||t("video",e).acHTML5VideoControls(this.options.skinsfolder,this,this.options.videohidecontrols,this.options.videohideplaybutton,this.options.defaultvideovolume)},embedFlash:function(e,i,o,n,r,s){if(ACPlatforms.flashInstalled()){var a={pluginspage:"http://www.adobe.com/go/getflashplayer",quality:"high",allowFullScreen:"true",allowScriptAccess:"always",type:"application/x-shockwave-flash"};a.width=i,a.height=o,a.src=n,a.wmode=r,a.flashVars=t.param(s);var l="";for(var c in a)l+=c+"="+a[c]+" ";e.html("<embed "+l+"/>")}else e.html("<div class='amazingcarousel-video-error' style='display:block;position:absolute;text-align:center;width:100%;height:100%;left:0px;top:0px;'><div>The required Adobe Flash Player plugin is not installed</div><br /><div style='display:block;position:relative;text-align:center;width:112px;height:33px;margin:0px auto;'><a href='http://www.adobe.com/go/getflashplayer'><img src='https://www.adobe.com/images/shared/download_buttons/get_flash_player.gif' alt='Get Adobe Flash player' width='112' height='33'></img></a></div>")},playYoutubeVideo:function(t,e){if(this.options.previewmode)return void e.html("<div class='amazingcarousel-video-error' style='display:block;position:absolute;left:0;top:0;width:100%;height:100%;color:#fff;background-color:#333;'>To view YouTube video, publish the carousel then open it in your web browser</div>");var i=t+(t.indexOf("?")<0?"?":"&")+"autoplay=1&wmode=transparent&rel=0&autohide=1";e.html("<iframe width='100%' height='100%' src='"+i+"' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>")},playVimeoVideo:function(t,e){if(this.options.previewmode)return void e.html("<div class='amazingcarousel-video-error' style='display:block;position:absolute;left:0;top:0;width:100%;height:100%;color:#fff;background-color:#333;'>To view Vimeo video, publish the carousel then open it in your web browser</div>");var i=t+(t.indexOf("?")<0?"?":"&")+"autoplay=1&api=1";e.html("<iframe width='100%' height='100%' src='"+i+"' frameborder='0' webkitAllowFullScreen mozallowfullscreen allowFullScreen></iframe>")},checkVideoType:function(t){return t?t.match(/\.(flv)(.*)?$/i)?i:t.match(/\.(mp4|m4v)(.*)?$/i)?o:t.match(/\.(ogv|ogg)(.*)?$/i)?n:t.match(/\.(webm)(.*)?$/i)?r:t.match(/\:\/\/.*(youtube\.com)/i)||t.match(/\:\/\/.*(youtu\.be)/i)?s:t.match(/\:\/\/.*(vimeo\.com)/i)?a:0:-1},createHoverOverlay:function(){var e=this;t(".amazingcarousel-image",this.container).each(function(){var i=t(this),o=!1,n=!1;if(t("img",i).each(function(){return"a"==t(this).parent()[0].nodeName.toLowerCase()&&(n=!0,t(this).parent().hasClass("html5lightbox"))?(o=!0,!1):void 0}),t(this).siblings(".amazingcarousel-hover").length>0){t(this).parent().hover(function(){t(this).find(".amazingcarousel-hover").fadeIn()},function(){t(this).find(".amazingcarousel-hover").fadeOut()});var r=t("img",i);t(this).siblings(".amazingcarousel-hover").click(function(){r.click()})}else if(e.options.showhoveroverlay&&!(e.options.hidehoveroverlayontouch&&"ontouchstart"in window)&&(o||n&&e.options.showhoveroverlayalways)){var s=t('<div class="amazingcarousel-hover-effect" style="display:none;position:absolute;left:0;top:0;width:100%;height:100%;cursor:pointer;background-image:url(\''+e.options.hoveroverlayimage+"');background-repeat:no-repeat;background-position:center center;\"></div>");s.appendTo(i);var r=t("img",i);s.click(function(){r.click()}),t(this).hover(function(){ACPlatforms.isIE678()?s.show():s.fadeIn()},function(){ACPlatforms.isIE678()?s.hide():s.fadeOut()})}if(t(this).siblings(".amazingcarousel-flip").length>0){ACPlatforms.isIE6789()&&t(this).parent().hover(function(){t(this).find(".amazingcarousel-flip").hide().insertAfter(t(this).find(".amazingcarousel-image")).fadeIn()},function(){t(this).find(".amazingcarousel-flip").fadeOut()});var r=t("img",i);t(this).siblings(".amazingcarousel-flip").click(function(){r.click()})}})},createStyle:function(){t("ul.amazingcarousel-list",this.container).wrap('<div class="amazingcarousel-list-wrapper"></div>'),t("ul.amazingcarousel-list",this.container).css({display:"block",position:"relative","list-style-type":"none","list-style-image":"none","background-image":"none","background-color":"transparent",padding:0,margin:0}),t("li.amazingcarousel-item",this.container).css({display:"block",position:"relative","background-image":"none","background-color":"transparent",margin:0,padding:0,"float":"horizontal"==this.options.direction?"left":"top"}),this.options.sameheight&&"horizontal"==this.options.direction&&(t("ul.amazingcarousel-list",this.container).css({"white-space":"nowrap"}),t("li.amazingcarousel-item",this.container).css({display:"inline-block","float":"none"}));var e=0;if(this.options.spacing>0)if("horizontal"==this.options.direction){var i=Math.min(this.options.spacing/2);e="0 "+i+"px"}else e="0 0 "+this.options.spacing+"px 0";var o={};o.position="relative",o.margin=e,t("div.amazingcarousel-item-container",this.container).css(o);var n={};n.position="relative",n.margin="0 auto",n.overflow="visible",t("div.amazingcarousel-list-container",this.container).css(n);var r={};r.overflow="hidden","vertical"==this.options.direction&&(r.height="100%"),t("div.amazingcarousel-list-wrapper",this.container).css(r)},hideVideo:function(e){var i=this,o=0;t("li.amazingcarousel-item",this.container).each(function(){(e>o||o>=e+i.visibleItems)&&t(".amazingcarousel-play-video",t(this)).empty(),o++})},calcSameHeight:function(){var e=this.options.height;if(this.options.responsive&&this.options.sameheightresponsive){var i=t(window).width();e=i<this.options.sameheightsmallscreen?this.options.sameheightsmallheight:i<this.options.sameheightmediumscreen?this.options.sameheightmediumheight:this.options.height}return e},resizeCarousel:function(){var e=this;if(this.visibleItems=this.options.visibleitems,this.itemSize=this.options.width,this.options.responsive)if("horizontal"==this.options.direction){var i;if(this.options.usescreenquery){if(i=t(".amazingcarousel-list-container",this.container).width(),i>0){var o=t(window).width();for(var n in this.options.screenquery)o<this.options.screenquery[n].screenwidth&&(this.visibleItems=this.options.screenquery[n].visibleitems);this.itemSize=Math.round(i/this.visibleItems),t(".amazingcarousel-list-wrapper",this.container).width(i)}}else i=this.container.width(),i>0&&(this.visibleItems=Math.floor(i/this.options.width),this.visibleItems<1?(this.visibleItems=1,this.itemSize=i):this.itemSize=this.options.width,t(".amazingcarousel-list-container",this.container).width(this.visibleItems*this.itemSize),t(".amazingcarousel-list-wrapper",this.container).width(this.visibleItems*this.itemSize))}else{var r=t(".amazingcarousel-list-container",this.container).width();r>0&&(this.itemSize=r,t(".amazingcarousel-list-wrapper",this.container).width(r))}if(this.options.sameheight&&"horizontal"==this.options.direction)e.itemHeight=e.calcSameHeight(),t(".amazingcarousel-image",this.container).find("img").each(function(){t(this).css({width:"auto",height:e.itemHeight+"px"})});else if(t("li.amazingcarousel-item",this.container).css({width:this.itemSize+"px"}),"vertical"==this.options.direction&&(this.itemSize=t("li.amazingcarousel-item",this.container).height()),this.options.fixaspectratio){var s=t(".amazingcarousel-image",this.container).width(),a=s*this.options.height/this.options.width;t(".amazingcarousel-image",this.container).css({height:a+"px",overflow:"hidden"}),t(".amazingcarousel-image",this.container).find("img").each(function(){var i=t(this).width(),o=t(this).height();if(i>0&&o&&i/o>e.options.width/e.options.height){if(t(this).css({width:"auto",height:"100%","max-width":"none","max-height":"100%","margin-top":"0px","margin-left":"0px"}),e.options.centerimage&&t(this).width()>0){var n=(t(this).closest(".amazingcarousel-image").width()-t(this).width())/2;t(this).css({"margin-left":n+"px"})}}else if(t(this).css({width:"100%",height:"auto","max-width":"100%","max-height":"none","margin-top":"0px","margin-left":"0px"}),e.options.centerimage&&t(this).height()>0){var r=(t(this).closest(".amazingcarousel-image").height()-t(this).height())/2;t(this).css({"margin-top":r+"px"})}})}"horizontal"==this.options.direction?this.options.sameheight?t("ul.amazingcarousel-list",this.container).css({width:"auto"}):t("ul.amazingcarousel-list",this.container).css("width",this.itemSize*(this.options.circular?this.elemTotalCount:this.elemLength)+"px"):t("ul.amazingcarousel-list",this.container).css("height",this.options.height*(this.options.circular?this.elemTotalCount:this.elemLength)+"px");var l="horizontal"==this.options.direction?"margin-left":"margin-top",c="horizontal"==this.options.direction?this.itemSize:this.options.height,u=-c*this.currentItem;if(t("ul.amazingcarousel-list",this.container).css(l,u+"px"),"vertical"==this.options.direction){var h=this.options.height;if(this.options.fixaspectratio)t(".amazingcarousel-item",this.container).height()>0&&(h=t(".amazingcarousel-item",this.container).height());else{var d=t(".amazingcarousel-item",this.container).height();if(d>0){var p=!0;t(".amazingcarousel-item",this.container).each(function(){return t(this).height()!=d?(p=!1,!1):void 0}),p&&(h=d)}}t("div.amazingcarousel-list-container",this.container).css({height:String(h*this.visibleItems+this.options.spacing*(this.visibleItems-1))+"px"})}this.hideVideo(this.currentItem),this.hideArrows(),this.container.css({display:"block"})},createGoogleFonts:function(){if(!this.options.previewmode&&this.options.addgooglefonts&&this.options.googlefonts&&this.options.googlefonts.length>0){var t="https:"==window.location.protocol?"https:":"http:",e=t+"//fonts.googleapis.com/css?family="+this.options.googlefonts,i=document.createElement("link");i.setAttribute("rel","stylesheet"),i.setAttribute("type","text/css"),i.setAttribute("href",e),document.getElementsByTagName("head")[0].appendChild(i)}},createWatermark:function(){if(this.options.showwatermark&&!("text"==this.options.watermarkstyle&&this.options.watermarktext.length<=0||"image"==this.options.watermarkstyle&&this.options.watermarkimage.length<=0)){var e="<div style='"+this.options.watermarkpositioncss;"text"==this.options.watermarkstyle&&(e+=this.options.watermarktextcss),this.options.watermarklink&&(e+="cursor:pointer;"),e+="'>",this.options.watermarklink&&(e+="<a href='"+this.options.watermarklink+"' style='"+this.options.watermarklinkcss+"'",this.options.watermarktarget&&(e+=" target='"+this.options.watermarktarget+"'"),e+=">"),"text"==this.options.watermarkstyle?e+=this.options.watermarktext:"image"==this.options.watermarkstyle&&(e+="<img src='"+this.options.skinsfolder+this.options.watermarkimage+"' style='border:none;' />"),this.options.watermarklink&&(e+="</a>"),e+="</div>";for(var i=0;i<t(".amazingcarousel-image",this.container).length;i++)"AMCom"!=this.options.versionmark&&i%2!=0||t(".amazingcarousel-image",this.container).eq(i).append(t(e))}},createSliderTimeout:function(){var e=this;this.sliderTimeout=new ASTimer(this.options.interval,function(){e.slideRun(-1)},null),e.options.pauseonmouseover&&this.container.hover(function(){e.mousePaused=!0,e.isPaused||e.sliderTimeout.pause(),e.options.continuous&&(t("ul.amazingcarousel-list",e.container).stop(),clearInterval(e.transitionTimerId),e.transitionTimerId=null)},function(){e.mousePaused=!1,e.isPaused||e.sliderTimeout.resume(),e.options.continuous&&(t("ul.amazingcarousel-list",e.container).animate(e.animProp,e.transitionTiming,e.options.transitioneasing,function(){e.animationDone()}),e.transitionTimerId=setInterval(function(){e.transitionTiming-=100},100))})},createItemBottomShadow:function(){if(this.options.showitembottomshadow){var e=(100-this.options.itembottomshadowimagewidth)/2,i="<div class='amazingcarousel-item-bottom-shadow' style='display:block;position:absolute;left:"+e+"%;top:"+this.options.itembottomshadowimagetop+"%;width:"+this.options.itembottomshadowimagewidth+"%;height:auto;'><img src='"+this.options.skinsfolder+this.options.itembottomshadowimage+"' style='display:block;position:relative;width:100%;height:auto;border:0;box-shadow:none;-moz-box-shadow:none;-webkit-box-shadow:none;border-radius:0;-moz-border-radius:0;-webkit-border-radius:0;' /></div>";t("li.amazingcarousel-item",this.container).prepend(i)}},createBottomShadow:function(){if(this.options.showbottomshadow){var e=(100-this.options.bottomshadowimagewidth)/2,i="<div class='amazingcarousel-bottom-shadow' style='display:block;position:absolute;left:"+e+"%;top:"+this.options.bottomshadowimagetop+"%;width:"+this.options.bottomshadowimagewidth+"%;height:auto;'><img src='"+this.options.skinsfolder+this.options.bottomshadowimage+"' style='display:block;position:relative;width:100%;height:auto;border:0;box-shadow:none;-moz-box-shadow:none;-webkit-box-shadow:none;border-radius:0;-moz-border-radius:0;-webkit-border-radius:0;' /></div>";t(".amazingcarousel-list-container",this.container).prepend(i)}},createItemBackgroundImage:function(){if(this.options.showitembackgroundimage&&this.options.itembackgroundimage){var e=(100-this.options.itembackgroundimagewidth)/2,i="<div class='amazingcarousel-background-image' style='display:block;position:absolute;left:"+e+"%;top:"+this.options.itembackgroundimagetop+"%;width:"+this.options.itembackgroundimagewidth+"%;height:auto;'><img src='"+this.options.skinsfolder+this.options.itembackgroundimage+"' style='display:block;position:relative;width:100%;height:auto;border:0;box-shadow:none;-moz-box-shadow:none;-webkit-box-shadow:none;border-radius:0;-moz-border-radius:0;-webkit-border-radius:0;' /></div>";t("li.amazingcarousel-item",this.container).prepend(i)}},createBackgroundImage:function(){if(this.options.showbackgroundimage&&this.options.backgroundimage){var t=(100-this.options.backgroundimagewidth)/2,e="<div class='amazingcarousel-background-image' style='display:block;position:absolute;left:"+t+"%;top:"+this.options.backgroundimagetop+"%;width:"+this.options.backgroundimagewidth+"%;height:auto;'><img src='"+this.options.skinsfolder+this.options.backgroundimage+"' style='display:block;position:relative;width:100%;height:auto;border:0;box-shadow:none;-moz-box-shadow:none;-webkit-box-shadow:none;border-radius:0;-moz-border-radius:0;-webkit-border-radius:0;' /></div>";this.container.prepend(e)}},createArrows:function(){if("none"!=this.options.arrowstyle){var e=this,i=t(".amazingcarousel-prev",this.container),o=t(".amazingcarousel-next",this.container);i.css({overflow:"hidden",position:"absolute",cursor:"pointer",width:this.options.arrowwidth+"px",height:this.options.arrowheight+"px",background:"url('"+this.options.arrowimage+"') no-repeat left top"}),ACPlatforms.isIE678()&&i.css({opacity:"inherit",filter:"inherit"}),o.css({overflow:"hidden",position:"absolute",cursor:"pointer",width:this.options.arrowwidth+"px",height:this.options.arrowheight+"px",background:"url('"+this.options.arrowimage+"') no-repeat right top"}),ACPlatforms.isIE678()&&o.css({opacity:"inherit",filter:"inherit"}),i.hover(function(){t(this).css({"background-position":"left bottom"})},function(){t(this).css({"background-position":"left top"})}),o.hover(function(){t(this).css({"background-position":"right bottom"})},function(){t(this).css({"background-position":"right top"})}),"always"==this.options.arrowstyle?(i.css({display:"block"}),o.css({display:"block"})):(i.css({display:"none"}),o.css({display:"none"}),this.container.hover(function(){clearTimeout(e.arrowTimeout),(e.options.circular||e.currentItem>0)&&(ACPlatforms.isIE678()?i.show():i.fadeIn()),(e.options.circular||e.currentItem<e.elemLength-e.visibleItems)&&(ACPlatforms.isIE678()?o.show():o.fadeIn())},function(){e.arrowTimeout=setTimeout(function(){ACPlatforms.isIE678()?(i.hide(),o.hide()):(i.fadeOut(),o.fadeOut())},e.options.arrowhideonmouseleave)})),i.click(function(){e.slideRun(-2)}),o.click(function(){e.slideRun(-1)})}},hideArrows:function(){var e=t(".amazingcarousel-prev",this.container),i=t(".amazingcarousel-next",this.container);!this.options.circular&&this.currentItem<=0?e.hide():"always"==this.options.arrowstyle&&e.show(),!this.options.circular&&this.currentItem>=this.elemLength-this.visibleItems?i.hide():"always"==this.options.arrowstyle&&i.show()},createNav:function(){if("none"!=this.options.navstyle){var e=t(".amazingcarousel-nav",this.container),i=t("<div class='amazingcarousel-bullet-wrapper'></div>");i.appendTo(e);var o=t("<div class='amazingcarousel-bullet-list'></div>");o.appendTo(i);var n="vertical"==this.options.navdirection?this.options.navwidth:this.options.navheight,r=this.elemLength*n+(this.elemLength-1)*this.options.navspacing;"vertical"==this.options.navdirection?(i.css({height:r+"px",width:"auto"}),o.css({height:r+"px",width:"auto"})):(i.css({width:r+"px",height:"auto"}),o.css({width:r+"px",height:"auto"}));for(var s,a=0;a<this.elemLength;a++)s=this.createNavBullet(a),o.append(s);var l=this;this.container.bind("amazingcarousel.switch",function(e,i,o){for(var n=0;n<l.elemLength;n++)t(".amazingcarousel-bullet-"+n,l.container)["bulletNormal"+l.id]();o>=0&&("page"==l.options.navmode&&(o=Math.floor(o/l.visibleItems)),t(".amazingcarousel-bullet-"+o,l.container)["bulletSelected"+l.id]())})}},createNavBullet:function(e){var i="vertical"==this.options.navdirection?"top":"left",o="vertical"==this.options.navdirection?"bottom":"right",n=e==this.elemLength-1?0:this.options.navspacing,r=this.options.navwidth,s=this.options.navheight,a=t("<div class='amazingcarousel-bullet-"+e+"' style='position:relative;float:"+i+";margin-"+o+":"+n+"px;width:"+r+"px;height:"+s+"px;cursor:pointer;'></div>");a.data("index",e);var l=this;return a.hover(function(){var e=t(this).data("index");e!=l.currentItem&&t(this)["bulletHighlight"+l.id](),l.options.navswitchonmouseover&&("page"==l.options.navmode&&(e=l.visibleItems*e),l.slideRun(e))},function(){var e=l.currentItem;"page"==l.options.navmode&&(e=Math.floor(e/l.visibleItems)),t(this).data("index")!=e&&t(this)["bulletNormal"+l.id]()}),a.click(function(){var e=t(this).data("index");"page"==l.options.navmode&&(e=l.visibleItems*e),l.slideRun(e)}),a.css({background:"url('"+this.options.navimage+"') no-repeat left top"}),t.fn["bulletNormal"+this.id]=function(){t(this).css({"background-position":"left top"})},t.fn["bulletHighlight"+this.id]=t.fn["bulletSelected"+this.id]=function(){t(this).css({"background-position":"left bottom"})},a},resizeNav:function(){if("none"!=this.options.navstyle&&"item"!=this.options.navmode){var e,i=Math.ceil(this.elemLength/this.visibleItems);for(e=0;i>e;e++)t(".amazingcarousel-bullet-"+e,this.container).css({display:"block"});for(e=i;e<this.elemLength;e++)t(".amazingcarousel-bullet-"+e,this.container).css({display:"none"});var o=Math.floor(this.currentItem/this.visibleItems);for(e=0;e<this.elemLength;e++)t(".amazingcarousel-bullet-"+e,this.container)["bulletNormal"+this.id];t(".amazingcarousel-bullet-"+o,this.container)["bulletHighlight"+this.id];var n="vertical"==this.options.navdirection?this.options.navwidth:this.options.navheight,r=i*n+(i-1)*this.options.navspacing;"vertical"==this.options.navdirection?t(".amazingcarousel-bullet-wrapper",this.container).css({height:r+"px",width:"auto"}):t(".amazingcarousel-bullet-wrapper",this.container).css({width:r+"px",height:"auto"})}},animationDone:function(){clearInterval(this.transitionTimerId),this.transitionTimerId=null,this.transitionTiming=0,this.isAnimating=!1,this.options.loop>0&&this.currentItem+this.visibleItems>=this.elemLength&&(this.loopCount++,this.options.loop<=this.loopCount&&(this.isPaused=!0)),this.isPaused||this.tempPaused||this.mousePaused?this.sliderTimeout.stop():this.sliderTimeout.start()},slideRun:function(e){if(!this.isAnimating&&!(e==this.currentItem||-2>e||e>=this.elemLength)){var i;e>=0?i=1:(i=this.visibleItems,"item"==this.options.scrollmode&&i>this.options.scrollitems&&(i=this.options.scrollitems));var o,n;if(-2==e?(n=-1,o=this.currentItem-i):-1==e?(n=1,o=this.currentItem+i):(n=e>this.currentItem?1:-1,o=e),0>n?0>o&&(o=this.options.circular?this.elemLength+o:0):this.options.circular?o>=this.elemLength&&(o-=this.elemLength):o>this.elemLength-this.visibleItems&&(o=this.elemLength-this.visibleItems),o!=this.currentItem){this.isAnimating=!0,this.sliderTimeout.stop(),this.tempPaused=!1;var r="horizontal"==this.options.direction?"margin-left":"margin-top",s=this.itemSize;if("vertical"==this.options.direction&&(s+=this.options.spacing),this.options.sameheight&&this.options.continuous&&"horizontal"==this.options.direction){var a=0;t("li.amazingcarousel-item",this.container).each(function(){a+=t(this).outerWidth(!0)}),a>0&&t("li.amazingcarousel-item",this.container).length>0&&(s=a/t("li.amazingcarousel-item",this.container).length)}else if("vertical"==this.options.direction){s=this.options.height+this.options.spacing;var l=0,c=this;t("li.amazingcarousel-item",this.container).each(function(){l+=t(this).height()+c.options.spacing}),l>0&&t("li.amazingcarousel-item",this.container).length>0&&(s=l/t("li.amazingcarousel-item",this.container).length)}var u=s*this.currentItem,h=s*o,d=o;this.options.circular&&(0>n?o>this.currentItem&&(u=s*(this.elemLength+this.currentItem)):o>this.elemLength-i&&this.elemLength<2*i?u=s*(o-i):o<this.currentItem&&(h=s*(this.elemLength+o),d=this.elemLength+o)),u=-u,h=-h,t("ul.amazingcarousel-list",this.container).css(r,u+"px"),this.animProp={},this.animProp[r]=h+"px";var p=this.currentItem;this.currentItem=o,this.container.trigger("amazingcarousel.switch",[p,o]),this.hideVideo(d),this.hideArrows();var c=this;t("ul.amazingcarousel-list",this.container).animate(this.animProp,this.options.transitionduration,this.options.transitioneasing,function(){c.animationDone()}),this.options.continuous&&(this.transitionTimerId&&(clearInterval(this.transitionTimerId),this.transitionTimerId=null),this.transitionTiming=this.options.transitionduration,this.transitionTimerId=setInterval(function(){c.transitionTiming-=100},100))}}}},e=e||{};for(var c in e)c.toLowerCase()!==c&&(e[c.toLowerCase()]=e[c],delete e[c]);this.each(function(){this.options=t.extend({},e),t(this).data("skin")&&"undefined"!=typeof AMAZINGCAROUSEL_SKIN_OPTIONS&&t(this).data("skin")in AMAZINGCAROUSEL_SKIN_OPTIONS&&(this.options=t.extend({},AMAZINGCAROUSEL_SKIN_OPTIONS[t(this).data("skin")],this.options));var i=this;t.each(t(this).data(),function(t,e){i.options[t.toLowerCase()]=e});for(var o={},n=window.location.search.substring(1).split("&"),r=0;r<n.length;r++){var s=n[r].split("=");if(s&&2==s.length){var a=s[0].toLowerCase(),c=unescape(s[1]).toLowerCase();"true"==c?o[a]=!0:"false"==c?o[a]=!1:o[a]=c}}this.options=t.extend(this.options,o);var u={showcontaineroninit:!0,watermarklinkdefault:"http://amazingcarousel.com",watermarktargetdefault:"_blank",previewmode:!1,direction:"horizontal",autoplay:!1,pauseonmouseover:!0,interval:3e3,loop:0,random:!0,fixaspectratio:!1,centerimage:!1,sameheight:!1,sameheightresponsive:!1,sameheightmediumscreen:769,sameheightmediumheight:200,sameheightsmallscreen:415,sameheightsmallheight:200,nativehtml5controls:!1,videohidecontrols:!1,videohideplaybutton:!1,defaultvideovolume:1,circular:!0,scrollmode:"page",scrollitems:1,skinsfoldername:"skins",showplayvideo:!1,playvideoimage:"img/playvideo-64-64-0.png",playvideoimagepos:"center",showhoveroverlay:!0,hoveroverlayimage:"img/hoveroverlay-64-64-0.png",showhoveroverlayalways:!1,hidehoveroverlayontouch:!1,enabletouchswipe:!0,responsive:!1,usescreenquery:!0,spacing:24,showbackgroundimage:!1,backgroundimage:"background.png",backgroundimagewidth:110,backgroundimagetop:-40,showitembackgroundimage:!1,itembackgroundimage:"background.png",itembackgroundimagewidth:150,itembackgroundimagetop:0,showbottomshadow:!1,bottomshadowimage:"bottomshadow.png",bottomshadowimagewidth:110,bottomshadowimagetop:95,showitembottomshadow:!1,itembottomshadowimage:"bottomshadow.png",itembottomshadowimagewidth:110,itembottomshadowimagetop:100,arrowstyle:"always",arrowimage:"img/arrows.png",arrowwidth:48,arrowheight:48,arrowhideonmouseleave:1e3,navdirection:"horizontal",navstyle:"bullets",navmode:"page",navswitchonmouseover:!1,navwidth:16,navheight:16,navspacing:8,navimage:"img/bullet.png",transitionduration:1e3,transitioneasing:"easeOutQuad",continuous:!1,continuousduration:2500,versionmark:"AMFree",showwdefault:!0,wstyledefault:"text",wtextdefault:"65,109,97,122,105,110,103,32,67,97,114,111,117,115,101,108,32,70,114,101,101,32,86,101,114,115,105,111,110",wimagedefault:"",wposcss:"display:block;position:absolute;bottom:6px;right:6px;",wtextcssdefault:"font:12px Arial,Tahoma,Helvetica,sans-serif;color:#666;padding:2px 4px;-webkit-border-radius:2px;-moz-border-radius:2px;border-radius:2px;background-color:#fff;opacity:0.9;filter:alpha(opacity=90);",wlinkcssdefault:"text-decoration:none;font:12px Arial,Tahoma,Helvetica,sans-serif;color:#333;"};this.options=t.extend(u,this.options);var r,h,d="",p=this.options.wtextdefault.split(",");for(r=0;r<p.length;r++)d+=String.fromCharCode(p[r]);this.options.fvm=d;var f="ammaagziicngcarouselh.iclolms";for(r=1;5>=r;r++)f=f.slice(0,r)+f.slice(r+1);for(h=f.length,r=0;5>r;r++)f=f.slice(0,h-9+r)+f.slice(h-8+r);"AMCom"!=this.options.versionmark&&(this.options.showwatermark=window.location.href.indexOf(f)>=0?!1:this.options.showwdefault,this.options.watermarkstyle=this.options.wstyledefault,this.options.watermarktext=this.options.fvm,this.options.watermarkimage=this.options.wimagedefault,this.options.watermarklink=this.options.watermarklinkdefault,this.options.watermarktarget=this.options.watermarktargetdefault,this.options.watermarkpositioncss=this.options.wposcss,this.options.watermarktextcss=this.options.wtextcssdefault,this.options.watermarklinkcss=this.options.wlinkcssdefault),this.options.continuous&&(this.options.autoplay=!0,this.options.interval=0,this.options.transitionduration=this.options.continuousduration,this.options.transitioneasing="linear",this.options.scrollmode="item",this.options.scrollitems=1),"undefined"!=typeof amazingcarousel_previewmode&&(this.options.previewmode=amazingcarousel_previewmode),this.options.htmlfolder=window.location.href.substr(0,window.location.href.lastIndexOf("/")+1),this.options.skinsfoldername.length>0?this.options.skinsfolder=this.options.jsfolder+this.options.skinsfoldername+"/":this.options.skinsfolder=this.options.jsfolder,"http://"!=this.options.arrowimage.substring(0,7).toLowerCase()&&"https://"!=this.options.arrowimage.substring(0,8).toLowerCase()&&(this.options.arrowimage=this.options.skinsfolder+this.options.arrowimage),"http://"!=this.options.navimage.substring(0,7).toLowerCase()&&"https://"!=this.options.navimage.substring(0,8).toLowerCase()&&(this.options.navimage=this.options.skinsfolder+this.options.navimage),"http://"!=this.options.hoveroverlayimage.substring(0,7).toLowerCase()&&"https://"!=this.options.hoveroverlayimage.substring(0,8).toLowerCase()&&(this.options.hoveroverlayimage=this.options.skinsfolder+this.options.hoveroverlayimage),
"http://"!=this.options.playvideoimage.substring(0,7).toLowerCase()&&"https://"!=this.options.playvideoimage.substring(0,8).toLowerCase()&&(this.options.playvideoimage=this.options.skinsfolder+this.options.playvideoimage);var m;"carouselid"in this.options?m=this.options.carouselid:(m=amazingcarouselId,amazingcarouselId++);var g=new l(t(this),this.options,m);t(this).data("object",g),t(this).data("id",m),amazingcarouselObjects.addObject(g)})}}(jQuery),function(t){t.fn.carouselTouchSwipe=function(e){var i={preventWebBrowser:!1,swipeLeft:null,swipeRight:null,swipeTop:null,swipeBottom:null};return e&&t.extend(i,e),this.each(function(){function e(t){var e=t.originalEvent;e.targetTouches.length>=1?(a=e.targetTouches[0].pageX,l=e.targetTouches[0].pageY):r(t)}function o(t){i.preventWebBrowser&&t.preventDefault();var e=t.originalEvent;e.targetTouches.length>=1?(c=e.targetTouches[0].pageX,u=e.targetTouches[0].pageY):r(t)}function n(t){c>0||u>0?(s(),r(t)):r(t)}function r(t){a=-1,l=-1,c=-1,u=-1}function s(){Math.abs(c-a)>Math.abs(u-l)?c>a?i.swipeRight&&i.swipeRight.call():i.swipeLeft&&i.swipeLeft.call():u>l?i.swipeBottom&&i.swipeBottom.call():i.swipeTop&&i.swipeTop.call()}var a=-1,l=-1,c=-1,u=-1;try{t(this).bind("touchstart",e),t(this).bind("touchmove",o),t(this).bind("touchend",n),t(this).bind("touchcancel",r)}catch(h){}})}}(jQuery),jQuery.easing.jswing=jQuery.easing.swing,jQuery.extend(jQuery.easing,{def:"easeOutQuad",swing:function(t,e,i,o,n){return jQuery.easing[jQuery.easing.def](t,e,i,o,n)},easeInQuad:function(t,e,i,o,n){return o*(e/=n)*e+i},easeOutQuad:function(t,e,i,o,n){return-o*(e/=n)*(e-2)+i},easeInOutQuad:function(t,e,i,o,n){return(e/=n/2)<1?o/2*e*e+i:-o/2*(--e*(e-2)-1)+i},easeInCubic:function(t,e,i,o,n){return o*(e/=n)*e*e+i},easeOutCubic:function(t,e,i,o,n){return o*((e=e/n-1)*e*e+1)+i},easeInOutCubic:function(t,e,i,o,n){return(e/=n/2)<1?o/2*e*e*e+i:o/2*((e-=2)*e*e+2)+i},easeInQuart:function(t,e,i,o,n){return o*(e/=n)*e*e*e+i},easeOutQuart:function(t,e,i,o,n){return-o*((e=e/n-1)*e*e*e-1)+i},easeInOutQuart:function(t,e,i,o,n){return(e/=n/2)<1?o/2*e*e*e*e+i:-o/2*((e-=2)*e*e*e-2)+i},easeInQuint:function(t,e,i,o,n){return o*(e/=n)*e*e*e*e+i},easeOutQuint:function(t,e,i,o,n){return o*((e=e/n-1)*e*e*e*e+1)+i},easeInOutQuint:function(t,e,i,o,n){return(e/=n/2)<1?o/2*e*e*e*e*e+i:o/2*((e-=2)*e*e*e*e+2)+i},easeInSine:function(t,e,i,o,n){return-o*Math.cos(e/n*(Math.PI/2))+o+i},easeOutSine:function(t,e,i,o,n){return o*Math.sin(e/n*(Math.PI/2))+i},easeInOutSine:function(t,e,i,o,n){return-o/2*(Math.cos(Math.PI*e/n)-1)+i},easeInExpo:function(t,e,i,o,n){return 0==e?i:o*Math.pow(2,10*(e/n-1))+i},easeOutExpo:function(t,e,i,o,n){return e==n?i+o:o*(-Math.pow(2,-10*e/n)+1)+i},easeInOutExpo:function(t,e,i,o,n){return 0==e?i:e==n?i+o:(e/=n/2)<1?o/2*Math.pow(2,10*(e-1))+i:o/2*(-Math.pow(2,-10*--e)+2)+i},easeInCirc:function(t,e,i,o,n){return-o*(Math.sqrt(1-(e/=n)*e)-1)+i},easeOutCirc:function(t,e,i,o,n){return o*Math.sqrt(1-(e=e/n-1)*e)+i},easeInOutCirc:function(t,e,i,o,n){return(e/=n/2)<1?-o/2*(Math.sqrt(1-e*e)-1)+i:o/2*(Math.sqrt(1-(e-=2)*e)+1)+i},easeInElastic:function(t,e,i,o,n){var r=1.70158,s=0,a=o;if(0==e)return i;if(1==(e/=n))return i+o;if(s||(s=.3*n),a<Math.abs(o)){a=o;var r=s/4}else var r=s/(2*Math.PI)*Math.asin(o/a);return-(a*Math.pow(2,10*(e-=1))*Math.sin(2*(e*n-r)*Math.PI/s))+i},easeOutElastic:function(t,e,i,o,n){var r=1.70158,s=0,a=o;if(0==e)return i;if(1==(e/=n))return i+o;if(s||(s=.3*n),a<Math.abs(o)){a=o;var r=s/4}else var r=s/(2*Math.PI)*Math.asin(o/a);return a*Math.pow(2,-10*e)*Math.sin(2*(e*n-r)*Math.PI/s)+o+i},easeInOutElastic:function(t,e,i,o,n){var r=1.70158,s=0,a=o;if(0==e)return i;if(2==(e/=n/2))return i+o;if(s||(s=.3*n*1.5),a<Math.abs(o)){a=o;var r=s/4}else var r=s/(2*Math.PI)*Math.asin(o/a);return 1>e?-.5*a*Math.pow(2,10*(e-=1))*Math.sin(2*(e*n-r)*Math.PI/s)+i:a*Math.pow(2,-10*(e-=1))*Math.sin(2*(e*n-r)*Math.PI/s)*.5+o+i},easeInBack:function(t,e,i,o,n,r){return void 0==r&&(r=1.70158),o*(e/=n)*e*((r+1)*e-r)+i},easeOutBack:function(t,e,i,o,n,r){return void 0==r&&(r=1.70158),o*((e=e/n-1)*e*((r+1)*e+r)+1)+i},easeInOutBack:function(t,e,i,o,n,r){return void 0==r&&(r=1.70158),(e/=n/2)<1?o/2*e*e*(((r*=1.525)+1)*e-r)+i:o/2*((e-=2)*e*(((r*=1.525)+1)*e+r)+2)+i},easeInBounce:function(t,e,i,o,n){return o-jQuery.easing.easeOutBounce(t,n-e,0,o,n)+i},easeOutBounce:function(t,e,i,o,n){return(e/=n)<1/2.75?7.5625*o*e*e+i:2/2.75>e?o*(7.5625*(e-=1.5/2.75)*e+.75)+i:2.5/2.75>e?o*(7.5625*(e-=2.25/2.75)*e+.9375)+i:o*(7.5625*(e-=2.625/2.75)*e+.984375)+i},easeInOutBounce:function(t,e,i,o,n){return n/2>e?.5*jQuery.easing.easeInBounce(t,2*e,0,o,n)+i:.5*jQuery.easing.easeOutBounce(t,2*e-n,0,o,n)+.5*o+i}}),"undefined"==typeof amazingcarouselObjects)var amazingcarouselObjects=new function(){this.objects=[],this.addObject=function(t){this.objects.push(t)}};if("undefined"==typeof ASYouTubeIframeAPIReady)var ASYouTubeIframeAPIReady=!1,ASYouTubeTimeout=0;if("undefined"==typeof amazingcarouselId)var amazingcarouselId=0;jQuery(document).ready(function(){for(var t=document.getElementsByTagName("script"),e="",i=0;i<t.length;i++)t[i].src&&t[i].src.match(/initcarousel-1\.js/i)&&(e=t[i].src.substr(0,t[i].src.lastIndexOf("/")+1));"undefined"==typeof html5Lightbox&&(html5Lightbox=jQuery(".html5lightbox").html5lightbox({skinsfoldername:"",jsfolder:e,barheight:100,showtitle:!0,showdescription:!0,shownavigation:!0,thumbwidth:50,thumbheight:40,thumbtopmargin:5,thumbbottommargin:8,titlebottomcss:"{color:#333; font-size:14px; font-family:Armata,sans-serif,Arial; overflow:hidden; text-align:left;}",descriptionbottomcss:"{color:#333; font-size:12px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left; margin:4px 0px 0px; padding: 0px;display: block;}"})),jQuery("#amazingcarousel-1").amazingcarousel({jsfolder:e,width:280,height:120,skinsfoldername:"",interval:3e3,itembottomshadowimagetop:100,donotcrop:!1,random:!0,showhoveroverlay:!0,rownumber:1,arrowheight:32,showbottomshadow:!1,itembackgroundimagewidth:100,imageheight:120,skin:"TestimonialCarousel",responsive:!0,lightboxtitlebottomcss:"{color:#333; font-size:14px; font-family:Armata,sans-serif,Arial; overflow:hidden; text-align:left;}",enabletouchswipe:!0,navstyle:"bullets",backgroundimagetop:-40,arrowstyle:"mouseover",bottomshadowimagetop:95,hidehoveroverlayontouch:!1,continuous:!1,itembackgroundimagetop:0,hoveroverlayimage:"img/hoveroverlay-64-64-6.png",itembottomshadowimage:"img/itembottomshadow-100-98-3.png",lightboxshowdescription:!0,navswitchonmouseover:!1,showhoveroverlayalways:!0,transitioneasing:"easeInOutCubic",lightboxshownavigation:!0,showitembackgroundimage:!1,itembackgroundimage:"",playvideoimagepos:"center",circular:!0,arrowimage:"img/arrows-32-32-1.png",scrollitems:1,direction:"horizontal",lightboxdescriptionbottomcss:"{color:#333; font-size:12px; font-family:Arial,Helvetica,sans-serif; overflow:hidden; text-align:left; margin:4px 0px 0px; padding: 0px;display: block;}",supportiframe:!1,navimage:"img/bullet-24-24-0.png",backgroundimagewidth:110,showbackgroundimage:!1,lightboxbarheight:100,showplayvideo:!0,spacing:4,lightboxthumbwidth:50,navdirection:"horizontal",itembottomshadowimagewidth:100,backgroundimage:"",lightboxthumbtopmargin:5,autoplay:!1,lightboxnogroup:!1,arrowwidth:32,transparent:!0,continuousduration:2500,bottomshadowimage:"img/bottomshadow-110-95-0.png",scrollmode:"page",navmode:"page",lightboxshowtitle:!0,lightboxthumbbottommargin:8,arrowhideonmouseleave:600,showitembottomshadow:!1,lightboxthumbheight:40,navspacing:4,pauseonmouseover:!0,imagefillcolor:"FFFFFF",playvideoimage:"img/playvideo-64-64-2.png",transitionduration:4e3,visibleitems:4,imagewidth:120,usescreenquery:!1,bottomshadowimagewidth:110,screenquery:{tablet:{screenwidth:900,visibleitems:3},mobile:{screenwidth:600,visibleitems:2}},navwidth:24,loop:0,navheight:24})}),$(function(t){var e=t(".menu__link");e.on("click",function(e){e.preventDefault(),t(this).addClass("active").parent().siblings().find(".active").removeClass("active")});var i=t(".mcd-menu a");i.on("click",function(t){t.preventDefault()})}),$(document).ready(function(){$(".resize").width($(".wrapper").width()+1),$(".header").height($(".header").width()/3.413333333333333),$(window).resize(function(){$(".resize").width($(".wrapper").width()),$(".header").height($(".header").width()/3.413333333333333)})}),function(t){"use strict";function e(t){return new RegExp("(^|\\s+)"+t+"(\\s+|$)")}function i(t,e){var i=o(t,e)?r:n;i(t,e)}var o,n,r;"classList"in document.documentElement?(o=function(t,e){return t.classList.contains(e)},n=function(t,e){t.classList.add(e)},r=function(t,e){t.classList.remove(e)}):(o=function(t,i){return e(i).test(t.className)},n=function(t,e){o(t,e)||(t.className=t.className+" "+e)},r=function(t,i){t.className=t.className.replace(e(i)," ")}),t.classie={hasClass:o,addClass:n,removeClass:r,toggleClass:i,has:o,add:n,remove:r,toggle:i}}(window);
//# sourceMappingURL=data:application/json;base64,
